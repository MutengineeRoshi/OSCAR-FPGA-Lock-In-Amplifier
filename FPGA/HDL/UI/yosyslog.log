
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2018  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.8+612 (git sha1 c6d8692c, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `top_UI.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: top_UI.v
Parsing Verilog input from `top_UI.v' to AST representation.
Generating RTLIL representation for module `\top_UI'.
Successfully finished Verilog frontend.

-- Parsing `UI.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: UI.v
Parsing Verilog input from `UI.v' to AST representation.
Generating RTLIL representation for module `\UI'.
Successfully finished Verilog frontend.

-- Parsing `BinToLCD.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: BinToLCD.v
Parsing Verilog input from `BinToLCD.v' to AST representation.
Generating RTLIL representation for module `\BinToLCD'.
Successfully finished Verilog frontend.

-- Parsing `lcd_defines.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: lcd_defines.v
Parsing Verilog input from `lcd_defines.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `lcd_display.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: lcd_display.v
Parsing Verilog input from `lcd_display.v' to AST representation.
Generating RTLIL representation for module `\lcd'.
Successfully finished Verilog frontend.

-- Parsing `delay_counter.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: delay_counter.v
Parsing Verilog input from `delay_counter.v' to AST representation.
Generating RTLIL representation for module `\delay_counter'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top_UI -json yosysout_UI.json' --

7. Executing SYNTH_ICE40 pass.

7.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `$__ICE40_FULL_ADDER'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

7.2. Executing HIERARCHY pass (managing design hierarchy).

7.2.1. Analyzing design hierarchy..
Top module:  \top_UI
Used module:     \UI
Used module:         \lcd
Used module:             \delay_counter
Used module:         \BinToLCD

7.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\delay_counter'.
Parameter \counter_width = 20
Generating RTLIL representation for module `$paramod\delay_counter\counter_width=20'.

7.2.3. Analyzing design hierarchy..
Top module:  \top_UI
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

7.2.4. Analyzing design hierarchy..
Top module:  \top_UI
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Removing unused module `\delay_counter'.
Removed 1 unused modules.
Mapping positional arguments of cell UI.LCD (lcd).
Mapping positional arguments of cell UI.diplay_number (BinToLCD).
Mapping positional arguments of cell top_UI.UI_inst (UI).
Warning: Resizing cell port lcd.ram40_4kinst_physical.WDATA from 8 bits to 16 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RADDR from 32 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RDATA from 8 bits to 16 bits.
Warning: Resizing cell port top_UI.UI_inst.TC from 4 bits to 5 bits.

7.3. Executing PROC pass (convert processes to netlists).

7.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$delay_counter.v:62$122 in module $paramod\delay_counter\counter_width=20.
Marked 1 switch rules as full_case in process $proc$lcd_display.v:434$96 in module lcd.
Marked 4 switch rules as full_case in process $proc$lcd_display.v:218$88 in module lcd.
Removed 1 dead cases from process $proc$BinToLCD.v:34$13 in module BinToLCD.
Marked 20 switch rules as full_case in process $proc$BinToLCD.v:34$13 in module BinToLCD.
Removed a total of 1 dead cases.

7.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 3 redundant assignments.
Promoted 28 assignments to connections.

7.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\lcd.$proc$lcd_display.v:200$110'.
  Set init value: \tx_delay_load = 1'0
Found init rule in `\lcd.$proc$lcd_display.v:199$109'.
  Set init value: \main_delay_load = 1'0
Found init rule in `\lcd.$proc$lcd_display.v:195$108'.
  Set init value: \tx_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$lcd_display.v:194$107'.
  Set init value: \main_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$lcd_display.v:169$106'.
  Set init value: \LCD_E1 = 1'0
Found init rule in `\lcd.$proc$lcd_display.v:168$105'.
  Set init value: \LCD_E0 = 1'0
Found init rule in `\lcd.$proc$lcd_display.v:167$104'.
  Set init value: \SF_D1 = 4'0000
Found init rule in `\lcd.$proc$lcd_display.v:166$103'.
  Set init value: \SF_D0 = 4'0000
Found init rule in `\lcd.$proc$lcd_display.v:105$102'.
  Set init value: \pos = 0
Found init rule in `\lcd.$proc$lcd_display.v:104$101'.
  Set init value: \display_state = 5'00000
Found init rule in `\lcd.$proc$lcd_display.v:76$100'.
  Set init value: \tx_done = 1'0
Found init rule in `\lcd.$proc$lcd_display.v:73$99'.
  Set init value: \tx_state = 3'110
Found init rule in `\BinToLCD.$proc$BinToLCD.v:26$64'.
  Set init value: \dec = 4'0000
Found init rule in `\BinToLCD.$proc$BinToLCD.v:25$63'.
  Set init value: \summand = 0
Found init rule in `\BinToLCD.$proc$BinToLCD.v:25$62'.
  Set init value: \lastacc = 0
Found init rule in `\BinToLCD.$proc$BinToLCD.v:25$61'.
  Set init value: \rest = 0
Found init rule in `\BinToLCD.$proc$BinToLCD.v:24$60'.
  Set init value: \acc = 33'000000000000000000000000000000000
Found init rule in `\BinToLCD.$proc$BinToLCD.v:22$59'.
  Set init value: \pos = 5'00000
Found init rule in `\BinToLCD.$proc$BinToLCD.v:20$58'.
  Set init value: \updating = 1'0
Found init rule in `\BinToLCD.$proc$BinToLCD.v:20$57'.
  Set init value: \lastupdate = 1'0
Found init rule in `\BinToLCD.$proc$BinToLCD.v:18$56'.
  Set init value: \we = 1'0
Found init rule in `\BinToLCD.$proc$BinToLCD.v:13$55'.
  Set init value: \dat = 8'00000000
Found init rule in `\UI.$proc$UI.v:34$10'.
  Set init value: \reset = 1'1
Found init rule in `\UI.$proc$UI.v:32$9'.
  Set init value: \number1 = 32'11111111111111111111111111110000
Found init rule in `\UI.$proc$UI.v:32$8'.
  Set init value: \count = 0

7.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\lcd.$proc$lcd_display.v:434$96'.
Found async reset \reset in `\lcd.$proc$lcd_display.v:218$88'.

7.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\delay_counter\counter_width=20.$proc$delay_counter.v:62$122'.
     1/1: $0\counter[19:0]
Creating decoders for process `\lcd.$proc$lcd_display.v:200$110'.
Creating decoders for process `\lcd.$proc$lcd_display.v:199$109'.
Creating decoders for process `\lcd.$proc$lcd_display.v:195$108'.
Creating decoders for process `\lcd.$proc$lcd_display.v:194$107'.
Creating decoders for process `\lcd.$proc$lcd_display.v:169$106'.
Creating decoders for process `\lcd.$proc$lcd_display.v:168$105'.
Creating decoders for process `\lcd.$proc$lcd_display.v:167$104'.
Creating decoders for process `\lcd.$proc$lcd_display.v:166$103'.
Creating decoders for process `\lcd.$proc$lcd_display.v:105$102'.
Creating decoders for process `\lcd.$proc$lcd_display.v:104$101'.
Creating decoders for process `\lcd.$proc$lcd_display.v:76$100'.
Creating decoders for process `\lcd.$proc$lcd_display.v:73$99'.
Creating decoders for process `\lcd.$proc$lcd_display.v:434$96'.
     1/6: $0\tx_delay_load[0:0]
     2/6: $0\tx_delay_value[19:0]
     3/6: $0\LCD_E0[0:0]
     4/6: $0\SF_D0[3:0]
     5/6: $0\tx_done[0:0]
     6/6: $0\tx_state[2:0]
Creating decoders for process `\lcd.$proc$lcd_display.v:218$88'.
     1/7: $0\main_delay_value[19:0]
     2/7: $0\main_delay_load[0:0]
     3/7: $0\LCD_E1[0:0]
     4/7: $0\SF_D1[3:0]
     5/7: $0\display_state[4:0]
     6/7: $0\tx_byte[7:0]
     7/7: $0\pos[31:0]
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:26$64'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:25$63'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:25$62'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:25$61'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:24$60'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:22$59'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:20$58'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:20$57'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:18$56'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:13$55'.
Creating decoders for process `\BinToLCD.$proc$BinToLCD.v:34$13'.
     1/28: $20\rest[31:0]
     2/28: $19\rest[31:0]
     3/28: $18\rest[31:0]
     4/28: $17\rest[31:0]
     5/28: $16\rest[31:0]
     6/28: $15\rest[31:0]
     7/28: $14\rest[31:0]
     8/28: $13\rest[31:0]
     9/28: $12\rest[31:0]
    10/28: $11\rest[31:0]
    11/28: $10\rest[31:0]
    12/28: $9\rest[31:0]
    13/28: $8\rest[31:0]
    14/28: $7\rest[31:0]
    15/28: $6\rest[31:0]
    16/28: $5\rest[31:0]
    17/28: $4\rest[31:0]
    18/28: $3\rest[31:0]
    19/28: $2\rest[31:0]
    20/28: $1\rest[31:0]
    21/28: $0\dec[3:0]
    22/28: $0\summand[31:0]
    23/28: $0\lastacc[31:0]
    24/28: $0\acc[32:0]
    25/28: $0\pos[4:0]
    26/28: $0\updating[0:0]
    27/28: $0\we[0:0]
    28/28: $0\dat[7:0]
Creating decoders for process `\UI.$proc$UI.v:34$10'.
Creating decoders for process `\UI.$proc$UI.v:32$9'.
Creating decoders for process `\UI.$proc$UI.v:32$8'.
Creating decoders for process `\UI.$proc$UI.v:39$2'.
     1/2: $0\reset[0:0]
     2/2: $0\number1[31:0]

7.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).

7.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\delay_counter\counter_width=20.\counter' using process `$paramod\delay_counter\counter_width=20.$proc$delay_counter.v:62$122'.
  created $dff cell `$procdff$1517' with positive edge clock.
Creating register for signal `\lcd.\tx_state' using process `\lcd.$proc$lcd_display.v:434$96'.
  created $adff cell `$procdff$1518' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\tx_done' using process `\lcd.$proc$lcd_display.v:434$96'.
  created $dff cell `$procdff$1519' with positive edge clock.
Creating register for signal `\lcd.\SF_D0' using process `\lcd.$proc$lcd_display.v:434$96'.
  created $dff cell `$procdff$1520' with positive edge clock.
Creating register for signal `\lcd.\LCD_E0' using process `\lcd.$proc$lcd_display.v:434$96'.
  created $dff cell `$procdff$1521' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_value' using process `\lcd.$proc$lcd_display.v:434$96'.
  created $dff cell `$procdff$1522' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_load' using process `\lcd.$proc$lcd_display.v:434$96'.
  created $dff cell `$procdff$1523' with positive edge clock.
Creating register for signal `\lcd.\pos' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $dff cell `$procdff$1524' with positive edge clock.
Creating register for signal `\lcd.\tx_byte' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $dff cell `$procdff$1525' with positive edge clock.
Creating register for signal `\lcd.\display_state' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $adff cell `$procdff$1526' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\SF_D1' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $dff cell `$procdff$1527' with positive edge clock.
Creating register for signal `\lcd.\LCD_E1' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $dff cell `$procdff$1528' with positive edge clock.
Creating register for signal `\lcd.\main_delay_value' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $adff cell `$procdff$1529' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\main_delay_load' using process `\lcd.$proc$lcd_display.v:218$88'.
  created $adff cell `$procdff$1530' with positive edge clock and positive level reset.
Creating register for signal `\BinToLCD.\dat' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1531' with positive edge clock.
Creating register for signal `\BinToLCD.\we' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1532' with positive edge clock.
Creating register for signal `\BinToLCD.\lastupdate' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1533' with positive edge clock.
Creating register for signal `\BinToLCD.\updating' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1534' with positive edge clock.
Creating register for signal `\BinToLCD.\pos' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1535' with positive edge clock.
Creating register for signal `\BinToLCD.\acc' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1536' with positive edge clock.
Creating register for signal `\BinToLCD.\rest' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1537' with positive edge clock.
Creating register for signal `\BinToLCD.\lastacc' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1538' with positive edge clock.
Creating register for signal `\BinToLCD.\summand' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1539' with positive edge clock.
Creating register for signal `\BinToLCD.\dec' using process `\BinToLCD.$proc$BinToLCD.v:34$13'.
  created $dff cell `$procdff$1540' with positive edge clock.
Creating register for signal `\UI.\count' using process `\UI.$proc$UI.v:39$2'.
  created $dff cell `$procdff$1541' with positive edge clock.
Creating register for signal `\UI.\number1' using process `\UI.$proc$UI.v:39$2'.
  created $dff cell `$procdff$1542' with positive edge clock.
Creating register for signal `\UI.\reset' using process `\UI.$proc$UI.v:39$2'.
  created $dff cell `$procdff$1543' with positive edge clock.

7.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\delay_counter\counter_width=20.$proc$delay_counter.v:62$122'.
Removing empty process `$paramod\delay_counter\counter_width=20.$proc$delay_counter.v:62$122'.
Removing empty process `lcd.$proc$lcd_display.v:200$110'.
Removing empty process `lcd.$proc$lcd_display.v:199$109'.
Removing empty process `lcd.$proc$lcd_display.v:195$108'.
Removing empty process `lcd.$proc$lcd_display.v:194$107'.
Removing empty process `lcd.$proc$lcd_display.v:169$106'.
Removing empty process `lcd.$proc$lcd_display.v:168$105'.
Removing empty process `lcd.$proc$lcd_display.v:167$104'.
Removing empty process `lcd.$proc$lcd_display.v:166$103'.
Removing empty process `lcd.$proc$lcd_display.v:105$102'.
Removing empty process `lcd.$proc$lcd_display.v:104$101'.
Removing empty process `lcd.$proc$lcd_display.v:76$100'.
Removing empty process `lcd.$proc$lcd_display.v:73$99'.
Found and cleaned up 8 empty switches in `\lcd.$proc$lcd_display.v:434$96'.
Removing empty process `lcd.$proc$lcd_display.v:434$96'.
Found and cleaned up 22 empty switches in `\lcd.$proc$lcd_display.v:218$88'.
Removing empty process `lcd.$proc$lcd_display.v:218$88'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:26$64'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:25$63'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:25$62'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:25$61'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:24$60'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:22$59'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:20$58'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:20$57'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:18$56'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:13$55'.
Found and cleaned up 25 empty switches in `\BinToLCD.$proc$BinToLCD.v:34$13'.
Removing empty process `BinToLCD.$proc$BinToLCD.v:34$13'.
Removing empty process `UI.$proc$UI.v:34$10'.
Removing empty process `UI.$proc$UI.v:32$9'.
Removing empty process `UI.$proc$UI.v:32$8'.
Found and cleaned up 2 empty switches in `\UI.$proc$UI.v:39$2'.
Removing empty process `UI.$proc$UI.v:39$2'.
Cleaned up 58 empty switches.

7.4. Executing FLATTEN pass (flatten design).
Using template UI for cells of type UI.
Using template BinToLCD for cells of type BinToLCD.
Using template lcd for cells of type lcd.
Using template $paramod\delay_counter\counter_width=20 for cells of type $paramod\delay_counter\counter_width=20.
<suppressed ~4 debug messages>
No more expansions possible.
Deleting now unused module $paramod\delay_counter\counter_width=20.
Deleting now unused module lcd.
Deleting now unused module BinToLCD.
Deleting now unused module UI.

7.5. Executing TRIBUF pass.

7.6. Executing DEMINOUT pass (demote inout ports to input or output).

7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.
<suppressed ~21 debug messages>

7.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 1 unused cells and 353 unused wires.
<suppressed ~12 debug messages>

7.9. Executing CHECK pass (checking for obvious problems).
checking module top_UI..
Warning: Wire top_UI.\HC [15] is used but has no driver.
Warning: Wire top_UI.\HC [14] is used but has no driver.
Warning: Wire top_UI.\HC [13] is used but has no driver.
Warning: Wire top_UI.\HC [12] is used but has no driver.
Warning: Wire top_UI.\HC [11] is used but has no driver.
Warning: Wire top_UI.\HC [10] is used but has no driver.
Warning: Wire top_UI.\HC [9] is used but has no driver.
Warning: Wire top_UI.\HC [8] is used but has no driver.
Warning: Wire top_UI.\HC [7] is used but has no driver.
Warning: Wire top_UI.\HC [6] is used but has no driver.
Warning: Wire top_UI.\HC [5] is used but has no driver.
Warning: Wire top_UI.\HC [4] is used but has no driver.
Warning: Wire top_UI.\HC [3] is used but has no driver.
Warning: Wire top_UI.\HC [2] is used but has no driver.
Warning: Wire top_UI.\HC [1] is used but has no driver.
Warning: Wire top_UI.\HC [0] is used but has no driver.
found and reported 16 problems.

7.10. Executing OPT pass (performing simple optimizations).

7.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~936 debug messages>
Removed a total of 312 cells.

7.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_UI..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$427.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$429.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$440.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$442.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$454.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$456.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$469.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$471.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$485.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$487.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$502.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$504.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$520.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$522.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$539.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$541.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$559.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$561.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$587.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$589.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$616.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$618.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$646.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$648.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$677.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$679.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$709.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$711.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$742.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$744.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$776.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$778.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$811.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$813.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$847.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$849.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$885.
Removed 37 multiplexer ports.
<suppressed ~30 debug messages>

7.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_UI.
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$UI.v:41$4: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$UI.v:36$1: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] \UI_inst.count [5] \UI_inst.count [6] \UI_inst.count [7] \UI_inst.count [8] \UI_inst.count [9] \UI_inst.count [10] \UI_inst.count [11] \UI_inst.count [12] \UI_inst.count [13] \UI_inst.count [14] \UI_inst.count [15] \UI_inst.count [16] \UI_inst.count [17] \UI_inst.count [18] \UI_inst.count [19] \UI_inst.count [20] \UI_inst.count [21] }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$294: { $auto$opt_reduce.cc:132:opt_mux$1547 $auto$opt_reduce.cc:132:opt_mux$1545 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$315: { $auto$opt_reduce.cc:132:opt_mux$1549 $techmap\UI_inst.LCD.$procmux$224_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1326: { $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1276_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1231_CMP $auto$opt_reduce.cc:132:opt_mux$1551 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1416: { $techmap\UI_inst.diplay_number.$procmux$1315_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1276_CMP $techmap\UI_inst.diplay_number.$procmux$1270_CMP $auto$opt_reduce.cc:132:opt_mux$1555 $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1231_CMP $auto$opt_reduce.cc:132:opt_mux$1553 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$387: { $techmap\UI_inst.LCD.$eq$lcd_display.v:185$74_Y $techmap\UI_inst.LCD.$eq$lcd_display.v:186$75_Y $techmap\UI_inst.LCD.$eq$lcd_display.v:187$76_Y $techmap\UI_inst.LCD.$eq$lcd_display.v:188$77_Y $techmap\UI_inst.LCD.$eq$lcd_display.v:189$78_Y $techmap\UI_inst.LCD.$eq$lcd_display.v:190$79_Y $auto$opt_reduce.cc:132:opt_mux$1559 $auto$opt_reduce.cc:132:opt_mux$1557 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$169: { $auto$opt_reduce.cc:132:opt_mux$1563 $auto$opt_reduce.cc:132:opt_mux$1561 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$179: { $auto$opt_reduce.cc:132:opt_mux$1567 $auto$opt_reduce.cc:132:opt_mux$1565 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1150: { $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $auto$opt_reduce.cc:132:opt_mux$1569 $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$852: { $techmap\UI_inst.diplay_number.$procmux$1057_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1020_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $auto$opt_reduce.cc:132:opt_mux$1571 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$896: { $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1276_CMP $auto$opt_reduce.cc:132:opt_mux$1573 $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1231_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$986: { $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $auto$opt_reduce.cc:132:opt_mux$1575 $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1068: { $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $auto$opt_reduce.cc:132:opt_mux$1577 $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1544: { $techmap\UI_inst.LCD.$procmux$295_CMP $techmap\UI_inst.LCD.$procmux$239_CMP $techmap\UI_inst.LCD.$procmux$233_CMP $techmap\UI_inst.LCD.$procmux$227_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1552: { $techmap\UI_inst.diplay_number.$procmux$1273_CMP $techmap\UI_inst.diplay_number.$procmux$1272_CMP $techmap\UI_inst.diplay_number.$procmux$1271_CMP $techmap\UI_inst.diplay_number.$procmux$1228_CMP $techmap\UI_inst.diplay_number.$procmux$1227_CMP $techmap\UI_inst.diplay_number.$procmux$1226_CMP $techmap\UI_inst.diplay_number.$procmux$1057_CMP $techmap\UI_inst.diplay_number.$procmux$1020_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1556: { $techmap\UI_inst.LCD.$procmux$345_CMP $techmap\UI_inst.LCD.$procmux$324_CMP $techmap\UI_inst.LCD.$procmux$246_CMP }
  Optimizing cells in module \top_UI.
Performed a total of 17 changes.

7.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~384 debug messages>
Removed a total of 128 cells.

7.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 477 unused wires.
<suppressed ~1 debug messages>

7.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.10.9. Rerunning OPT passes. (Maybe there is more to do..)

7.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_UI..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

7.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_UI.
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$132: { $auto$opt_reduce.cc:132:opt_mux$1579 $techmap\UI_inst.LCD.$procmux$134_CMP $techmap\UI_inst.LCD.$procmux$133_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$152: { $techmap\UI_inst.LCD.$procmux$146_CMP $techmap\UI_inst.LCD.$procmux$143_CMP $auto$opt_reduce.cc:132:opt_mux$1581 $techmap\UI_inst.LCD.$procmux$137_CMP $techmap\UI_inst.LCD.$procmux$133_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$220: { $techmap\UI_inst.LCD.$procmux$246_CMP $techmap\UI_inst.LCD.$procmux$242_CMP $techmap\UI_inst.LCD.$procmux$236_CMP $auto$opt_reduce.cc:132:opt_mux$1585 $auto$opt_reduce.cc:132:opt_mux$1583 $techmap\UI_inst.LCD.$eq$lcd_display.v:188$77_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$256: { $techmap\UI_inst.LCD.$procmux$246_CMP $auto$opt_reduce.cc:132:opt_mux$1587 $techmap\UI_inst.LCD.$eq$lcd_display.v:188$77_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1068: { $auto$opt_reduce.cc:132:opt_mux$1569 $auto$opt_reduce.cc:132:opt_mux$1589 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1150: { $auto$opt_reduce.cc:132:opt_mux$1569 $auto$opt_reduce.cc:132:opt_mux$1607 $auto$opt_reduce.cc:132:opt_mux$1605 $auto$opt_reduce.cc:132:opt_mux$1603 $auto$opt_reduce.cc:132:opt_mux$1601 $auto$opt_reduce.cc:132:opt_mux$1599 $auto$opt_reduce.cc:132:opt_mux$1597 $auto$opt_reduce.cc:132:opt_mux$1595 $auto$opt_reduce.cc:132:opt_mux$1593 $auto$opt_reduce.cc:132:opt_mux$1591 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1326: { $auto$opt_reduce.cc:132:opt_mux$1609 $auto$opt_reduce.cc:132:opt_mux$1551 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1416: { $techmap\UI_inst.diplay_number.$procmux$1315_CMP $techmap\UI_inst.diplay_number.$procmux$1270_CMP $auto$opt_reduce.cc:132:opt_mux$1555 $auto$opt_reduce.cc:132:opt_mux$1611 $auto$opt_reduce.cc:132:opt_mux$1553 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$852: { $techmap\UI_inst.diplay_number.$procmux$1057_CMP $techmap\UI_inst.diplay_number.$procmux$1020_CMP $auto$opt_reduce.cc:132:opt_mux$1613 $auto$opt_reduce.cc:132:opt_mux$1571 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$896: { $auto$opt_reduce.cc:132:opt_mux$1573 $auto$opt_reduce.cc:132:opt_mux$1615 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$986: { $auto$opt_reduce.cc:132:opt_mux$1569 $auto$opt_reduce.cc:132:opt_mux$1633 $auto$opt_reduce.cc:132:opt_mux$1631 $auto$opt_reduce.cc:132:opt_mux$1629 $auto$opt_reduce.cc:132:opt_mux$1627 $auto$opt_reduce.cc:132:opt_mux$1625 $auto$opt_reduce.cc:132:opt_mux$1623 $auto$opt_reduce.cc:132:opt_mux$1621 $auto$opt_reduce.cc:132:opt_mux$1619 $auto$opt_reduce.cc:132:opt_mux$1617 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1588: { $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1590: { $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1592: { $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1594: { $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1596: { $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1608: { $techmap\UI_inst.diplay_number.$procmux$1276_CMP $techmap\UI_inst.diplay_number.$procmux$1231_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1610: { $techmap\UI_inst.diplay_number.$procmux$1276_CMP $techmap\UI_inst.diplay_number.$procmux$1231_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1612: { $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1614: { $techmap\UI_inst.diplay_number.$procmux$1276_CMP $techmap\UI_inst.diplay_number.$procmux$1231_CMP $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1056_CMP $techmap\UI_inst.diplay_number.$procmux$1052_CMP $techmap\UI_inst.diplay_number.$procmux$1048_CMP $techmap\UI_inst.diplay_number.$procmux$1044_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP $techmap\UI_inst.diplay_number.$procmux$1019_CMP $techmap\UI_inst.diplay_number.$procmux$1015_CMP $techmap\UI_inst.diplay_number.$procmux$1011_CMP $techmap\UI_inst.diplay_number.$procmux$1007_CMP $techmap\UI_inst.diplay_number.$procmux$1003_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1616: { $techmap\UI_inst.diplay_number.$procmux$1069_CMP $techmap\UI_inst.diplay_number.$procmux$1024_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1618: { $techmap\UI_inst.diplay_number.$procmux$1073_CMP $techmap\UI_inst.diplay_number.$procmux$1028_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1620: { $techmap\UI_inst.diplay_number.$procmux$1077_CMP $techmap\UI_inst.diplay_number.$procmux$1032_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$1622: { $techmap\UI_inst.diplay_number.$procmux$1081_CMP $techmap\UI_inst.diplay_number.$procmux$1036_CMP }
  Optimizing cells in module \top_UI.
Performed a total of 24 changes.

7.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

7.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 12 unused wires.
<suppressed ~1 debug messages>

7.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.10.16. Rerunning OPT passes. (Maybe there is more to do..)

7.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_UI..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

7.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_UI.
Performed a total of 0 changes.

7.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

7.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.10.23. Finished OPT passes. (There is nothing left to do.)

7.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top_UI.$techmap\UI_inst.$add$UI.v:42$6 ($add).
Removed top 31 bits (of 32) from port B of cell top_UI.$techmap\UI_inst.$add$UI.v:40$3 ($add).
Removed top 4 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1314_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1276_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1273_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1272_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1271_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1057_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1056_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1052_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1048_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1044_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1040_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1036_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1032_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1028_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$procmux$1024_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$add$BinToLCD.v:112$23 ($add).
Removed top 28 bits (of 32) from port Y of cell top_UI.$techmap\UI_inst.diplay_number.$add$BinToLCD.v:112$23 ($add).
Removed top 31 bits (of 32) from port B of cell top_UI.$techmap\UI_inst.diplay_number.$sub$BinToLCD.v:32$12 ($sub).
Removed top 27 bits (of 32) from port Y of cell top_UI.$techmap\UI_inst.diplay_number.$sub$BinToLCD.v:32$12 ($sub).
Removed top 1 bits (of 5) from mux cell top_UI.$techmap\UI_inst.LCD.$procmux$321 ($mux).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$295_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$245_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$242_CMP0 ($eq).
Removed top 2 bits (of 20) from mux cell top_UI.$techmap\UI_inst.LCD.$procmux$240 ($mux).
Removed top 3 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$239_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$236_CMP0 ($eq).
Removed top 7 bits (of 20) from mux cell top_UI.$techmap\UI_inst.LCD.$procmux$234 ($mux).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$233_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$230_CMP0 ($eq).
Removed top 9 bits (of 20) from mux cell top_UI.$techmap\UI_inst.LCD.$procmux$228 ($mux).
Removed top 2 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$227_CMP0 ($eq).
Removed top 16 bits (of 20) from mux cell top_UI.$techmap\UI_inst.LCD.$procmux$225 ($mux).
Removed top 1 bits (of 5) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$224_CMP0 ($eq).
Removed top 3 bits (of 20) from mux cell top_UI.$techmap\UI_inst.LCD.$procmux$218 ($mux).
Removed top 2 bits (of 3) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$146_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$143_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top_UI.$techmap\UI_inst.LCD.$procmux$140_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top_UI.$techmap\UI_inst.LCD.$add$lcd_display.v:398$92 ($add).
Removed top 3 bits (of 7) from port B of cell top_UI.$techmap\UI_inst.LCD.$eq$lcd_display.v:395$91 ($eq).
Removed top 1 bits (of 8) from mux cell top_UI.$techmap\UI_inst.LCD.$ternary$lcd_display.v:120$65 ($mux).
Removed top 3 bits (of 20) from wire top_UI.$techmap\UI_inst.LCD.$procmux$218_Y.
Removed top 18 bits (of 20) from wire top_UI.$techmap\UI_inst.LCD.$procmux$225_Y.
Removed top 7 bits (of 20) from wire top_UI.$techmap\UI_inst.LCD.$procmux$234_Y.
Removed top 7 bits (of 20) from wire top_UI.$techmap\UI_inst.LCD.$procmux$240_Y.
Removed top 1 bits (of 5) from wire top_UI.$techmap\UI_inst.LCD.$procmux$321_Y.
Removed top 28 bits (of 32) from wire top_UI.$techmap\UI_inst.diplay_number.$add$BinToLCD.v:112$23_Y.
Removed top 1 bits (of 8) from wire top_UI.UI_inst.LCD.ramaddr.

7.12. Executing PEEPOPT pass (run peephole optimizers).

7.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

7.14. Executing SHARE pass (SAT-based resource sharing).

7.15. Executing TECHMAP pass (map to technology primitives).

7.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.15.2. Continuing TECHMAP pass.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
No more expansions possible.
<suppressed ~652 debug messages>

7.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

7.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top_UI:
  creating $macc model for $techmap\UI_inst.$add$UI.v:40$3 ($add).
  creating $macc model for $techmap\UI_inst.$add$UI.v:42$6 ($add).
  creating $macc model for $techmap\UI_inst.LCD.$add$lcd_display.v:398$92 ($add).
  creating $macc model for $techmap\UI_inst.LCD.delay_counter.$sub$delay_counter.v:66$123 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$BinToLCD.v:112$23 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$BinToLCD.v:40$16 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:103$22 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:31$11 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:32$12 ($sub).
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:32$12.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:31$11.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:103$22.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$BinToLCD.v:40$16.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$BinToLCD.v:112$23.
  creating $alu model for $macc $techmap\UI_inst.LCD.delay_counter.$sub$delay_counter.v:66$123.
  creating $alu model for $macc $techmap\UI_inst.LCD.$add$lcd_display.v:398$92.
  creating $alu model for $macc $techmap\UI_inst.$add$UI.v:42$6.
  creating $alu model for $macc $techmap\UI_inst.$add$UI.v:40$3.
  creating $alu cell for $techmap\UI_inst.$add$UI.v:40$3: $auto$alumacc.cc:474:replace_alu$1653
  creating $alu cell for $techmap\UI_inst.$add$UI.v:42$6: $auto$alumacc.cc:474:replace_alu$1656
  creating $alu cell for $techmap\UI_inst.LCD.$add$lcd_display.v:398$92: $auto$alumacc.cc:474:replace_alu$1659
  creating $alu cell for $techmap\UI_inst.LCD.delay_counter.$sub$delay_counter.v:66$123: $auto$alumacc.cc:474:replace_alu$1662
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$BinToLCD.v:112$23: $auto$alumacc.cc:474:replace_alu$1665
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$BinToLCD.v:40$16: $auto$alumacc.cc:474:replace_alu$1668
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:103$22: $auto$alumacc.cc:474:replace_alu$1671
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:31$11: $auto$alumacc.cc:474:replace_alu$1674
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$BinToLCD.v:32$12: $auto$alumacc.cc:474:replace_alu$1677
  created 9 $alu and 0 $macc cells.

7.19. Executing OPT pass (performing simple optimizations).

7.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_UI..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~31 debug messages>

7.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_UI.
Performed a total of 0 changes.

7.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.19.9. Finished OPT passes. (There is nothing left to do.)

7.20. Executing FSM pass (extract and optimize FSM).

7.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top_UI.UI_inst.LCD.SF_D1 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top_UI.UI_inst.LCD.display_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top_UI.UI_inst.LCD.main_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top_UI.UI_inst.LCD.tx_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top_UI.UI_inst.LCD.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top_UI.UI_inst.diplay_number.pos as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top_UI.UI_inst.diplay_number.summand as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

7.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.21. Executing OPT pass (performing simple optimizations).

7.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.21.5. Finished fast OPT passes.

7.22. Executing MEMORY pass.

7.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

7.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).

7.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

7.25. Executing TECHMAP pass (map to technology primitives).

7.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

7.25.2. Continuing TECHMAP pass.
No more expansions possible.

7.26. Executing ICE40_BRAMINIT pass.

7.27. Executing OPT pass (performing simple optimizations).

7.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.
<suppressed ~19 debug messages>

7.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

7.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

7.27.5. Finished fast OPT passes.

7.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

7.29. Executing OPT pass (performing simple optimizations).

7.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_UI..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

7.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_UI.
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$218:
      Old ports: A=17'00000000000000000, B=17'10100000001010000, Y=$auto$wreduce.cc:455:run$1634 [16:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1634 [4]
      New connections: { $auto$wreduce.cc:455:run$1634 [16:5] $auto$wreduce.cc:455:run$1634 [3:0] } = { $auto$wreduce.cc:455:run$1634 [4] 1'0 $auto$wreduce.cc:455:run$1634 [4] 7'0000000 $auto$wreduce.cc:455:run$1634 [4] 5'00000 }
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$220:
      Old ports: A=20'00000000000000000000, B={ 22'1011011100011011000000 $auto$wreduce.cc:455:run$1637 [17:0] 7'0000000 $auto$wreduce.cc:455:run$1636 [12:0] 16'0000000000000000 $auto$wreduce.cc:455:run$1635 [3:0] 9'000000000 $techmap\UI_inst.LCD.$procmux$222_Y [10:0] 3'000 $auto$wreduce.cc:455:run$1634 [16:0] }, Y=$techmap\UI_inst.LCD.$0\main_delay_value[19:0]
      New ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$1637 [17:0] 6'000000 $auto$wreduce.cc:455:run$1636 [12:0] 15'000000000000000 $auto$wreduce.cc:455:run$1635 [3:0] 8'00000000 $techmap\UI_inst.LCD.$procmux$222_Y [10:0] 2'00 $auto$wreduce.cc:455:run$1634 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New connections: $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [18] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$225:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:455:run$1635 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1635 [0]
      New connections: $auto$wreduce.cc:455:run$1635 [3:1] = { $auto$wreduce.cc:455:run$1635 [0] 1'0 $auto$wreduce.cc:455:run$1635 [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$228:
      Old ports: A=11'00000000000, B=11'11111010000, Y=$techmap\UI_inst.LCD.$procmux$222_Y [10:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.LCD.$procmux$222_Y [4]
      New connections: { $techmap\UI_inst.LCD.$procmux$222_Y [10:5] $techmap\UI_inst.LCD.$procmux$222_Y [3:0] } = { $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$234:
      Old ports: A=13'0000000000000, B=13'1001110001000, Y=$auto$wreduce.cc:455:run$1636 [12:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1636 [3]
      New connections: { $auto$wreduce.cc:455:run$1636 [12:4] $auto$wreduce.cc:455:run$1636 [2:0] } = { $auto$wreduce.cc:455:run$1636 [3] 2'00 $auto$wreduce.cc:455:run$1636 [3] $auto$wreduce.cc:455:run$1636 [3] $auto$wreduce.cc:455:run$1636 [3] 6'000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$240:
      Old ports: A=18'000000000000000000, B=18'110010000011001000, Y=$auto$wreduce.cc:455:run$1637 [17:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$1637 [3]
      New connections: { $auto$wreduce.cc:455:run$1637 [17:4] $auto$wreduce.cc:455:run$1637 [2:0] } = { $auto$wreduce.cc:455:run$1637 [3] $auto$wreduce.cc:455:run$1637 [3] 2'00 $auto$wreduce.cc:455:run$1637 [3] 5'00000 $auto$wreduce.cc:455:run$1637 [3] $auto$wreduce.cc:455:run$1637 [3] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$321:
      Old ports: A=4'0010, B=4'1000, Y=$auto$wreduce.cc:455:run$1638 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$1638 [3] $auto$wreduce.cc:455:run$1638 [1] }
      New connections: { $auto$wreduce.cc:455:run$1638 [2] $auto$wreduce.cc:455:run$1638 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$ternary$lcd_display.v:120$65:
      Old ports: A={ 3'000 \UI_inst.LCD.addr [3:0] }, B={ 3'100 \UI_inst.LCD.addr [3:0] }, Y=\UI_inst.LCD.ramaddr
      New ports: A=1'0, B=1'1, Y=\UI_inst.LCD.ramaddr [6]
      New connections: \UI_inst.LCD.ramaddr [5:0] = { 2'00 \UI_inst.LCD.addr [3:0] }
  Optimizing cells in module \top_UI.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$220:
      Old ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$1637 [17:0] 6'000000 $auto$wreduce.cc:455:run$1636 [12:0] 15'000000000000000 $auto$wreduce.cc:455:run$1635 [3:0] 8'00000000 $techmap\UI_inst.LCD.$procmux$222_Y [10:0] 2'00 $auto$wreduce.cc:455:run$1634 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New ports: A=13'0000000000000, B={ 13'1111001101100 $auto$wreduce.cc:455:run$1637 [3] 1'0 $auto$wreduce.cc:455:run$1637 [3] 4'0000 $auto$wreduce.cc:455:run$1637 [3] $auto$wreduce.cc:455:run$1637 [3] 2'00 $auto$wreduce.cc:455:run$1637 [3] 4'0000 $auto$wreduce.cc:455:run$1636 [3] 1'0 $auto$wreduce.cc:455:run$1636 [3] $auto$wreduce.cc:455:run$1636 [3] $auto$wreduce.cc:455:run$1636 [3] 3'000 $auto$wreduce.cc:455:run$1636 [3] 12'000000000000 $auto$wreduce.cc:455:run$1635 [0] $auto$wreduce.cc:455:run$1635 [0] 4'0000 $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] $techmap\UI_inst.LCD.$procmux$222_Y [4] 1'0 $techmap\UI_inst.LCD.$procmux$222_Y [4] 2'00 $auto$wreduce.cc:455:run$1634 [4] $auto$wreduce.cc:455:run$1634 [4] 6'000000 $auto$wreduce.cc:455:run$1634 [4] 1'0 $auto$wreduce.cc:455:run$1634 [4] 2'00 }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [16] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [14:12] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [10:3] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
      New connections: { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [15] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [11] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [2:1] } = { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [5] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [13] 3'000 $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
  Optimizing cells in module \top_UI.
Performed a total of 9 changes.

7.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

7.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

7.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.29.9. Rerunning OPT passes. (Maybe there is more to do..)

7.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_UI..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~30 debug messages>

7.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_UI.
Performed a total of 0 changes.

7.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

7.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.29.16. Finished OPT passes. (There is nothing left to do.)

7.30. Executing TECHMAP pass (map to technology primitives).

7.30.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.30.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

7.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=35 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=32 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=33\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=21 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=13\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=20\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
No more expansions possible.
<suppressed ~1007 debug messages>

7.31. Executing ICE40_OPT pass (performing simple optimizations).

7.31.1. Running ICE40 specific optimizations.

7.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.
<suppressed ~1376 debug messages>

7.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~3420 debug messages>
Removed a total of 1140 cells.

7.31.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:496:simplemap_adff$4070 ($_DFF_PP0_) from module top_UI.
Replaced 1 DFF cells.

7.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 261 unused cells and 1194 unused wires.
<suppressed ~262 debug messages>

7.31.6. Rerunning OPT passes. (Removed registers in this run.)

7.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[0].carry: CO=\UI_inst.count [0]
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[0].carry: CO=\UI_inst.number1 [0]
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[0].carry: CO=\UI_inst.LCD.pos [0]
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[0].carry: CO=\UI_inst.LCD.delay_counter.counter [0]
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1665.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1674.slice[33].carry: CO=$auto$alumacc.cc:474:replace_alu$1674.C [33]
Optimized away SB_CARRY cell top_UI.$auto$alumacc.cc:474:replace_alu$1677.slice[0].carry: CO=\UI_inst.diplay_number.pos [0]
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[1].adder back to logic.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[1].adder back to logic.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[1].adder back to logic.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[1].adder back to logic.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1665.slice[1].adder back to logic.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1674.slice[34].adder back to logic.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1677.slice[1].adder back to logic.

7.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.
<suppressed ~336 debug messages>

7.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

7.31.10. Executing OPT_RMDFF pass (remove dff with constant values).

7.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 18 unused wires.
<suppressed ~1 debug messages>

7.31.12. Rerunning OPT passes. (Removed registers in this run.)

7.31.13. Running ICE40 specific optimizations.

7.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.31.16. Executing OPT_RMDFF pass (remove dff with constant values).

7.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.31.18. Finished OPT passes. (There is nothing left to do.)

7.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

7.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top_UI:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1764 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [0] -> \UI_inst.diplay_number.lastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1765 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [1] -> \UI_inst.diplay_number.lastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1766 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [2] -> \UI_inst.diplay_number.lastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1767 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [3] -> \UI_inst.diplay_number.lastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1768 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [4] -> \UI_inst.diplay_number.lastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1769 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [5] -> \UI_inst.diplay_number.lastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1770 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [6] -> \UI_inst.diplay_number.lastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1771 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [7] -> \UI_inst.diplay_number.lastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1772 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [8] -> \UI_inst.diplay_number.lastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1773 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [9] -> \UI_inst.diplay_number.lastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1774 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [10] -> \UI_inst.diplay_number.lastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1775 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [11] -> \UI_inst.diplay_number.lastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1776 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [12] -> \UI_inst.diplay_number.lastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1777 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [13] -> \UI_inst.diplay_number.lastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1778 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [14] -> \UI_inst.diplay_number.lastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1779 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [15] -> \UI_inst.diplay_number.lastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1780 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [16] -> \UI_inst.diplay_number.lastacc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1781 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [17] -> \UI_inst.diplay_number.lastacc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1782 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [18] -> \UI_inst.diplay_number.lastacc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1783 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [19] -> \UI_inst.diplay_number.lastacc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1784 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [20] -> \UI_inst.diplay_number.lastacc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1785 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [21] -> \UI_inst.diplay_number.lastacc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1786 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [22] -> \UI_inst.diplay_number.lastacc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1787 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [23] -> \UI_inst.diplay_number.lastacc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1788 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [24] -> \UI_inst.diplay_number.lastacc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1789 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [25] -> \UI_inst.diplay_number.lastacc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1790 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [26] -> \UI_inst.diplay_number.lastacc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1791 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [27] -> \UI_inst.diplay_number.lastacc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1792 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [28] -> \UI_inst.diplay_number.lastacc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1793 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [29] -> \UI_inst.diplay_number.lastacc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1794 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [30] -> \UI_inst.diplay_number.lastacc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1795 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [31] -> \UI_inst.diplay_number.lastacc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1796 to $_DFFE_PP_ for $techmap\UI_inst.$0\reset[0:0] -> \UI_inst.reset.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1797 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [0] -> \UI_inst.number1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1798 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [1] -> \UI_inst.number1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1799 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [2] -> \UI_inst.number1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1800 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [3] -> \UI_inst.number1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1801 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [4] -> \UI_inst.number1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1802 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [5] -> \UI_inst.number1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1803 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [6] -> \UI_inst.number1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1804 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [7] -> \UI_inst.number1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1805 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [8] -> \UI_inst.number1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1806 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [9] -> \UI_inst.number1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1807 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [10] -> \UI_inst.number1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1808 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [11] -> \UI_inst.number1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1809 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [12] -> \UI_inst.number1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1810 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [13] -> \UI_inst.number1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1811 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [14] -> \UI_inst.number1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1812 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [15] -> \UI_inst.number1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1813 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [16] -> \UI_inst.number1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1814 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [17] -> \UI_inst.number1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1815 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [18] -> \UI_inst.number1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1816 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [19] -> \UI_inst.number1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1817 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [20] -> \UI_inst.number1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1818 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [21] -> \UI_inst.number1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1819 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [22] -> \UI_inst.number1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1820 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [23] -> \UI_inst.number1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1821 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [24] -> \UI_inst.number1 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1822 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [25] -> \UI_inst.number1 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1823 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [26] -> \UI_inst.number1 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1824 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [27] -> \UI_inst.number1 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1825 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [28] -> \UI_inst.number1 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1826 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [29] -> \UI_inst.number1 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1827 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [30] -> \UI_inst.number1 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1828 to $_DFFE_PP_ for $techmap\UI_inst.$0\number1[31:0] [31] -> \UI_inst.number1 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1830 to $_DFFE_PP_ for $auto$simplemap.cc:309:simplemap_lut$9886 -> \UI_inst.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1968 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [0] -> \UI_inst.diplay_number.dec [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1969 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [1] -> \UI_inst.diplay_number.dec [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1970 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [2] -> \UI_inst.diplay_number.dec [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1971 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [3] -> \UI_inst.diplay_number.dec [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1972 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [0] -> \UI_inst.diplay_number.summand [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1973 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [1] -> \UI_inst.diplay_number.summand [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1974 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [2] -> \UI_inst.diplay_number.summand [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1975 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [3] -> \UI_inst.diplay_number.summand [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1976 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [4] -> \UI_inst.diplay_number.summand [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1977 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [5] -> \UI_inst.diplay_number.summand [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1978 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [6] -> \UI_inst.diplay_number.summand [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1979 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [7] -> \UI_inst.diplay_number.summand [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1980 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [8] -> \UI_inst.diplay_number.summand [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1981 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [9] -> \UI_inst.diplay_number.summand [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1982 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [10] -> \UI_inst.diplay_number.summand [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1983 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [11] -> \UI_inst.diplay_number.summand [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1984 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [12] -> \UI_inst.diplay_number.summand [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1985 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [13] -> \UI_inst.diplay_number.summand [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1986 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [14] -> \UI_inst.diplay_number.summand [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1987 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [15] -> \UI_inst.diplay_number.summand [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1988 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [16] -> \UI_inst.diplay_number.summand [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1989 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [17] -> \UI_inst.diplay_number.summand [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1990 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [18] -> \UI_inst.diplay_number.summand [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1991 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [19] -> \UI_inst.diplay_number.summand [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1992 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [20] -> \UI_inst.diplay_number.summand [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1993 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [21] -> \UI_inst.diplay_number.summand [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1994 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [22] -> \UI_inst.diplay_number.summand [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1995 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [23] -> \UI_inst.diplay_number.summand [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1996 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [24] -> \UI_inst.diplay_number.summand [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1997 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [25] -> \UI_inst.diplay_number.summand [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1998 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [26] -> \UI_inst.diplay_number.summand [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$1999 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [27] -> \UI_inst.diplay_number.summand [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2000 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [28] -> \UI_inst.diplay_number.summand [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2001 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [29] -> \UI_inst.diplay_number.summand [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2002 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [30] -> \UI_inst.diplay_number.summand [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2003 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [31] -> \UI_inst.diplay_number.summand [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2004 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [0] -> \UI_inst.diplay_number.rest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2005 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [1] -> \UI_inst.diplay_number.rest [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2006 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [2] -> \UI_inst.diplay_number.rest [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2007 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [3] -> \UI_inst.diplay_number.rest [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2008 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [4] -> \UI_inst.diplay_number.rest [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2009 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [5] -> \UI_inst.diplay_number.rest [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2010 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [6] -> \UI_inst.diplay_number.rest [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2011 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [7] -> \UI_inst.diplay_number.rest [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2012 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [8] -> \UI_inst.diplay_number.rest [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2013 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [9] -> \UI_inst.diplay_number.rest [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2014 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [10] -> \UI_inst.diplay_number.rest [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2015 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [11] -> \UI_inst.diplay_number.rest [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2016 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [12] -> \UI_inst.diplay_number.rest [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2017 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [13] -> \UI_inst.diplay_number.rest [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2018 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [14] -> \UI_inst.diplay_number.rest [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2019 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [15] -> \UI_inst.diplay_number.rest [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2020 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [16] -> \UI_inst.diplay_number.rest [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2021 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [17] -> \UI_inst.diplay_number.rest [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2022 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [18] -> \UI_inst.diplay_number.rest [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2023 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [19] -> \UI_inst.diplay_number.rest [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2024 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [20] -> \UI_inst.diplay_number.rest [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2025 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [21] -> \UI_inst.diplay_number.rest [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2026 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [22] -> \UI_inst.diplay_number.rest [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2027 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [23] -> \UI_inst.diplay_number.rest [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2028 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [24] -> \UI_inst.diplay_number.rest [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2029 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [25] -> \UI_inst.diplay_number.rest [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2030 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [26] -> \UI_inst.diplay_number.rest [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2031 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [27] -> \UI_inst.diplay_number.rest [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2032 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [28] -> \UI_inst.diplay_number.rest [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2033 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [29] -> \UI_inst.diplay_number.rest [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2034 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [30] -> \UI_inst.diplay_number.rest [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2035 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [31] -> \UI_inst.diplay_number.rest [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2036 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [0] -> \UI_inst.diplay_number.acc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2037 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [1] -> \UI_inst.diplay_number.acc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2038 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [2] -> \UI_inst.diplay_number.acc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2039 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [3] -> \UI_inst.diplay_number.acc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2040 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [4] -> \UI_inst.diplay_number.acc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2041 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [5] -> \UI_inst.diplay_number.acc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2042 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [6] -> \UI_inst.diplay_number.acc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2043 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [7] -> \UI_inst.diplay_number.acc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2044 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [8] -> \UI_inst.diplay_number.acc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2045 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [9] -> \UI_inst.diplay_number.acc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2046 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [10] -> \UI_inst.diplay_number.acc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2047 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [11] -> \UI_inst.diplay_number.acc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2048 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [12] -> \UI_inst.diplay_number.acc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2049 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [13] -> \UI_inst.diplay_number.acc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2050 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [14] -> \UI_inst.diplay_number.acc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2051 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [15] -> \UI_inst.diplay_number.acc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2052 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [16] -> \UI_inst.diplay_number.acc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2053 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [17] -> \UI_inst.diplay_number.acc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2054 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [18] -> \UI_inst.diplay_number.acc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2055 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [19] -> \UI_inst.diplay_number.acc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2056 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [20] -> \UI_inst.diplay_number.acc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2057 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [21] -> \UI_inst.diplay_number.acc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2058 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [22] -> \UI_inst.diplay_number.acc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2059 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [23] -> \UI_inst.diplay_number.acc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2060 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [24] -> \UI_inst.diplay_number.acc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2061 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [25] -> \UI_inst.diplay_number.acc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2062 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [26] -> \UI_inst.diplay_number.acc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2063 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [27] -> \UI_inst.diplay_number.acc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2064 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [28] -> \UI_inst.diplay_number.acc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2065 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [29] -> \UI_inst.diplay_number.acc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2066 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [30] -> \UI_inst.diplay_number.acc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2067 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [31] -> \UI_inst.diplay_number.acc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2068 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [32] -> \UI_inst.diplay_number.acc [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2069 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [0] -> \UI_inst.diplay_number.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2070 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [1] -> \UI_inst.diplay_number.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2071 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [2] -> \UI_inst.diplay_number.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2072 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [3] -> \UI_inst.diplay_number.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2073 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [4] -> \UI_inst.diplay_number.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2076 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\we[0:0] -> \UI_inst.diplay_number.we.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2077 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [0] -> \UI_inst.diplay_number.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2078 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [1] -> \UI_inst.diplay_number.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2079 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [2] -> \UI_inst.diplay_number.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2080 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [3] -> \UI_inst.diplay_number.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2081 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [4] -> \UI_inst.diplay_number.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2082 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [5] -> \UI_inst.diplay_number.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2083 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [6] -> \UI_inst.diplay_number.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$2084 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [7] -> \UI_inst.diplay_number.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4019 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [0] -> \UI_inst.LCD.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4020 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [1] -> \UI_inst.LCD.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4021 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [2] -> \UI_inst.LCD.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4022 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [3] -> \UI_inst.LCD.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4023 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [4] -> \UI_inst.LCD.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4024 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [5] -> \UI_inst.LCD.pos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4025 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [6] -> \UI_inst.LCD.pos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4026 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [7] -> \UI_inst.LCD.pos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4027 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [8] -> \UI_inst.LCD.pos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4028 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [9] -> \UI_inst.LCD.pos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4029 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [10] -> \UI_inst.LCD.pos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4030 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [11] -> \UI_inst.LCD.pos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4031 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [12] -> \UI_inst.LCD.pos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4032 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [13] -> \UI_inst.LCD.pos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4033 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [14] -> \UI_inst.LCD.pos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4034 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [15] -> \UI_inst.LCD.pos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4035 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [16] -> \UI_inst.LCD.pos [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4036 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [17] -> \UI_inst.LCD.pos [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4037 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [18] -> \UI_inst.LCD.pos [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4038 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [19] -> \UI_inst.LCD.pos [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4039 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [20] -> \UI_inst.LCD.pos [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4040 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [21] -> \UI_inst.LCD.pos [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4041 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [22] -> \UI_inst.LCD.pos [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4042 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [23] -> \UI_inst.LCD.pos [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4043 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [24] -> \UI_inst.LCD.pos [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4044 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [25] -> \UI_inst.LCD.pos [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4045 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [26] -> \UI_inst.LCD.pos [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4046 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [27] -> \UI_inst.LCD.pos [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4047 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [28] -> \UI_inst.LCD.pos [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4048 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [29] -> \UI_inst.LCD.pos [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4049 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [30] -> \UI_inst.LCD.pos [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4050 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$405.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4249_Y [31] -> \UI_inst.LCD.pos [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4072 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$294.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$2121_Y -> \UI_inst.LCD.LCD_E1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4073 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$315.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [0] -> \UI_inst.LCD.SF_D1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4074 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$315.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [1] -> \UI_inst.LCD.SF_D1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4075 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$315.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [2] -> \UI_inst.LCD.SF_D1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4076 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$315.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [3] -> \UI_inst.LCD.SF_D1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4082 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [0] -> \UI_inst.LCD.tx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4083 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [1] -> \UI_inst.LCD.tx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4084 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [2] -> \UI_inst.LCD.tx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4085 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [3] -> \UI_inst.LCD.tx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4086 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [4] -> \UI_inst.LCD.tx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4087 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [5] -> \UI_inst.LCD.tx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4088 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [6] -> \UI_inst.LCD.tx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4089 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$387.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4351_Y [7] -> \UI_inst.LCD.tx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4090 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$132.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4607_Y -> \UI_inst.LCD.tx_delay_load.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4091 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [0] -> \UI_inst.LCD.tx_delay_value [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4092 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [1] -> \UI_inst.LCD.tx_delay_value [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4093 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [2] -> \UI_inst.LCD.tx_delay_value [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4094 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [3] -> \UI_inst.LCD.tx_delay_value [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4095 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [4] -> \UI_inst.LCD.tx_delay_value [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4096 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [5] -> \UI_inst.LCD.tx_delay_value [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4097 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [6] -> \UI_inst.LCD.tx_delay_value [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4098 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [7] -> \UI_inst.LCD.tx_delay_value [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4099 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [8] -> \UI_inst.LCD.tx_delay_value [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4100 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [9] -> \UI_inst.LCD.tx_delay_value [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4101 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [10] -> \UI_inst.LCD.tx_delay_value [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4102 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [11] -> \UI_inst.LCD.tx_delay_value [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4103 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [12] -> \UI_inst.LCD.tx_delay_value [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4104 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [13] -> \UI_inst.LCD.tx_delay_value [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4105 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [14] -> \UI_inst.LCD.tx_delay_value [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4106 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [15] -> \UI_inst.LCD.tx_delay_value [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4107 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [16] -> \UI_inst.LCD.tx_delay_value [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4108 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [17] -> \UI_inst.LCD.tx_delay_value [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4109 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [18] -> \UI_inst.LCD.tx_delay_value [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4110 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$152.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4902_Y [19] -> \UI_inst.LCD.tx_delay_value [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4111 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$169.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$2121_Y -> \UI_inst.LCD.LCD_E0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4112 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$179.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [0] -> \UI_inst.LCD.SF_D0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4113 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$179.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [1] -> \UI_inst.LCD.SF_D0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4114 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$179.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [2] -> \UI_inst.LCD.SF_D0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4115 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$179.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$3685_Y [3] -> \UI_inst.LCD.SF_D0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4116 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$184.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$2121_Y -> \UI_inst.LCD.tx_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5257 to $_DFFE_PP_ for $techmap\UI_inst.LCD.delay_counter.$0\counter[19:0] [1] -> \UI_inst.LCD.delay_counter.counter [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4077 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$323.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4541_Y [0] -> \UI_inst.LCD.display_state [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4078 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$323.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4541_Y [1] -> \UI_inst.LCD.display_state [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4079 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$323.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4541_Y [2] -> \UI_inst.LCD.display_state [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4080 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$323.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4541_Y [3] -> \UI_inst.LCD.display_state [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4081 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$323.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4541_Y [4] -> \UI_inst.LCD.display_state [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$4117 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$191.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4806_Y [0] -> \UI_inst.LCD.tx_state [0].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$4118 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$191.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4806_Y [1] -> \UI_inst.LCD.tx_state [1].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$4119 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$191.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$4806_Y [2] -> \UI_inst.LCD.tx_state [2].

7.34. Executing TECHMAP pass (map to technology primitives).

7.34.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

7.34.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$__DFFE_PP1 for cells of type $__DFFE_PP1.
No more expansions possible.
<suppressed ~318 debug messages>

7.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.
<suppressed ~626 debug messages>

7.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

7.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top_UI.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1766 (SB_DFFE): \UI_inst.diplay_number.lastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1767 (SB_DFFE): \UI_inst.diplay_number.lastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1768 (SB_DFFE): \UI_inst.diplay_number.lastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1769 (SB_DFFE): \UI_inst.diplay_number.lastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1770 (SB_DFFE): \UI_inst.diplay_number.lastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1771 (SB_DFFE): \UI_inst.diplay_number.lastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1772 (SB_DFFE): \UI_inst.diplay_number.lastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1773 (SB_DFFE): \UI_inst.diplay_number.lastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1774 (SB_DFFE): \UI_inst.diplay_number.lastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1775 (SB_DFFE): \UI_inst.diplay_number.lastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1776 (SB_DFFE): \UI_inst.diplay_number.lastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1777 (SB_DFFE): \UI_inst.diplay_number.lastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1778 (SB_DFFE): \UI_inst.diplay_number.lastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1779 (SB_DFFE): \UI_inst.diplay_number.lastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1780 (SB_DFFE): \UI_inst.diplay_number.lastacc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1781 (SB_DFFE): \UI_inst.diplay_number.lastacc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1782 (SB_DFFE): \UI_inst.diplay_number.lastacc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1783 (SB_DFFE): \UI_inst.diplay_number.lastacc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1784 (SB_DFFE): \UI_inst.diplay_number.lastacc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1785 (SB_DFFE): \UI_inst.diplay_number.lastacc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1786 (SB_DFFE): \UI_inst.diplay_number.lastacc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1787 (SB_DFFE): \UI_inst.diplay_number.lastacc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1788 (SB_DFFE): \UI_inst.diplay_number.lastacc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1789 (SB_DFFE): \UI_inst.diplay_number.lastacc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1790 (SB_DFFE): \UI_inst.diplay_number.lastacc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1791 (SB_DFFE): \UI_inst.diplay_number.lastacc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1792 (SB_DFFE): \UI_inst.diplay_number.lastacc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1793 (SB_DFFE): \UI_inst.diplay_number.lastacc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1794 (SB_DFFE): \UI_inst.diplay_number.lastacc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1795 (SB_DFFE): \UI_inst.diplay_number.lastacc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1798 (SB_DFFE): \UI_inst.number1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1764 (SB_DFFE): \UI_inst.diplay_number.lastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1796 (SB_DFFE): \UI_inst.reset = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1799 (SB_DFFE): \UI_inst.number1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1800 (SB_DFFE): \UI_inst.number1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1801 (SB_DFFE): \UI_inst.number1 [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1802 (SB_DFFE): \UI_inst.number1 [5] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1803 (SB_DFFE): \UI_inst.number1 [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1804 (SB_DFFE): \UI_inst.number1 [7] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1805 (SB_DFFE): \UI_inst.number1 [8] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1806 (SB_DFFE): \UI_inst.number1 [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1807 (SB_DFFE): \UI_inst.number1 [10] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1808 (SB_DFFE): \UI_inst.number1 [11] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1809 (SB_DFFE): \UI_inst.number1 [12] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1810 (SB_DFFE): \UI_inst.number1 [13] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1811 (SB_DFFE): \UI_inst.number1 [14] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1812 (SB_DFFE): \UI_inst.number1 [15] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1813 (SB_DFFE): \UI_inst.number1 [16] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1814 (SB_DFFE): \UI_inst.number1 [17] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1815 (SB_DFFE): \UI_inst.number1 [18] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1816 (SB_DFFE): \UI_inst.number1 [19] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1817 (SB_DFFE): \UI_inst.number1 [20] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1818 (SB_DFFE): \UI_inst.number1 [21] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1819 (SB_DFFE): \UI_inst.number1 [22] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1820 (SB_DFFE): \UI_inst.number1 [23] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1821 (SB_DFFE): \UI_inst.number1 [24] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1822 (SB_DFFE): \UI_inst.number1 [25] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1823 (SB_DFFE): \UI_inst.number1 [26] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1824 (SB_DFFE): \UI_inst.number1 [27] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1825 (SB_DFFE): \UI_inst.number1 [28] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1826 (SB_DFFE): \UI_inst.number1 [29] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1827 (SB_DFFE): \UI_inst.number1 [30] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1828 (SB_DFFE): \UI_inst.number1 [31] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1830 (SB_DFFE): \UI_inst.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1797 (SB_DFFE): \UI_inst.number1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1831 (SB_DFF): \UI_inst.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1832 (SB_DFF): \UI_inst.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1833 (SB_DFF): \UI_inst.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1834 (SB_DFF): \UI_inst.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1835 (SB_DFF): \UI_inst.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1836 (SB_DFF): \UI_inst.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1837 (SB_DFF): \UI_inst.count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1838 (SB_DFF): \UI_inst.count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1839 (SB_DFF): \UI_inst.count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1840 (SB_DFF): \UI_inst.count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1841 (SB_DFF): \UI_inst.count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1842 (SB_DFF): \UI_inst.count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1843 (SB_DFF): \UI_inst.count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1844 (SB_DFF): \UI_inst.count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1845 (SB_DFF): \UI_inst.count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1846 (SB_DFF): \UI_inst.count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1847 (SB_DFF): \UI_inst.count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1848 (SB_DFF): \UI_inst.count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1849 (SB_DFF): \UI_inst.count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1850 (SB_DFF): \UI_inst.count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1829 (SB_DFF): \UI_inst.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1765 (SB_DFFE): \UI_inst.diplay_number.lastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2084 (SB_DFFE): \UI_inst.diplay_number.dat [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1969 (SB_DFFE): \UI_inst.diplay_number.dec [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1970 (SB_DFFE): \UI_inst.diplay_number.dec [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1968 (SB_DFFE): \UI_inst.diplay_number.dec [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1971 (SB_DFFE): \UI_inst.diplay_number.dec [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1973 (SB_DFFE): \UI_inst.diplay_number.summand [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1974 (SB_DFFE): \UI_inst.diplay_number.summand [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1975 (SB_DFFE): \UI_inst.diplay_number.summand [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1976 (SB_DFFE): \UI_inst.diplay_number.summand [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1977 (SB_DFFE): \UI_inst.diplay_number.summand [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1978 (SB_DFFE): \UI_inst.diplay_number.summand [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1979 (SB_DFFE): \UI_inst.diplay_number.summand [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1980 (SB_DFFE): \UI_inst.diplay_number.summand [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1981 (SB_DFFE): \UI_inst.diplay_number.summand [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1982 (SB_DFFE): \UI_inst.diplay_number.summand [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1983 (SB_DFFE): \UI_inst.diplay_number.summand [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1984 (SB_DFFE): \UI_inst.diplay_number.summand [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1985 (SB_DFFE): \UI_inst.diplay_number.summand [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1986 (SB_DFFE): \UI_inst.diplay_number.summand [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1987 (SB_DFFE): \UI_inst.diplay_number.summand [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1988 (SB_DFFE): \UI_inst.diplay_number.summand [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1989 (SB_DFFE): \UI_inst.diplay_number.summand [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1990 (SB_DFFE): \UI_inst.diplay_number.summand [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1991 (SB_DFFE): \UI_inst.diplay_number.summand [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1992 (SB_DFFE): \UI_inst.diplay_number.summand [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1993 (SB_DFFE): \UI_inst.diplay_number.summand [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1994 (SB_DFFE): \UI_inst.diplay_number.summand [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1995 (SB_DFFE): \UI_inst.diplay_number.summand [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1996 (SB_DFFE): \UI_inst.diplay_number.summand [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1997 (SB_DFFE): \UI_inst.diplay_number.summand [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1998 (SB_DFFE): \UI_inst.diplay_number.summand [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1999 (SB_DFFE): \UI_inst.diplay_number.summand [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2000 (SB_DFFE): \UI_inst.diplay_number.summand [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2001 (SB_DFFE): \UI_inst.diplay_number.summand [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2002 (SB_DFFE): \UI_inst.diplay_number.summand [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$1972 (SB_DFFE): \UI_inst.diplay_number.summand [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2003 (SB_DFFE): \UI_inst.diplay_number.summand [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2005 (SB_DFFE): \UI_inst.diplay_number.rest [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2006 (SB_DFFE): \UI_inst.diplay_number.rest [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2007 (SB_DFFE): \UI_inst.diplay_number.rest [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2008 (SB_DFFE): \UI_inst.diplay_number.rest [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2009 (SB_DFFE): \UI_inst.diplay_number.rest [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2010 (SB_DFFE): \UI_inst.diplay_number.rest [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2011 (SB_DFFE): \UI_inst.diplay_number.rest [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2012 (SB_DFFE): \UI_inst.diplay_number.rest [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2013 (SB_DFFE): \UI_inst.diplay_number.rest [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2014 (SB_DFFE): \UI_inst.diplay_number.rest [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2015 (SB_DFFE): \UI_inst.diplay_number.rest [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2077 (SB_DFFE): \UI_inst.diplay_number.dat [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2017 (SB_DFFE): \UI_inst.diplay_number.rest [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2018 (SB_DFFE): \UI_inst.diplay_number.rest [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2019 (SB_DFFE): \UI_inst.diplay_number.rest [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2020 (SB_DFFE): \UI_inst.diplay_number.rest [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2021 (SB_DFFE): \UI_inst.diplay_number.rest [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2022 (SB_DFFE): \UI_inst.diplay_number.rest [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2023 (SB_DFFE): \UI_inst.diplay_number.rest [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2024 (SB_DFFE): \UI_inst.diplay_number.rest [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2025 (SB_DFFE): \UI_inst.diplay_number.rest [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2026 (SB_DFFE): \UI_inst.diplay_number.rest [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2027 (SB_DFFE): \UI_inst.diplay_number.rest [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2028 (SB_DFFE): \UI_inst.diplay_number.rest [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2029 (SB_DFFE): \UI_inst.diplay_number.rest [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2030 (SB_DFFE): \UI_inst.diplay_number.rest [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2031 (SB_DFFE): \UI_inst.diplay_number.rest [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2032 (SB_DFFE): \UI_inst.diplay_number.rest [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2033 (SB_DFFE): \UI_inst.diplay_number.rest [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2034 (SB_DFFE): \UI_inst.diplay_number.rest [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2004 (SB_DFFE): \UI_inst.diplay_number.rest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2035 (SB_DFFE): \UI_inst.diplay_number.rest [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2037 (SB_DFFE): \UI_inst.diplay_number.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2038 (SB_DFFE): \UI_inst.diplay_number.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2039 (SB_DFFE): \UI_inst.diplay_number.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2040 (SB_DFFE): \UI_inst.diplay_number.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2041 (SB_DFFE): \UI_inst.diplay_number.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2042 (SB_DFFE): \UI_inst.diplay_number.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2043 (SB_DFFE): \UI_inst.diplay_number.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2044 (SB_DFFE): \UI_inst.diplay_number.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2045 (SB_DFFE): \UI_inst.diplay_number.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2046 (SB_DFFE): \UI_inst.diplay_number.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2047 (SB_DFFE): \UI_inst.diplay_number.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2048 (SB_DFFE): \UI_inst.diplay_number.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2049 (SB_DFFE): \UI_inst.diplay_number.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2050 (SB_DFFE): \UI_inst.diplay_number.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2051 (SB_DFFE): \UI_inst.diplay_number.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2052 (SB_DFFE): \UI_inst.diplay_number.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2053 (SB_DFFE): \UI_inst.diplay_number.acc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2054 (SB_DFFE): \UI_inst.diplay_number.acc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2055 (SB_DFFE): \UI_inst.diplay_number.acc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2056 (SB_DFFE): \UI_inst.diplay_number.acc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2057 (SB_DFFE): \UI_inst.diplay_number.acc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2058 (SB_DFFE): \UI_inst.diplay_number.acc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2059 (SB_DFFE): \UI_inst.diplay_number.acc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2060 (SB_DFFE): \UI_inst.diplay_number.acc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2061 (SB_DFFE): \UI_inst.diplay_number.acc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2062 (SB_DFFE): \UI_inst.diplay_number.acc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2063 (SB_DFFE): \UI_inst.diplay_number.acc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2064 (SB_DFFE): \UI_inst.diplay_number.acc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2065 (SB_DFFE): \UI_inst.diplay_number.acc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2066 (SB_DFFE): \UI_inst.diplay_number.acc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2067 (SB_DFFE): \UI_inst.diplay_number.acc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2036 (SB_DFFE): \UI_inst.diplay_number.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2068 (SB_DFFE): \UI_inst.diplay_number.acc [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2070 (SB_DFFE): \UI_inst.diplay_number.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2071 (SB_DFFE): \UI_inst.diplay_number.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2072 (SB_DFFE): \UI_inst.diplay_number.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2069 (SB_DFFE): \UI_inst.diplay_number.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2074 (SB_DFF): \UI_inst.diplay_number.updating = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2075 (SB_DFF): \UI_inst.diplay_number.lastupdate = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2076 (SB_DFFE): \UI_inst.diplay_number.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2073 (SB_DFFE): \UI_inst.diplay_number.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2078 (SB_DFFE): \UI_inst.diplay_number.dat [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2079 (SB_DFFE): \UI_inst.diplay_number.dat [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2080 (SB_DFFE): \UI_inst.diplay_number.dat [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2081 (SB_DFFE): \UI_inst.diplay_number.dat [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2082 (SB_DFFE): \UI_inst.diplay_number.dat [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2083 (SB_DFFE): \UI_inst.diplay_number.dat [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$2016 (SB_DFFE): \UI_inst.diplay_number.rest [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4020 (SB_DFFE): \UI_inst.LCD.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4021 (SB_DFFE): \UI_inst.LCD.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4022 (SB_DFFE): \UI_inst.LCD.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4023 (SB_DFFE): \UI_inst.LCD.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4024 (SB_DFFE): \UI_inst.LCD.pos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4025 (SB_DFFE): \UI_inst.LCD.pos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4026 (SB_DFFE): \UI_inst.LCD.pos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4027 (SB_DFFE): \UI_inst.LCD.pos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4028 (SB_DFFE): \UI_inst.LCD.pos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4029 (SB_DFFE): \UI_inst.LCD.pos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4030 (SB_DFFE): \UI_inst.LCD.pos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4031 (SB_DFFE): \UI_inst.LCD.pos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4032 (SB_DFFE): \UI_inst.LCD.pos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4033 (SB_DFFE): \UI_inst.LCD.pos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4034 (SB_DFFE): \UI_inst.LCD.pos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4035 (SB_DFFE): \UI_inst.LCD.pos [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4036 (SB_DFFE): \UI_inst.LCD.pos [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4037 (SB_DFFE): \UI_inst.LCD.pos [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4038 (SB_DFFE): \UI_inst.LCD.pos [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4039 (SB_DFFE): \UI_inst.LCD.pos [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4040 (SB_DFFE): \UI_inst.LCD.pos [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4041 (SB_DFFE): \UI_inst.LCD.pos [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4042 (SB_DFFE): \UI_inst.LCD.pos [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4043 (SB_DFFE): \UI_inst.LCD.pos [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4044 (SB_DFFE): \UI_inst.LCD.pos [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4045 (SB_DFFE): \UI_inst.LCD.pos [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4046 (SB_DFFE): \UI_inst.LCD.pos [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4047 (SB_DFFE): \UI_inst.LCD.pos [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4048 (SB_DFFE): \UI_inst.LCD.pos [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4049 (SB_DFFE): \UI_inst.LCD.pos [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4051 (SB_DFFR): \UI_inst.LCD.main_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4072 (SB_DFFE): \UI_inst.LCD.LCD_E1 = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4069 (SB_DFFR): \UI_inst.LCD.main_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4074 (SB_DFFE): \UI_inst.LCD.SF_D1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4075 (SB_DFFE): \UI_inst.LCD.SF_D1 [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4077 (SB_DFFER): \UI_inst.LCD.display_state [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4081 (SB_DFFER): \UI_inst.LCD.display_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4090 (SB_DFFE): \UI_inst.LCD.tx_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4092 (SB_DFFE): \UI_inst.LCD.tx_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4093 (SB_DFFE): \UI_inst.LCD.tx_delay_value [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4094 (SB_DFFE): \UI_inst.LCD.tx_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4095 (SB_DFFE): \UI_inst.LCD.tx_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4096 (SB_DFFE): \UI_inst.LCD.tx_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4097 (SB_DFFE): \UI_inst.LCD.tx_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4098 (SB_DFFE): \UI_inst.LCD.tx_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4099 (SB_DFFE): \UI_inst.LCD.tx_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4100 (SB_DFFE): \UI_inst.LCD.tx_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4101 (SB_DFFE): \UI_inst.LCD.tx_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4102 (SB_DFFE): \UI_inst.LCD.tx_delay_value [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4103 (SB_DFFE): \UI_inst.LCD.tx_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4104 (SB_DFFE): \UI_inst.LCD.tx_delay_value [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4105 (SB_DFFE): \UI_inst.LCD.tx_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4106 (SB_DFFE): \UI_inst.LCD.tx_delay_value [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4107 (SB_DFFE): \UI_inst.LCD.tx_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4108 (SB_DFFE): \UI_inst.LCD.tx_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4109 (SB_DFFE): \UI_inst.LCD.tx_delay_value [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4091 (SB_DFFE): \UI_inst.LCD.tx_delay_value [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4111 (SB_DFFE): \UI_inst.LCD.LCD_E0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4110 (SB_DFFE): \UI_inst.LCD.tx_delay_value [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4113 (SB_DFFE): \UI_inst.LCD.SF_D0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4114 (SB_DFFE): \UI_inst.LCD.SF_D0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4112 (SB_DFFE): \UI_inst.LCD.SF_D0 [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4117 (SB_DFFER): \UI_inst.LCD.tx_state [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4119 (SB_DFFES): \UI_inst.LCD.tx_state [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4019 (SB_DFFE): \UI_inst.LCD.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4050 (SB_DFFE): \UI_inst.LCD.pos [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4053 (SB_DFFR): \UI_inst.LCD.main_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4055 (SB_DFFR): \UI_inst.LCD.main_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4056 (SB_DFFR): \UI_inst.LCD.main_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4057 (SB_DFFR): \UI_inst.LCD.main_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4058 (SB_DFFR): \UI_inst.LCD.main_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4059 (SB_DFFR): \UI_inst.LCD.main_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4060 (SB_DFFR): \UI_inst.LCD.main_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4061 (SB_DFFR): \UI_inst.LCD.main_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4062 (SB_DFFR): \UI_inst.LCD.main_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4064 (SB_DFFR): \UI_inst.LCD.main_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4066 (SB_DFFR): \UI_inst.LCD.main_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4068 (SB_DFFR): \UI_inst.LCD.main_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4073 (SB_DFFE): \UI_inst.LCD.SF_D1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4076 (SB_DFFE): \UI_inst.LCD.SF_D1 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4078 (SB_DFFER): \UI_inst.LCD.display_state [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4079 (SB_DFFER): \UI_inst.LCD.display_state [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4080 (SB_DFFER): \UI_inst.LCD.display_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4116 (SB_DFFE): \UI_inst.LCD.tx_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4115 (SB_DFFE): \UI_inst.LCD.SF_D0 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$4118 (SB_DFFES): \UI_inst.LCD.tx_state [1] = 1

7.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top_UI.

7.39. Executing ICE40_OPT pass (performing simple optimizations).

7.39.1. Running ICE40 specific optimizations.

7.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.
<suppressed ~212 debug messages>

7.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
<suppressed ~417 debug messages>
Removed a total of 139 cells.

7.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

7.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..
Removed 0 unused cells and 2060 unused wires.
<suppressed ~1 debug messages>

7.39.6. Rerunning OPT passes. (Removed registers in this run.)

7.39.7. Running ICE40 specific optimizations.

7.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_UI.

7.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_UI'.
Removed a total of 0 cells.

7.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

7.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_UI..

7.39.12. Finished OPT passes. (There is nothing left to do.)

7.40. Executing TECHMAP pass (map to technology primitives).

7.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

7.40.2. Continuing TECHMAP pass.
No more expansions possible.

7.41. Executing ABC pass (technology mapping using ABC).

7.41.1. Extracting gate netlist of module `\top_UI' to `<abc-temp-dir>/input.blif'..
Extracted 3462 gates and 3936 wires to a netlist network with 472 inputs and 410 outputs.

7.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     457.
ABC: Participating nodes from both networks       =    1074.
ABC: Participating nodes from the first network   =     460. (  66.38 % of nodes)
ABC: Participating nodes from the second network  =     614. (  88.60 % of nodes)
ABC: Node pairs (any polarity)                    =     460. (  66.38 % of names can be moved)
ABC: Node pairs (same polarity)                   =     441. (  63.64 % of names can be moved)
ABC: Total runtime =     0.07 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

7.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      692
ABC RESULTS:        internal signals:     3054
ABC RESULTS:           input signals:      472
ABC RESULTS:          output signals:      410
Removing temp directory.
Removed 0 unused cells and 1431 unused wires.

7.42. Executing ICE40_UNLUT pass (convert SB_LUT4 to $lut).
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[10].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[11].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[12].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[13].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[14].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[15].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[16].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[17].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[18].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[19].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[20].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[21].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[4].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[5].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[6].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[7].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[8].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1653.slice[9].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[10].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[11].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[12].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[13].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[14].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[15].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[16].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[17].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[18].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[19].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[20].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[21].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[22].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[23].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[24].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[25].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[26].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[27].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[28].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[29].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[30].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[31].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[4].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[5].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[6].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[7].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[8].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1656.slice[9].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[10].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[11].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[12].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[13].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[14].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[15].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[16].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[17].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[18].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[19].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[20].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[21].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[22].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[23].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[24].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[25].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[26].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[27].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[28].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[29].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[30].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[31].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[4].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[5].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[6].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[7].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[8].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1659.slice[9].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[10].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[11].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[12].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[13].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[14].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[15].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[16].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[17].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[18].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[19].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[4].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[5].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[6].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[7].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[8].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1662.slice[9].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1665.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1665.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1665.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[10].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[11].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[12].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[13].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[14].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[15].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[16].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[17].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[18].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[19].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[1].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[20].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[21].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[22].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[23].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[24].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[25].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[26].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[27].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[28].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[29].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[30].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[31].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[32].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[4].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[5].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[6].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[7].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[8].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1668.slice[9].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[10].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[11].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[12].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[13].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[14].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[15].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[16].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[17].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[18].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[19].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[1].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[20].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[21].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[22].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[23].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[24].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[25].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[26].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[27].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[28].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[29].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[30].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[31].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[4].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[5].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[6].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[7].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[8].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1671.slice[9].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1677.slice[0].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1677.slice[2].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1677.slice[3].adder to $lut.
Mapping SB_LUT4 cell top_UI.$auto$alumacc.cc:474:replace_alu$1677.slice[4].adder to $lut.

7.42.1. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:      861
  1-LUT              130
  2-LUT              151
  3-LUT              381
  4-LUT              199
  with \SB_CARRY     160

Eliminating LUTs.
Number of LUTs:      861
  1-LUT              130
  2-LUT              151
  3-LUT              381
  4-LUT              199
  with \SB_CARRY     160

Combining LUTs.
Number of LUTs:      823
  1-LUT               97
  2-LUT              144
  3-LUT              380
  4-LUT              202
  with \SB_CARRY     160

Eliminated 0 LUTs.
Combined 38 LUTs.
<suppressed ~4614 debug messages>

7.42.2. Executing TECHMAP pass (map to technology primitives).

7.42.2.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

7.42.2.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001100110011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111100010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000001100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
No more expansions possible.
<suppressed ~2209 debug messages>
Removed 0 unused cells and 1683 unused wires.

7.42.3. Executing HIERARCHY pass (managing design hierarchy).

7.42.3.1. Analyzing design hierarchy..
Top module:  \top_UI

7.42.3.2. Analyzing design hierarchy..
Top module:  \top_UI
Removed 0 unused modules.

7.42.4. Printing statistics.

=== top_UI ===

   Number of wires:                847
   Number of wire bits:           1736
   Number of public wires:          73
   Number of public wire bits:     677
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1341
     SB_CARRY                      199
     SB_DFF                         42
     SB_DFFE                       254
     SB_DFFER                        8
     SB_DFFR                        14
     SB_LUT4                       823
     SB_RAM40_4K                     1

7.42.5. Executing CHECK pass (checking for obvious problems).
checking module top_UI..
found and reported 0 problems.

7.42.6. Executing JSON backend.

Warnings: 21 unique messages, 21 total
End of script. Logfile hash: f07bd189a2
CPU: user 3.60s system 0.05s, MEM: 77.18 MB total, 45.30 MB resident
Yosys 0.8+612 (git sha1 c6d8692c, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 20% 19x opt_expr (0 sec), 19% 16x opt_merge (0 sec), ...
