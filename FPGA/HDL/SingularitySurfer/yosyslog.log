
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 4c89a4e6, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `TOP_V1.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: TOP_V1.v
Parsing Verilog input from `TOP_V1.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `../adc_host.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ../adc_host.v
Parsing Verilog input from `../adc_host.v' to AST representation.
Generating RTLIL representation for module `\adc_host'.
Successfully finished Verilog frontend.

-- Parsing `../filter/CIC.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: ../filter/CIC.v
Parsing Verilog input from `../filter/CIC.v' to AST representation.
Generating RTLIL representation for module `\CIC'.
Successfully finished Verilog frontend.

-- Parsing `../filter/dpram_64x8.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: ../filter/dpram_64x8.v
Parsing Verilog input from `../filter/dpram_64x8.v' to AST representation.
Generating RTLIL representation for module `\dpram_64x8'.
Successfully finished Verilog frontend.

-- Parsing `../cordic/cordic.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ../cordic/cordic.v
Parsing Verilog input from `../cordic/cordic.v' to AST representation.
Generating RTLIL representation for module `\signed_shifter'.
Warning: Replacing memory \Q with list of registers. See ../cordic/cordic.v:185, ../cordic/cordic.v:184
Generating RTLIL representation for module `\rotator'.
Generating RTLIL representation for module `\cordic'.
Successfully finished Verilog frontend.

-- Parsing `../UI/UI.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: ../UI/UI.v
Parsing Verilog input from `../UI/UI.v' to AST representation.
Generating RTLIL representation for module `\UI'.
Successfully finished Verilog frontend.

-- Parsing `../UI/BinToLCD.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ../UI/BinToLCD.v
Parsing Verilog input from `../UI/BinToLCD.v' to AST representation.
Generating RTLIL representation for module `\BinToLCD'.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_defines.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: ../UI/lcd_defines.v
Parsing Verilog input from `../UI/lcd_defines.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_display.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: ../UI/lcd_display.v
Parsing Verilog input from `../UI/lcd_display.v' to AST representation.
Generating RTLIL representation for module `\lcd'.
Successfully finished Verilog frontend.

-- Parsing `../UI/delay_counter.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: ../UI/delay_counter.v
Parsing Verilog input from `../UI/delay_counter.v' to AST representation.
Generating RTLIL representation for module `\delay_counter'.
Successfully finished Verilog frontend.

-- Parsing `../sram16x16.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: ../sram16x16.v
Parsing Verilog input from `../sram16x16.v' to AST representation.
Generating RTLIL representation for module `\sram16x16'.
Successfully finished Verilog frontend.

-- Parsing `../Flash_to_SRAM.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: ../Flash_to_SRAM.v
Parsing Verilog input from `../Flash_to_SRAM.v' to AST representation.
Generating RTLIL representation for module `\Flash_to_SRAM'.
Successfully finished Verilog frontend.

-- Parsing `../spi_flash_reader.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: ../spi_flash_reader.v
Parsing Verilog input from `../spi_flash_reader.v' to AST representation.
Generating RTLIL representation for module `\spi_flash_reader'.
Successfully finished Verilog frontend.

-- Parsing `../sigma_delta.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: ../sigma_delta.v
Parsing Verilog input from `../sigma_delta.v' to AST representation.
Generating RTLIL representation for module `\sigma_delta'.
Successfully finished Verilog frontend.

-- Parsing `../dds.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: ../dds.v
Parsing Verilog input from `../dds.v' to AST representation.
Generating RTLIL representation for module `\dds'.
Successfully finished Verilog frontend.

-- Parsing `../mult16x16.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: ../mult16x16.v
Parsing Verilog input from `../mult16x16.v' to AST representation.
Generating RTLIL representation for module `\mult16x16'.
Successfully finished Verilog frontend.

-- Parsing `../pll.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: ../pll.v
Parsing Verilog input from `../pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json yosysout.json' --

18. Executing SYNTH_ICE40 pass.

18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

18.2. Executing HIERARCHY pass (managing design hierarchy).

18.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \CIC
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \cordic
Used module:         \rotator
Used module:             \signed_shifter
Used module:     \UI
Used module:         \lcd
Used module:             \delay_counter
Used module:         \BinToLCD

18.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\CIC'.
Parameter \rate = 16
Parameter \log2rate = 4
Generating RTLIL representation for module `$paramod\CIC\rate=16\log2rate=4'.

18.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\delay_counter'.
Parameter \counter_width = 20
Generating RTLIL representation for module `$paramod\delay_counter\counter_width=20'.

18.2.4. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     $paramod\CIC\rate=16\log2rate=4
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \cordic
Used module:         \rotator
Used module:             \signed_shifter
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

18.2.5. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     $paramod\CIC\rate=16\log2rate=4
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \cordic
Used module:         \rotator
Used module:             \signed_shifter
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Removing unused module `\pll'.
Removing unused module `\delay_counter'.
Removing unused module `\CIC'.
Removed 3 unused modules.
Mapping positional arguments of cell $paramod\CIC\rate=16\log2rate=4.combram (dpram_64x8).
Mapping positional arguments of cell UI.LCD (lcd).
Mapping positional arguments of cell UI.diplay_number (BinToLCD).
Mapping positional arguments of cell cordic.U (rotator).
Mapping positional arguments of cell rotator.y_shifter (signed_shifter).
Mapping positional arguments of cell rotator.x_shifter (signed_shifter).
Mapping positional arguments of cell top.SRAM (sram16x16).
Mapping positional arguments of cell top.F2SRAM (Flash_to_SRAM).
Mapping positional arguments of cell top.Filter1 ($paramod\CIC\rate=16\log2rate=4).
Mapping positional arguments of cell top.mult2 (mult16x16).
Mapping positional arguments of cell top.mult1 (mult16x16).
Mapping positional arguments of cell top.adc_host_hi (adc_host).
Mapping positional arguments of cell top.DAC2 (sigma_delta).
Mapping positional arguments of cell top.DAC1 (sigma_delta).
Mapping positional arguments of cell top.dds_core (dds).
Mapping positional arguments of cell top.UI_inst (UI).
Warning: Resizing cell port $paramod\CIC\rate=16\log2rate=4.combram.indat from 49 bits to 64 bits.
Warning: Resizing cell port $paramod\CIC\rate=16\log2rate=4.combram.outdat from 49 bits to 64 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WDATA from 8 bits to 16 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RADDR from 32 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RDATA from 8 bits to 16 bits.
Warning: Resizing cell port cordic.U.iteration from 5 bits to 4 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.RADDR from 8 bits to 11 bits.

18.3. Executing PROC pass (convert processes to netlists).

18.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

18.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../UI/delay_counter.v:62$597 in module $paramod\delay_counter\counter_width=20.
Removed 4 dead cases from process $proc$../dds.v:23$544 in module dds.
Marked 4 switch rules as full_case in process $proc$../dds.v:23$544 in module dds.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:187$524 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:174$520 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:166$516 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:155$511 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:141$509 in module spi_flash_reader.
Removed 1 dead cases from process $proc$../spi_flash_reader.v:112$506 in module spi_flash_reader.
Marked 5 switch rules as full_case in process $proc$../spi_flash_reader.v:112$506 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:104$504 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../UI/lcd_display.v:435$449 in module lcd.
Marked 4 switch rules as full_case in process $proc$../UI/lcd_display.v:219$441 in module lcd.
Removed 1 dead cases from process $proc$../UI/BinToLCD.v:36$229 in module BinToLCD.
Marked 20 switch rules as full_case in process $proc$../UI/BinToLCD.v:36$229 in module BinToLCD.
Marked 5 switch rules as full_case in process $proc$../UI/UI.v:125$163 in module UI.
Removed 1 dead cases from process $proc$../cordic/cordic.v:296$138 in module cordic.
Marked 1 switch rules as full_case in process $proc$../cordic/cordic.v:296$138 in module cordic.
Marked 1 switch rules as full_case in process $proc$../cordic/cordic.v:461$136 in module cordic.
Marked 3 switch rules as full_case in process $proc$../cordic/cordic.v:232$123 in module rotator.
Marked 1 switch rules as full_case in process $proc$../cordic/cordic.v:175$120 in module signed_shifter.
Marked 1 switch rules as full_case in process $proc$../adc_host.v:29$21 in module adc_host.
Removed a total of 7 dead cases.

18.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\dds.$proc$../dds.v:21$557'.
  Set init value: \islast = 1'0
Found init rule in `\dds.$proc$../dds.v:21$556'.
  Set init value: \lastgo = 1'0
Found init rule in `\dds.$proc$../dds.v:21$555'.
  Set init value: \iscos = 1'0
Found init rule in `\dds.$proc$../dds.v:17$554'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:14$553'.
  Set init value: \cos = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:13$552'.
  Set init value: \sin = 16'0000000000000000
Found init rule in `\sigma_delta.$proc$../sigma_delta.v:16$543'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$503'.
  Set init value: \busystop = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$502'.
  Set init value: \spi_go = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$500'.
  Set init value: \spi_addr = 24'000000000000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$499'.
  Set init value: \second = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$498'.
  Set init value: \laststart = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$497'.
  Set init value: \poscount = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$496'.
  Set init value: \wdata = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$495'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$494'.
  Set init value: \wen = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$493'.
  Set init value: \busy = 1'0
Found init rule in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:26$596'.
  Set init value: \we = 1'0
Found init rule in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:25$595'.
  Set init value: \inaddr = 8'00000000
Found init rule in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:23$594'.
  Set init value: \OUTpipe = 49'0000000000000000000000000000000000000000000000000
Found init rule in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:23$593'.
  Set init value: \I0 = 49'0000000000000000000000000000000000000000000000000
Found init rule in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:21$592'.
  Set init value: \tickcount = 11'00000000000
Found init rule in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:20$591'.
  Set init value: \lasttick = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:201$463'.
  Set init value: \tx_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:200$462'.
  Set init value: \main_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:196$461'.
  Set init value: \tx_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:195$460'.
  Set init value: \main_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:170$459'.
  Set init value: \LCD_E1 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:169$458'.
  Set init value: \LCD_E0 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:168$457'.
  Set init value: \SF_D1 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:167$456'.
  Set init value: \SF_D0 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:106$455'.
  Set init value: \pos = 0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:105$454'.
  Set init value: \display_state = 5'00000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:77$453'.
  Set init value: \tx_done = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:74$452'.
  Set init value: \tx_state = 3'110
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:32$417'.
  Set init value: \holdoff = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:31$416'.
  Set init value: \difference = 33'000000000000000000000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:28$415'.
  Set init value: \dec = 4'0000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$414'.
  Set init value: \summand = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$413'.
  Set init value: \secondlastacc = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$412'.
  Set init value: \lastacc = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$411'.
  Set init value: \rest = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:26$410'.
  Set init value: \acc = 33'000000000000000000000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:24$409'.
  Set init value: \pos = 5'00000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$408'.
  Set init value: \leadz = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$407'.
  Set init value: \updating = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$406'.
  Set init value: \lastupdate = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:20$405'.
  Set init value: \we = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:15$404'.
  Set init value: \dat = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:67$227'.
  Set init value: \dispdone = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:66$226'.
  Set init value: \disppos = 5'00000
Found init rule in `\UI.$proc$../UI/UI.v:65$225'.
  Set init value: \repaintS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:65$224'.
  Set init value: \weS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:64$223'.
  Set init value: \datS = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:63$222'.
  Set init value: \ismagphase = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:51$221'.
  Set init value: \state = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:48$220'.
  Set init value: \btnt3 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:48$219'.
  Set init value: \btnt2 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:48$218'.
  Set init value: \btnt1 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:48$217'.
  Set init value: \btnt0 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:47$216'.
  Set init value: \cnt3 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:47$215'.
  Set init value: \cnt2 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:47$214'.
  Set init value: \cnt1 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:47$213'.
  Set init value: \cnt0 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:46$212'.
  Set init value: \BP = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:41$211'.
  Set init value: \update = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:39$210'.
  Set init value: \count = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:27$209'.
  Set init value: \refIO = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:24$208'.
  Set init value: \refampl = 2'00
Found init rule in `\UI.$proc$../UI/UI.v:23$207'.
  Set init value: \reffreq = 3'000
Found init rule in `\UI.$proc$../UI/UI.v:22$206'.
  Set init value: \TC = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:21$205'.
  Set init value: \gain = 2'00
Found init rule in `\adc_host.$proc$../adc_host.v:23$33'.
  Set init value: \shiftdata = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:22$32'.
  Set init value: \count = 8'00000000
Found init rule in `\adc_host.$proc$../adc_host.v:21$31'.
  Set init value: \acq = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:19$30'.
  Set init value: \newdata = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:17$29'.
  Set init value: \data = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:14$28'.
  Set init value: \CONVST = 1'0
Found init rule in `\top.$proc$TOP_V1.v:91$17'.
  Set init value: \cinit = 1'0
Found init rule in `\top.$proc$TOP_V1.v:91$16'.
  Set init value: \loadlookup = 1'0
Found init rule in `\top.$proc$TOP_V1.v:70$15'.
  Set init value: \cnt = 0
Found init rule in `\top.$proc$TOP_V1.v:69$14'.
  Set init value: \rst = 1'1
Found init rule in `\top.$proc$TOP_V1.v:64$13'.
  Set init value: \outstuff = 16'0000000000000000

18.3.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:435$449'.
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:219$441'.

18.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$597'.
     1/1: $0\counter[19:0]
Creating decoders for process `\dds.$proc$../dds.v:21$557'.
     1/1: $1\islast[0:0]
Creating decoders for process `\dds.$proc$../dds.v:21$556'.
     1/1: $1\lastgo[0:0]
Creating decoders for process `\dds.$proc$../dds.v:21$555'.
     1/1: $1\iscos[0:0]
Creating decoders for process `\dds.$proc$../dds.v:17$554'.
     1/1: $1\addr[15:0]
Creating decoders for process `\dds.$proc$../dds.v:14$553'.
     1/1: $1\cos[15:0]
Creating decoders for process `\dds.$proc$../dds.v:13$552'.
     1/1: $1\sin[15:0]
Creating decoders for process `\dds.$proc$../dds.v:23$544'.
     1/6: $0\lastgo[0:0]
     2/6: $0\islast[0:0]
     3/6: $0\iscos[0:0]
     4/6: $0\addr[15:0]
     5/6: $0\cos[15:0]
     6/6: $0\sin[15:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:16$543'.
     1/1: $1\acc[16:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:20$541'.
     1/1: $0\acc[16:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$530'.
     1/1: $0\valid_i[0:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$524'.
     1/1: $0\rdy_i[0:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$520'.
     1/1: $0\cnt_len[17:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$516'.
     1/1: $0\cnt_cmd[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$511'.
     1/2: $0\cnt_bit_last[0:0]
     2/2: $0\cnt_bit[2:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$509'.
     1/1: $0\shift_reg[31:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$506'.
     1/6: $5\fsm_state_next[1:0]
     2/6: $4\fsm_state_next[1:0]
     3/6: $3\fsm_state_next[1:0]
     4/6: $2\fsm_state_next[1:0]
     5/6: $1\fsm_state_next[1:0]
     6/6: $0\fsm_state_next[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$504'.
     1/1: $0\fsm_state[1:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$503'.
     1/1: $1\busystop[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$502'.
     1/1: $1\spi_go[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$501'.
     1/1: $0\spi_len[16:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$500'.
     1/1: $1\spi_addr[23:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$499'.
     1/1: $1\second[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$498'.
     1/1: $1\laststart[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$497'.
     1/1: $1\poscount[16:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$496'.
     1/1: $1\wdata[15:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$495'.
     1/1: $1\addr[15:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$494'.
     1/1: $1\wen[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$493'.
     1/1: $1\busy[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
     1/11: $0\wen[0:0]
     2/11: $0\spi_go[0:0]
     3/11: $0\laststart[0:0]
     4/11: $0\busystop[0:0]
     5/11: $0\spi_addr[23:0]
     6/11: $0\f_byte[7:0]
     7/11: $0\second[0:0]
     8/11: $0\poscount[16:0]
     9/11: $0\wdata[15:0]
    10/11: $0\addr[15:0]
    11/11: $0\busy[0:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:26$596'.
     1/1: $1\we[0:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:25$595'.
     1/1: $1\inaddr[7:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:23$594'.
     1/1: $1\OUTpipe[48:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:23$593'.
     1/1: $1\I0[48:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:21$592'.
     1/1: $1\tickcount[10:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:20$591'.
     1/1: $1\lasttick[0:0]
Creating decoders for process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
     1/8: $0\OUTpipe[48:0]
     2/8: $0\outaddr[7:0]
     3/8: $0\lasttick[0:0]
     4/8: $0\we[0:0]
     5/8: $0\inaddr[7:0]
     6/8: $0\I0[48:0]
     7/8: $0\tickcount[10:0]
     8/8: $0\OUT[31:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:201$463'.
     1/1: $1\tx_delay_load[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:200$462'.
     1/1: $1\main_delay_load[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:196$461'.
     1/1: $1\tx_delay_value[19:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:195$460'.
     1/1: $1\main_delay_value[19:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:170$459'.
     1/1: $1\LCD_E1[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:169$458'.
     1/1: $1\LCD_E0[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:168$457'.
     1/1: $1\SF_D1[3:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:167$456'.
     1/1: $1\SF_D0[3:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:106$455'.
     1/1: $1\pos[31:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:105$454'.
     1/1: $1\display_state[4:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:77$453'.
     1/1: $1\tx_done[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:74$452'.
     1/1: $1\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:435$449'.
     1/6: $0\tx_delay_load[0:0]
     2/6: $0\tx_delay_value[19:0]
     3/6: $0\LCD_E0[0:0]
     4/6: $0\SF_D0[3:0]
     5/6: $0\tx_done[0:0]
     6/6: $0\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:219$441'.
     1/7: $0\main_delay_load[0:0]
     2/7: $0\main_delay_value[19:0]
     3/7: $0\LCD_E1[0:0]
     4/7: $0\SF_D1[3:0]
     5/7: $0\display_state[4:0]
     6/7: $0\tx_byte[7:0]
     7/7: $0\pos[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:32$417'.
     1/1: $1\holdoff[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:31$416'.
     1/1: $1\difference[32:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:28$415'.
     1/1: $1\dec[3:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$414'.
     1/1: $1\summand[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$413'.
     1/1: $1\secondlastacc[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$412'.
     1/1: $1\lastacc[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$411'.
     1/1: $21\rest[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:26$410'.
     1/1: $1\acc[32:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:24$409'.
     1/1: $1\pos[4:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$408'.
     1/1: $1\leadz[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$407'.
     1/1: $1\updating[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$406'.
     1/1: $1\lastupdate[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:20$405'.
     1/1: $1\we[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:15$404'.
     1/1: $1\dat[7:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
     1/34: $20\rest[31:0]
     2/34: $19\rest[31:0]
     3/34: $18\rest[31:0]
     4/34: $17\rest[31:0]
     5/34: $16\rest[31:0]
     6/34: $15\rest[31:0]
     7/34: $14\rest[31:0]
     8/34: $13\rest[31:0]
     9/34: $12\rest[31:0]
    10/34: $11\rest[31:0]
    11/34: $10\rest[31:0]
    12/34: $9\rest[31:0]
    13/34: $8\rest[31:0]
    14/34: $7\rest[31:0]
    15/34: $6\rest[31:0]
    16/34: $5\rest[31:0]
    17/34: $4\rest[31:0]
    18/34: $3\rest[31:0]
    19/34: $2\rest[31:0]
    20/34: $1\rest[31:0]
    21/34: $0\rest[31:0]
    22/34: $0\lastupdate[0:0]
    23/34: $0\holdoff[0:0]
    24/34: $0\difference[32:0]
    25/34: $0\dec[3:0]
    26/34: $0\pos[4:0]
    27/34: $0\leadz[0:0]
    28/34: $0\updating[0:0]
    29/34: $0\summand[31:0]
    30/34: $0\secondlastacc[31:0]
    31/34: $0\lastacc[31:0]
    32/34: $0\acc[32:0]
    33/34: $0\dat[7:0]
    34/34: $0\we[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:67$227'.
     1/1: $1\dispdone[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:66$226'.
     1/1: $1\disppos[4:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:65$225'.
     1/1: $1\repaintS[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:65$224'.
     1/1: $1\weS[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:64$223'.
     1/1: $1\datS[7:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:63$222'.
     1/1: $1\ismagphase[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:51$221'.
     1/1: $1\state[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$220'.
     1/1: $1\btnt3[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$219'.
     1/1: $1\btnt2[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$218'.
     1/1: $1\btnt1[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$217'.
     1/1: $1\btnt0[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$216'.
     1/1: $1\cnt3[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$215'.
     1/1: $1\cnt2[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$214'.
     1/1: $1\cnt1[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$213'.
     1/1: $1\cnt0[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:46$212'.
     1/1: $1\BP[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:41$211'.
     1/1: $1\update[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:39$210'.
     1/1: $1\count[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:27$209'.
     1/1: $1\refIO[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:24$208'.
     1/1: $1\refampl[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:23$207'.
     1/1: $1\reffreq[2:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:22$206'.
     1/1: $1\TC[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:21$205'.
     1/1: $1\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:125$163'.
     1/14: $0\state[3:0]
     2/14: $0\update[0:0]
     3/14: $0\weS[0:0]
     4/14: $0\repaintS[0:0]
     5/14: $0\count[23:0]
     6/14: $0\dispdone[0:0]
     7/14: $0\disppos[4:0]
     8/14: $0\datS[7:0]
     9/14: $0\ismagphase[0:0]
    10/14: $0\refIO[0:0]
    11/14: $0\refampl[1:0]
    12/14: $0\reffreq[2:0]
    13/14: $0\TC[3:0]
    14/14: $0\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:72$143'.
     1/12: $0\BP[3:0] [3]
     2/12: $0\BP[3:0] [2]
     3/12: $0\BP[3:0] [1]
     4/12: $0\BP[3:0] [0]
     5/12: $0\btnt3[0:0]
     6/12: $0\btnt2[0:0]
     7/12: $0\btnt1[0:0]
     8/12: $0\btnt0[0:0]
     9/12: $0\cnt3[23:0]
    10/12: $0\cnt2[23:0]
    11/12: $0\cnt1[23:0]
    12/12: $0\cnt0[23:0]
Creating decoders for process `\cordic.$proc$../cordic/cordic.v:296$138'.
     1/4: $1$func$\tanangle$../cordic/cordic.v:467$132$\tanangle[16:0]$142
     2/4: $0$func$\tanangle$../cordic/cordic.v:467$131$\tanangle[16:0]$141
     3/4: $0$func$\tanangle$../cordic/cordic.v:467$132$\tanangle[16:0]$139
     4/4: $0$func$\tanangle$../cordic/cordic.v:467$132$\i[3:0]$140
Creating decoders for process `\cordic.$proc$../cordic/cordic.v:461$136'.
     1/1: $0\iteration[4:0]
Creating decoders for process `\rotator.$proc$../cordic/cordic.v:232$123'.
     1/5: $0\y_1[16:0]
     2/5: $0\x_i_s_pipe[16:0]
     3/5: $0\x_1[16:0]
     4/5: $0\z_1[16:0]
     5/5: $0\y_i_s_pipe[16:0]
Creating decoders for process `\signed_shifter.$proc$../cordic/cordic.v:175$120'.
     1/2: $1$mem2reg_rd$\Q$../cordic/cordic.v:182$70_DATA[16:0]$122
     2/2: $0$mem2reg_rd$\Q$../cordic/cordic.v:182$70_DATA[16:0]$121
Creating decoders for process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
     1/18: $0\j[31:0]
     2/18: $0\Q[16][16:0]
     3/18: $0\Q[15][16:0]
     4/18: $0\Q[14][16:0]
     5/18: $0\Q[13][16:0]
     6/18: $0\Q[12][16:0]
     7/18: $0\Q[11][16:0]
     8/18: $0\Q[10][16:0]
     9/18: $0\Q[9][16:0]
    10/18: $0\Q[8][16:0]
    11/18: $0\Q[7][16:0]
    12/18: $0\Q[6][16:0]
    13/18: $0\Q[5][16:0]
    14/18: $0\Q[4][16:0]
    15/18: $0\Q[3][16:0]
    16/18: $0\Q[2][16:0]
    17/18: $0\Q[1][16:0]
    18/18: $0\Q[0][16:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:23$33'.
     1/1: $1\shiftdata[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:22$32'.
     1/1: $1\count[7:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:21$31'.
     1/1: $1\acq[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:19$30'.
     1/1: $1\newdata[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:17$29'.
     1/1: $1\data[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:14$28'.
     1/1: $1\CONVST[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:46$27'.
     1/1: $0\shiftdata[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:29$21'.
     1/5: $0\newdata[0:0]
     2/5: $0\count[7:0]
     3/5: $0\acq[0:0]
     4/5: $0\data[15:0]
     5/5: $0\CONVST[0:0]
Creating decoders for process `\top.$proc$TOP_V1.v:91$17'.
     1/1: $1\cinit[0:0]
Creating decoders for process `\top.$proc$TOP_V1.v:91$16'.
     1/1: $1\loadlookup[0:0]
Creating decoders for process `\top.$proc$TOP_V1.v:70$15'.
     1/1: $1\cnt[31:0]
Creating decoders for process `\top.$proc$TOP_V1.v:69$14'.
     1/1: $1\rst[0:0]
Creating decoders for process `\top.$proc$TOP_V1.v:64$13'.
     1/1: $1\outstuff[15:0]
Creating decoders for process `\top.$proc$TOP_V1.v:113$4'.
     1/5: $0\cinit[0:0]
     2/5: $0\outstuff[15:0]
     3/5: $0\cnt[31:0]
     4/5: $0\loadlookup[0:0]
     5/5: $0\rst[0:0]

18.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\spi_flash_reader.\fsm_state_next' from process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$506'.
No latch inferred for signal `\Flash_to_SRAM.\spi_len' from process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$501'.
No latch inferred for signal `\cordic.$func$\tanangle$../cordic/cordic.v:467$132$\tanangle' from process `\cordic.$proc$../cordic/cordic.v:296$138'.
No latch inferred for signal `\cordic.$func$\tanangle$../cordic/cordic.v:467$132$\i' from process `\cordic.$proc$../cordic/cordic.v:296$138'.
No latch inferred for signal `\cordic.$func$\tanangle$../cordic/cordic.v:467$131$\tanangle' from process `\cordic.$proc$../cordic/cordic.v:296$138'.
No latch inferred for signal `\signed_shifter.$mem2reg_rd$\Q$../cordic/cordic.v:182$70_DATA' from process `\signed_shifter.$proc$../cordic/cordic.v:175$120'.
No latch inferred for signal `\signed_shifter.\Q[4]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[5]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[0]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[1]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[2]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[3]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\j' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[6]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[7]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[8]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[9]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[10]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[11]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[12]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[13]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[14]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[15]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.
No latch inferred for signal `\signed_shifter.\Q[16]' from process `\signed_shifter.$proc$../cordic/cordic.v:183$71'.

18.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\delay_counter\counter_width=20.\counter' using process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$597'.
  created $dff cell `$procdff$2833' with positive edge clock.
Creating register for signal `\dds.\sin' using process `\dds.$proc$../dds.v:23$544'.
  created $dff cell `$procdff$2834' with positive edge clock.
Creating register for signal `\dds.\cos' using process `\dds.$proc$../dds.v:23$544'.
  created $dff cell `$procdff$2835' with positive edge clock.
Creating register for signal `\dds.\addr' using process `\dds.$proc$../dds.v:23$544'.
  created $dff cell `$procdff$2836' with positive edge clock.
Creating register for signal `\dds.\iscos' using process `\dds.$proc$../dds.v:23$544'.
  created $dff cell `$procdff$2837' with positive edge clock.
Creating register for signal `\dds.\lastgo' using process `\dds.$proc$../dds.v:23$544'.
  created $dff cell `$procdff$2838' with positive edge clock.
Creating register for signal `\dds.\islast' using process `\dds.$proc$../dds.v:23$544'.
  created $dff cell `$procdff$2839' with positive edge clock.
Creating register for signal `\sigma_delta.\acc' using process `\sigma_delta.$proc$../sigma_delta.v:20$541'.
  created $dff cell `$procdff$2840' with positive edge clock.
Creating register for signal `\spi_flash_reader.\valid_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$530'.
  created $dff cell `$procdff$2841' with positive edge clock.
Creating register for signal `\spi_flash_reader.\rdy_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$524'.
  created $dff cell `$procdff$2842' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_len' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$520'.
  created $dff cell `$procdff$2843' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_cmd' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$516'.
  created $dff cell `$procdff$2844' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$511'.
  created $dff cell `$procdff$2845' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit_last' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$511'.
  created $dff cell `$procdff$2846' with positive edge clock.
Creating register for signal `\spi_flash_reader.\shift_reg' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$509'.
  created $dff cell `$procdff$2847' with positive edge clock.
Creating register for signal `\spi_flash_reader.\fsm_state' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$504'.
  created $dff cell `$procdff$2848' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wen' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2849' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busy' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2850' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2851' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wdata' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2852' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\poscount' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2853' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\laststart' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2854' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\second' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2855' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\f_byte' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2856' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2857' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_go' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2858' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busystop' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
  created $dff cell `$procdff$2859' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\OUT' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2860' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\lasttick' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2861' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\tickcount' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2862' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\I0' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2863' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\OUTpipe' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2864' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\inaddr' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2865' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\we' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2866' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=16\log2rate=4.\outaddr' using process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
  created $dff cell `$procdff$2867' with positive edge clock.
Creating register for signal `\lcd.\tx_state' using process `\lcd.$proc$../UI/lcd_display.v:435$449'.
  created $adff cell `$procdff$2868' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\tx_done' using process `\lcd.$proc$../UI/lcd_display.v:435$449'.
  created $dff cell `$procdff$2869' with positive edge clock.
Creating register for signal `\lcd.\SF_D0' using process `\lcd.$proc$../UI/lcd_display.v:435$449'.
  created $dff cell `$procdff$2870' with positive edge clock.
Creating register for signal `\lcd.\LCD_E0' using process `\lcd.$proc$../UI/lcd_display.v:435$449'.
  created $dff cell `$procdff$2871' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:435$449'.
  created $dff cell `$procdff$2872' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:435$449'.
  created $dff cell `$procdff$2873' with positive edge clock.
Creating register for signal `\lcd.\pos' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $dff cell `$procdff$2874' with positive edge clock.
Creating register for signal `\lcd.\tx_byte' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $dff cell `$procdff$2875' with positive edge clock.
Creating register for signal `\lcd.\display_state' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $adff cell `$procdff$2876' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\SF_D1' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $dff cell `$procdff$2877' with positive edge clock.
Creating register for signal `\lcd.\LCD_E1' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $dff cell `$procdff$2878' with positive edge clock.
Creating register for signal `\lcd.\main_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $adff cell `$procdff$2879' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\main_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:219$441'.
  created $adff cell `$procdff$2880' with positive edge clock and positive level reset.
Creating register for signal `\BinToLCD.\we' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2881' with positive edge clock.
Creating register for signal `\BinToLCD.\dat' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2882' with positive edge clock.
Creating register for signal `\BinToLCD.\acc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2883' with positive edge clock.
Creating register for signal `\BinToLCD.\rest' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2884' with positive edge clock.
Creating register for signal `\BinToLCD.\lastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2885' with positive edge clock.
Creating register for signal `\BinToLCD.\secondlastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2886' with positive edge clock.
Creating register for signal `\BinToLCD.\summand' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2887' with positive edge clock.
Creating register for signal `\BinToLCD.\lastupdate' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2888' with positive edge clock.
Creating register for signal `\BinToLCD.\updating' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2889' with positive edge clock.
Creating register for signal `\BinToLCD.\leadz' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2890' with positive edge clock.
Creating register for signal `\BinToLCD.\pos' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2891' with positive edge clock.
Creating register for signal `\BinToLCD.\dec' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2892' with positive edge clock.
Creating register for signal `\BinToLCD.\difference' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2893' with positive edge clock.
Creating register for signal `\BinToLCD.\holdoff' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
  created $dff cell `$procdff$2894' with positive edge clock.
Creating register for signal `\UI.\gain' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2895' with positive edge clock.
Creating register for signal `\UI.\TC' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2896' with positive edge clock.
Creating register for signal `\UI.\reffreq' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2897' with positive edge clock.
Creating register for signal `\UI.\refampl' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2898' with positive edge clock.
Creating register for signal `\UI.\refIO' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2899' with positive edge clock.
Creating register for signal `\UI.\count' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2900' with positive edge clock.
Creating register for signal `\UI.\update' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2901' with positive edge clock.
Creating register for signal `\UI.\state' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2902' with positive edge clock.
Creating register for signal `\UI.\ismagphase' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2903' with positive edge clock.
Creating register for signal `\UI.\datS' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2904' with positive edge clock.
Creating register for signal `\UI.\weS' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2905' with positive edge clock.
Creating register for signal `\UI.\repaintS' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2906' with positive edge clock.
Creating register for signal `\UI.\disppos' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2907' with positive edge clock.
Creating register for signal `\UI.\dispdone' using process `\UI.$proc$../UI/UI.v:125$163'.
  created $dff cell `$procdff$2908' with positive edge clock.
Creating register for signal `\UI.\BP' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2909' with positive edge clock.
Creating register for signal `\UI.\cnt0' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2910' with positive edge clock.
Creating register for signal `\UI.\cnt1' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2911' with positive edge clock.
Creating register for signal `\UI.\cnt2' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2912' with positive edge clock.
Creating register for signal `\UI.\cnt3' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2913' with positive edge clock.
Creating register for signal `\UI.\btnt0' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2914' with positive edge clock.
Creating register for signal `\UI.\btnt1' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2915' with positive edge clock.
Creating register for signal `\UI.\btnt2' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2916' with positive edge clock.
Creating register for signal `\UI.\btnt3' using process `\UI.$proc$../UI/UI.v:72$143'.
  created $dff cell `$procdff$2917' with positive edge clock.
Creating register for signal `\cordic.\iteration' using process `\cordic.$proc$../cordic/cordic.v:461$136'.
  created $dff cell `$procdff$2918' with positive edge clock.
Creating register for signal `\rotator.\y_i_s_pipe' using process `\rotator.$proc$../cordic/cordic.v:232$123'.
  created $dff cell `$procdff$2919' with positive edge clock.
Creating register for signal `\rotator.\z_1' using process `\rotator.$proc$../cordic/cordic.v:232$123'.
  created $dff cell `$procdff$2920' with positive edge clock.
Creating register for signal `\rotator.\x_1' using process `\rotator.$proc$../cordic/cordic.v:232$123'.
  created $dff cell `$procdff$2921' with positive edge clock.
Creating register for signal `\rotator.\x_i_s_pipe' using process `\rotator.$proc$../cordic/cordic.v:232$123'.
  created $dff cell `$procdff$2922' with positive edge clock.
Creating register for signal `\rotator.\y_1' using process `\rotator.$proc$../cordic/cordic.v:232$123'.
  created $dff cell `$procdff$2923' with positive edge clock.
Creating register for signal `\adc_host.\shiftdata' using process `\adc_host.$proc$../adc_host.v:46$27'.
  created $dff cell `$procdff$2924' with negative edge clock.
Creating register for signal `\adc_host.\CONVST' using process `\adc_host.$proc$../adc_host.v:29$21'.
  created $dff cell `$procdff$2925' with positive edge clock.
Creating register for signal `\adc_host.\newdata' using process `\adc_host.$proc$../adc_host.v:29$21'.
  created $dff cell `$procdff$2926' with positive edge clock.
Creating register for signal `\adc_host.\data' using process `\adc_host.$proc$../adc_host.v:29$21'.
  created $dff cell `$procdff$2927' with positive edge clock.
Creating register for signal `\adc_host.\acq' using process `\adc_host.$proc$../adc_host.v:29$21'.
  created $dff cell `$procdff$2928' with positive edge clock.
Creating register for signal `\adc_host.\count' using process `\adc_host.$proc$../adc_host.v:29$21'.
  created $dff cell `$procdff$2929' with positive edge clock.
Creating register for signal `\top.\outstuff' using process `\top.$proc$TOP_V1.v:113$4'.
  created $dff cell `$procdff$2930' with positive edge clock.
Creating register for signal `\top.\rst' using process `\top.$proc$TOP_V1.v:113$4'.
  created $dff cell `$procdff$2931' with positive edge clock.
Creating register for signal `\top.\cnt' using process `\top.$proc$TOP_V1.v:113$4'.
  created $dff cell `$procdff$2932' with positive edge clock.
Creating register for signal `\top.\loadlookup' using process `\top.$proc$TOP_V1.v:113$4'.
  created $dff cell `$procdff$2933' with positive edge clock.
Creating register for signal `\top.\cinit' using process `\top.$proc$TOP_V1.v:113$4'.
  created $dff cell `$procdff$2934' with positive edge clock.

18.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$597'.
Removing empty process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$597'.
Removing empty process `dds.$proc$../dds.v:21$557'.
Removing empty process `dds.$proc$../dds.v:21$556'.
Removing empty process `dds.$proc$../dds.v:21$555'.
Removing empty process `dds.$proc$../dds.v:17$554'.
Removing empty process `dds.$proc$../dds.v:14$553'.
Removing empty process `dds.$proc$../dds.v:13$552'.
Found and cleaned up 7 empty switches in `\dds.$proc$../dds.v:23$544'.
Removing empty process `dds.$proc$../dds.v:23$544'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:16$543'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:20$541'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:201$530'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:187$524'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:187$524'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:174$520'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:174$520'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:166$516'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:166$516'.
Found and cleaned up 3 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:155$511'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:155$511'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:141$509'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:141$509'.
Found and cleaned up 5 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:112$506'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:112$506'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:104$504'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:104$504'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$503'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$502'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$501'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$500'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$499'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$498'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$497'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$496'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$495'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$494'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$493'.
Found and cleaned up 5 empty switches in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$485'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:26$596'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:25$595'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:23$594'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:23$593'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:21$592'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:20$591'.
Found and cleaned up 3 empty switches in `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
Removing empty process `$paramod\CIC\rate=16\log2rate=4.$proc$../filter/CIC.v:33$577'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:201$463'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:200$462'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:196$461'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:195$460'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:170$459'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:169$458'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:168$457'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:167$456'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:106$455'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:105$454'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:77$453'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:74$452'.
Found and cleaned up 8 empty switches in `\lcd.$proc$../UI/lcd_display.v:435$449'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:435$449'.
Found and cleaned up 22 empty switches in `\lcd.$proc$../UI/lcd_display.v:219$441'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:219$441'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:32$417'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:31$416'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:28$415'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$414'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$413'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$412'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$411'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:26$410'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:24$409'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$408'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$407'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$406'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:20$405'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:15$404'.
Found and cleaned up 83 empty switches in `\BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:36$229'.
Removing empty process `UI.$proc$../UI/UI.v:67$227'.
Removing empty process `UI.$proc$../UI/UI.v:66$226'.
Removing empty process `UI.$proc$../UI/UI.v:65$225'.
Removing empty process `UI.$proc$../UI/UI.v:65$224'.
Removing empty process `UI.$proc$../UI/UI.v:64$223'.
Removing empty process `UI.$proc$../UI/UI.v:63$222'.
Removing empty process `UI.$proc$../UI/UI.v:51$221'.
Removing empty process `UI.$proc$../UI/UI.v:48$220'.
Removing empty process `UI.$proc$../UI/UI.v:48$219'.
Removing empty process `UI.$proc$../UI/UI.v:48$218'.
Removing empty process `UI.$proc$../UI/UI.v:48$217'.
Removing empty process `UI.$proc$../UI/UI.v:47$216'.
Removing empty process `UI.$proc$../UI/UI.v:47$215'.
Removing empty process `UI.$proc$../UI/UI.v:47$214'.
Removing empty process `UI.$proc$../UI/UI.v:47$213'.
Removing empty process `UI.$proc$../UI/UI.v:46$212'.
Removing empty process `UI.$proc$../UI/UI.v:41$211'.
Removing empty process `UI.$proc$../UI/UI.v:39$210'.
Removing empty process `UI.$proc$../UI/UI.v:27$209'.
Removing empty process `UI.$proc$../UI/UI.v:24$208'.
Removing empty process `UI.$proc$../UI/UI.v:23$207'.
Removing empty process `UI.$proc$../UI/UI.v:22$206'.
Removing empty process `UI.$proc$../UI/UI.v:21$205'.
Found and cleaned up 39 empty switches in `\UI.$proc$../UI/UI.v:125$163'.
Removing empty process `UI.$proc$../UI/UI.v:125$163'.
Found and cleaned up 12 empty switches in `\UI.$proc$../UI/UI.v:72$143'.
Removing empty process `UI.$proc$../UI/UI.v:72$143'.
Found and cleaned up 1 empty switch in `\cordic.$proc$../cordic/cordic.v:296$138'.
Removing empty process `cordic.$proc$../cordic/cordic.v:296$138'.
Found and cleaned up 1 empty switch in `\cordic.$proc$../cordic/cordic.v:461$136'.
Removing empty process `cordic.$proc$../cordic/cordic.v:461$136'.
Found and cleaned up 3 empty switches in `\rotator.$proc$../cordic/cordic.v:232$123'.
Removing empty process `rotator.$proc$../cordic/cordic.v:232$123'.
Found and cleaned up 1 empty switch in `\signed_shifter.$proc$../cordic/cordic.v:175$120'.
Removing empty process `signed_shifter.$proc$../cordic/cordic.v:175$120'.
Removing empty process `signed_shifter.$proc$../cordic/cordic.v:183$71'.
Removing empty process `adc_host.$proc$../adc_host.v:23$33'.
Removing empty process `adc_host.$proc$../adc_host.v:22$32'.
Removing empty process `adc_host.$proc$../adc_host.v:21$31'.
Removing empty process `adc_host.$proc$../adc_host.v:19$30'.
Removing empty process `adc_host.$proc$../adc_host.v:17$29'.
Removing empty process `adc_host.$proc$../adc_host.v:14$28'.
Removing empty process `adc_host.$proc$../adc_host.v:46$27'.
Found and cleaned up 5 empty switches in `\adc_host.$proc$../adc_host.v:29$21'.
Removing empty process `adc_host.$proc$../adc_host.v:29$21'.
Removing empty process `top.$proc$TOP_V1.v:91$17'.
Removing empty process `top.$proc$TOP_V1.v:91$16'.
Removing empty process `top.$proc$TOP_V1.v:70$15'.
Removing empty process `top.$proc$TOP_V1.v:69$14'.
Removing empty process `top.$proc$TOP_V1.v:64$13'.
Found and cleaned up 2 empty switches in `\top.$proc$TOP_V1.v:113$4'.
Removing empty process `top.$proc$TOP_V1.v:113$4'.
Cleaned up 209 empty switches.

18.4. Executing FLATTEN pass (flatten design).
Using template adc_host for cells of type adc_host.
Using template Flash_to_SRAM for cells of type Flash_to_SRAM.
Using template sram16x16 for cells of type sram16x16.
Using template dds for cells of type dds.
Using template mult16x16 for cells of type mult16x16.
Using template $paramod\CIC\rate=16\log2rate=4 for cells of type $paramod\CIC\rate=16\log2rate=4.
Using template cordic for cells of type cordic.
Using template UI for cells of type UI.
Using template sigma_delta for cells of type sigma_delta.
Using template spi_flash_reader for cells of type spi_flash_reader.
Using template dpram_64x8 for cells of type dpram_64x8.
Using template rotator for cells of type rotator.
Using template lcd for cells of type lcd.
Using template BinToLCD for cells of type BinToLCD.
Using template signed_shifter for cells of type signed_shifter.
Using template $paramod\delay_counter\counter_width=20 for cells of type $paramod\delay_counter\counter_width=20.
<suppressed ~19 debug messages>
No more expansions possible.
Deleting now unused module $paramod\delay_counter\counter_width=20.
Deleting now unused module mult16x16.
Deleting now unused module dds.
Deleting now unused module sigma_delta.
Deleting now unused module spi_flash_reader.
Deleting now unused module Flash_to_SRAM.
Deleting now unused module sram16x16.
Deleting now unused module $paramod\CIC\rate=16\log2rate=4.
Deleting now unused module lcd.
Deleting now unused module BinToLCD.
Deleting now unused module UI.
Deleting now unused module cordic.
Deleting now unused module rotator.
Deleting now unused module signed_shifter.
Deleting now unused module dpram_64x8.
Deleting now unused module adc_host.

18.5. Executing TRIBUF pass.

18.6. Executing DEMINOUT pass (demote inout ports to input or output).

18.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~135 debug messages>

18.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 22 unused cells and 915 unused wires.
<suppressed ~32 debug messages>

18.9. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.\REFOUT is used but has no driver.
Warning: Wire top.\IO [8] is used but has no driver.
Warning: Wire top.\IO [7] is used but has no driver.
Warning: Wire top.\IO [6] is used but has no driver.
Warning: Wire top.\IO [5] is used but has no driver.
Warning: Wire top.\IO [4] is used but has no driver.
Warning: Wire top.\IO [3] is used but has no driver.
Warning: Wire top.\IO [2] is used but has no driver.
Warning: Wire top.\IO [1] is used but has no driver.
Warning: Wire top.\IO [0] is used but has no driver.
Warning: Wire top.\A1 is used but has no driver.
Warning: Wire top.\A0 is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [31] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [30] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [29] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [28] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [27] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [26] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [25] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [24] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [23] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [22] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [21] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [20] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [19] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [18] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [17] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [16] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [15] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [14] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [13] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [12] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [11] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [10] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [9] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [8] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [7] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [6] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [5] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [4] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [3] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [2] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [1] is used but has no driver.
Warning: Wire top.\UI_inst.diplay_number.Y [0] is used but has no driver.
found and reported 44 problems.

18.10. Executing OPT pass (performing simple optimizations).

18.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

18.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1926 debug messages>
Removed a total of 642 cells.

18.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2688: \UI_inst.btnt3 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2686: \UI_inst.btnt3 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2694: \UI_inst.btnt2 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2692: \UI_inst.btnt2 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2700: \UI_inst.btnt1 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2698: \UI_inst.btnt1 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2706: \UI_inst.btnt0 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2704: \UI_inst.btnt0 -> 1'1
      Replacing known input bits on port A of cell $techmap\dds_core.$procmux$609: \dds_core.iscos -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1073.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1075.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1086.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1088.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1100.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1102.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1115.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1117.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1131.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1133.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1148.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1150.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1166.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1168.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1185.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1187.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1205.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1207.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1233.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1235.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1262.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1264.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1292.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1294.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1323.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1325.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1355.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1357.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1388.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1390.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1422.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1424.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1457.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1459.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1493.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1495.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1535.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$673.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$679.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$686.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$694.
    dead port 1/18 on $pmux $techmap\cordicCORE.U.x_shifter.$procmux$2792.
    dead port 1/18 on $pmux $techmap\cordicCORE.U.y_shifter.$procmux$2792.
Removed 43 multiplexer ports.
<suppressed ~109 debug messages>

18.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $reduce_or$TOP_V1.v:104$2: { \adc_host_hi.data [0] \adc_host_hi.data [1] \adc_host_hi.data [2] \adc_host_hi.data [3] \adc_host_hi.data [4] \adc_host_hi.data [5] \adc_host_hi.data [6] \adc_host_hi.data [7] \adc_host_hi.data [8] \adc_host_hi.data [9] \adc_host_hi.data [10] \adc_host_hi.data [11] \adc_host_hi.data [12] \adc_host_hi.data [13] \adc_host_hi.data [14] \adc_host_hi.data [15] }
    New input vector for $reduce_or cell $techmap\Filter1.$reduce_or$../filter/CIC.v:47$586: { \Filter1.tickcount [0] \Filter1.tickcount [1] \Filter1.tickcount [2] \Filter1.tickcount [3] \Filter1.tickcount [4] \Filter1.tickcount [5] \Filter1.tickcount [6] \Filter1.tickcount [7] \Filter1.tickcount [8] \Filter1.tickcount [9] \Filter1.tickcount [10] }
    New input vector for $reduce_or cell $techmap\UI_inst.$reduce_or$../UI/UI.v:205$174: { \UI_inst.BP [0] \UI_inst.BP [1] \UI_inst.BP [2] \UI_inst.BP [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:118$9: { \cnt [0] \cnt [1] \cnt [2] \cnt [3] \cnt [4] \cnt [5] \cnt [6] \cnt [7] \cnt [8] \cnt [9] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:115$6: { \cnt [0] \cnt [1] \cnt [2] \cnt [3] \cnt [4] \cnt [5] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:99$153: { \UI_inst.cnt2 [0] \UI_inst.cnt2 [1] \UI_inst.cnt2 [2] \UI_inst.cnt2 [3] \UI_inst.cnt2 [4] \UI_inst.cnt2 [5] \UI_inst.cnt2 [6] \UI_inst.cnt2 [7] \UI_inst.cnt2 [8] \UI_inst.cnt2 [9] \UI_inst.cnt2 [10] \UI_inst.cnt2 [11] \UI_inst.cnt2 [12] \UI_inst.cnt2 [13] \UI_inst.cnt2 [14] \UI_inst.cnt2 [15] \UI_inst.cnt2 [16] \UI_inst.cnt2 [17] \UI_inst.cnt2 [18] \UI_inst.cnt2 [19] \UI_inst.cnt2 [20] \UI_inst.cnt2 [21] \UI_inst.cnt2 [22] \UI_inst.cnt2 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:89$149: { \UI_inst.cnt1 [0] \UI_inst.cnt1 [1] \UI_inst.cnt1 [2] \UI_inst.cnt1 [3] \UI_inst.cnt1 [4] \UI_inst.cnt1 [5] \UI_inst.cnt1 [6] \UI_inst.cnt1 [7] \UI_inst.cnt1 [8] \UI_inst.cnt1 [9] \UI_inst.cnt1 [10] \UI_inst.cnt1 [11] \UI_inst.cnt1 [12] \UI_inst.cnt1 [13] \UI_inst.cnt1 [14] \UI_inst.cnt1 [15] \UI_inst.cnt1 [16] \UI_inst.cnt1 [17] \UI_inst.cnt1 [18] \UI_inst.cnt1 [19] \UI_inst.cnt1 [20] \UI_inst.cnt1 [21] \UI_inst.cnt1 [22] \UI_inst.cnt1 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:79$145: { \UI_inst.cnt0 [0] \UI_inst.cnt0 [1] \UI_inst.cnt0 [2] \UI_inst.cnt0 [3] \UI_inst.cnt0 [4] \UI_inst.cnt0 [5] \UI_inst.cnt0 [6] \UI_inst.cnt0 [7] \UI_inst.cnt0 [8] \UI_inst.cnt0 [9] \UI_inst.cnt0 [10] \UI_inst.cnt0 [11] \UI_inst.cnt0 [12] \UI_inst.cnt0 [13] \UI_inst.cnt0 [14] \UI_inst.cnt0 [15] \UI_inst.cnt0 [16] \UI_inst.cnt0 [17] \UI_inst.cnt0 [18] \UI_inst.cnt0 [19] \UI_inst.cnt0 [20] \UI_inst.cnt0 [21] \UI_inst.cnt0 [22] \UI_inst.cnt0 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:132$166: { \UI_inst.disppos [0] \UI_inst.disppos [1] \UI_inst.disppos [2] \UI_inst.disppos [3] \UI_inst.disppos [4] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:130$165: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] \UI_inst.count [5] \UI_inst.count [6] \UI_inst.count [7] \UI_inst.count [8] \UI_inst.count [9] \UI_inst.count [10] \UI_inst.count [11] \UI_inst.count [12] \UI_inst.count [13] \UI_inst.count [14] \UI_inst.count [15] \UI_inst.count [16] \UI_inst.count [17] \UI_inst.count [18] \UI_inst.count [19] \UI_inst.count [20] \UI_inst.count [21] \UI_inst.count [22] \UI_inst.count [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:109$157: { \UI_inst.cnt3 [0] \UI_inst.cnt3 [1] \UI_inst.cnt3 [2] \UI_inst.cnt3 [3] \UI_inst.cnt3 [4] \UI_inst.cnt3 [5] \UI_inst.cnt3 [6] \UI_inst.cnt3 [7] \UI_inst.cnt3 [8] \UI_inst.cnt3 [9] \UI_inst.cnt3 [10] \UI_inst.cnt3 [11] \UI_inst.cnt3 [12] \UI_inst.cnt3 [13] \UI_inst.cnt3 [14] \UI_inst.cnt3 [15] \UI_inst.cnt3 [16] \UI_inst.cnt3 [17] \UI_inst.cnt3 [18] \UI_inst.cnt3 [19] \UI_inst.cnt3 [20] \UI_inst.cnt3 [21] \UI_inst.cnt3 [22] \UI_inst.cnt3 [23] }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2498: { $techmap\UI_inst.$procmux$2523_CMP $techmap\UI_inst.$procmux$2522_CMP $techmap\UI_inst.$procmux$2521_CMP $techmap\UI_inst.$procmux$2519_CMP $techmap\UI_inst.$procmux$2518_CMP $techmap\UI_inst.$procmux$2517_CMP $auto$opt_reduce.cc:132:opt_mux$2936 $techmap\UI_inst.$procmux$2515_CMP $techmap\UI_inst.$procmux$2514_CMP $techmap\UI_inst.$procmux$2513_CMP $techmap\UI_inst.$procmux$2512_CMP $techmap\UI_inst.$procmux$2511_CMP $techmap\UI_inst.$procmux$2510_CMP $techmap\UI_inst.$procmux$2507_CMP $techmap\UI_inst.$procmux$2504_CMP $techmap\UI_inst.$procmux$2499_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$940: { $auto$opt_reduce.cc:132:opt_mux$2940 $auto$opt_reduce.cc:132:opt_mux$2938 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$961: { $auto$opt_reduce.cc:132:opt_mux$2942 $techmap\UI_inst.LCD.$procmux$1010_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1498: { $techmap\UI_inst.diplay_number.$procmux$1532_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1514_CMP $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP $auto$opt_reduce.cc:132:opt_mux$2944 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2527: { $techmap\UI_inst.$procmux$2523_CMP $techmap\UI_inst.$procmux$2522_CMP $techmap\UI_inst.$procmux$2521_CMP $techmap\UI_inst.$procmux$2519_CMP $techmap\UI_inst.$procmux$2517_CMP $auto$opt_reduce.cc:132:opt_mux$2950 $techmap\UI_inst.$procmux$2515_CMP $techmap\UI_inst.$procmux$2514_CMP $auto$opt_reduce.cc:132:opt_mux$2948 $techmap\UI_inst.$procmux$2512_CMP $techmap\UI_inst.$procmux$2511_CMP $techmap\UI_inst.$procmux$2555_CMP $techmap\UI_inst.$procmux$2552_CMP $techmap\UI_inst.$procmux$2543_CMP $techmap\UI_inst.$procmux$2510_CMP $auto$opt_reduce.cc:132:opt_mux$2946 $techmap\UI_inst.$procmux$2499_CMP $techmap\UI_inst.$procmux$2528_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1544: { $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $auto$opt_reduce.cc:132:opt_mux$2954 $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP $auto$opt_reduce.cc:132:opt_mux$2952 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1632: { $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1520_CMP $auto$opt_reduce.cc:132:opt_mux$2956 $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP $techmap\UI_inst.diplay_number.$procmux$1502_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2571: { $techmap\UI_inst.$procmux$2523_CMP $techmap\UI_inst.$procmux$2521_CMP $techmap\UI_inst.$procmux$2517_CMP $techmap\UI_inst.$procmux$2584_CMP $techmap\UI_inst.$procmux$2583_CMP $techmap\UI_inst.$procmux$2580_CMP $techmap\UI_inst.$procmux$2577_CMP $auto$opt_reduce.cc:132:opt_mux$2962 $auto$opt_reduce.cc:132:opt_mux$2960 $auto$opt_reduce.cc:132:opt_mux$2958 $techmap\UI_inst.$procmux$2552_CMP $techmap\UI_inst.$procmux$2543_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2616: { $techmap\UI_inst.$procmux$2523_CMP $techmap\UI_inst.$procmux$2522_CMP $techmap\UI_inst.$procmux$2520_CMP $techmap\UI_inst.$procmux$2519_CMP $techmap\UI_inst.$procmux$2518_CMP $techmap\UI_inst.$procmux$2515_CMP $auto$opt_reduce.cc:132:opt_mux$2970 $auto$opt_reduce.cc:132:opt_mux$2968 $techmap\UI_inst.$procmux$2512_CMP $techmap\UI_inst.$procmux$2577_CMP $auto$opt_reduce.cc:132:opt_mux$2966 $auto$opt_reduce.cc:132:opt_mux$2964 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1818: { $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $auto$opt_reduce.cc:132:opt_mux$2972 $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2645: $auto$opt_reduce.cc:132:opt_mux$2974
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1941: { $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $auto$opt_reduce.cc:132:opt_mux$2976 $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2093: { $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $auto$opt_reduce.cc:132:opt_mux$2978 $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2168: { $techmap\UI_inst.diplay_number.$procmux$1534_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1520_CMP $techmap\UI_inst.diplay_number.$procmux$1516_CMP $auto$opt_reduce.cc:132:opt_mux$2982 $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP $techmap\UI_inst.diplay_number.$procmux$1502_CMP $auto$opt_reduce.cc:132:opt_mux$2980 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2302: { $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1520_CMP $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP $techmap\UI_inst.diplay_number.$procmux$1502_CMP $auto$opt_reduce.cc:132:opt_mux$2984 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1033: { $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:186$427_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:187$428_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:188$429_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$430_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:190$431_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:191$432_Y $auto$opt_reduce.cc:132:opt_mux$2988 $auto$opt_reduce.cc:132:opt_mux$2986 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$815: { $auto$opt_reduce.cc:132:opt_mux$2992 $auto$opt_reduce.cc:132:opt_mux$2990 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$825: { $auto$opt_reduce.cc:132:opt_mux$2996 $auto$opt_reduce.cc:132:opt_mux$2994 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2957: { $techmap\UI_inst.$procmux$2555_CMP $techmap\UI_inst.$procmux$2518_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2961: { $techmap\UI_inst.$procmux$2576_CMP $techmap\UI_inst.$procmux$2522_CMP $techmap\UI_inst.$procmux$2520_CMP $techmap\UI_inst.$procmux$2519_CMP $techmap\UI_inst.$procmux$2516_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2963: { $techmap\UI_inst.$procmux$2528_CMP $techmap\UI_inst.$procmux$2516_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2985: { $techmap\UI_inst.LCD.$procmux$1039_CMP $techmap\UI_inst.LCD.$procmux$1034_CMP $techmap\UI_inst.LCD.$procmux$1032_CMP }
  Optimizing cells in module \top.
Performed a total of 33 changes.

18.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~636 debug messages>
Removed a total of 212 cells.

18.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \dds_core.cos = 16'0000000000000000 to constant driver in module top.
Promoting init spec \dds_core.islast = 1'0 to constant driver in module top.
Promoted 2 init specs to constant drivers.

18.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 901 unused wires.
<suppressed ~7 debug messages>

18.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.10.9. Rerunning OPT passes. (Maybe there is more to do..)

18.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

18.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2439: { $techmap\UI_inst.$eq$../UI/UI.v:120$161_Y $auto$opt_reduce.cc:132:opt_mux$2998 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2461: { $techmap\UI_inst.$eq$../UI/UI.v:120$161_Y $auto$opt_reduce.cc:132:opt_mux$3000 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2483: $auto$opt_reduce.cc:132:opt_mux$3002
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$778: { $auto$opt_reduce.cc:132:opt_mux$3004 $techmap\UI_inst.LCD.$procmux$780_CMP $techmap\UI_inst.LCD.$procmux$779_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$798: { $techmap\UI_inst.LCD.$procmux$792_CMP $techmap\UI_inst.LCD.$procmux$789_CMP $auto$opt_reduce.cc:132:opt_mux$3006 $techmap\UI_inst.LCD.$procmux$783_CMP $techmap\UI_inst.LCD.$procmux$779_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$866: { $techmap\UI_inst.LCD.$procmux$1032_CMP $auto$opt_reduce.cc:132:opt_mux$3008 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$430_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$902: { $techmap\UI_inst.LCD.$procmux$1032_CMP $techmap\UI_inst.LCD.$procmux$1028_CMP $techmap\UI_inst.LCD.$procmux$1022_CMP $auto$opt_reduce.cc:132:opt_mux$3012 $auto$opt_reduce.cc:132:opt_mux$3010 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$430_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1498: { $techmap\UI_inst.diplay_number.$procmux$1532_CMP $techmap\UI_inst.diplay_number.$procmux$1514_CMP $auto$opt_reduce.cc:132:opt_mux$3014 $auto$opt_reduce.cc:132:opt_mux$2944 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1544: { $auto$opt_reduce.cc:132:opt_mux$2954 $auto$opt_reduce.cc:132:opt_mux$3016 $auto$opt_reduce.cc:132:opt_mux$2952 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1632: { $auto$opt_reduce.cc:132:opt_mux$2956 $auto$opt_reduce.cc:132:opt_mux$3018 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1818: { $auto$opt_reduce.cc:132:opt_mux$2954 $auto$opt_reduce.cc:132:opt_mux$3020 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1941: { $auto$opt_reduce.cc:132:opt_mux$2954 $auto$opt_reduce.cc:132:opt_mux$3038 $auto$opt_reduce.cc:132:opt_mux$3036 $auto$opt_reduce.cc:132:opt_mux$3034 $auto$opt_reduce.cc:132:opt_mux$3032 $auto$opt_reduce.cc:132:opt_mux$3030 $auto$opt_reduce.cc:132:opt_mux$3028 $auto$opt_reduce.cc:132:opt_mux$3026 $auto$opt_reduce.cc:132:opt_mux$3024 $auto$opt_reduce.cc:132:opt_mux$3022 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2021: $auto$opt_reduce.cc:132:opt_mux$3040
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2093: { $auto$opt_reduce.cc:132:opt_mux$2954 $auto$opt_reduce.cc:132:opt_mux$3058 $auto$opt_reduce.cc:132:opt_mux$3056 $auto$opt_reduce.cc:132:opt_mux$3054 $auto$opt_reduce.cc:132:opt_mux$3052 $auto$opt_reduce.cc:132:opt_mux$3050 $auto$opt_reduce.cc:132:opt_mux$3048 $auto$opt_reduce.cc:132:opt_mux$3046 $auto$opt_reduce.cc:132:opt_mux$3044 $auto$opt_reduce.cc:132:opt_mux$3042 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2168: { $techmap\UI_inst.diplay_number.$procmux$1534_CMP $techmap\UI_inst.diplay_number.$procmux$1516_CMP $auto$opt_reduce.cc:132:opt_mux$2982 $auto$opt_reduce.cc:132:opt_mux$3062 $auto$opt_reduce.cc:132:opt_mux$3060 $auto$opt_reduce.cc:132:opt_mux$2980 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2302: { $auto$opt_reduce.cc:132:opt_mux$3064 $auto$opt_reduce.cc:132:opt_mux$2984 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3017: { $techmap\UI_inst.diplay_number.$procmux$1520_CMP $techmap\UI_inst.diplay_number.$procmux$1502_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3039: { $techmap\UI_inst.diplay_number.$procmux$1520_CMP $techmap\UI_inst.diplay_number.$procmux$1502_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3063: { $techmap\UI_inst.diplay_number.$procmux$1520_CMP $techmap\UI_inst.diplay_number.$procmux$1502_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1458_CMP $techmap\UI_inst.diplay_number.$procmux$1423_CMP $techmap\UI_inst.diplay_number.$procmux$1389_CMP $techmap\UI_inst.diplay_number.$procmux$1356_CMP $techmap\UI_inst.diplay_number.$procmux$1324_CMP $techmap\UI_inst.diplay_number.$procmux$1293_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $techmap\UI_inst.diplay_number.$procmux$1234_CMP $techmap\UI_inst.diplay_number.$procmux$1206_CMP $techmap\UI_inst.diplay_number.$procmux$1186_CMP $techmap\UI_inst.diplay_number.$procmux$1167_CMP $techmap\UI_inst.diplay_number.$procmux$1149_CMP $techmap\UI_inst.diplay_number.$procmux$1132_CMP $techmap\UI_inst.diplay_number.$procmux$1116_CMP $techmap\UI_inst.diplay_number.$procmux$1101_CMP $techmap\UI_inst.diplay_number.$procmux$1087_CMP $techmap\UI_inst.diplay_number.$procmux$1074_CMP }
  Optimizing cells in module \top.
Performed a total of 19 changes.

18.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

18.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

18.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

18.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.10.16. Rerunning OPT passes. (Maybe there is more to do..)

18.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

18.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

18.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

18.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

18.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

18.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.10.23. Rerunning OPT passes. (Maybe there is more to do..)

18.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

18.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

18.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

18.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.10.30. Finished OPT passes. (There is nothing left to do.)

18.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$TOP_V1.v:114$5 ($add).
Removed top 2 bits (of 8) from port B of cell top.$techmap\adc_host_hi.$eq$../adc_host.v:35$25 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\adc_host_hi.$eq$../adc_host.v:34$24 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\adc_host_hi.$eq$../adc_host.v:33$23 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\adc_host_hi.$add$../adc_host.v:31$22 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\adc_host_hi.$add$../adc_host.v:31$22 ($add).
Removed top 31 bits (of 32) from mux cell top.$techmap\adc_host_hi.$ternary$../adc_host.v:25$20 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$492 ($add).
Removed top 15 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$492 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$491 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$491 ($add).
Removed top 2 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2740_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$588 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$588 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:44$585 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:44$585 ($add).
Removed top 28 bits (of 32) from port B of cell top.$techmap\Filter1.$ge$../filter/CIC.v:42$584 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:41$583 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:41$583 ($add).
Removed top 7 bits (of 8) from port A of cell top.$techmap\Filter1.$shl$../filter/CIC.v:37$578 ($shl).
Removed top 3 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2741_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2739_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2738_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2737_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2736_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\cordicCORE.$procmux$2735_CMP0 ($eq).
Removed top 2 bits (of 17) from mux cell top.$techmap\cordicCORE.$procmux$2726 ($pmux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\cordicCORE.$add$../cordic/cordic.v:465$137 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\cordicCORE.$add$../cordic/cordic.v:465$137 ($add).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2647_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2616 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2600 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2589_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2584_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2581 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2578 ($mux).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2571 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2553 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2544 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2535 ($mux).
Removed top 5 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2532 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2523_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2522_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2521_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2520_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2519_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2518_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2517_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2516_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2515_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2514_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2513_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2512_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2511_CMP0 ($eq).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2508 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2505 ($mux).
Removed top 6 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2500 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2421_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2415_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2409_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2403_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2397_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2395_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2394_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:407$203 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:407$203 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:406$202 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:406$202 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:354$196 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:354$196 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:353$195 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:353$195 ($add).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:334$193 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:333$192 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:332$191 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:242$180 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:242$180 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:241$179 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:241$179 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:228$177 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:202$173 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:202$173 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:201$172 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:201$172 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:134$170 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:134$170 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:127$164 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:127$164 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:119$160 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:119$160 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:108$156 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:108$156 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:98$152 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:98$152 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:88$148 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:88$148 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:78$144 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:78$144 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\F2SRAM.SPI_READER.$eq$../spi_flash_reader.v:169$517 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$514 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$514 ($add).
Removed top 1 bits (of 17) from port B of cell top.$techmap\cordicCORE.U.$sub$../cordic/cordic.v:263$130 ($sub).
Removed top 1 bits (of 17) from port B of cell top.$techmap\cordicCORE.U.$add$../cordic/cordic.v:259$127 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\cordicCORE.U.$gt$../cordic/cordic.v:253$124 ($gt).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1031_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1028_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1025_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1022_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1019_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1016_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1013_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1010_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1007_CMP0 ($eq).
Removed top 1 bits (of 5) from mux cell top.$techmap\UI_inst.LCD.$procmux$967 ($mux).
Removed top 2 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$922 ($mux).
Removed top 7 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$916 ($mux).
Removed top 9 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$910 ($mux).
Removed top 16 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$907 ($mux).
Removed top 3 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$900 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$792_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$789_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$786_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$445 ($add).
Removed top 3 bits (of 7) from port B of cell top.$techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:396$444 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$418 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2296 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2176 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1533_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1532_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1520_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1519_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1518_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1517_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1494_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1458_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1423_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1389_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1356_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1324_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1293_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1263_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1234_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$eq$../UI/BinToLCD.v:110$257 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$ne$../UI/BinToLCD.v:109$256 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$252 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$252 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$228 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$228 ($sub).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$116 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$113 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$110 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$107 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$104 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$101 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$98 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$95 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$92 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$89 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$86 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$83 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$80 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$77 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.y_shifter.$or$../cordic/cordic.v:185$74 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$116 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$113 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$110 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$107 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$104 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$101 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$98 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$95 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$92 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$89 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$86 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$83 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$80 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$77 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\cordicCORE.U.x_shifter.$or$../cordic/cordic.v:185$74 ($or).
Removed top 16 bits (of 32) from wire top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$491_Y.
Removed top 15 bits (of 32) from wire top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$492_Y.
Removed top 29 bits (of 32) from wire top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$514_Y.
Removed top 21 bits (of 32) from wire top.$techmap\Filter1.$add$../filter/CIC.v:41$583_Y.
Removed top 24 bits (of 32) from wire top.$techmap\Filter1.$add$../filter/CIC.v:44$585_Y.
Removed top 27 bits (of 32) from wire top.$techmap\Filter1.$add$../filter/CIC.v:47$588_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:108$156_Y.
Removed top 27 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:127$164_Y.
Removed top 27 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:134$170_Y.
Removed top 28 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:201$172_Y.
Removed top 30 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:241$179_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:78$144_Y.
Removed top 27 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:88$148_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:98$152_Y.
Removed top 6 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2500_Y.
Removed top 4 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2505_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2508_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2532_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2535_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2544_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2553_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2571_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2578_Y.
Removed top 4 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2581_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2600_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2602_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2604_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2606_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2616_Y.
Removed top 3 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$900_Y.
Removed top 15 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$904_Y.
Removed top 19 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$907_Y.
Removed top 7 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$916_Y.
Removed top 3 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$922_Y.
Removed top 4 bits (of 5) from wire top.$techmap\UI_inst.LCD.$procmux$974_Y.
Removed top 28 bits (of 32) from wire top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$252_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2176_Y.
Removed top 4 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2296_Y.
Removed top 24 bits (of 32) from wire top.$techmap\adc_host_hi.$add$../adc_host.v:31$22_Y.
Removed top 27 bits (of 32) from wire top.$techmap\cordicCORE.$add$../cordic/cordic.v:465$137_Y.
Removed top 1 bits (of 8) from wire top.UI_inst.LCD.ramaddr.
Removed top 2 bits (of 17) from wire top.cordicCORE.U.tangle.

18.12. Executing PEEPOPT pass (run peephole optimizers).

18.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 46 unused wires.
<suppressed ~1 debug messages>

18.14. Executing SHARE pass (SAT-based resource sharing).

18.15. Executing TECHMAP pass (map to technology primitives).

18.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

18.15.2. Continuing TECHMAP pass.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$efc71e781fe178e08e0b73b60d007d65bb528021\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$64fdb727b8fb55a4fe9731fe5b6468d06ea5e6e3\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$ed69233d74549f287b72a59633b9a76ab6bcc119\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$dc6060208f0369ff43b26b7eee8e43bf61e4b025\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5c2d7617d568809e504489b04c3cf382857f302a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$f697708cd68b7ab769087d4d36092ed6d4550934\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$157b513ca31cf76e38adcf07acb1841cad2cb8bf\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$428611b5d438e29cebfd18261be0c8e5ae5db6e9\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$968c93632f950ce0f306709fa121c1e7a868940c\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$3fbee094385d1f2712c8f0e44e105767be1dc65d\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b052c427b9400c9842289fe5ffb1277ba3e47bb8\_90_lut_cmp_ for cells of type $ne.
No more expansions possible.
<suppressed ~1199 debug messages>

18.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 150 unused wires.
<suppressed ~1 debug messages>

18.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$TOP_V1.v:114$5 ($add).
  creating $macc model for $techmap\DAC1.$add$../sigma_delta.v:21$542 ($add).
  creating $macc model for $techmap\DAC2.$add$../sigma_delta.v:21$542 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$491 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$492 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$514 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$518 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523 ($sub).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:41$583 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:44$585 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:47$588 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:48$590 ($add).
  creating $macc model for $techmap\Filter1.$sub$../filter/CIC.v:37$579 ($sub).
  creating $macc model for $techmap\Filter1.$sub$../filter/CIC.v:38$580 ($sub).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:108$156 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:127$164 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:134$170 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:201$172 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:241$179 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:353$195 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:406$202 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:78$144 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:88$148 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:98$152 ($add).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:119$160 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:202$173 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:242$180 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:354$196 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:407$203 ($sub).
  creating $macc model for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$445 ($add).
  creating $macc model for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$598 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$252 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$233 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:108$255 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:113$260 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$228 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$232 ($sub).
  creating $macc model for $techmap\adc_host_hi.$add$../adc_host.v:31$22 ($add).
  creating $macc model for $techmap\cordicCORE.$add$../cordic/cordic.v:465$137 ($add).
  creating $macc model for $techmap\cordicCORE.U.$add$../cordic/cordic.v:257$125 ($add).
  creating $macc model for $techmap\cordicCORE.U.$add$../cordic/cordic.v:259$127 ($add).
  creating $macc model for $techmap\cordicCORE.U.$add$../cordic/cordic.v:262$129 ($add).
  creating $macc model for $techmap\cordicCORE.U.$sub$../cordic/cordic.v:258$126 ($sub).
  creating $macc model for $techmap\cordicCORE.U.$sub$../cordic/cordic.v:261$128 ($sub).
  creating $macc model for $techmap\cordicCORE.U.$sub$../cordic/cordic.v:263$130 ($sub).
  creating $alu model for $macc $techmap\cordicCORE.U.$sub$../cordic/cordic.v:263$130.
  creating $alu model for $macc $techmap\cordicCORE.U.$sub$../cordic/cordic.v:261$128.
  creating $alu model for $macc $techmap\cordicCORE.U.$sub$../cordic/cordic.v:258$126.
  creating $alu model for $macc $techmap\cordicCORE.U.$add$../cordic/cordic.v:262$129.
  creating $alu model for $macc $techmap\cordicCORE.U.$add$../cordic/cordic.v:259$127.
  creating $alu model for $macc $techmap\cordicCORE.U.$add$../cordic/cordic.v:257$125.
  creating $alu model for $macc $techmap\cordicCORE.$add$../cordic/cordic.v:465$137.
  creating $alu model for $macc $techmap\adc_host_hi.$add$../adc_host.v:31$22.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$232.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$228.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:113$260.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:108$255.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$233.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$252.
  creating $alu model for $macc $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$598.
  creating $alu model for $macc $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$445.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:407$203.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:354$196.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:242$180.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:202$173.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:119$160.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:98$152.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:88$148.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:78$144.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:406$202.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:353$195.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:241$179.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:201$172.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:134$170.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:127$164.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:108$156.
  creating $alu model for $macc $techmap\Filter1.$sub$../filter/CIC.v:38$580.
  creating $alu model for $macc $techmap\Filter1.$sub$../filter/CIC.v:37$579.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:48$590.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:47$588.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:44$585.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:41$583.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$518.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$514.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$492.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$491.
  creating $alu model for $macc $techmap\DAC2.$add$../sigma_delta.v:21$542.
  creating $alu model for $macc $techmap\DAC1.$add$../sigma_delta.v:21$542.
  creating $alu model for $macc $add$TOP_V1.v:114$5.
  creating $alu model for $techmap\Filter1.$ge$../filter/CIC.v:42$584 ($ge): new $alu
  creating $alu model for $techmap\cordicCORE.U.$gt$../cordic/cordic.v:253$124 ($gt): new $alu
  creating $alu cell for $techmap\cordicCORE.U.$gt$../cordic/cordic.v:253$124: $auto$alumacc.cc:474:replace_alu$3186
  creating $alu cell for $techmap\Filter1.$ge$../filter/CIC.v:42$584: $auto$alumacc.cc:474:replace_alu$3193
  creating $alu cell for $add$TOP_V1.v:114$5: $auto$alumacc.cc:474:replace_alu$3202
  creating $alu cell for $techmap\DAC1.$add$../sigma_delta.v:21$542: $auto$alumacc.cc:474:replace_alu$3205
  creating $alu cell for $techmap\DAC2.$add$../sigma_delta.v:21$542: $auto$alumacc.cc:474:replace_alu$3208
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$491: $auto$alumacc.cc:474:replace_alu$3211
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$492: $auto$alumacc.cc:474:replace_alu$3214
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$514: $auto$alumacc.cc:474:replace_alu$3217
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$518: $auto$alumacc.cc:474:replace_alu$3220
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523: $auto$alumacc.cc:474:replace_alu$3223
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:41$583: $auto$alumacc.cc:474:replace_alu$3226
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:44$585: $auto$alumacc.cc:474:replace_alu$3229
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:47$588: $auto$alumacc.cc:474:replace_alu$3232
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:48$590: $auto$alumacc.cc:474:replace_alu$3235
  creating $alu cell for $techmap\Filter1.$sub$../filter/CIC.v:37$579: $auto$alumacc.cc:474:replace_alu$3238
  creating $alu cell for $techmap\Filter1.$sub$../filter/CIC.v:38$580: $auto$alumacc.cc:474:replace_alu$3241
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:108$156: $auto$alumacc.cc:474:replace_alu$3244
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:127$164: $auto$alumacc.cc:474:replace_alu$3247
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:134$170: $auto$alumacc.cc:474:replace_alu$3250
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:201$172: $auto$alumacc.cc:474:replace_alu$3253
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:241$179: $auto$alumacc.cc:474:replace_alu$3256
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:353$195: $auto$alumacc.cc:474:replace_alu$3259
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:406$202: $auto$alumacc.cc:474:replace_alu$3262
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:78$144: $auto$alumacc.cc:474:replace_alu$3265
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:88$148: $auto$alumacc.cc:474:replace_alu$3268
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:98$152: $auto$alumacc.cc:474:replace_alu$3271
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:119$160: $auto$alumacc.cc:474:replace_alu$3274
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:202$173: $auto$alumacc.cc:474:replace_alu$3277
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:242$180: $auto$alumacc.cc:474:replace_alu$3280
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:354$196: $auto$alumacc.cc:474:replace_alu$3283
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:407$203: $auto$alumacc.cc:474:replace_alu$3286
  creating $alu cell for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$445: $auto$alumacc.cc:474:replace_alu$3289
  creating $alu cell for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$598: $auto$alumacc.cc:474:replace_alu$3292
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$252: $auto$alumacc.cc:474:replace_alu$3295
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$233: $auto$alumacc.cc:474:replace_alu$3298
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:108$255: $auto$alumacc.cc:474:replace_alu$3301
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:113$260: $auto$alumacc.cc:474:replace_alu$3304
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$228: $auto$alumacc.cc:474:replace_alu$3307
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$232: $auto$alumacc.cc:474:replace_alu$3310
  creating $alu cell for $techmap\adc_host_hi.$add$../adc_host.v:31$22: $auto$alumacc.cc:474:replace_alu$3313
  creating $alu cell for $techmap\cordicCORE.$add$../cordic/cordic.v:465$137: $auto$alumacc.cc:474:replace_alu$3316
  creating $alu cell for $techmap\cordicCORE.U.$add$../cordic/cordic.v:259$127: $auto$alumacc.cc:474:replace_alu$3319
  creating $alu cell for $techmap\cordicCORE.U.$add$../cordic/cordic.v:262$129: $auto$alumacc.cc:474:replace_alu$3322
  creating $alu cell for $techmap\cordicCORE.U.$sub$../cordic/cordic.v:258$126: $auto$alumacc.cc:474:replace_alu$3325
  creating $alu cell for $techmap\cordicCORE.U.$add$../cordic/cordic.v:257$125: $auto$alumacc.cc:474:replace_alu$3328
  creating $alu cell for $techmap\cordicCORE.U.$sub$../cordic/cordic.v:261$128: $auto$alumacc.cc:474:replace_alu$3331
  creating $alu cell for $techmap\cordicCORE.U.$sub$../cordic/cordic.v:263$130: $auto$alumacc.cc:474:replace_alu$3334
  created 47 $alu and 0 $macc cells.

18.19. Executing OPT pass (performing simple optimizations).

18.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

18.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$3200: { $auto$rtlil.cc:1832:Not$3197 $auto$rtlil.cc:1835:ReduceAnd$3199 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3198: { $auto$alumacc.cc:490:replace_alu$3194 [0] $auto$alumacc.cc:490:replace_alu$3194 [1] $auto$alumacc.cc:490:replace_alu$3194 [2] $auto$alumacc.cc:490:replace_alu$3194 [3] $auto$alumacc.cc:490:replace_alu$3194 [4] $auto$alumacc.cc:490:replace_alu$3194 [5] $auto$alumacc.cc:490:replace_alu$3194 [6] $auto$alumacc.cc:490:replace_alu$3194 [7] $auto$alumacc.cc:490:replace_alu$3194 [8] $auto$alumacc.cc:490:replace_alu$3194 [9] $auto$alumacc.cc:490:replace_alu$3194 [10] }
  Optimizing cells in module \top.
Performed a total of 2 changes.

18.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

18.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

18.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.19.9. Rerunning OPT passes. (Maybe there is more to do..)

18.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~111 debug messages>

18.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

18.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

18.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.19.16. Finished OPT passes. (There is nothing left to do.)

18.20. Executing FSM pass (extract and optimize FSM).

18.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.F2SRAM.SPI_READER.fsm_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.spi_addr as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.BP as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.SF_D1 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.display_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.main_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.pos as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.summand as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

18.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

18.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

18.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

18.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

18.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

18.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

18.21. Executing OPT pass (performing simple optimizations).

18.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

18.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.21.5. Finished fast OPT passes.

18.22. Executing MEMORY pass.

18.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

18.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

18.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).

18.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

18.25. Executing TECHMAP pass (map to technology primitives).

18.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

18.25.2. Continuing TECHMAP pass.
No more expansions possible.

18.26. Executing ICE40_BRAMINIT pass.

18.27. Executing OPT pass (performing simple optimizations).

18.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~122 debug messages>

18.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

18.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

18.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 52 unused wires.
<suppressed ~4 debug messages>

18.27.5. Finished fast OPT passes.

18.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

18.29. Executing OPT pass (performing simple optimizations).

18.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~102 debug messages>

18.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2500:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:455:run$3079 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3079 [0]
      New connections: $auto$wreduce.cc:455:run$3079 [1] = $auto$wreduce.cc:455:run$3079 [0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2502:
      Old ports: A={ 6'001100 $auto$wreduce.cc:455:run$3079 [1:0] }, B=8'00110101, Y=$techmap\UI_inst.$procmux$2502_Y
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$3079 [1:0] }, B=3'101, Y=$techmap\UI_inst.$procmux$2502_Y [2:0]
      New connections: $techmap\UI_inst.$procmux$2502_Y [7:3] = 5'00110
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2505:
      Old ports: A=4'0000, B=4'1110, Y=$auto$wreduce.cc:455:run$3080 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3080 [1]
      New connections: { $auto$wreduce.cc:455:run$3080 [3:2] $auto$wreduce.cc:455:run$3080 [0] } = { $auto$wreduce.cc:455:run$3080 [1] $auto$wreduce.cc:455:run$3080 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2508:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:455:run$3081 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3081 [0]
      New connections: $auto$wreduce.cc:455:run$3081 [4:1] = { $auto$wreduce.cc:455:run$3081 [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2532:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:455:run$3082 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3082 [0]
      New connections: $auto$wreduce.cc:455:run$3082 [2:1] = { $auto$wreduce.cc:455:run$3082 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2535:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:455:run$3083 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$3083 [4]
      New connections: $auto$wreduce.cc:455:run$3083 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2537:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$3083 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2537_Y
      New ports: A=$auto$wreduce.cc:455:run$3083 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2537_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2537_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2544:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:455:run$3084 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$3084 [4]
      New connections: $auto$wreduce.cc:455:run$3084 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2546:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$3084 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2546_Y
      New ports: A=$auto$wreduce.cc:455:run$3084 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2546_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2546_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2553:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:455:run$3085 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3085 [0]
      New connections: $auto$wreduce.cc:455:run$3085 [4:1] = { $auto$wreduce.cc:455:run$3085 [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2578:
      Old ports: A=5'01110, B=5'11000, Y=$auto$wreduce.cc:455:run$3087 [4:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$3087 [4] $auto$wreduce.cc:455:run$3087 [1] }
      New connections: { $auto$wreduce.cc:455:run$3087 [3:2] $auto$wreduce.cc:455:run$3087 [0] } = { 1'1 $auto$wreduce.cc:455:run$3087 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2581:
      Old ports: A=4'1001, B=4'0101, Y=$auto$wreduce.cc:455:run$3088 [3:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$3088 [3:2]
      New connections: $auto$wreduce.cc:455:run$3088 [1:0] = 2'01
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2600:
      Old ports: A=5'00000, B=5'10110, Y=$auto$wreduce.cc:455:run$3089 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3089 [1]
      New connections: { $auto$wreduce.cc:455:run$3089 [4:2] $auto$wreduce.cc:455:run$3089 [0] } = { $auto$wreduce.cc:455:run$3089 [1] 1'0 $auto$wreduce.cc:455:run$3089 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2602:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$3089 [4:0] }, B=8'00110100, Y=$auto$wreduce.cc:455:run$3090
      New ports: A=$auto$wreduce.cc:455:run$3089 [4:0], B=5'10100, Y=$auto$wreduce.cc:455:run$3090 [4:0]
      New connections: $auto$wreduce.cc:455:run$3090 [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$900:
      Old ports: A=17'00000000000000000, B=17'10100000001010000, Y=$auto$wreduce.cc:455:run$3094 [16:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3094 [4]
      New connections: { $auto$wreduce.cc:455:run$3094 [16:5] $auto$wreduce.cc:455:run$3094 [3:0] } = { $auto$wreduce.cc:455:run$3094 [4] 1'0 $auto$wreduce.cc:455:run$3094 [4] 7'0000000 $auto$wreduce.cc:455:run$3094 [4] 5'00000 }
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$902:
      Old ports: A=20'00000000000000000000, B={ 22'1011011100011011000000 $auto$wreduce.cc:455:run$3098 [17:0] 7'0000000 $auto$wreduce.cc:455:run$3097 [12:0] 16'0000000000000000 $auto$wreduce.cc:455:run$3096 [3:0] 9'000000000 $auto$wreduce.cc:455:run$3095 [10:0] 3'000 $auto$wreduce.cc:455:run$3094 [16:0] }, Y=$techmap\UI_inst.LCD.$0\main_delay_value[19:0]
      New ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$3098 [17:0] 6'000000 $auto$wreduce.cc:455:run$3097 [12:0] 15'000000000000000 $auto$wreduce.cc:455:run$3096 [3:0] 8'00000000 $auto$wreduce.cc:455:run$3095 [10:0] 2'00 $auto$wreduce.cc:455:run$3094 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New connections: $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [18] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$907:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:455:run$3096 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3096 [0]
      New connections: $auto$wreduce.cc:455:run$3096 [3:1] = { $auto$wreduce.cc:455:run$3096 [0] 1'0 $auto$wreduce.cc:455:run$3096 [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$910:
      Old ports: A=11'00000000000, B=11'11111010000, Y=$auto$wreduce.cc:455:run$3095 [10:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3095 [4]
      New connections: { $auto$wreduce.cc:455:run$3095 [10:5] $auto$wreduce.cc:455:run$3095 [3:0] } = { $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$916:
      Old ports: A=13'0000000000000, B=13'1001110001000, Y=$auto$wreduce.cc:455:run$3097 [12:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3097 [3]
      New connections: { $auto$wreduce.cc:455:run$3097 [12:4] $auto$wreduce.cc:455:run$3097 [2:0] } = { $auto$wreduce.cc:455:run$3097 [3] 2'00 $auto$wreduce.cc:455:run$3097 [3] $auto$wreduce.cc:455:run$3097 [3] $auto$wreduce.cc:455:run$3097 [3] 6'000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$922:
      Old ports: A=18'000000000000000000, B=18'110010000011001000, Y=$auto$wreduce.cc:455:run$3098 [17:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3098 [3]
      New connections: { $auto$wreduce.cc:455:run$3098 [17:4] $auto$wreduce.cc:455:run$3098 [2:0] } = { $auto$wreduce.cc:455:run$3098 [3] $auto$wreduce.cc:455:run$3098 [3] 2'00 $auto$wreduce.cc:455:run$3098 [3] 5'00000 $auto$wreduce.cc:455:run$3098 [3] $auto$wreduce.cc:455:run$3098 [3] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$967:
      Old ports: A=4'0010, B=4'1000, Y=$techmap\UI_inst.LCD.$procmux$967_Y [3:0]
      New ports: A=2'01, B=2'10, Y={ $techmap\UI_inst.LCD.$procmux$967_Y [3] $techmap\UI_inst.LCD.$procmux$967_Y [1] }
      New connections: { $techmap\UI_inst.LCD.$procmux$967_Y [2] $techmap\UI_inst.LCD.$procmux$967_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$418:
      Old ports: A={ 3'000 \UI_inst.LCD.addr [3:0] }, B={ 3'100 \UI_inst.LCD.addr [3:0] }, Y=\UI_inst.LCD.ramaddr
      New ports: A=1'0, B=1'1, Y=\UI_inst.LCD.ramaddr [6]
      New connections: \UI_inst.LCD.ramaddr [5:0] = { 2'00 \UI_inst.LCD.addr [3:0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$1512:
      Old ports: A=32'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx, B={ 15'000000000000000 \cordicCORE.U.z_1 }, Y=$techmap\UI_inst.diplay_number.$procmux$1512_Y
      New ports: A=18'xxxxxxxxxxxxxxxxxx, B={ 1'0 \cordicCORE.U.z_1 }, Y=$techmap\UI_inst.diplay_number.$procmux$1512_Y [17:0]
      New connections: $techmap\UI_inst.diplay_number.$procmux$1512_Y [31:18] = { $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] $techmap\UI_inst.diplay_number.$procmux$1512_Y [17] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2231:
      Old ports: A=8'01011001, B=8'11110010, Y=$techmap\UI_inst.diplay_number.$procmux$2231_Y
      New ports: A=2'01, B=2'10, Y=$techmap\UI_inst.diplay_number.$procmux$2231_Y [1:0]
      New connections: $techmap\UI_inst.diplay_number.$procmux$2231_Y [7:2] = { $techmap\UI_inst.diplay_number.$procmux$2231_Y [1] 1'1 $techmap\UI_inst.diplay_number.$procmux$2231_Y [1] 1'1 $techmap\UI_inst.diplay_number.$procmux$2231_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2296:
      Old ports: A=4'1000, B=4'0010, Y=$auto$wreduce.cc:455:run$3102 [3:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:455:run$3102 [3] $auto$wreduce.cc:455:run$3102 [1] }
      New connections: { $auto$wreduce.cc:455:run$3102 [2] $auto$wreduce.cc:455:run$3102 [0] } = 2'00
    Consolidated identical input bits for $pmux cell $techmap\cordicCORE.U.x_shifter.$procmux$2792:
      Old ports: A=\cordicCORE.U.x_i, B={ \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:1] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:2] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:3] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:4] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:5] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:6] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:7] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:8] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:9] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:10] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:11] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:12] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:13] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:14] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:15] }, Y=\cordicCORE.U.x_i_shifted
      New ports: A=\cordicCORE.U.x_i [15:0], B={ \cordicCORE.U.x_i [16:1] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:2] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:3] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:4] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:5] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:6] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:7] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:8] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:9] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:10] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:11] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:12] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:13] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:14] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16] \cordicCORE.U.x_i [16:15] }, Y=\cordicCORE.U.x_i_shifted [15:0]
      New connections: \cordicCORE.U.x_i_shifted [16] = \cordicCORE.U.x_i [16]
    Consolidated identical input bits for $pmux cell $techmap\cordicCORE.U.y_shifter.$procmux$2792:
      Old ports: A=\cordicCORE.U.y_i, B={ \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:1] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:2] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:3] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:4] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:5] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:6] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:7] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:8] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:9] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:10] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:11] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:12] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:13] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:14] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:15] }, Y=\cordicCORE.U.y_i_shifted
      New ports: A=\cordicCORE.U.y_i [15:0], B={ \cordicCORE.U.y_i [16:1] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:2] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:3] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:4] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:5] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:6] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:7] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:8] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:9] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:10] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:11] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:12] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:13] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:14] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16] \cordicCORE.U.y_i [16:15] }, Y=\cordicCORE.U.y_i_shifted [15:0]
      New connections: \cordicCORE.U.y_i_shifted [16] = \cordicCORE.U.y_i [16]
    Consolidated identical input bits for $mux cell $techmap\dds_core.$procmux$613:
      Old ports: A={ \cnt [9:0] 6'000000 }, B={ $auto$opt_expr.cc:189:group_cell_inputs$3340 6'111111 }, Y=$techmap\dds_core.$procmux$613_Y
      New ports: A={ \cnt [9:0] 1'0 }, B={ $auto$opt_expr.cc:189:group_cell_inputs$3340 1'1 }, Y={ $techmap\dds_core.$procmux$613_Y [15:6] $techmap\dds_core.$procmux$613_Y [0] }
      New connections: $techmap\dds_core.$procmux$613_Y [5:1] = { $techmap\dds_core.$procmux$613_Y [0] $techmap\dds_core.$procmux$613_Y [0] $techmap\dds_core.$procmux$613_Y [0] $techmap\dds_core.$procmux$613_Y [0] $techmap\dds_core.$procmux$613_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\dds_core.$procmux$618:
      Old ports: A={ $auto$opt_expr.cc:189:group_cell_inputs$3340 6'111111 }, B={ \cnt [9:0] 6'000000 }, Y=$techmap\dds_core.$procmux$618_Y
      New ports: A={ $auto$opt_expr.cc:189:group_cell_inputs$3340 1'1 }, B={ \cnt [9:0] 1'0 }, Y={ $techmap\dds_core.$procmux$618_Y [15:6] $techmap\dds_core.$procmux$618_Y [0] }
      New connections: $techmap\dds_core.$procmux$618_Y [5:1] = { $techmap\dds_core.$procmux$618_Y [0] $techmap\dds_core.$procmux$618_Y [0] $techmap\dds_core.$procmux$618_Y [0] $techmap\dds_core.$procmux$618_Y [0] $techmap\dds_core.$procmux$618_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2498:
      Old ports: A=8'00100000, B={ 99'011010010110111001110100010100100110010101100110001011100100000101101101011100000110110000111010001 $auto$wreduce.cc:455:run$3081 [4:0] 4'0010 $auto$wreduce.cc:455:run$3080 [3:0] $techmap\UI_inst.$procmux$2502_Y 8'01010110 }, Y=$techmap\UI_inst.$procmux$2498_Y
      New ports: A=7'0100000, B={ 86'11010011101110111010010100101100101110011001011101000001110110111100001101100011101001 $auto$wreduce.cc:455:run$3081 [0] 3'000 $auto$wreduce.cc:455:run$3081 [0] 3'010 $auto$wreduce.cc:455:run$3080 [1] $auto$wreduce.cc:455:run$3080 [1] $auto$wreduce.cc:455:run$3080 [1] 5'00110 $techmap\UI_inst.$procmux$2502_Y [2:0] 7'1010110 }, Y=$techmap\UI_inst.$procmux$2498_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2498_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2537:
      Old ports: A=$auto$wreduce.cc:455:run$3083 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2537_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3083 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2537_Y [4] $techmap\UI_inst.$procmux$2537_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2537_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2539:
      Old ports: A=$techmap\UI_inst.$procmux$2537_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2539_Y
      New ports: A=$techmap\UI_inst.$procmux$2537_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2539_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2539_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2546:
      Old ports: A=$auto$wreduce.cc:455:run$3084 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2546_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3084 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2546_Y [4] $techmap\UI_inst.$procmux$2546_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2546_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2548:
      Old ports: A=$techmap\UI_inst.$procmux$2546_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2548_Y
      New ports: A=$techmap\UI_inst.$procmux$2546_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2548_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2548_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2602:
      Old ports: A=$auto$wreduce.cc:455:run$3089 [4:0], B=5'10100, Y=$auto$wreduce.cc:455:run$3090 [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3089 [1] $auto$wreduce.cc:455:run$3089 [1] }, B=2'10, Y=$auto$wreduce.cc:455:run$3090 [2:1]
      New connections: { $auto$wreduce.cc:455:run$3090 [4:3] $auto$wreduce.cc:455:run$3090 [0] } = { $auto$wreduce.cc:455:run$3090 [2] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2604:
      Old ports: A=$auto$wreduce.cc:455:run$3090, B=8'00110010, Y=$auto$wreduce.cc:455:run$3091
      New ports: A=$auto$wreduce.cc:455:run$3090 [4:0], B=5'10010, Y=$auto$wreduce.cc:455:run$3091 [4:0]
      New connections: $auto$wreduce.cc:455:run$3091 [7:5] = 3'001
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$902:
      Old ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$3098 [17:0] 6'000000 $auto$wreduce.cc:455:run$3097 [12:0] 15'000000000000000 $auto$wreduce.cc:455:run$3096 [3:0] 8'00000000 $auto$wreduce.cc:455:run$3095 [10:0] 2'00 $auto$wreduce.cc:455:run$3094 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New ports: A=13'0000000000000, B={ 13'1111001101100 $auto$wreduce.cc:455:run$3098 [3] 1'0 $auto$wreduce.cc:455:run$3098 [3] 4'0000 $auto$wreduce.cc:455:run$3098 [3] $auto$wreduce.cc:455:run$3098 [3] 2'00 $auto$wreduce.cc:455:run$3098 [3] 4'0000 $auto$wreduce.cc:455:run$3097 [3] 1'0 $auto$wreduce.cc:455:run$3097 [3] $auto$wreduce.cc:455:run$3097 [3] $auto$wreduce.cc:455:run$3097 [3] 3'000 $auto$wreduce.cc:455:run$3097 [3] 12'000000000000 $auto$wreduce.cc:455:run$3096 [0] $auto$wreduce.cc:455:run$3096 [0] 4'0000 $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] $auto$wreduce.cc:455:run$3095 [4] 1'0 $auto$wreduce.cc:455:run$3095 [4] 2'00 $auto$wreduce.cc:455:run$3094 [4] $auto$wreduce.cc:455:run$3094 [4] 6'000000 $auto$wreduce.cc:455:run$3094 [4] 1'0 $auto$wreduce.cc:455:run$3094 [4] 2'00 }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [16] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [14:12] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [10:3] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
      New connections: { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [15] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [11] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [2:1] } = { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [5] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [13] 3'000 $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2539:
      Old ports: A=$techmap\UI_inst.$procmux$2537_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2539_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2537_Y [4] 1'0 $techmap\UI_inst.$procmux$2537_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2539_Y [4] $techmap\UI_inst.$procmux$2539_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2539_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2541:
      Old ports: A=$techmap\UI_inst.$procmux$2539_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2541_Y
      New ports: A=$techmap\UI_inst.$procmux$2539_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2541_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2541_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2548:
      Old ports: A=$techmap\UI_inst.$procmux$2546_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2548_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2546_Y [4] 1'0 $techmap\UI_inst.$procmux$2546_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2548_Y [4] $techmap\UI_inst.$procmux$2548_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2548_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2550:
      Old ports: A=$techmap\UI_inst.$procmux$2548_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2550_Y
      New ports: A=$techmap\UI_inst.$procmux$2548_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2550_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2550_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2604:
      Old ports: A=$auto$wreduce.cc:455:run$3090 [4:0], B=5'10010, Y=$auto$wreduce.cc:455:run$3091 [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3090 [2] $auto$wreduce.cc:455:run$3090 [2:1] }, B=3'101, Y={ $auto$wreduce.cc:455:run$3091 [4] $auto$wreduce.cc:455:run$3091 [2:1] }
      New connections: { $auto$wreduce.cc:455:run$3091 [3] $auto$wreduce.cc:455:run$3091 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2606:
      Old ports: A=$auto$wreduce.cc:455:run$3091, B=8'00100000, Y=$auto$wreduce.cc:455:run$3092
      New ports: A=$auto$wreduce.cc:455:run$3091 [4:0], B=5'00000, Y=$auto$wreduce.cc:455:run$3092 [4:0]
      New connections: $auto$wreduce.cc:455:run$3092 [7:5] = 3'001
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2527:
      Old ports: A=8'00100000, B={ 91'0110100101101110011101000101001001100110001011100100011001110010011001010111000100111010001 $auto$wreduce.cc:455:run$3085 [0] 3'000 $auto$wreduce.cc:455:run$3085 [0] $techmap\UI_inst.$procmux$2550_Y $techmap\UI_inst.$procmux$2541_Y 5'00110 $auto$wreduce.cc:455:run$3082 [0] 1'0 $auto$wreduce.cc:455:run$3082 [0] 24'001100000100100001111010 }, Y=$techmap\UI_inst.$procmux$2527_Y
      New ports: A=7'0100000, B={ 79'1101001110111011101001010010110011001011101000110111001011001011110001011101001 $auto$wreduce.cc:455:run$3085 [0] 3'000 $auto$wreduce.cc:455:run$3085 [0] 2'01 $techmap\UI_inst.$procmux$2550_Y [4:0] 2'01 $techmap\UI_inst.$procmux$2541_Y [4:0] 4'0110 $auto$wreduce.cc:455:run$3082 [0] 1'0 $auto$wreduce.cc:455:run$3082 [0] 21'011000010010001111010 }, Y=$techmap\UI_inst.$procmux$2527_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2527_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2541:
      Old ports: A=$techmap\UI_inst.$procmux$2539_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2541_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2539_Y [4] 1'0 $techmap\UI_inst.$procmux$2539_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2541_Y [4] $techmap\UI_inst.$procmux$2541_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2541_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2550:
      Old ports: A=$techmap\UI_inst.$procmux$2548_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2550_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2548_Y [4] 1'0 $techmap\UI_inst.$procmux$2548_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2550_Y [4] $techmap\UI_inst.$procmux$2550_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2550_Y [3] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2596:
      Old ports: A=8'00100000, B={ 40'0100011101100001011010010110111000111010 $auto$wreduce.cc:455:run$3092 24'001100000110010001000010 }, Y=$techmap\UI_inst.$procmux$2596_Y
      New ports: A=7'0100000, B={ 37'1000111110000111010011101110011101001 $auto$wreduce.cc:455:run$3092 [4:0] 21'011000011001001000010 }, Y=$techmap\UI_inst.$procmux$2596_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2596_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2606:
      Old ports: A=$auto$wreduce.cc:455:run$3091 [4:0], B=5'00000, Y=$auto$wreduce.cc:455:run$3092 [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3091 [4] $auto$wreduce.cc:455:run$3091 [2:1] }, B=3'000, Y={ $auto$wreduce.cc:455:run$3092 [4] $auto$wreduce.cc:455:run$3092 [2:1] }
      New connections: { $auto$wreduce.cc:455:run$3092 [3] $auto$wreduce.cc:455:run$3092 [0] } = 2'00
  Optimizing cells in module \top.
Performed a total of 48 changes.

18.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

18.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

18.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

18.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.29.9. Rerunning OPT passes. (Maybe there is more to do..)

18.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~102 debug messages>

18.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

18.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

18.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.29.16. Finished OPT passes. (There is nothing left to do.)

18.30. Executing TECHMAP pass (map to technology primitives).

18.30.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.30.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

18.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=4\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:d0521459f0fb86cc32cc9b1590b67862dc67dbbd$paramod$93c08705e9f7437b3330e07efac558fa4bdbfcf5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$a68bb28b088c405e0a0932831a6b331eb440b1a1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=15\S_WIDTH=15 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=18 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=16 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=49\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=1\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=21 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=13\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=20\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=33\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=32 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=15 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~3655 debug messages>

18.31. Executing ICE40_OPT pass (performing simple optimizations).

18.31.1. Running ICE40 specific optimizations.

18.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3741 debug messages>

18.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5757 debug messages>
Removed a total of 1919 cells.

18.31.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:496:simplemap_adff$8697 ($_DFF_PP0_) from module top.
Replaced 1 DFF cells.

18.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 960 unused cells and 2729 unused wires.
<suppressed ~961 debug messages>

18.31.6. Rerunning OPT passes. (Removed registers in this run.)

18.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3186.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3186.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3193.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3202.slice[0].carry: CO=\cnt [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3211.slice[0].carry: CO=\F2SRAM.addr [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3214.slice[0].carry: CO=\F2SRAM.poscount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3217.slice[0].carry: CO=\F2SRAM.SPI_READER.cnt_bit [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3226.slice[0].carry: CO=\Filter1.tickcount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3229.slice[0].carry: CO=\Filter1.inaddr [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3232.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3244.slice[0].carry: CO=\UI_inst.cnt3 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3247.slice[0].carry: CO=\UI_inst.count [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3250.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3253.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3259.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3265.slice[0].carry: CO=\UI_inst.cnt0 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3268.slice[0].carry: CO=\UI_inst.cnt1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3271.slice[0].carry: CO=\UI_inst.cnt2 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3274.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3277.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3283.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3289.slice[0].carry: CO=\UI_inst.LCD.pos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3292.slice[0].carry: CO=\UI_inst.LCD.delay_counter.counter [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3295.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3301.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3307.slice[0].carry: CO=\UI_inst.diplay_number.pos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3313.slice[0].carry: CO=\adc_host_hi.count [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3316.slice[0].carry: CO=\cordicCORE.iteration [0]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3202.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3211.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3214.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3217.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3226.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3229.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3232.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3244.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3247.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3250.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3253.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3259.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3265.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3268.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3271.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3274.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3277.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3283.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3289.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3292.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3295.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3301.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3307.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3313.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3316.slice[1].adder back to logic.

18.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~364 debug messages>

18.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

18.31.10. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 61 unused wires.
<suppressed ~1 debug messages>

18.31.12. Rerunning OPT passes. (Removed registers in this run.)

18.31.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3193.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3232.slice[1].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3232.slice[2].adder back to logic.

18.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~63 debug messages>

18.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.31.16. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.18. Rerunning OPT passes. (Removed registers in this run.)

18.31.19. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3193.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3232.slice[2].carry: CO=\UI_inst.TC [2]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3232.slice[3].adder back to logic.

18.31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~13 debug messages>

18.31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.31.22. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

18.31.24. Rerunning OPT passes. (Removed registers in this run.)

18.31.25. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3193.slice[3].carry: CO=1'1

18.31.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.31.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.31.28. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.31.30. Rerunning OPT passes. (Removed registers in this run.)

18.31.31. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3193.slice[4].carry: CO=$auto$alumacc.cc:474:replace_alu$3193.BB [4]

18.31.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.31.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.31.34. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.31.36. Rerunning OPT passes. (Removed registers in this run.)

18.31.37. Running ICE40 specific optimizations.

18.31.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.31.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.31.40. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.31.42. Finished OPT passes. (There is nothing left to do.)

18.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

18.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10003 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\difference[32:0] [32] -> \UI_inst.diplay_number.difference [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10004 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [0] -> \UI_inst.diplay_number.dec [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10005 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [1] -> \UI_inst.diplay_number.dec [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10006 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [2] -> \UI_inst.diplay_number.dec [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10007 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [3] -> \UI_inst.diplay_number.dec [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10008 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [0] -> \UI_inst.diplay_number.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10009 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [1] -> \UI_inst.diplay_number.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10010 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [2] -> \UI_inst.diplay_number.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10011 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [3] -> \UI_inst.diplay_number.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10012 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [4] -> \UI_inst.diplay_number.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10015 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [0] -> \UI_inst.diplay_number.summand [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10016 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [1] -> \UI_inst.diplay_number.summand [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10017 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [2] -> \UI_inst.diplay_number.summand [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10018 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [3] -> \UI_inst.diplay_number.summand [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10019 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [4] -> \UI_inst.diplay_number.summand [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10020 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [5] -> \UI_inst.diplay_number.summand [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10021 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [6] -> \UI_inst.diplay_number.summand [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10022 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [7] -> \UI_inst.diplay_number.summand [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10023 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [8] -> \UI_inst.diplay_number.summand [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10024 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [9] -> \UI_inst.diplay_number.summand [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10025 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [10] -> \UI_inst.diplay_number.summand [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10026 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [11] -> \UI_inst.diplay_number.summand [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10027 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [12] -> \UI_inst.diplay_number.summand [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10028 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [13] -> \UI_inst.diplay_number.summand [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10029 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [14] -> \UI_inst.diplay_number.summand [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10030 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [15] -> \UI_inst.diplay_number.summand [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10031 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [16] -> \UI_inst.diplay_number.summand [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10032 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [17] -> \UI_inst.diplay_number.summand [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10033 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [18] -> \UI_inst.diplay_number.summand [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10034 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [19] -> \UI_inst.diplay_number.summand [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10035 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [20] -> \UI_inst.diplay_number.summand [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10036 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [21] -> \UI_inst.diplay_number.summand [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10037 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [22] -> \UI_inst.diplay_number.summand [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10038 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [23] -> \UI_inst.diplay_number.summand [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10039 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [24] -> \UI_inst.diplay_number.summand [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10040 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [25] -> \UI_inst.diplay_number.summand [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10041 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [26] -> \UI_inst.diplay_number.summand [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10042 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [27] -> \UI_inst.diplay_number.summand [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10043 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [28] -> \UI_inst.diplay_number.summand [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10044 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [29] -> \UI_inst.diplay_number.summand [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10045 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [30] -> \UI_inst.diplay_number.summand [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10046 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [31] -> \UI_inst.diplay_number.summand [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10047 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [0] -> \UI_inst.diplay_number.secondlastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10048 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [1] -> \UI_inst.diplay_number.secondlastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10049 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [2] -> \UI_inst.diplay_number.secondlastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10050 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [3] -> \UI_inst.diplay_number.secondlastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10051 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [4] -> \UI_inst.diplay_number.secondlastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10052 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [5] -> \UI_inst.diplay_number.secondlastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10053 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [6] -> \UI_inst.diplay_number.secondlastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10054 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [7] -> \UI_inst.diplay_number.secondlastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10055 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [8] -> \UI_inst.diplay_number.secondlastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10056 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [9] -> \UI_inst.diplay_number.secondlastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10057 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [10] -> \UI_inst.diplay_number.secondlastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10058 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [11] -> \UI_inst.diplay_number.secondlastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10059 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [12] -> \UI_inst.diplay_number.secondlastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10060 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [13] -> \UI_inst.diplay_number.secondlastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10061 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [14] -> \UI_inst.diplay_number.secondlastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10062 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [15] -> \UI_inst.diplay_number.secondlastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10063 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [16] -> \UI_inst.diplay_number.secondlastacc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10064 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [17] -> \UI_inst.diplay_number.secondlastacc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10065 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [18] -> \UI_inst.diplay_number.secondlastacc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10066 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [19] -> \UI_inst.diplay_number.secondlastacc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10067 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [20] -> \UI_inst.diplay_number.secondlastacc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10068 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [21] -> \UI_inst.diplay_number.secondlastacc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10069 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [22] -> \UI_inst.diplay_number.secondlastacc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10070 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [23] -> \UI_inst.diplay_number.secondlastacc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10071 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [24] -> \UI_inst.diplay_number.secondlastacc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10072 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [25] -> \UI_inst.diplay_number.secondlastacc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10073 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [26] -> \UI_inst.diplay_number.secondlastacc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10074 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [27] -> \UI_inst.diplay_number.secondlastacc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10075 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [28] -> \UI_inst.diplay_number.secondlastacc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10076 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [29] -> \UI_inst.diplay_number.secondlastacc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10077 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [30] -> \UI_inst.diplay_number.secondlastacc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10078 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [31] -> \UI_inst.diplay_number.secondlastacc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10079 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [0] -> \UI_inst.diplay_number.lastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10080 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [1] -> \UI_inst.diplay_number.lastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10081 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [2] -> \UI_inst.diplay_number.lastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10082 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [3] -> \UI_inst.diplay_number.lastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10083 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [4] -> \UI_inst.diplay_number.lastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10084 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [5] -> \UI_inst.diplay_number.lastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10085 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [6] -> \UI_inst.diplay_number.lastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10086 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [7] -> \UI_inst.diplay_number.lastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10087 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [8] -> \UI_inst.diplay_number.lastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10088 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [9] -> \UI_inst.diplay_number.lastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10089 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [10] -> \UI_inst.diplay_number.lastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10090 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [11] -> \UI_inst.diplay_number.lastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10091 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [12] -> \UI_inst.diplay_number.lastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10092 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [13] -> \UI_inst.diplay_number.lastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10093 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [14] -> \UI_inst.diplay_number.lastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10094 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [15] -> \UI_inst.diplay_number.lastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10095 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [16] -> \UI_inst.diplay_number.lastacc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10096 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [17] -> \UI_inst.diplay_number.lastacc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10097 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [18] -> \UI_inst.diplay_number.lastacc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10098 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [19] -> \UI_inst.diplay_number.lastacc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10099 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [20] -> \UI_inst.diplay_number.lastacc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10100 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [21] -> \UI_inst.diplay_number.lastacc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10101 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [22] -> \UI_inst.diplay_number.lastacc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10102 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [23] -> \UI_inst.diplay_number.lastacc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10103 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [24] -> \UI_inst.diplay_number.lastacc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10104 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [25] -> \UI_inst.diplay_number.lastacc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10105 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [26] -> \UI_inst.diplay_number.lastacc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10106 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [27] -> \UI_inst.diplay_number.lastacc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10107 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [28] -> \UI_inst.diplay_number.lastacc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10108 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [29] -> \UI_inst.diplay_number.lastacc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10109 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [30] -> \UI_inst.diplay_number.lastacc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10110 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [31] -> \UI_inst.diplay_number.lastacc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10111 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [0] -> \UI_inst.diplay_number.rest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10112 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [1] -> \UI_inst.diplay_number.rest [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10113 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [2] -> \UI_inst.diplay_number.rest [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10114 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [3] -> \UI_inst.diplay_number.rest [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10115 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [4] -> \UI_inst.diplay_number.rest [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10116 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [5] -> \UI_inst.diplay_number.rest [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10117 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [6] -> \UI_inst.diplay_number.rest [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10118 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [7] -> \UI_inst.diplay_number.rest [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10119 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [8] -> \UI_inst.diplay_number.rest [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10120 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [9] -> \UI_inst.diplay_number.rest [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10121 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [10] -> \UI_inst.diplay_number.rest [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10122 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [11] -> \UI_inst.diplay_number.rest [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10123 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [12] -> \UI_inst.diplay_number.rest [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10124 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [13] -> \UI_inst.diplay_number.rest [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10125 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [14] -> \UI_inst.diplay_number.rest [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10126 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [15] -> \UI_inst.diplay_number.rest [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10127 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [16] -> \UI_inst.diplay_number.rest [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10128 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [17] -> \UI_inst.diplay_number.rest [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10129 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [18] -> \UI_inst.diplay_number.rest [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10130 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [19] -> \UI_inst.diplay_number.rest [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10131 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [20] -> \UI_inst.diplay_number.rest [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10132 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [21] -> \UI_inst.diplay_number.rest [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10133 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [22] -> \UI_inst.diplay_number.rest [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10134 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [23] -> \UI_inst.diplay_number.rest [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10135 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [24] -> \UI_inst.diplay_number.rest [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10136 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [25] -> \UI_inst.diplay_number.rest [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10137 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [26] -> \UI_inst.diplay_number.rest [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10138 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [27] -> \UI_inst.diplay_number.rest [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10139 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [28] -> \UI_inst.diplay_number.rest [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10140 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [29] -> \UI_inst.diplay_number.rest [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10141 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [30] -> \UI_inst.diplay_number.rest [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10142 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [31] -> \UI_inst.diplay_number.rest [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10143 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [0] -> \UI_inst.diplay_number.acc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10144 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [1] -> \UI_inst.diplay_number.acc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10145 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [2] -> \UI_inst.diplay_number.acc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10146 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [3] -> \UI_inst.diplay_number.acc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10147 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [4] -> \UI_inst.diplay_number.acc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10148 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [5] -> \UI_inst.diplay_number.acc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10149 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [6] -> \UI_inst.diplay_number.acc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10150 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [7] -> \UI_inst.diplay_number.acc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10151 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [8] -> \UI_inst.diplay_number.acc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10152 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [9] -> \UI_inst.diplay_number.acc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10153 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [10] -> \UI_inst.diplay_number.acc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10154 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [11] -> \UI_inst.diplay_number.acc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10155 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [12] -> \UI_inst.diplay_number.acc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10156 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [13] -> \UI_inst.diplay_number.acc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10157 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [14] -> \UI_inst.diplay_number.acc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10158 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [15] -> \UI_inst.diplay_number.acc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10159 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [16] -> \UI_inst.diplay_number.acc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10160 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [17] -> \UI_inst.diplay_number.acc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10161 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [18] -> \UI_inst.diplay_number.acc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10162 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [19] -> \UI_inst.diplay_number.acc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10163 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [20] -> \UI_inst.diplay_number.acc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10164 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [21] -> \UI_inst.diplay_number.acc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10165 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [22] -> \UI_inst.diplay_number.acc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10166 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [23] -> \UI_inst.diplay_number.acc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10167 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [24] -> \UI_inst.diplay_number.acc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10168 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [25] -> \UI_inst.diplay_number.acc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10169 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [26] -> \UI_inst.diplay_number.acc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10170 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [27] -> \UI_inst.diplay_number.acc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10171 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [28] -> \UI_inst.diplay_number.acc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10172 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [29] -> \UI_inst.diplay_number.acc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10173 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [30] -> \UI_inst.diplay_number.acc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10174 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [31] -> \UI_inst.diplay_number.acc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10175 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [32] -> \UI_inst.diplay_number.acc [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10176 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [0] -> \UI_inst.diplay_number.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10177 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [1] -> \UI_inst.diplay_number.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10178 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [2] -> \UI_inst.diplay_number.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10179 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [3] -> \UI_inst.diplay_number.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10180 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [4] -> \UI_inst.diplay_number.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10181 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [5] -> \UI_inst.diplay_number.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10182 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [6] -> \UI_inst.diplay_number.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10183 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [7] -> \UI_inst.diplay_number.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10184 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\we[0:0] -> \UI_inst.diplay_number.we.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12176 to $_DFFE_PP_ for $techmap\UI_inst.LCD.delay_counter.$0\counter[19:0] [1] -> \UI_inst.LCD.delay_counter.counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3483 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [0] -> \adc_host_hi.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3484 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [1] -> \adc_host_hi.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3485 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [2] -> \adc_host_hi.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3486 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [3] -> \adc_host_hi.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3487 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [4] -> \adc_host_hi.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3488 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [5] -> \adc_host_hi.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3489 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [6] -> \adc_host_hi.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3490 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [7] -> \adc_host_hi.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3491 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [8] -> \adc_host_hi.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3492 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [9] -> \adc_host_hi.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3493 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [10] -> \adc_host_hi.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3494 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [11] -> \adc_host_hi.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3495 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [12] -> \adc_host_hi.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3496 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [13] -> \adc_host_hi.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3497 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [14] -> \adc_host_hi.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3498 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [15] -> \adc_host_hi.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3500 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\count[7:0] [1] -> \adc_host_hi.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3507 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\acq[0:0] -> \adc_host_hi.acq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3509 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\CONVST[0:0] -> \adc_host_hi.CONVST.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3645 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3647 to $_DFFE_PP_ for $0\cnt[31:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3678 to $_DFFE_PP_ for $0\loadlookup[0:0] -> \loadlookup.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3681 to $_DFFE_PP_ for $techmap\F2SRAM.$0\poscount[16:0] [1] -> \F2SRAM.poscount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3697 to $_DFFE_PP_ for $techmap\F2SRAM.$0\busystop[0:0] -> \F2SRAM.busystop.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3699 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [0] -> \F2SRAM.spi_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3700 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [1] -> \F2SRAM.spi_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3701 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [2] -> \F2SRAM.spi_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3702 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [3] -> \F2SRAM.spi_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3703 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [4] -> \F2SRAM.spi_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3704 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [5] -> \F2SRAM.spi_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3705 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [6] -> \F2SRAM.spi_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3706 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [7] -> \F2SRAM.spi_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3707 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [8] -> \F2SRAM.spi_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3708 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [9] -> \F2SRAM.spi_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3709 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [10] -> \F2SRAM.spi_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3710 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [11] -> \F2SRAM.spi_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3711 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [12] -> \F2SRAM.spi_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3712 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [13] -> \F2SRAM.spi_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3713 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [14] -> \F2SRAM.spi_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3714 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [15] -> \F2SRAM.spi_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3715 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [16] -> \F2SRAM.spi_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3716 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [17] -> \F2SRAM.spi_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3717 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [18] -> \F2SRAM.spi_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3718 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [19] -> \F2SRAM.spi_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3719 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [20] -> \F2SRAM.spi_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3720 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [21] -> \F2SRAM.spi_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3721 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [22] -> \F2SRAM.spi_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3722 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [23] -> \F2SRAM.spi_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3723 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [0] -> \F2SRAM.f_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3724 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [1] -> \F2SRAM.f_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3725 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [2] -> \F2SRAM.f_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3726 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [3] -> \F2SRAM.f_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3727 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [4] -> \F2SRAM.f_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3728 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [5] -> \F2SRAM.f_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3729 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [6] -> \F2SRAM.f_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3730 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [7] -> \F2SRAM.f_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3731 to $_DFFE_PP_ for $techmap\F2SRAM.$0\second[0:0] -> \F2SRAM.second.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3733 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [0] -> \F2SRAM.wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3734 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [1] -> \F2SRAM.wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3735 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [2] -> \F2SRAM.wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3736 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [3] -> \F2SRAM.wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3737 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [4] -> \F2SRAM.wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3738 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [5] -> \F2SRAM.wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3739 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [6] -> \F2SRAM.wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3740 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [7] -> \F2SRAM.wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3741 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [8] -> \F2SRAM.wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3742 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [9] -> \F2SRAM.wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3743 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [10] -> \F2SRAM.wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3744 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [11] -> \F2SRAM.wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3745 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [12] -> \F2SRAM.wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3746 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [13] -> \F2SRAM.wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3747 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [14] -> \F2SRAM.wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3748 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [15] -> \F2SRAM.wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3750 to $_DFFE_PP_ for $techmap\F2SRAM.$0\addr[15:0] [1] -> \F2SRAM.addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4140 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [0] -> \dds_core.addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4141 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [1] -> \dds_core.addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4142 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [2] -> \dds_core.addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4143 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [3] -> \dds_core.addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4144 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [4] -> \dds_core.addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4145 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [5] -> \dds_core.addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4146 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [6] -> \dds_core.addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4147 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [7] -> \dds_core.addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4148 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [8] -> \dds_core.addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4149 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [9] -> \dds_core.addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4150 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [10] -> \dds_core.addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4151 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [11] -> \dds_core.addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4152 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [12] -> \dds_core.addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4153 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [13] -> \dds_core.addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4154 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [14] -> \dds_core.addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4155 to $_DFFE_PP_ for $techmap\dds_core.$0\addr[15:0] [15] -> \dds_core.addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4156 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [0] -> \dds_core.sin [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4157 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [1] -> \dds_core.sin [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4158 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [2] -> \dds_core.sin [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4159 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [3] -> \dds_core.sin [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4160 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [4] -> \dds_core.sin [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4161 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [5] -> \dds_core.sin [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4162 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [6] -> \dds_core.sin [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4163 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [7] -> \dds_core.sin [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4164 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [8] -> \dds_core.sin [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4165 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [9] -> \dds_core.sin [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4166 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [10] -> \dds_core.sin [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4167 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [11] -> \dds_core.sin [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4168 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [12] -> \dds_core.sin [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4169 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [13] -> \dds_core.sin [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4170 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [14] -> \dds_core.sin [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4171 to $_DFFE_PP_ for $techmap\dds_core.$0\sin[15:0] [15] -> \dds_core.sin [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4280 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [0] -> \Filter1.inaddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4281 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [1] -> \Filter1.inaddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4282 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [2] -> \Filter1.inaddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4283 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [3] -> \Filter1.inaddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4284 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [4] -> \Filter1.inaddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4285 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [5] -> \Filter1.inaddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4286 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [6] -> \Filter1.inaddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4287 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [7] -> \Filter1.inaddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4346 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [0] -> \Filter1.I0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4347 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [1] -> \Filter1.I0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4348 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [2] -> \Filter1.I0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4349 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [3] -> \Filter1.I0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4350 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [4] -> \Filter1.I0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4351 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [5] -> \Filter1.I0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4352 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [6] -> \Filter1.I0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4353 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [7] -> \Filter1.I0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4354 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [8] -> \Filter1.I0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4355 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [9] -> \Filter1.I0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4356 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [10] -> \Filter1.I0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4357 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [11] -> \Filter1.I0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4358 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [12] -> \Filter1.I0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4359 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [13] -> \Filter1.I0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4360 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [14] -> \Filter1.I0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4361 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [15] -> \Filter1.I0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4362 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [16] -> \Filter1.I0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4363 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [17] -> \Filter1.I0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4364 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [18] -> \Filter1.I0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4365 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [19] -> \Filter1.I0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4366 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [20] -> \Filter1.I0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4367 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [21] -> \Filter1.I0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4368 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [22] -> \Filter1.I0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4369 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [23] -> \Filter1.I0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4370 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [24] -> \Filter1.I0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4371 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [25] -> \Filter1.I0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4372 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [26] -> \Filter1.I0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4373 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [27] -> \Filter1.I0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4374 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [28] -> \Filter1.I0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4375 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [29] -> \Filter1.I0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4376 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [30] -> \Filter1.I0 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4377 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [31] -> \Filter1.I0 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4378 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [32] -> \Filter1.I0 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4379 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [33] -> \Filter1.I0 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4380 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [34] -> \Filter1.I0 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4381 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [35] -> \Filter1.I0 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4382 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [36] -> \Filter1.I0 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4383 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [37] -> \Filter1.I0 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4384 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [38] -> \Filter1.I0 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4385 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [39] -> \Filter1.I0 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4386 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [40] -> \Filter1.I0 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4387 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [41] -> \Filter1.I0 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4388 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [42] -> \Filter1.I0 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4389 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [43] -> \Filter1.I0 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4390 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [44] -> \Filter1.I0 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4391 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [45] -> \Filter1.I0 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4392 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [46] -> \Filter1.I0 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4393 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [47] -> \Filter1.I0 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4394 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [48] -> \Filter1.I0 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4395 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [0] -> \Filter1.tickcount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4396 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [1] -> \Filter1.tickcount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4397 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [2] -> \Filter1.tickcount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4398 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [3] -> \Filter1.tickcount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4399 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [4] -> \Filter1.tickcount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4400 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [5] -> \Filter1.tickcount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4401 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [6] -> \Filter1.tickcount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4402 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [7] -> \Filter1.tickcount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4403 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [8] -> \Filter1.tickcount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4404 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [9] -> \Filter1.tickcount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4405 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [10] -> \Filter1.tickcount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4407 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [0] -> \Filter1.OUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4408 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [1] -> \Filter1.OUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4409 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [2] -> \Filter1.OUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4410 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [3] -> \Filter1.OUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4411 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [4] -> \Filter1.OUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4412 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [5] -> \Filter1.OUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4413 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [6] -> \Filter1.OUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4414 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [7] -> \Filter1.OUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4415 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [8] -> \Filter1.OUT [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4416 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [9] -> \Filter1.OUT [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4417 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [10] -> \Filter1.OUT [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4418 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [11] -> \Filter1.OUT [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4419 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [12] -> \Filter1.OUT [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4420 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [13] -> \Filter1.OUT [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4421 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [14] -> \Filter1.OUT [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4422 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [15] -> \Filter1.OUT [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4423 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [16] -> \Filter1.OUT [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4424 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [17] -> \Filter1.OUT [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4425 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [18] -> \Filter1.OUT [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4426 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [19] -> \Filter1.OUT [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4427 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [20] -> \Filter1.OUT [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4428 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [21] -> \Filter1.OUT [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4429 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [22] -> \Filter1.OUT [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4430 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [23] -> \Filter1.OUT [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4431 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [24] -> \Filter1.OUT [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4432 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [25] -> \Filter1.OUT [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4433 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [26] -> \Filter1.OUT [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4434 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [27] -> \Filter1.OUT [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4435 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [28] -> \Filter1.OUT [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4436 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [29] -> \Filter1.OUT [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4437 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [30] -> \Filter1.OUT [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4438 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [31] -> \Filter1.OUT [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5901 to $_DFFE_PP_ for $techmap\cordicCORE.$0\iteration[4:0] [1] -> \cordicCORE.iteration [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6443 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [0] -> \UI_inst.cnt1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6444 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [1] -> \UI_inst.cnt1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6445 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [2] -> \UI_inst.cnt1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6446 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [3] -> \UI_inst.cnt1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6447 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [4] -> \UI_inst.cnt1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6448 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [5] -> \UI_inst.cnt1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6449 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [6] -> \UI_inst.cnt1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6450 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [7] -> \UI_inst.cnt1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6451 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [8] -> \UI_inst.cnt1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6452 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [9] -> \UI_inst.cnt1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6453 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [10] -> \UI_inst.cnt1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6454 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [11] -> \UI_inst.cnt1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6455 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [12] -> \UI_inst.cnt1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6456 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [13] -> \UI_inst.cnt1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6457 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [14] -> \UI_inst.cnt1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6458 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [15] -> \UI_inst.cnt1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6459 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [16] -> \UI_inst.cnt1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6460 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [17] -> \UI_inst.cnt1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6461 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [18] -> \UI_inst.cnt1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6462 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [19] -> \UI_inst.cnt1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6463 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [20] -> \UI_inst.cnt1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6464 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [21] -> \UI_inst.cnt1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6465 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [22] -> \UI_inst.cnt1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6466 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [23] -> \UI_inst.cnt1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6488 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [0] -> \UI_inst.cnt3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6489 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [1] -> \UI_inst.cnt3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6490 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [2] -> \UI_inst.cnt3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6491 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [3] -> \UI_inst.cnt3 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6492 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [4] -> \UI_inst.cnt3 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6493 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [5] -> \UI_inst.cnt3 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6494 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [6] -> \UI_inst.cnt3 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6495 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [7] -> \UI_inst.cnt3 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6496 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [8] -> \UI_inst.cnt3 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6497 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [9] -> \UI_inst.cnt3 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6498 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [10] -> \UI_inst.cnt3 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6499 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [11] -> \UI_inst.cnt3 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6500 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [12] -> \UI_inst.cnt3 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6501 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [13] -> \UI_inst.cnt3 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6502 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [14] -> \UI_inst.cnt3 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6503 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [15] -> \UI_inst.cnt3 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6504 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [16] -> \UI_inst.cnt3 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6505 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [17] -> \UI_inst.cnt3 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6506 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [18] -> \UI_inst.cnt3 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6507 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [19] -> \UI_inst.cnt3 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6508 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [20] -> \UI_inst.cnt3 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6509 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [21] -> \UI_inst.cnt3 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6510 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [22] -> \UI_inst.cnt3 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6511 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [23] -> \UI_inst.cnt3 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6512 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [0] -> \UI_inst.cnt2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6513 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [1] -> \UI_inst.cnt2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6514 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [2] -> \UI_inst.cnt2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6515 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [3] -> \UI_inst.cnt2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6516 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [4] -> \UI_inst.cnt2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6517 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [5] -> \UI_inst.cnt2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6518 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [6] -> \UI_inst.cnt2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6519 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [7] -> \UI_inst.cnt2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6520 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [8] -> \UI_inst.cnt2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6521 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [9] -> \UI_inst.cnt2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6522 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [10] -> \UI_inst.cnt2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6523 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [11] -> \UI_inst.cnt2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6524 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [12] -> \UI_inst.cnt2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6525 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [13] -> \UI_inst.cnt2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6526 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [14] -> \UI_inst.cnt2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6527 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [15] -> \UI_inst.cnt2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6528 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [16] -> \UI_inst.cnt2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6529 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [17] -> \UI_inst.cnt2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6530 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [18] -> \UI_inst.cnt2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6531 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [19] -> \UI_inst.cnt2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6532 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [20] -> \UI_inst.cnt2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6533 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [21] -> \UI_inst.cnt2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6534 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [22] -> \UI_inst.cnt2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6535 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [23] -> \UI_inst.cnt2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6536 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [0] -> \UI_inst.cnt0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6537 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [1] -> \UI_inst.cnt0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6538 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [2] -> \UI_inst.cnt0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6539 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [3] -> \UI_inst.cnt0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6540 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [4] -> \UI_inst.cnt0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6541 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [5] -> \UI_inst.cnt0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6542 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [6] -> \UI_inst.cnt0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6543 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [7] -> \UI_inst.cnt0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6544 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [8] -> \UI_inst.cnt0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6545 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [9] -> \UI_inst.cnt0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6546 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [10] -> \UI_inst.cnt0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6547 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [11] -> \UI_inst.cnt0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6548 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [12] -> \UI_inst.cnt0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6549 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [13] -> \UI_inst.cnt0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6550 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [14] -> \UI_inst.cnt0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6551 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [15] -> \UI_inst.cnt0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6552 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [16] -> \UI_inst.cnt0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6553 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [17] -> \UI_inst.cnt0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6554 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [18] -> \UI_inst.cnt0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6555 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [19] -> \UI_inst.cnt0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6556 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [20] -> \UI_inst.cnt0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6557 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [21] -> \UI_inst.cnt0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6558 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [22] -> \UI_inst.cnt0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6559 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [23] -> \UI_inst.cnt0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6572 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [0] -> \UI_inst.datS [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6573 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [1] -> \UI_inst.datS [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6574 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [2] -> \UI_inst.datS [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6575 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [3] -> \UI_inst.datS [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6576 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [4] -> \UI_inst.datS [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6577 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [5] -> \UI_inst.datS [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6578 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [6] -> \UI_inst.datS [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6579 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2524.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7198_Y [7] -> \UI_inst.datS [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6580 to $_DFFE_PP_ for $techmap\UI_inst.$0\ismagphase[0:0] -> \UI_inst.ismagphase.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6581 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2396.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7629_Y [0] -> \UI_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6582 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2396.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7629_Y [1] -> \UI_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6583 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2396.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7629_Y [2] -> \UI_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6584 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2396.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7629_Y [3] -> \UI_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6587 to $_DFFE_PP_ for $auto$simplemap.cc:309:simplemap_lut$21543 -> \UI_inst.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6610 to $_DFFE_PP_ for $techmap\UI_inst.$0\refIO[0:0] -> \UI_inst.refIO.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6611 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [0] -> \UI_inst.refampl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6612 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [1] -> \UI_inst.refampl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6613 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [0] -> \UI_inst.reffreq [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6614 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [1] -> \UI_inst.reffreq [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6615 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [2] -> \UI_inst.reffreq [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6616 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [0] -> \UI_inst.TC [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6617 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [1] -> \UI_inst.TC [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6618 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [2] -> \UI_inst.TC [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6619 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [3] -> \UI_inst.TC [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6620 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [0] -> \UI_inst.gain [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6621 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [1] -> \UI_inst.gain [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7923 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [0] -> \F2SRAM.SPI_READER.fsm_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7924 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [1] -> \F2SRAM.SPI_READER.fsm_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7957 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit_last[0:0] -> \F2SRAM.SPI_READER.cnt_bit_last.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7958 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [0] -> \F2SRAM.SPI_READER.cnt_bit [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7959 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [1] -> \F2SRAM.SPI_READER.cnt_bit [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7960 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [2] -> \F2SRAM.SPI_READER.cnt_bit [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7961 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [0] -> \F2SRAM.SPI_READER.cnt_cmd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7962 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [1] -> \F2SRAM.SPI_READER.cnt_cmd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7963 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [0] -> \F2SRAM.SPI_READER.cnt_len [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7964 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [1] -> \F2SRAM.SPI_READER.cnt_len [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7965 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [2] -> \F2SRAM.SPI_READER.cnt_len [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7966 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [3] -> \F2SRAM.SPI_READER.cnt_len [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7967 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [4] -> \F2SRAM.SPI_READER.cnt_len [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7968 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [5] -> \F2SRAM.SPI_READER.cnt_len [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7969 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [6] -> \F2SRAM.SPI_READER.cnt_len [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7970 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [7] -> \F2SRAM.SPI_READER.cnt_len [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7971 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [8] -> \F2SRAM.SPI_READER.cnt_len [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7972 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [9] -> \F2SRAM.SPI_READER.cnt_len [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7973 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [10] -> \F2SRAM.SPI_READER.cnt_len [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7974 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [11] -> \F2SRAM.SPI_READER.cnt_len [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7975 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [12] -> \F2SRAM.SPI_READER.cnt_len [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7976 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [13] -> \F2SRAM.SPI_READER.cnt_len [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7977 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [14] -> \F2SRAM.SPI_READER.cnt_len [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7978 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [15] -> \F2SRAM.SPI_READER.cnt_len [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7979 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [16] -> \F2SRAM.SPI_READER.cnt_len [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7980 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [17] -> \F2SRAM.SPI_READER.cnt_len [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8164 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [0] -> \cordicCORE.U.x_i_s_pipe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8165 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [1] -> \cordicCORE.U.x_i_s_pipe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8166 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [2] -> \cordicCORE.U.x_i_s_pipe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8167 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [3] -> \cordicCORE.U.x_i_s_pipe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8168 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [4] -> \cordicCORE.U.x_i_s_pipe [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8169 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [5] -> \cordicCORE.U.x_i_s_pipe [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8170 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [6] -> \cordicCORE.U.x_i_s_pipe [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8171 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [7] -> \cordicCORE.U.x_i_s_pipe [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8172 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [8] -> \cordicCORE.U.x_i_s_pipe [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8173 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [9] -> \cordicCORE.U.x_i_s_pipe [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8174 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [10] -> \cordicCORE.U.x_i_s_pipe [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8175 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [11] -> \cordicCORE.U.x_i_s_pipe [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8176 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [12] -> \cordicCORE.U.x_i_s_pipe [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8177 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [13] -> \cordicCORE.U.x_i_s_pipe [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8178 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [14] -> \cordicCORE.U.x_i_s_pipe [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8179 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [15] -> \cordicCORE.U.x_i_s_pipe [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8180 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\x_i_s_pipe[16:0] [16] -> \cordicCORE.U.x_i_s_pipe [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8198 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [0] -> \cordicCORE.U.y_i_s_pipe [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8199 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [1] -> \cordicCORE.U.y_i_s_pipe [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8200 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [2] -> \cordicCORE.U.y_i_s_pipe [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8201 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [3] -> \cordicCORE.U.y_i_s_pipe [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8202 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [4] -> \cordicCORE.U.y_i_s_pipe [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8203 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [5] -> \cordicCORE.U.y_i_s_pipe [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8204 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [6] -> \cordicCORE.U.y_i_s_pipe [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8205 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [7] -> \cordicCORE.U.y_i_s_pipe [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8206 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [8] -> \cordicCORE.U.y_i_s_pipe [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8207 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [9] -> \cordicCORE.U.y_i_s_pipe [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8208 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [10] -> \cordicCORE.U.y_i_s_pipe [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8209 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [11] -> \cordicCORE.U.y_i_s_pipe [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8210 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [12] -> \cordicCORE.U.y_i_s_pipe [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8211 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [13] -> \cordicCORE.U.y_i_s_pipe [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8212 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [14] -> \cordicCORE.U.y_i_s_pipe [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8213 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [15] -> \cordicCORE.U.y_i_s_pipe [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8214 to $_DFFE_PP_ for $techmap\cordicCORE.U.$0\y_i_s_pipe[16:0] [16] -> \cordicCORE.U.y_i_s_pipe [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8646 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [0] -> \UI_inst.LCD.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8647 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [1] -> \UI_inst.LCD.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8648 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [2] -> \UI_inst.LCD.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8649 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [3] -> \UI_inst.LCD.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8650 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [4] -> \UI_inst.LCD.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8651 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [5] -> \UI_inst.LCD.pos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8652 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [6] -> \UI_inst.LCD.pos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8653 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [7] -> \UI_inst.LCD.pos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8654 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [8] -> \UI_inst.LCD.pos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8655 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [9] -> \UI_inst.LCD.pos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8656 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [10] -> \UI_inst.LCD.pos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8657 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [11] -> \UI_inst.LCD.pos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8658 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [12] -> \UI_inst.LCD.pos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8659 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [13] -> \UI_inst.LCD.pos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8660 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [14] -> \UI_inst.LCD.pos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8661 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [15] -> \UI_inst.LCD.pos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8662 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [16] -> \UI_inst.LCD.pos [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8663 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [17] -> \UI_inst.LCD.pos [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8664 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [18] -> \UI_inst.LCD.pos [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8665 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [19] -> \UI_inst.LCD.pos [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8666 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [20] -> \UI_inst.LCD.pos [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8667 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [21] -> \UI_inst.LCD.pos [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8668 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [22] -> \UI_inst.LCD.pos [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8669 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [23] -> \UI_inst.LCD.pos [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8670 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [24] -> \UI_inst.LCD.pos [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8671 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [25] -> \UI_inst.LCD.pos [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8672 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [26] -> \UI_inst.LCD.pos [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8673 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [27] -> \UI_inst.LCD.pos [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8674 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [28] -> \UI_inst.LCD.pos [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8675 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [29] -> \UI_inst.LCD.pos [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8676 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [30] -> \UI_inst.LCD.pos [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8677 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1051.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8876_Y [31] -> \UI_inst.LCD.pos [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8699 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$940.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7540_Y -> \UI_inst.LCD.LCD_E1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8700 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$961.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [0] -> \UI_inst.LCD.SF_D1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8701 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$961.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [1] -> \UI_inst.LCD.SF_D1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8702 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$961.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [2] -> \UI_inst.LCD.SF_D1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8703 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$961.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [3] -> \UI_inst.LCD.SF_D1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8709 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [0] -> \UI_inst.LCD.tx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8710 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [1] -> \UI_inst.LCD.tx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8711 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [2] -> \UI_inst.LCD.tx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8712 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [3] -> \UI_inst.LCD.tx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8713 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [4] -> \UI_inst.LCD.tx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8714 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [5] -> \UI_inst.LCD.tx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8715 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [6] -> \UI_inst.LCD.tx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8716 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1033.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9032_Y [7] -> \UI_inst.LCD.tx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8717 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$778.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9409_Y -> \UI_inst.LCD.tx_delay_load.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8718 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [0] -> \UI_inst.LCD.tx_delay_value [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8719 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [1] -> \UI_inst.LCD.tx_delay_value [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8720 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [2] -> \UI_inst.LCD.tx_delay_value [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8721 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [3] -> \UI_inst.LCD.tx_delay_value [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8722 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [4] -> \UI_inst.LCD.tx_delay_value [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8723 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [5] -> \UI_inst.LCD.tx_delay_value [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8724 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [6] -> \UI_inst.LCD.tx_delay_value [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8725 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [7] -> \UI_inst.LCD.tx_delay_value [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8726 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [8] -> \UI_inst.LCD.tx_delay_value [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8727 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [9] -> \UI_inst.LCD.tx_delay_value [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8728 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [10] -> \UI_inst.LCD.tx_delay_value [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8729 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [11] -> \UI_inst.LCD.tx_delay_value [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8730 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [12] -> \UI_inst.LCD.tx_delay_value [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8731 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [13] -> \UI_inst.LCD.tx_delay_value [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8732 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [14] -> \UI_inst.LCD.tx_delay_value [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8733 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [15] -> \UI_inst.LCD.tx_delay_value [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8734 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [16] -> \UI_inst.LCD.tx_delay_value [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8735 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [17] -> \UI_inst.LCD.tx_delay_value [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8736 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [18] -> \UI_inst.LCD.tx_delay_value [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8737 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9529_Y [19] -> \UI_inst.LCD.tx_delay_value [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8738 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$815.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7540_Y -> \UI_inst.LCD.LCD_E0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8739 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$825.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [0] -> \UI_inst.LCD.SF_D0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8740 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$825.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [1] -> \UI_inst.LCD.SF_D0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8741 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$825.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [2] -> \UI_inst.LCD.SF_D0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8742 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$825.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6847_Y [3] -> \UI_inst.LCD.SF_D0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8743 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$830.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7540_Y -> \UI_inst.LCD.tx_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9969 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\leadz[0:0] -> \UI_inst.diplay_number.leadz.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9970 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\holdoff[0:0] -> \UI_inst.diplay_number.holdoff.
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$8704 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$969.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9356_Y [0] -> \UI_inst.LCD.display_state [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$8705 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$969.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9356_Y [1] -> \UI_inst.LCD.display_state [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$8706 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$969.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9356_Y [2] -> \UI_inst.LCD.display_state [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$8707 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$969.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9356_Y [3] -> \UI_inst.LCD.display_state [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$8708 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$969.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9356_Y [4] -> \UI_inst.LCD.display_state [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$8744 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$837.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9433_Y [0] -> \UI_inst.LCD.tx_state [0].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$8745 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$837.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9433_Y [1] -> \UI_inst.LCD.tx_state [1].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$8746 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$837.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9433_Y [2] -> \UI_inst.LCD.tx_state [2].

18.34. Executing TECHMAP pass (map to technology primitives).

18.34.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

18.34.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$__DFFE_PP1 for cells of type $__DFFE_PP1.
No more expansions possible.
<suppressed ~1007 debug messages>

18.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1884 debug messages>

18.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

18.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8745 (SB_DFFES): \UI_inst.LCD.tx_state [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10003 (SB_DFFE): \UI_inst.diplay_number.difference [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10004 (SB_DFFE): \UI_inst.diplay_number.dec [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10005 (SB_DFFE): \UI_inst.diplay_number.dec [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10006 (SB_DFFE): \UI_inst.diplay_number.dec [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10012 (SB_DFFE): \UI_inst.diplay_number.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10007 (SB_DFFE): \UI_inst.diplay_number.dec [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10009 (SB_DFFE): \UI_inst.diplay_number.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10010 (SB_DFFE): \UI_inst.diplay_number.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9970 (SB_DFFE): \UI_inst.diplay_number.holdoff = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10011 (SB_DFFE): \UI_inst.diplay_number.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10021 (SB_DFFE): \UI_inst.diplay_number.summand [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10014 (SB_DFF): \UI_inst.diplay_number.lastupdate = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10013 (SB_DFF): \UI_inst.diplay_number.updating = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10016 (SB_DFFE): \UI_inst.diplay_number.summand [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10017 (SB_DFFE): \UI_inst.diplay_number.summand [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10018 (SB_DFFE): \UI_inst.diplay_number.summand [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10019 (SB_DFFE): \UI_inst.diplay_number.summand [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10008 (SB_DFFE): \UI_inst.diplay_number.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10020 (SB_DFFE): \UI_inst.diplay_number.summand [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10022 (SB_DFFE): \UI_inst.diplay_number.summand [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10023 (SB_DFFE): \UI_inst.diplay_number.summand [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10024 (SB_DFFE): \UI_inst.diplay_number.summand [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10025 (SB_DFFE): \UI_inst.diplay_number.summand [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10026 (SB_DFFE): \UI_inst.diplay_number.summand [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10027 (SB_DFFE): \UI_inst.diplay_number.summand [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10028 (SB_DFFE): \UI_inst.diplay_number.summand [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10029 (SB_DFFE): \UI_inst.diplay_number.summand [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10030 (SB_DFFE): \UI_inst.diplay_number.summand [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10031 (SB_DFFE): \UI_inst.diplay_number.summand [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10032 (SB_DFFE): \UI_inst.diplay_number.summand [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10033 (SB_DFFE): \UI_inst.diplay_number.summand [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10034 (SB_DFFE): \UI_inst.diplay_number.summand [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10035 (SB_DFFE): \UI_inst.diplay_number.summand [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10036 (SB_DFFE): \UI_inst.diplay_number.summand [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10037 (SB_DFFE): \UI_inst.diplay_number.summand [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10038 (SB_DFFE): \UI_inst.diplay_number.summand [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10039 (SB_DFFE): \UI_inst.diplay_number.summand [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10040 (SB_DFFE): \UI_inst.diplay_number.summand [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10041 (SB_DFFE): \UI_inst.diplay_number.summand [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10042 (SB_DFFE): \UI_inst.diplay_number.summand [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10043 (SB_DFFE): \UI_inst.diplay_number.summand [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10044 (SB_DFFE): \UI_inst.diplay_number.summand [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10045 (SB_DFFE): \UI_inst.diplay_number.summand [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10046 (SB_DFFE): \UI_inst.diplay_number.summand [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10047 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10048 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10049 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10050 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10051 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10052 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10053 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10015 (SB_DFFE): \UI_inst.diplay_number.summand [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10054 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10056 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10057 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10058 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10059 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10060 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10061 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10062 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10063 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10064 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10065 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10066 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10067 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10068 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10069 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10070 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10071 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10072 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10073 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10074 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10075 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10076 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10077 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10078 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10079 (SB_DFFE): \UI_inst.diplay_number.lastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10080 (SB_DFFE): \UI_inst.diplay_number.lastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10081 (SB_DFFE): \UI_inst.diplay_number.lastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10082 (SB_DFFE): \UI_inst.diplay_number.lastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10083 (SB_DFFE): \UI_inst.diplay_number.lastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10084 (SB_DFFE): \UI_inst.diplay_number.lastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10085 (SB_DFFE): \UI_inst.diplay_number.lastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10055 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10086 (SB_DFFE): \UI_inst.diplay_number.lastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10088 (SB_DFFE): \UI_inst.diplay_number.lastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10089 (SB_DFFE): \UI_inst.diplay_number.lastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10090 (SB_DFFE): \UI_inst.diplay_number.lastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10091 (SB_DFFE): \UI_inst.diplay_number.lastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10092 (SB_DFFE): \UI_inst.diplay_number.lastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10093 (SB_DFFE): \UI_inst.diplay_number.lastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10094 (SB_DFFE): \UI_inst.diplay_number.lastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10095 (SB_DFFE): \UI_inst.diplay_number.lastacc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10096 (SB_DFFE): \UI_inst.diplay_number.lastacc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10097 (SB_DFFE): \UI_inst.diplay_number.lastacc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10098 (SB_DFFE): \UI_inst.diplay_number.lastacc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10099 (SB_DFFE): \UI_inst.diplay_number.lastacc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10100 (SB_DFFE): \UI_inst.diplay_number.lastacc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10101 (SB_DFFE): \UI_inst.diplay_number.lastacc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10102 (SB_DFFE): \UI_inst.diplay_number.lastacc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10103 (SB_DFFE): \UI_inst.diplay_number.lastacc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10104 (SB_DFFE): \UI_inst.diplay_number.lastacc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10105 (SB_DFFE): \UI_inst.diplay_number.lastacc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10106 (SB_DFFE): \UI_inst.diplay_number.lastacc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10107 (SB_DFFE): \UI_inst.diplay_number.lastacc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10108 (SB_DFFE): \UI_inst.diplay_number.lastacc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10109 (SB_DFFE): \UI_inst.diplay_number.lastacc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10110 (SB_DFFE): \UI_inst.diplay_number.lastacc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10111 (SB_DFFE): \UI_inst.diplay_number.rest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10112 (SB_DFFE): \UI_inst.diplay_number.rest [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10113 (SB_DFFE): \UI_inst.diplay_number.rest [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10114 (SB_DFFE): \UI_inst.diplay_number.rest [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10115 (SB_DFFE): \UI_inst.diplay_number.rest [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10116 (SB_DFFE): \UI_inst.diplay_number.rest [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10117 (SB_DFFE): \UI_inst.diplay_number.rest [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10087 (SB_DFFE): \UI_inst.diplay_number.lastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10118 (SB_DFFE): \UI_inst.diplay_number.rest [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10120 (SB_DFFE): \UI_inst.diplay_number.rest [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10121 (SB_DFFE): \UI_inst.diplay_number.rest [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10122 (SB_DFFE): \UI_inst.diplay_number.rest [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10123 (SB_DFFE): \UI_inst.diplay_number.rest [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10124 (SB_DFFE): \UI_inst.diplay_number.rest [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10125 (SB_DFFE): \UI_inst.diplay_number.rest [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10126 (SB_DFFE): \UI_inst.diplay_number.rest [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10127 (SB_DFFE): \UI_inst.diplay_number.rest [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10128 (SB_DFFE): \UI_inst.diplay_number.rest [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10129 (SB_DFFE): \UI_inst.diplay_number.rest [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10130 (SB_DFFE): \UI_inst.diplay_number.rest [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10131 (SB_DFFE): \UI_inst.diplay_number.rest [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10132 (SB_DFFE): \UI_inst.diplay_number.rest [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10133 (SB_DFFE): \UI_inst.diplay_number.rest [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10134 (SB_DFFE): \UI_inst.diplay_number.rest [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10135 (SB_DFFE): \UI_inst.diplay_number.rest [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10136 (SB_DFFE): \UI_inst.diplay_number.rest [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10137 (SB_DFFE): \UI_inst.diplay_number.rest [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10138 (SB_DFFE): \UI_inst.diplay_number.rest [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10139 (SB_DFFE): \UI_inst.diplay_number.rest [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10140 (SB_DFFE): \UI_inst.diplay_number.rest [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10141 (SB_DFFE): \UI_inst.diplay_number.rest [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10142 (SB_DFFE): \UI_inst.diplay_number.rest [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10143 (SB_DFFE): \UI_inst.diplay_number.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10144 (SB_DFFE): \UI_inst.diplay_number.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10145 (SB_DFFE): \UI_inst.diplay_number.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10146 (SB_DFFE): \UI_inst.diplay_number.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10147 (SB_DFFE): \UI_inst.diplay_number.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10148 (SB_DFFE): \UI_inst.diplay_number.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10149 (SB_DFFE): \UI_inst.diplay_number.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10119 (SB_DFFE): \UI_inst.diplay_number.rest [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10150 (SB_DFFE): \UI_inst.diplay_number.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10152 (SB_DFFE): \UI_inst.diplay_number.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10153 (SB_DFFE): \UI_inst.diplay_number.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10154 (SB_DFFE): \UI_inst.diplay_number.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10155 (SB_DFFE): \UI_inst.diplay_number.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10156 (SB_DFFE): \UI_inst.diplay_number.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10157 (SB_DFFE): \UI_inst.diplay_number.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10158 (SB_DFFE): \UI_inst.diplay_number.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10159 (SB_DFFE): \UI_inst.diplay_number.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10160 (SB_DFFE): \UI_inst.diplay_number.acc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10161 (SB_DFFE): \UI_inst.diplay_number.acc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10162 (SB_DFFE): \UI_inst.diplay_number.acc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10163 (SB_DFFE): \UI_inst.diplay_number.acc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10164 (SB_DFFE): \UI_inst.diplay_number.acc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10165 (SB_DFFE): \UI_inst.diplay_number.acc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10166 (SB_DFFE): \UI_inst.diplay_number.acc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10167 (SB_DFFE): \UI_inst.diplay_number.acc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10168 (SB_DFFE): \UI_inst.diplay_number.acc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10169 (SB_DFFE): \UI_inst.diplay_number.acc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10170 (SB_DFFE): \UI_inst.diplay_number.acc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10171 (SB_DFFE): \UI_inst.diplay_number.acc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10172 (SB_DFFE): \UI_inst.diplay_number.acc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10173 (SB_DFFE): \UI_inst.diplay_number.acc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10174 (SB_DFFE): \UI_inst.diplay_number.acc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10175 (SB_DFFE): \UI_inst.diplay_number.acc [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10176 (SB_DFFE): \UI_inst.diplay_number.dat [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10177 (SB_DFFE): \UI_inst.diplay_number.dat [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10178 (SB_DFFE): \UI_inst.diplay_number.dat [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10179 (SB_DFFE): \UI_inst.diplay_number.dat [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10180 (SB_DFFE): \UI_inst.diplay_number.dat [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10181 (SB_DFFE): \UI_inst.diplay_number.dat [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10182 (SB_DFFE): \UI_inst.diplay_number.dat [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10151 (SB_DFFE): \UI_inst.diplay_number.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10183 (SB_DFFE): \UI_inst.diplay_number.dat [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3488 (SB_DFFE): \adc_host_hi.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4141 (SB_DFFE): \dds_core.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4143 (SB_DFFE): \dds_core.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3506 (SB_DFF): \adc_host_hi.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4138 (SB_DFF): \dds_core.lastgo = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3484 (SB_DFFE): \adc_host_hi.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3485 (SB_DFFE): \adc_host_hi.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4145 (SB_DFFE): \dds_core.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4148 (SB_DFFE): \dds_core.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4150 (SB_DFFE): \dds_core.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4151 (SB_DFFE): \dds_core.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4153 (SB_DFFE): \dds_core.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4155 (SB_DFFE): \dds_core.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4157 (SB_DFFE): \dds_core.sin [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4159 (SB_DFFE): \dds_core.sin [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4161 (SB_DFFE): \dds_core.sin [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4163 (SB_DFFE): \dds_core.sin [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4166 (SB_DFFE): \dds_core.sin [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4168 (SB_DFFE): \dds_core.sin [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3632 (SB_DFF): \outstuff [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4171 (SB_DFFE): \dds_core.sin [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3638 (SB_DFF): \outstuff [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3487 (SB_DFFE): \adc_host_hi.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3515 (SB_DFFN): \adc_host_hi.shiftdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3508 (SB_DFF): \adc_host_hi.newdata = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3507 (SB_DFFE): \adc_host_hi.acq = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3510 (SB_DFFN): \adc_host_hi.shiftdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3511 (SB_DFFN): \adc_host_hi.shiftdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3512 (SB_DFFN): \adc_host_hi.shiftdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3513 (SB_DFFN): \adc_host_hi.shiftdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3514 (SB_DFFN): \adc_host_hi.shiftdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4154 (SB_DFFE): \dds_core.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3516 (SB_DFFN): \adc_host_hi.shiftdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3517 (SB_DFFN): \adc_host_hi.shiftdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3518 (SB_DFFN): \adc_host_hi.shiftdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3519 (SB_DFFN): \adc_host_hi.shiftdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3520 (SB_DFFN): \adc_host_hi.shiftdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3521 (SB_DFFN): \adc_host_hi.shiftdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3522 (SB_DFFN): \adc_host_hi.shiftdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3523 (SB_DFFN): \adc_host_hi.shiftdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3524 (SB_DFFN): \adc_host_hi.shiftdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4160 (SB_DFFE): \dds_core.sin [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4162 (SB_DFFE): \dds_core.sin [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4170 (SB_DFFE): \dds_core.sin [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4165 (SB_DFFE): \dds_core.sin [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4167 (SB_DFFE): \dds_core.sin [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4169 (SB_DFFE): \dds_core.sin [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3505 (SB_DFF): \adc_host_hi.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3486 (SB_DFFE): \adc_host_hi.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3640 (SB_DFF): \outstuff [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3641 (SB_DFF): \outstuff [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3642 (SB_DFF): \outstuff [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3643 (SB_DFF): \outstuff [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3644 (SB_DFF): \outstuff [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3647 (SB_DFFE): \cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8652 (SB_DFFE): \UI_inst.LCD.pos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3653 (SB_DFF): \cnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3648 (SB_DFF): \cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3649 (SB_DFF): \cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3650 (SB_DFF): \cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3651 (SB_DFF): \cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3652 (SB_DFF): \cnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3654 (SB_DFF): \cnt [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3629 (SB_DFF): \outstuff [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3655 (SB_DFF): \cnt [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3656 (SB_DFF): \cnt [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3657 (SB_DFF): \cnt [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3658 (SB_DFF): \cnt [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3659 (SB_DFF): \cnt [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3660 (SB_DFF): \cnt [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3661 (SB_DFF): \cnt [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3662 (SB_DFF): \cnt [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3663 (SB_DFF): \cnt [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3664 (SB_DFF): \cnt [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3665 (SB_DFF): \cnt [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3666 (SB_DFF): \cnt [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3667 (SB_DFF): \cnt [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3668 (SB_DFF): \cnt [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3681 (SB_DFFE): \F2SRAM.poscount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3739 (SB_DFFE): \F2SRAM.wdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3686 (SB_DFF): \F2SRAM.poscount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3679 (SB_DFF): \cinit = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3682 (SB_DFF): \F2SRAM.poscount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3683 (SB_DFF): \F2SRAM.poscount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3684 (SB_DFF): \F2SRAM.poscount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3685 (SB_DFF): \F2SRAM.poscount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3687 (SB_DFF): \F2SRAM.poscount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3646 (SB_DFF): \cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3688 (SB_DFF): \F2SRAM.poscount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3689 (SB_DFF): \F2SRAM.poscount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3690 (SB_DFF): \F2SRAM.poscount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3691 (SB_DFF): \F2SRAM.poscount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3692 (SB_DFF): \F2SRAM.poscount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3693 (SB_DFF): \F2SRAM.poscount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3694 (SB_DFF): \F2SRAM.poscount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3695 (SB_DFF): \F2SRAM.poscount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3696 (SB_DFF): \F2SRAM.poscount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3697 (SB_DFFE): \F2SRAM.busystop = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3700 (SB_DFFE): \F2SRAM.spi_addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3705 (SB_DFFE): \F2SRAM.spi_addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3698 (SB_DFF): \F2SRAM.spi_go = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3701 (SB_DFFE): \F2SRAM.spi_addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3702 (SB_DFFE): \F2SRAM.spi_addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3703 (SB_DFFE): \F2SRAM.spi_addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3704 (SB_DFFE): \F2SRAM.spi_addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3706 (SB_DFFE): \F2SRAM.spi_addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3680 (SB_DFF): \F2SRAM.poscount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3707 (SB_DFFE): \F2SRAM.spi_addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3708 (SB_DFFE): \F2SRAM.spi_addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3709 (SB_DFFE): \F2SRAM.spi_addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3710 (SB_DFFE): \F2SRAM.spi_addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3711 (SB_DFFE): \F2SRAM.spi_addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3712 (SB_DFFE): \F2SRAM.spi_addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3713 (SB_DFFE): \F2SRAM.spi_addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3714 (SB_DFFE): \F2SRAM.spi_addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3715 (SB_DFFE): \F2SRAM.spi_addr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3716 (SB_DFFE): \F2SRAM.spi_addr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3717 (SB_DFFE): \F2SRAM.spi_addr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3718 (SB_DFFE): \F2SRAM.spi_addr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3719 (SB_DFFE): \F2SRAM.spi_addr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3720 (SB_DFFE): \F2SRAM.spi_addr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3721 (SB_DFFE): \F2SRAM.spi_addr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3722 (SB_DFFE): \F2SRAM.spi_addr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3734 (SB_DFFE): \F2SRAM.wdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3699 (SB_DFFE): \F2SRAM.spi_addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3678 (SB_DFFE): \loadlookup = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3732 (SB_DFF): \F2SRAM.laststart = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3735 (SB_DFFE): \F2SRAM.wdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3736 (SB_DFFE): \F2SRAM.wdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3737 (SB_DFFE): \F2SRAM.wdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3738 (SB_DFFE): \F2SRAM.wdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3740 (SB_DFFE): \F2SRAM.wdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3731 (SB_DFFE): \F2SRAM.second = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3741 (SB_DFFE): \F2SRAM.wdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3742 (SB_DFFE): \F2SRAM.wdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3743 (SB_DFFE): \F2SRAM.wdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3744 (SB_DFFE): \F2SRAM.wdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3745 (SB_DFFE): \F2SRAM.wdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3746 (SB_DFFE): \F2SRAM.wdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3747 (SB_DFFE): \F2SRAM.wdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3748 (SB_DFFE): \F2SRAM.wdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3749 (SB_DFF): \F2SRAM.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3750 (SB_DFFE): \F2SRAM.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3751 (SB_DFF): \F2SRAM.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3752 (SB_DFF): \F2SRAM.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3753 (SB_DFF): \F2SRAM.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3754 (SB_DFF): \F2SRAM.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3755 (SB_DFF): \F2SRAM.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3756 (SB_DFF): \F2SRAM.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3758 (SB_DFF): \F2SRAM.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3733 (SB_DFFE): \F2SRAM.wdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3759 (SB_DFF): \F2SRAM.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3760 (SB_DFF): \F2SRAM.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3761 (SB_DFF): \F2SRAM.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3762 (SB_DFF): \F2SRAM.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3763 (SB_DFF): \F2SRAM.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3764 (SB_DFF): \F2SRAM.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3765 (SB_DFF): \F2SRAM.busy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3757 (SB_DFF): \F2SRAM.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3489 (SB_DFFE): \adc_host_hi.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4146 (SB_DFFE): \dds_core.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4139 (SB_DFF): \dds_core.iscos = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4142 (SB_DFFE): \dds_core.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3490 (SB_DFFE): \adc_host_hi.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4144 (SB_DFFE): \dds_core.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3491 (SB_DFFE): \adc_host_hi.data [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4147 (SB_DFFE): \dds_core.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3766 (SB_DFF): \F2SRAM.wen = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3492 (SB_DFFE): \adc_host_hi.data [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4149 (SB_DFFE): \dds_core.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3493 (SB_DFFE): \adc_host_hi.data [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3494 (SB_DFFE): \adc_host_hi.data [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4152 (SB_DFFE): \dds_core.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3495 (SB_DFFE): \adc_host_hi.data [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3525 (SB_DFFN): \adc_host_hi.shiftdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3496 (SB_DFFE): \adc_host_hi.data [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4156 (SB_DFFE): \dds_core.sin [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3497 (SB_DFFE): \adc_host_hi.data [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4158 (SB_DFFE): \dds_core.sin [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3498 (SB_DFFE): \adc_host_hi.data [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3630 (SB_DFF): \outstuff [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3499 (SB_DFF): \adc_host_hi.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3631 (SB_DFF): \outstuff [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3500 (SB_DFFE): \adc_host_hi.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3633 (SB_DFF): \outstuff [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4140 (SB_DFFE): \dds_core.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3501 (SB_DFF): \adc_host_hi.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3635 (SB_DFF): \outstuff [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3502 (SB_DFF): \adc_host_hi.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3636 (SB_DFF): \outstuff [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3503 (SB_DFF): \adc_host_hi.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3639 (SB_DFF): \outstuff [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3637 (SB_DFF): \outstuff [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10184 (SB_DFFE): \UI_inst.diplay_number.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4280 (SB_DFFE): \Filter1.inaddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4281 (SB_DFFE): \Filter1.inaddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4282 (SB_DFFE): \Filter1.inaddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4283 (SB_DFFE): \Filter1.inaddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4284 (SB_DFFE): \Filter1.inaddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4285 (SB_DFFE): \Filter1.inaddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4286 (SB_DFFE): \Filter1.inaddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4164 (SB_DFFE): \dds_core.sin [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4287 (SB_DFFE): \Filter1.inaddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4304 (SB_DFF): \Filter1.OUTpipe [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4298 (SB_DFF): \Filter1.OUTpipe [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4299 (SB_DFF): \Filter1.OUTpipe [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4300 (SB_DFF): \Filter1.OUTpipe [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4301 (SB_DFF): \Filter1.OUTpipe [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4302 (SB_DFF): \Filter1.OUTpipe [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4296 (SB_DFF): \Filter1.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4303 (SB_DFF): \Filter1.OUTpipe [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4305 (SB_DFF): \Filter1.OUTpipe [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4306 (SB_DFF): \Filter1.OUTpipe [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4307 (SB_DFF): \Filter1.OUTpipe [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4308 (SB_DFF): \Filter1.OUTpipe [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4309 (SB_DFF): \Filter1.OUTpipe [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4310 (SB_DFF): \Filter1.OUTpipe [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4311 (SB_DFF): \Filter1.OUTpipe [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4312 (SB_DFF): \Filter1.OUTpipe [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4313 (SB_DFF): \Filter1.OUTpipe [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFF): \Filter1.OUTpipe [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4315 (SB_DFF): \Filter1.OUTpipe [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4316 (SB_DFF): \Filter1.OUTpipe [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4317 (SB_DFF): \Filter1.OUTpipe [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4318 (SB_DFF): \Filter1.OUTpipe [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4319 (SB_DFF): \Filter1.OUTpipe [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFF): \Filter1.OUTpipe [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4321 (SB_DFF): \Filter1.OUTpipe [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4322 (SB_DFF): \Filter1.OUTpipe [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4323 (SB_DFF): \Filter1.OUTpipe [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4324 (SB_DFF): \Filter1.OUTpipe [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4325 (SB_DFF): \Filter1.OUTpipe [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4326 (SB_DFF): \Filter1.OUTpipe [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4327 (SB_DFF): \Filter1.OUTpipe [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4328 (SB_DFF): \Filter1.OUTpipe [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4329 (SB_DFF): \Filter1.OUTpipe [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFF): \Filter1.OUTpipe [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFF): \Filter1.OUTpipe [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4332 (SB_DFF): \Filter1.OUTpipe [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4333 (SB_DFF): \Filter1.OUTpipe [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4334 (SB_DFF): \Filter1.OUTpipe [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4335 (SB_DFF): \Filter1.OUTpipe [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4336 (SB_DFF): \Filter1.OUTpipe [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4337 (SB_DFF): \Filter1.OUTpipe [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4338 (SB_DFF): \Filter1.OUTpipe [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4339 (SB_DFF): \Filter1.OUTpipe [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4340 (SB_DFF): \Filter1.OUTpipe [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4341 (SB_DFF): \Filter1.OUTpipe [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4342 (SB_DFF): \Filter1.OUTpipe [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4343 (SB_DFF): \Filter1.OUTpipe [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4344 (SB_DFF): \Filter1.OUTpipe [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4345 (SB_DFF): \Filter1.OUTpipe [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4346 (SB_DFFE): \Filter1.I0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4347 (SB_DFFE): \Filter1.I0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4348 (SB_DFFE): \Filter1.I0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4349 (SB_DFFE): \Filter1.I0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4350 (SB_DFFE): \Filter1.I0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4351 (SB_DFFE): \Filter1.I0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4352 (SB_DFFE): \Filter1.I0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4297 (SB_DFF): \Filter1.OUTpipe [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4353 (SB_DFFE): \Filter1.I0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4355 (SB_DFFE): \Filter1.I0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4356 (SB_DFFE): \Filter1.I0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4357 (SB_DFFE): \Filter1.I0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4358 (SB_DFFE): \Filter1.I0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4359 (SB_DFFE): \Filter1.I0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4360 (SB_DFFE): \Filter1.I0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4361 (SB_DFFE): \Filter1.I0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4362 (SB_DFFE): \Filter1.I0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4363 (SB_DFFE): \Filter1.I0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4364 (SB_DFFE): \Filter1.I0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4365 (SB_DFFE): \Filter1.I0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4366 (SB_DFFE): \Filter1.I0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4367 (SB_DFFE): \Filter1.I0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4368 (SB_DFFE): \Filter1.I0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4369 (SB_DFFE): \Filter1.I0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4370 (SB_DFFE): \Filter1.I0 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4371 (SB_DFFE): \Filter1.I0 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4372 (SB_DFFE): \Filter1.I0 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4373 (SB_DFFE): \Filter1.I0 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4374 (SB_DFFE): \Filter1.I0 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4375 (SB_DFFE): \Filter1.I0 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4376 (SB_DFFE): \Filter1.I0 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4377 (SB_DFFE): \Filter1.I0 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4378 (SB_DFFE): \Filter1.I0 [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4379 (SB_DFFE): \Filter1.I0 [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4380 (SB_DFFE): \Filter1.I0 [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4381 (SB_DFFE): \Filter1.I0 [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4382 (SB_DFFE): \Filter1.I0 [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4383 (SB_DFFE): \Filter1.I0 [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4384 (SB_DFFE): \Filter1.I0 [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4385 (SB_DFFE): \Filter1.I0 [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4386 (SB_DFFE): \Filter1.I0 [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4387 (SB_DFFE): \Filter1.I0 [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4388 (SB_DFFE): \Filter1.I0 [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4389 (SB_DFFE): \Filter1.I0 [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4390 (SB_DFFE): \Filter1.I0 [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4391 (SB_DFFE): \Filter1.I0 [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4392 (SB_DFFE): \Filter1.I0 [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4393 (SB_DFFE): \Filter1.I0 [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4394 (SB_DFFE): \Filter1.I0 [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4395 (SB_DFFE): \Filter1.tickcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4396 (SB_DFFE): \Filter1.tickcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4397 (SB_DFFE): \Filter1.tickcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4398 (SB_DFFE): \Filter1.tickcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4399 (SB_DFFE): \Filter1.tickcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4400 (SB_DFFE): \Filter1.tickcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4401 (SB_DFFE): \Filter1.tickcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4354 (SB_DFFE): \Filter1.I0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4402 (SB_DFFE): \Filter1.tickcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4404 (SB_DFFE): \Filter1.tickcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4405 (SB_DFFE): \Filter1.tickcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4406 (SB_DFF): \Filter1.lasttick = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8744 (SB_DFFER): \UI_inst.LCD.tx_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4403 (SB_DFFE): \Filter1.tickcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6616 (SB_DFFE): \UI_inst.TC [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3509 (SB_DFFE): \adc_host_hi.CONVST = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6444 (SB_DFFE): \UI_inst.cnt1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3483 (SB_DFFE): \adc_host_hi.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6450 (SB_DFFE): \UI_inst.cnt1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6445 (SB_DFFE): \UI_inst.cnt1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6446 (SB_DFFE): \UI_inst.cnt1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6447 (SB_DFFE): \UI_inst.cnt1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6448 (SB_DFFE): \UI_inst.cnt1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6443 (SB_DFFE): \UI_inst.cnt1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6456 (SB_DFFE): \UI_inst.cnt1 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6452 (SB_DFFE): \UI_inst.cnt1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6453 (SB_DFFE): \UI_inst.cnt1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6454 (SB_DFFE): \UI_inst.cnt1 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6455 (SB_DFFE): \UI_inst.cnt1 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6449 (SB_DFFE): \UI_inst.cnt1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6458 (SB_DFFE): \UI_inst.cnt1 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6464 (SB_DFFE): \UI_inst.cnt1 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6459 (SB_DFFE): \UI_inst.cnt1 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6460 (SB_DFFE): \UI_inst.cnt1 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6461 (SB_DFFE): \UI_inst.cnt1 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6462 (SB_DFFE): \UI_inst.cnt1 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6457 (SB_DFFE): \UI_inst.cnt1 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6470 (SB_DFF): \DAC1.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6465 (SB_DFFE): \UI_inst.cnt1 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6466 (SB_DFFE): \UI_inst.cnt1 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6467 (SB_DFF): \DAC1.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6468 (SB_DFF): \DAC1.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6463 (SB_DFFE): \UI_inst.cnt1 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6477 (SB_DFF): \DAC1.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6471 (SB_DFF): \DAC1.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6472 (SB_DFF): \DAC1.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6473 (SB_DFF): \DAC1.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6474 (SB_DFF): \DAC1.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6469 (SB_DFF): \DAC1.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6451 (SB_DFFE): \UI_inst.cnt1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6483 (SB_DFF): \DAC1.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6478 (SB_DFF): \DAC1.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6479 (SB_DFF): \DAC1.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6480 (SB_DFF): \DAC1.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6481 (SB_DFF): \DAC1.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6476 (SB_DFF): \DAC1.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6494 (SB_DFFE): \UI_inst.cnt3 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6484 (SB_DFF): \UI_inst.btnt3 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6489 (SB_DFFE): \UI_inst.cnt3 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6492 (SB_DFFE): \UI_inst.cnt3 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6485 (SB_DFF): \UI_inst.btnt2 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6486 (SB_DFF): \UI_inst.btnt1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6487 (SB_DFF): \UI_inst.btnt0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6490 (SB_DFFE): \UI_inst.cnt3 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6491 (SB_DFFE): \UI_inst.cnt3 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6482 (SB_DFF): \DAC1.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6475 (SB_DFF): \DAC1.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6500 (SB_DFFE): \UI_inst.cnt3 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6495 (SB_DFFE): \UI_inst.cnt3 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6496 (SB_DFFE): \UI_inst.cnt3 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6497 (SB_DFFE): \UI_inst.cnt3 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6498 (SB_DFFE): \UI_inst.cnt3 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6493 (SB_DFFE): \UI_inst.cnt3 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6506 (SB_DFFE): \UI_inst.cnt3 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6501 (SB_DFFE): \UI_inst.cnt3 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6502 (SB_DFFE): \UI_inst.cnt3 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6503 (SB_DFFE): \UI_inst.cnt3 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6504 (SB_DFFE): \UI_inst.cnt3 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6499 (SB_DFFE): \UI_inst.cnt3 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6512 (SB_DFFE): \UI_inst.cnt2 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6507 (SB_DFFE): \UI_inst.cnt3 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6508 (SB_DFFE): \UI_inst.cnt3 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6509 (SB_DFFE): \UI_inst.cnt3 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6510 (SB_DFFE): \UI_inst.cnt3 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6505 (SB_DFFE): \UI_inst.cnt3 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6518 (SB_DFFE): \UI_inst.cnt2 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6513 (SB_DFFE): \UI_inst.cnt2 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6514 (SB_DFFE): \UI_inst.cnt2 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6515 (SB_DFFE): \UI_inst.cnt2 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6516 (SB_DFFE): \UI_inst.cnt2 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6511 (SB_DFFE): \UI_inst.cnt3 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6525 (SB_DFFE): \UI_inst.cnt2 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6519 (SB_DFFE): \UI_inst.cnt2 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6521 (SB_DFFE): \UI_inst.cnt2 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6488 (SB_DFFE): \UI_inst.cnt3 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6522 (SB_DFFE): \UI_inst.cnt2 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6523 (SB_DFFE): \UI_inst.cnt2 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6517 (SB_DFFE): \UI_inst.cnt2 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6530 (SB_DFFE): \UI_inst.cnt2 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6526 (SB_DFFE): \UI_inst.cnt2 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6527 (SB_DFFE): \UI_inst.cnt2 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6528 (SB_DFFE): \UI_inst.cnt2 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6529 (SB_DFFE): \UI_inst.cnt2 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6524 (SB_DFFE): \UI_inst.cnt2 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6531 (SB_DFFE): \UI_inst.cnt2 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6533 (SB_DFFE): \UI_inst.cnt2 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6539 (SB_DFFE): \UI_inst.cnt0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6534 (SB_DFFE): \UI_inst.cnt2 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6535 (SB_DFFE): \UI_inst.cnt2 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6536 (SB_DFFE): \UI_inst.cnt0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6537 (SB_DFFE): \UI_inst.cnt0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6532 (SB_DFFE): \UI_inst.cnt2 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6546 (SB_DFFE): \UI_inst.cnt0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6540 (SB_DFFE): \UI_inst.cnt0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6541 (SB_DFFE): \UI_inst.cnt0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6542 (SB_DFFE): \UI_inst.cnt0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6543 (SB_DFFE): \UI_inst.cnt0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6538 (SB_DFFE): \UI_inst.cnt0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6520 (SB_DFFE): \UI_inst.cnt2 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6552 (SB_DFFE): \UI_inst.cnt0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6547 (SB_DFFE): \UI_inst.cnt0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6548 (SB_DFFE): \UI_inst.cnt0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6549 (SB_DFFE): \UI_inst.cnt0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6550 (SB_DFFE): \UI_inst.cnt0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6545 (SB_DFFE): \UI_inst.cnt0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6557 (SB_DFFE): \UI_inst.cnt0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6553 (SB_DFFE): \UI_inst.cnt0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6554 (SB_DFFE): \UI_inst.cnt0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6555 (SB_DFFE): \UI_inst.cnt0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6556 (SB_DFFE): \UI_inst.cnt0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6551 (SB_DFFE): \UI_inst.cnt0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6559 (SB_DFFE): \UI_inst.cnt0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6566 (SB_DFF): \UI_inst.disppos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6560 (SB_DFF): \UI_inst.BP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6561 (SB_DFF): \UI_inst.BP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6562 (SB_DFF): \UI_inst.BP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6563 (SB_DFF): \UI_inst.BP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6558 (SB_DFFE): \UI_inst.cnt0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6568 (SB_DFF): \UI_inst.disppos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6564 (SB_DFF): \UI_inst.dispdone = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6567 (SB_DFF): \UI_inst.disppos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6569 (SB_DFF): \UI_inst.disppos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6544 (SB_DFFE): \UI_inst.cnt0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6570 (SB_DFF): \UI_inst.repaintS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6573 (SB_DFFE): \UI_inst.datS [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6578 (SB_DFFE): \UI_inst.datS [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6571 (SB_DFF): \UI_inst.weS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6574 (SB_DFFE): \UI_inst.datS [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6575 (SB_DFFE): \UI_inst.datS [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6576 (SB_DFFE): \UI_inst.datS [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6577 (SB_DFFE): \UI_inst.datS [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6579 (SB_DFFE): \UI_inst.datS [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6565 (SB_DFF): \UI_inst.disppos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6580 (SB_DFFE): \UI_inst.ismagphase = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6582 (SB_DFFE): \UI_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6588 (SB_DFF): \UI_inst.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6583 (SB_DFFE): \UI_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6584 (SB_DFFE): \UI_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6587 (SB_DFFE): \UI_inst.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6581 (SB_DFFE): \UI_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6585 (SB_DFF): \UI_inst.update = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6589 (SB_DFF): \UI_inst.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6572 (SB_DFFE): \UI_inst.datS [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6590 (SB_DFF): \UI_inst.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6591 (SB_DFF): \UI_inst.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6592 (SB_DFF): \UI_inst.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6593 (SB_DFF): \UI_inst.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6594 (SB_DFF): \UI_inst.count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6595 (SB_DFF): \UI_inst.count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6596 (SB_DFF): \UI_inst.count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6597 (SB_DFF): \UI_inst.count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6598 (SB_DFF): \UI_inst.count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6599 (SB_DFF): \UI_inst.count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6600 (SB_DFF): \UI_inst.count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6601 (SB_DFF): \UI_inst.count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6602 (SB_DFF): \UI_inst.count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6603 (SB_DFF): \UI_inst.count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6604 (SB_DFF): \UI_inst.count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6605 (SB_DFF): \UI_inst.count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6606 (SB_DFF): \UI_inst.count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6607 (SB_DFF): \UI_inst.count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6609 (SB_DFF): \UI_inst.count [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6617 (SB_DFFE): \UI_inst.TC [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6610 (SB_DFFE): \UI_inst.refIO = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6612 (SB_DFFE): \UI_inst.refampl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6618 (SB_DFFE): \UI_inst.TC [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6614 (SB_DFFE): \UI_inst.reffreq [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6611 (SB_DFFE): \UI_inst.refampl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6608 (SB_DFF): \UI_inst.count [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3634 (SB_DFF): \outstuff [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6613 (SB_DFFE): \UI_inst.reffreq [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6619 (SB_DFFE): \UI_inst.TC [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6586 (SB_DFF): \UI_inst.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6620 (SB_DFFE): \UI_inst.gain [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6621 (SB_DFFE): \UI_inst.gain [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6615 (SB_DFFE): \UI_inst.reffreq [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7865 (SB_DFF): \DAC2.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7866 (SB_DFF): \DAC2.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7867 (SB_DFF): \DAC2.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7868 (SB_DFF): \DAC2.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7869 (SB_DFF): \DAC2.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7870 (SB_DFF): \DAC2.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7871 (SB_DFF): \DAC2.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7872 (SB_DFF): \DAC2.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7874 (SB_DFF): \DAC2.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7875 (SB_DFF): \DAC2.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7876 (SB_DFF): \DAC2.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7877 (SB_DFF): \DAC2.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7878 (SB_DFF): \DAC2.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7879 (SB_DFF): \DAC2.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7880 (SB_DFF): \DAC2.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7873 (SB_DFF): \DAC2.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7881 (SB_DFF): \DAC2.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8654 (SB_DFFE): \UI_inst.LCD.pos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8646 (SB_DFFE): \UI_inst.LCD.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8647 (SB_DFFE): \UI_inst.LCD.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8648 (SB_DFFE): \UI_inst.LCD.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8649 (SB_DFFE): \UI_inst.LCD.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8650 (SB_DFFE): \UI_inst.LCD.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8651 (SB_DFFE): \UI_inst.LCD.pos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8653 (SB_DFFE): \UI_inst.LCD.pos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8655 (SB_DFFE): \UI_inst.LCD.pos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8656 (SB_DFFE): \UI_inst.LCD.pos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8657 (SB_DFFE): \UI_inst.LCD.pos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8658 (SB_DFFE): \UI_inst.LCD.pos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8659 (SB_DFFE): \UI_inst.LCD.pos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8660 (SB_DFFE): \UI_inst.LCD.pos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8661 (SB_DFFE): \UI_inst.LCD.pos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8662 (SB_DFFE): \UI_inst.LCD.pos [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8663 (SB_DFFE): \UI_inst.LCD.pos [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8664 (SB_DFFE): \UI_inst.LCD.pos [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8665 (SB_DFFE): \UI_inst.LCD.pos [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8666 (SB_DFFE): \UI_inst.LCD.pos [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8667 (SB_DFFE): \UI_inst.LCD.pos [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8668 (SB_DFFE): \UI_inst.LCD.pos [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8669 (SB_DFFE): \UI_inst.LCD.pos [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8670 (SB_DFFE): \UI_inst.LCD.pos [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8671 (SB_DFFE): \UI_inst.LCD.pos [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8672 (SB_DFFE): \UI_inst.LCD.pos [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8673 (SB_DFFE): \UI_inst.LCD.pos [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8674 (SB_DFFE): \UI_inst.LCD.pos [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8675 (SB_DFFE): \UI_inst.LCD.pos [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8676 (SB_DFFE): \UI_inst.LCD.pos [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8696 (SB_DFFR): \UI_inst.LCD.main_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8707 (SB_DFFER): \UI_inst.LCD.display_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8699 (SB_DFFE): \UI_inst.LCD.LCD_E1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8701 (SB_DFFE): \UI_inst.LCD.SF_D1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8702 (SB_DFFE): \UI_inst.LCD.SF_D1 [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8708 (SB_DFFER): \UI_inst.LCD.display_state [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8704 (SB_DFFER): \UI_inst.LCD.display_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8725 (SB_DFFE): \UI_inst.LCD.tx_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8719 (SB_DFFE): \UI_inst.LCD.tx_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8720 (SB_DFFE): \UI_inst.LCD.tx_delay_value [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8721 (SB_DFFE): \UI_inst.LCD.tx_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8722 (SB_DFFE): \UI_inst.LCD.tx_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8723 (SB_DFFE): \UI_inst.LCD.tx_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8717 (SB_DFFE): \UI_inst.LCD.tx_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8724 (SB_DFFE): \UI_inst.LCD.tx_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8726 (SB_DFFE): \UI_inst.LCD.tx_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8727 (SB_DFFE): \UI_inst.LCD.tx_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8728 (SB_DFFE): \UI_inst.LCD.tx_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8729 (SB_DFFE): \UI_inst.LCD.tx_delay_value [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8730 (SB_DFFE): \UI_inst.LCD.tx_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8731 (SB_DFFE): \UI_inst.LCD.tx_delay_value [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8732 (SB_DFFE): \UI_inst.LCD.tx_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8733 (SB_DFFE): \UI_inst.LCD.tx_delay_value [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8734 (SB_DFFE): \UI_inst.LCD.tx_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8735 (SB_DFFE): \UI_inst.LCD.tx_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8736 (SB_DFFE): \UI_inst.LCD.tx_delay_value [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8737 (SB_DFFE): \UI_inst.LCD.tx_delay_value [19] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8746 (SB_DFFES): \UI_inst.LCD.tx_state [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8738 (SB_DFFE): \UI_inst.LCD.LCD_E0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8740 (SB_DFFE): \UI_inst.LCD.SF_D0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8741 (SB_DFFE): \UI_inst.LCD.SF_D0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8739 (SB_DFFE): \UI_inst.LCD.SF_D0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3504 (SB_DFF): \adc_host_hi.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9969 (SB_DFFE): \UI_inst.diplay_number.leadz = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8677 (SB_DFFE): \UI_inst.LCD.pos [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8678 (SB_DFFR): \UI_inst.LCD.main_delay_load = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8680 (SB_DFFR): \UI_inst.LCD.main_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8682 (SB_DFFR): \UI_inst.LCD.main_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8683 (SB_DFFR): \UI_inst.LCD.main_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8684 (SB_DFFR): \UI_inst.LCD.main_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3645 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8685 (SB_DFFR): \UI_inst.LCD.main_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8687 (SB_DFFR): \UI_inst.LCD.main_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8688 (SB_DFFR): \UI_inst.LCD.main_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8689 (SB_DFFR): \UI_inst.LCD.main_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8691 (SB_DFFR): \UI_inst.LCD.main_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8693 (SB_DFFR): \UI_inst.LCD.main_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8695 (SB_DFFR): \UI_inst.LCD.main_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8700 (SB_DFFE): \UI_inst.LCD.SF_D1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8703 (SB_DFFE): \UI_inst.LCD.SF_D1 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8705 (SB_DFFER): \UI_inst.LCD.display_state [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8686 (SB_DFFR): \UI_inst.LCD.main_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$8706 (SB_DFFER): \UI_inst.LCD.display_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8743 (SB_DFFE): \UI_inst.LCD.tx_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8742 (SB_DFFE): \UI_inst.LCD.SF_D0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8718 (SB_DFFE): \UI_inst.LCD.tx_delay_value [0] = 0

18.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$3553 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [7], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3506 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5908 (A=$auto$wreduce.cc:455:run$3104 [3], B=1'0, S=\cinit) into $auto$simplemap.cc:420:simplemap_dff$5903 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3552 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [6], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3505 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4242 (A=$techmap\dds_core.$logic_and$../dds.v:25$546_Y, B=1'0, S=\dds_core.iscos) into $auto$simplemap.cc:420:simplemap_dff$4139 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4006 (A=1'0, B=$techmap\F2SRAM.$procmux$706_Y, S=\F2SRAM.busy) into $auto$simplemap.cc:420:simplemap_dff$3766 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3546 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [0], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3499 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3547 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$21825 [1], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3548 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [2], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3501 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3549 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [3], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3502 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3550 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [4], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3503 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4590 (A=1'0, B=$auto$rtlil.cc:1836:ReduceOr$3201, S=$techmap\Filter1.$logic_and$../filter/CIC.v:39$582_Y) into $auto$simplemap.cc:420:simplemap_dff$4296 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4514 (A=$auto$wreduce.cc:455:run$3068 [0], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4395 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4515 (A=$auto$alumacc.cc:474:replace_alu$3193.BB [1], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4396 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4516 (A=$auto$wreduce.cc:455:run$3068 [2], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4397 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4517 (A=$auto$wreduce.cc:455:run$3068 [3], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4518 (A=$auto$wreduce.cc:455:run$3068 [4], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4519 (A=$auto$wreduce.cc:455:run$3068 [5], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4400 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4520 (A=$auto$wreduce.cc:455:run$3068 [6], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4401 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4521 (A=$auto$wreduce.cc:455:run$3068 [7], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4402 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4523 (A=$auto$wreduce.cc:455:run$3068 [9], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4404 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4524 (A=$auto$wreduce.cc:455:run$3068 [10], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4405 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4522 (A=$auto$wreduce.cc:455:run$3068 [8], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3201) into $auto$simplemap.cc:420:simplemap_dff$4403 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5906 (A=$auto$simplemap.cc:309:simplemap_lut$21844 [1], B=1'0, S=\cinit) into $auto$simplemap.cc:420:simplemap_dff$5901 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6671 (A=$auto$simplemap.cc:309:simplemap_lut$21635 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6444 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5905 (A=$auto$wreduce.cc:455:run$3104 [0], B=1'0, S=\cinit) into $auto$simplemap.cc:420:simplemap_dff$5900 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6677 (A=$auto$wreduce.cc:455:run$3077 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6450 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6672 (A=$auto$wreduce.cc:455:run$3077 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6445 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6673 (A=$auto$wreduce.cc:455:run$3077 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6446 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6674 (A=$auto$wreduce.cc:455:run$3077 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6447 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6675 (A=$auto$wreduce.cc:455:run$3077 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6448 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6670 (A=$auto$wreduce.cc:455:run$3077 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6443 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6683 (A=$auto$wreduce.cc:455:run$3077 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6456 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6679 (A=$auto$wreduce.cc:455:run$3077 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6452 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5907 (A=$auto$wreduce.cc:455:run$3104 [2], B=1'0, S=\cinit) into $auto$simplemap.cc:420:simplemap_dff$5902 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6680 (A=$auto$wreduce.cc:455:run$3077 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6453 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6681 (A=$auto$wreduce.cc:455:run$3077 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6454 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6682 (A=$auto$wreduce.cc:455:run$3077 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6455 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6676 (A=$auto$wreduce.cc:455:run$3077 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6449 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6685 (A=$auto$wreduce.cc:455:run$3077 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6458 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6691 (A=$auto$wreduce.cc:455:run$3077 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6686 (A=$auto$wreduce.cc:455:run$3077 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6459 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6687 (A=$auto$wreduce.cc:455:run$3077 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6460 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6688 (A=$auto$wreduce.cc:455:run$3077 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6461 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6689 (A=$auto$wreduce.cc:455:run$3077 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6462 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6684 (A=$auto$wreduce.cc:455:run$3077 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6457 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6692 (A=$auto$wreduce.cc:455:run$3077 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6693 (A=$auto$wreduce.cc:455:run$3077 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6690 (A=$auto$wreduce.cc:455:run$3077 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6678 (A=$auto$wreduce.cc:455:run$3077 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6451 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6772 (A=$auto$wreduce.cc:455:run$3071 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6494 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6823 (A=$techmap\UI_inst.$procmux$2688_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6484 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6767 (A=$auto$simplemap.cc:309:simplemap_lut$21521 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6489 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6770 (A=$auto$wreduce.cc:455:run$3071 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6492 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6820 (A=$techmap\UI_inst.$procmux$2694_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6485 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6817 (A=$techmap\UI_inst.$procmux$2700_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$6486 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6814 (A=$techmap\UI_inst.$procmux$2706_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6487 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6768 (A=$auto$wreduce.cc:455:run$3071 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6490 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6769 (A=$auto$wreduce.cc:455:run$3071 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6491 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6778 (A=$auto$wreduce.cc:455:run$3071 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6500 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6773 (A=$auto$wreduce.cc:455:run$3071 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6495 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6774 (A=$auto$wreduce.cc:455:run$3071 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6496 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6775 (A=$auto$wreduce.cc:455:run$3071 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6497 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6776 (A=$auto$wreduce.cc:455:run$3071 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6498 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6771 (A=$auto$wreduce.cc:455:run$3071 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6493 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6784 (A=$auto$wreduce.cc:455:run$3071 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6506 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6779 (A=$auto$wreduce.cc:455:run$3071 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6501 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6780 (A=$auto$wreduce.cc:455:run$3071 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6502 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6781 (A=$auto$wreduce.cc:455:run$3071 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6503 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6782 (A=$auto$wreduce.cc:455:run$3071 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6504 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6777 (A=$auto$wreduce.cc:455:run$3071 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6499 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6718 (A=$auto$wreduce.cc:455:run$3078 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6512 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6785 (A=$auto$wreduce.cc:455:run$3071 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6507 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6786 (A=$auto$wreduce.cc:455:run$3071 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6508 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6787 (A=$auto$wreduce.cc:455:run$3071 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6509 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6788 (A=$auto$wreduce.cc:455:run$3071 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6510 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6783 (A=$auto$wreduce.cc:455:run$3071 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6505 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6724 (A=$auto$wreduce.cc:455:run$3078 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6518 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6719 (A=$auto$simplemap.cc:309:simplemap_lut$21654 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6513 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6720 (A=$auto$wreduce.cc:455:run$3078 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6514 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6721 (A=$auto$wreduce.cc:455:run$3078 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6515 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6722 (A=$auto$wreduce.cc:455:run$3078 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6516 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6789 (A=$auto$wreduce.cc:455:run$3071 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6511 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6731 (A=$auto$wreduce.cc:455:run$3078 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6525 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6725 (A=$auto$wreduce.cc:455:run$3078 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6519 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6727 (A=$auto$wreduce.cc:455:run$3078 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6521 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6766 (A=$auto$wreduce.cc:455:run$3071 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$6488 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6728 (A=$auto$wreduce.cc:455:run$3078 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6522 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6729 (A=$auto$wreduce.cc:455:run$3078 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6523 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6723 (A=$auto$wreduce.cc:455:run$3078 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6517 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6736 (A=$auto$wreduce.cc:455:run$3078 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6530 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6732 (A=$auto$wreduce.cc:455:run$3078 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6526 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6733 (A=$auto$wreduce.cc:455:run$3078 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6527 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6734 (A=$auto$wreduce.cc:455:run$3078 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6528 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6735 (A=$auto$wreduce.cc:455:run$3078 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6529 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6730 (A=$auto$wreduce.cc:455:run$3078 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6524 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6737 (A=$auto$wreduce.cc:455:run$3078 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6531 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6739 (A=$auto$wreduce.cc:455:run$3078 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6533 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6625 (A=$auto$wreduce.cc:455:run$3076 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6539 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6740 (A=$auto$wreduce.cc:455:run$3078 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6534 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6741 (A=$auto$wreduce.cc:455:run$3078 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6535 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6622 (A=$auto$wreduce.cc:455:run$3076 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6536 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6623 (A=$auto$simplemap.cc:309:simplemap_lut$21616 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6537 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6738 (A=$auto$wreduce.cc:455:run$3078 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6532 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6632 (A=$auto$wreduce.cc:455:run$3076 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6546 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6626 (A=$auto$wreduce.cc:455:run$3076 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6540 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6627 (A=$auto$wreduce.cc:455:run$3076 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6541 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6628 (A=$auto$wreduce.cc:455:run$3076 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6542 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6629 (A=$auto$wreduce.cc:455:run$3076 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6543 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6624 (A=$auto$wreduce.cc:455:run$3076 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6538 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6726 (A=$auto$wreduce.cc:455:run$3078 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$6520 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6638 (A=$auto$wreduce.cc:455:run$3076 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6552 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6633 (A=$auto$wreduce.cc:455:run$3076 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6547 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6634 (A=$auto$wreduce.cc:455:run$3076 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6548 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6635 (A=$auto$wreduce.cc:455:run$3076 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6549 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6636 (A=$auto$wreduce.cc:455:run$3076 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6550 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6631 (A=$auto$wreduce.cc:455:run$3076 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6545 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6643 (A=$auto$wreduce.cc:455:run$3076 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6557 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6639 (A=$auto$wreduce.cc:455:run$3076 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6553 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6640 (A=$auto$wreduce.cc:455:run$3076 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6554 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6641 (A=$auto$wreduce.cc:455:run$3076 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6555 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6642 (A=$auto$wreduce.cc:455:run$3076 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6556 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6637 (A=$auto$wreduce.cc:455:run$3076 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6551 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6645 (A=$auto$wreduce.cc:455:run$3076 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6559 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6644 (A=$auto$wreduce.cc:455:run$3076 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6558 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6630 (A=$auto$wreduce.cc:455:run$3076 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$6544 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13667 (A=1'0, B=$techmap$techmap\UI_inst.$procmux$2439.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$7543_Y, S=$techmap$techmap\UI_inst.$procmux$2439.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$7539_Y) into $auto$simplemap.cc:420:simplemap_dff$6570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8318 (A=$techmap\cordicCORE.U.$procmux$2768_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7907 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8319 (A=$techmap\cordicCORE.U.$procmux$2768_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7908 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8320 (A=$techmap\cordicCORE.U.$procmux$2768_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7909 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8321 (A=$techmap\cordicCORE.U.$procmux$2768_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7910 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8322 (A=$techmap\cordicCORE.U.$procmux$2768_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7911 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8323 (A=$techmap\cordicCORE.U.$procmux$2768_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7912 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8324 (A=$techmap\cordicCORE.U.$procmux$2768_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7913 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8325 (A=$techmap\cordicCORE.U.$procmux$2768_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7914 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8326 (A=$techmap\cordicCORE.U.$procmux$2768_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7915 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8327 (A=$techmap\cordicCORE.U.$procmux$2768_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7916 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8328 (A=$techmap\cordicCORE.U.$procmux$2768_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7917 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8329 (A=$techmap\cordicCORE.U.$procmux$2768_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7918 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8330 (A=$techmap\cordicCORE.U.$procmux$2768_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7919 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8331 (A=$techmap\cordicCORE.U.$procmux$2768_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7920 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8332 (A=$techmap\cordicCORE.U.$procmux$2768_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7921 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8333 (A=$techmap\cordicCORE.U.$procmux$2768_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7922 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7982 (A=\F2SRAM.SPI_READER.fsm_state_next [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7923 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8015 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7931 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7983 (A=\F2SRAM.SPI_READER.fsm_state_next [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7924 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8010 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7926 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8011 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7927 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8012 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7928 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8013 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7929 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8317 (A=$techmap\cordicCORE.U.$procmux$2768_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7906 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8014 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7930 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8016 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7932 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8017 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7933 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8018 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7934 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8019 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7935 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8020 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7936 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8021 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8022 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7938 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8023 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7939 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8024 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8025 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8026 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8027 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7943 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8028 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8029 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7945 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8030 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8031 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8032 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8033 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [24], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8034 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [25], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7950 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8035 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8036 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [27], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8037 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8038 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [29], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7954 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8039 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7955 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8040 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [31], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7956 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8091 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [2], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7965 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8083 (A=$auto$simplemap.cc:309:simplemap_lut$8141, B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7957 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8074 (A=$techmap\F2SRAM.SPI_READER.$procmux$659_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7959 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8073 (A=$techmap\F2SRAM.SPI_READER.$procmux$659_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7958 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8075 (A=$techmap\F2SRAM.SPI_READER.$procmux$659_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7960 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8085 (A=$auto$alumacc.cc:474:replace_alu$3220.lcu.p [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7961 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8086 (A=$techmap$auto$alumacc.cc:474:replace_alu$3220.$xor$/usr/local/bin/../share/yosys/techmap.v:263$6835_Y [1], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7962 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8009 (A=$techmap\F2SRAM.SPI_READER.$procmux$665_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$7925 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8090 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [1], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7964 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8092 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [3], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7966 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8093 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [4], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7967 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8094 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [5], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7968 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8095 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [6], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7969 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8096 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [7], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7970 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8097 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [8], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7971 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8098 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [9], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7972 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8099 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [10], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7973 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8100 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [11], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7974 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8101 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [12], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7975 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8102 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [13], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7976 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8103 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [14], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7977 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8104 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [15], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7978 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8105 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [16], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7979 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8106 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [17], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7980 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8423 (A=$techmap\cordicCORE.U.$procmux$2750_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8151 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8420 (A=$techmap\cordicCORE.U.$procmux$2750_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8421 (A=$techmap\cordicCORE.U.$procmux$2750_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8089 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$523_Y [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$7963 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8422 (A=$techmap\cordicCORE.U.$procmux$2750_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8424 (A=$techmap\cordicCORE.U.$procmux$2750_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8152 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8425 (A=$techmap\cordicCORE.U.$procmux$2750_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8153 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8426 (A=$techmap\cordicCORE.U.$procmux$2750_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8154 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8427 (A=$techmap\cordicCORE.U.$procmux$2750_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8155 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8428 (A=$techmap\cordicCORE.U.$procmux$2750_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8429 (A=$techmap\cordicCORE.U.$procmux$2750_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8430 (A=$techmap\cordicCORE.U.$procmux$2750_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8431 (A=$techmap\cordicCORE.U.$procmux$2750_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8432 (A=$techmap\cordicCORE.U.$procmux$2750_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8433 (A=$techmap\cordicCORE.U.$procmux$2750_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8434 (A=$techmap\cordicCORE.U.$procmux$2750_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8435 (A=$techmap\cordicCORE.U.$procmux$2750_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8419 (A=$techmap\cordicCORE.U.$procmux$2750_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8266 (A=$techmap\cordicCORE.U.$procmux$2777_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8181 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8267 (A=$techmap\cordicCORE.U.$procmux$2777_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8182 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8268 (A=$techmap\cordicCORE.U.$procmux$2777_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8183 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8269 (A=$techmap\cordicCORE.U.$procmux$2777_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8270 (A=$techmap\cordicCORE.U.$procmux$2777_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8271 (A=$techmap\cordicCORE.U.$procmux$2777_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8272 (A=$techmap\cordicCORE.U.$procmux$2777_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8273 (A=$techmap\cordicCORE.U.$procmux$2777_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8188 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8275 (A=$techmap\cordicCORE.U.$procmux$2777_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8190 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8276 (A=$techmap\cordicCORE.U.$procmux$2777_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8191 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8277 (A=$techmap\cordicCORE.U.$procmux$2777_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8192 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8278 (A=$techmap\cordicCORE.U.$procmux$2777_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8193 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8279 (A=$techmap\cordicCORE.U.$procmux$2777_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8194 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8280 (A=$techmap\cordicCORE.U.$procmux$2777_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8195 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8281 (A=$techmap\cordicCORE.U.$procmux$2777_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8282 (A=$techmap\cordicCORE.U.$procmux$2777_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8197 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8274 (A=$techmap\cordicCORE.U.$procmux$2777_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$8189 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6005 (A=\cordicCORE.U.y_1 [16], B=1'0, S=\cinit) into $auto$simplemap.cc:420:simplemap_dff$8214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3551 (A=1'0, B=$auto$wreduce.cc:455:run$3103 [5], S=$auto$simplemap.cc:256:simplemap_eqne$3564) into $auto$simplemap.cc:420:simplemap_dff$3504 (SB_DFF).

18.39. Executing ICE40_OPT pass (performing simple optimizations).

18.39.1. Running ICE40 specific optimizations.

18.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~474 debug messages>

18.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2586 debug messages>
Removed a total of 862 cells.

18.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

18.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 236 unused cells and 6291 unused wires.
<suppressed ~237 debug messages>

18.39.6. Rerunning OPT passes. (Removed registers in this run.)

18.39.7. Running ICE40 specific optimizations.

18.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

18.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

18.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.39.12. Rerunning OPT passes. (Removed registers in this run.)

18.39.13. Running ICE40 specific optimizations.

18.39.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

18.39.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

18.39.16. Executing OPT_RMDFF pass (remove dff with constant values).

18.39.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

18.39.18. Finished OPT passes. (There is nothing left to do.)

18.40. Executing TECHMAP pass (map to technology primitives).

18.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

18.40.2. Continuing TECHMAP pass.
No more expansions possible.

18.41. Executing ABC pass (technology mapping using ABC).

18.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 5962 gates and 7184 wires to a netlist network with 1220 inputs and 908 outputs.

18.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1300.
ABC: Participating nodes from both networks       =    2923.
ABC: Participating nodes from the first network   =    1343. (  71.47 % of nodes)
ABC: Participating nodes from the second network  =    1580. (  84.09 % of nodes)
ABC: Node pairs (any polarity)                    =    1343. (  71.47 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1082. (  57.58 % of names can be moved)
ABC: Total runtime =     0.11 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

18.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     3754
ABC RESULTS:        internal signals:     5056
ABC RESULTS:           input signals:     1220
ABC RESULTS:          output signals:      908
Removing temp directory.
Removed 0 unused cells and 3044 unused wires.

18.42. Executing TECHMAP pass (map to technology primitives).

18.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

18.42.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001101011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110101010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001010101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010100101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010111000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
No more expansions possible.
<suppressed ~4035 debug messages>
Removed 0 unused cells and 3736 unused wires.

18.43. Executing HIERARCHY pass (managing design hierarchy).

18.43.1. Analyzing design hierarchy..
Top module:  \top

18.43.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

18.44. Printing statistics.

=== top ===

   Number of wires:               2385
   Number of wire bits:           6464
   Number of public wires:         323
   Number of public wire bits:    3243
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4110
     SB_CARRY                      617
     SB_DFF                        224
     SB_DFFE                       508
     SB_DFFER                        8
     SB_DFFESR                     120
     SB_DFFESS                      16
     SB_DFFN                        16
     SB_DFFR                        14
     SB_DFFSR                       92
     SB_DFFSS                        9
     SB_IO                           4
     SB_LUT4                      2472
     SB_MAC16                        1
     SB_RAM40_4K                     5
     SB_SPRAM256KA                   4

18.45. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

18.46. Executing JSON backend.

Warnings: 60 unique messages, 60 total
End of script. Logfile hash: f998be2a15
CPU: user 15.79s system 0.20s, MEM: 100.95 MB total, 66.64 MB resident
Yosys 0.9 (git sha1 4c89a4e6, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 23% 29x opt_expr (3 sec), 23% 28x opt_clean (3 sec), ...
