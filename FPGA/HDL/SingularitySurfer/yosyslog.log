
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+1706 (git sha1 81e6b040, x86_64-conda_cos6-linux-gnu-gcc 1.23.0.449-a04d0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/tmp/really-long-path/conda/conda-bld/yosys_1579927201458/work=/usr/local/src/conda/yosys-0.9_3096_g81e6b040 -fdebug-prefix-map=/home/norman/anaconda3=/usr/local/src/conda-prefix -fPIC -Os)


-- Parsing `TOP_V1.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: TOP_V1.v
Parsing Verilog input from `TOP_V1.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `../fibonacci7.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ../fibonacci7.v
Parsing Verilog input from `../fibonacci7.v' to AST representation.
Generating RTLIL representation for module `\fibonacci7'.
Warning: wire '\fib' is assigned in a block at ../fibonacci7.v:11.
Warning: wire '\fib' is assigned in a block at ../fibonacci7.v:12.
../fibonacci7.v:12: Warning: Range select out of bounds on signal `\fib': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Parsing `../fibonacci15.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: ../fibonacci15.v
Parsing Verilog input from `../fibonacci15.v' to AST representation.
Generating RTLIL representation for module `\fibonacci15'.
Warning: wire '\fib' is assigned in a block at ../fibonacci15.v:11.
Warning: wire '\fib' is assigned in a block at ../fibonacci15.v:12.
../fibonacci15.v:12: Warning: Range select out of bounds on signal `\fib': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Parsing `../oscillator.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: ../oscillator.v
Parsing Verilog input from `../oscillator.v' to AST representation.
Generating RTLIL representation for module `\oscillator'.
Successfully finished Verilog frontend.

-- Parsing `../adc_host.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ../adc_host.v
Parsing Verilog input from `../adc_host.v' to AST representation.
Generating RTLIL representation for module `\adc_host'.
Successfully finished Verilog frontend.

-- Parsing `../filter/CIC.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: ../filter/CIC.v
Parsing Verilog input from `../filter/CIC.v' to AST representation.
Generating RTLIL representation for module `\CIC'.
Successfully finished Verilog frontend.

-- Parsing `../filter/dpram_64x8.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ../filter/dpram_64x8.v
Parsing Verilog input from `../filter/dpram_64x8.v' to AST representation.
Generating RTLIL representation for module `\dpram_64x8'.
Successfully finished Verilog frontend.

-- Parsing `../cordic/fullcordic.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: ../cordic/fullcordic.v
Parsing Verilog input from `../cordic/fullcordic.v' to AST representation.
Generating RTLIL representation for module `\fullcordic'.
Warning: Replacing memory \quadmem with list of registers. See ../cordic/fullcordic.v:46
Successfully finished Verilog frontend.

-- Parsing `../cordic/cordic.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: ../cordic/cordic.v
Parsing Verilog input from `../cordic/cordic.v' to AST representation.
Generating RTLIL representation for module `\signed_shifter'.
Generating RTLIL representation for module `\rotator'.
Generating RTLIL representation for module `\cordic'.
Successfully finished Verilog frontend.

-- Parsing `../UI/UI.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: ../UI/UI.v
Parsing Verilog input from `../UI/UI.v' to AST representation.
Generating RTLIL representation for module `\UI'.
Successfully finished Verilog frontend.

-- Parsing `../UI/BinToLCD.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: ../UI/BinToLCD.v
Parsing Verilog input from `../UI/BinToLCD.v' to AST representation.
Generating RTLIL representation for module `\BinToLCD'.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_defines.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: ../UI/lcd_defines.v
Parsing Verilog input from `../UI/lcd_defines.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_display.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: ../UI/lcd_display.v
Parsing Verilog input from `../UI/lcd_display.v' to AST representation.
Generating RTLIL representation for module `\lcd'.
Successfully finished Verilog frontend.

-- Parsing `../UI/delay_counter.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: ../UI/delay_counter.v
Parsing Verilog input from `../UI/delay_counter.v' to AST representation.
Generating RTLIL representation for module `\delay_counter'.
Successfully finished Verilog frontend.

-- Parsing `../sram16x16.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: ../sram16x16.v
Parsing Verilog input from `../sram16x16.v' to AST representation.
Generating RTLIL representation for module `\sram16x16'.
Successfully finished Verilog frontend.

-- Parsing `../Flash_to_SRAM.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: ../Flash_to_SRAM.v
Parsing Verilog input from `../Flash_to_SRAM.v' to AST representation.
Generating RTLIL representation for module `\Flash_to_SRAM'.
Successfully finished Verilog frontend.

-- Parsing `../spi_flash_reader.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: ../spi_flash_reader.v
Parsing Verilog input from `../spi_flash_reader.v' to AST representation.
Generating RTLIL representation for module `\spi_flash_reader'.
Successfully finished Verilog frontend.

-- Parsing `../sigma_delta.v' using frontend `verilog' --

18. Executing Verilog-2005 frontend: ../sigma_delta.v
Parsing Verilog input from `../sigma_delta.v' to AST representation.
Generating RTLIL representation for module `\sigma_delta'.
Successfully finished Verilog frontend.

-- Parsing `../dds.v' using frontend `verilog' --

19. Executing Verilog-2005 frontend: ../dds.v
Parsing Verilog input from `../dds.v' to AST representation.
Generating RTLIL representation for module `\dds'.
Successfully finished Verilog frontend.

-- Parsing `../mult16x16.v' using frontend `verilog' --

20. Executing Verilog-2005 frontend: ../mult16x16.v
Parsing Verilog input from `../mult16x16.v' to AST representation.
Generating RTLIL representation for module `\mult16x16'.
Successfully finished Verilog frontend.

-- Parsing `../pll.v' using frontend `verilog' --

21. Executing Verilog-2005 frontend: ../pll.v
Parsing Verilog input from `../pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json yosysout.json' --

22. Executing SYNTH_ICE40 pass.

22.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

22.2. Executing HIERARCHY pass (managing design hierarchy).

22.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             \rotator
Used module:                 \signed_shifter
Used module:     \CIC
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             \delay_counter
Used module:         \BinToLCD
Parameter \rate = 1024
Parameter \log2rate = 10

22.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\CIC'.
Parameter \rate = 1024
Parameter \log2rate = 10
Generating RTLIL representation for module `$paramod\CIC\rate=1024\log2rate=10'.
Parameter \rate = 1024
Parameter \log2rate = 10
Found cached RTLIL representation for module `$paramod\CIC\rate=1024\log2rate=10'.
Parameter \iteration = 7
Parameter \tangle = 17'00000000001110010

22.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 7
Parameter \tangle = 17'00000000001110010
Generating RTLIL representation for module `$paramod\rotator\iteration=7\tangle=17'00000000001110010'.
Parameter \iteration = 6
Parameter \tangle = 17'00000000011100101

22.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 6
Parameter \tangle = 17'00000000011100101
Generating RTLIL representation for module `$paramod\rotator\iteration=6\tangle=17'00000000011100101'.
Parameter \iteration = 5
Parameter \tangle = 17'00000000111001010

22.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 5
Parameter \tangle = 17'00000000111001010
Generating RTLIL representation for module `$paramod\rotator\iteration=5\tangle=17'00000000111001010'.
Parameter \iteration = 4
Parameter \tangle = 17'00000001110010011

22.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 4
Parameter \tangle = 17'00000001110010011
Generating RTLIL representation for module `$paramod\rotator\iteration=4\tangle=17'00000001110010011'.
Parameter \iteration = 3
Parameter \tangle = 17'00000011100100000

22.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 3
Parameter \tangle = 17'00000011100100000
Generating RTLIL representation for module `$paramod\rotator\iteration=3\tangle=17'00000011100100000'.
Parameter \iteration = 2
Parameter \tangle = 17'00000111000001001

22.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 2
Parameter \tangle = 17'00000111000001001
Generating RTLIL representation for module `$paramod\rotator\iteration=2\tangle=17'00000111000001001'.
Parameter \iteration = 1
Parameter \tangle = 17'00001101010010000

22.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 1
Parameter \tangle = 17'00001101010010000
Generating RTLIL representation for module `$paramod\rotator\iteration=1\tangle=17'00001101010010000'.
Parameter \iteration = 0
Parameter \tangle = 17'00010110100000000

22.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 0
Parameter \tangle = 17'00010110100000000
Generating RTLIL representation for module `$paramod\rotator\iteration=0\tangle=17'00010110100000000'.
Parameter \i = 0

22.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 0
Generating RTLIL representation for module `$paramod\signed_shifter\i=0'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.
Parameter \counter_width = 20

22.2.12. Executing AST frontend in derive mode using pre-parsed AST for module `\delay_counter'.
Parameter \counter_width = 20
Generating RTLIL representation for module `$paramod\delay_counter\counter_width=20'.

22.2.13. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 \signed_shifter
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:     $paramod\CIC\rate=1024\log2rate=10
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Parameter \i = 7

22.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 7
Generating RTLIL representation for module `$paramod\signed_shifter\i=7'.
Parameter \i = 7
Found cached RTLIL representation for module `$paramod\signed_shifter\i=7'.
Parameter \i = 6

22.2.15. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 6
Generating RTLIL representation for module `$paramod\signed_shifter\i=6'.
Parameter \i = 6
Found cached RTLIL representation for module `$paramod\signed_shifter\i=6'.
Parameter \i = 5

22.2.16. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 5
Generating RTLIL representation for module `$paramod\signed_shifter\i=5'.
Parameter \i = 5
Found cached RTLIL representation for module `$paramod\signed_shifter\i=5'.
Parameter \i = 4

22.2.17. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 4
Generating RTLIL representation for module `$paramod\signed_shifter\i=4'.
Parameter \i = 4
Found cached RTLIL representation for module `$paramod\signed_shifter\i=4'.
Parameter \i = 3

22.2.18. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 3
Generating RTLIL representation for module `$paramod\signed_shifter\i=3'.
Parameter \i = 3
Found cached RTLIL representation for module `$paramod\signed_shifter\i=3'.
Parameter \i = 2

22.2.19. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 2
Generating RTLIL representation for module `$paramod\signed_shifter\i=2'.
Parameter \i = 2
Found cached RTLIL representation for module `$paramod\signed_shifter\i=2'.
Parameter \i = 1

22.2.20. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 1
Generating RTLIL representation for module `$paramod\signed_shifter\i=1'.
Parameter \i = 1
Found cached RTLIL representation for module `$paramod\signed_shifter\i=1'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.

22.2.21. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 $paramod\signed_shifter\i=7
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:                 $paramod\signed_shifter\i=6
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:                 $paramod\signed_shifter\i=5
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:                 $paramod\signed_shifter\i=4
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:                 $paramod\signed_shifter\i=3
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:                 $paramod\signed_shifter\i=2
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:                 $paramod\signed_shifter\i=1
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:                 $paramod\signed_shifter\i=0
Used module:     $paramod\CIC\rate=1024\log2rate=10
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

22.2.22. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 $paramod\signed_shifter\i=7
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:                 $paramod\signed_shifter\i=6
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:                 $paramod\signed_shifter\i=5
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:                 $paramod\signed_shifter\i=4
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:                 $paramod\signed_shifter\i=3
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:                 $paramod\signed_shifter\i=2
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:                 $paramod\signed_shifter\i=1
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:                 $paramod\signed_shifter\i=0
Used module:     $paramod\CIC\rate=1024\log2rate=10
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Removing unused module `\delay_counter'.
Removing unused module `\rotator'.
Removing unused module `\signed_shifter'.
Removing unused module `\CIC'.
Removed 4 unused modules.
Mapping positional arguments of cell $paramod\rotator\iteration=0\tangle=17'00010110100000000.y_shifter ($paramod\signed_shifter\i=0).
Mapping positional arguments of cell $paramod\rotator\iteration=0\tangle=17'00010110100000000.x_shifter ($paramod\signed_shifter\i=0).
Mapping positional arguments of cell $paramod\rotator\iteration=1\tangle=17'00001101010010000.y_shifter ($paramod\signed_shifter\i=1).
Mapping positional arguments of cell $paramod\rotator\iteration=1\tangle=17'00001101010010000.x_shifter ($paramod\signed_shifter\i=1).
Mapping positional arguments of cell $paramod\rotator\iteration=2\tangle=17'00000111000001001.y_shifter ($paramod\signed_shifter\i=2).
Mapping positional arguments of cell $paramod\rotator\iteration=2\tangle=17'00000111000001001.x_shifter ($paramod\signed_shifter\i=2).
Mapping positional arguments of cell $paramod\rotator\iteration=3\tangle=17'00000011100100000.y_shifter ($paramod\signed_shifter\i=3).
Mapping positional arguments of cell $paramod\rotator\iteration=3\tangle=17'00000011100100000.x_shifter ($paramod\signed_shifter\i=3).
Mapping positional arguments of cell $paramod\rotator\iteration=4\tangle=17'00000001110010011.y_shifter ($paramod\signed_shifter\i=4).
Mapping positional arguments of cell $paramod\rotator\iteration=4\tangle=17'00000001110010011.x_shifter ($paramod\signed_shifter\i=4).
Mapping positional arguments of cell $paramod\rotator\iteration=5\tangle=17'00000000111001010.y_shifter ($paramod\signed_shifter\i=5).
Mapping positional arguments of cell $paramod\rotator\iteration=5\tangle=17'00000000111001010.x_shifter ($paramod\signed_shifter\i=5).
Mapping positional arguments of cell $paramod\rotator\iteration=6\tangle=17'00000000011100101.y_shifter ($paramod\signed_shifter\i=6).
Mapping positional arguments of cell $paramod\rotator\iteration=6\tangle=17'00000000011100101.x_shifter ($paramod\signed_shifter\i=6).
Mapping positional arguments of cell $paramod\rotator\iteration=7\tangle=17'00000000001110010.y_shifter ($paramod\signed_shifter\i=7).
Mapping positional arguments of cell $paramod\rotator\iteration=7\tangle=17'00000000001110010.x_shifter ($paramod\signed_shifter\i=7).
Mapping positional arguments of cell $paramod\CIC\rate=1024\log2rate=10.combram (dpram_64x8).
Mapping positional arguments of cell pll.randgen (fibonacci7).
Mapping positional arguments of cell UI.LCD (lcd).
Mapping positional arguments of cell UI.diplay_number (BinToLCD).
Mapping positional arguments of cell cordic.U7 ($paramod\rotator\iteration=7\tangle=17'00000000001110010).
Mapping positional arguments of cell cordic.U6 ($paramod\rotator\iteration=6\tangle=17'00000000011100101).
Mapping positional arguments of cell cordic.U5 ($paramod\rotator\iteration=5\tangle=17'00000000111001010).
Mapping positional arguments of cell cordic.U4 ($paramod\rotator\iteration=4\tangle=17'00000001110010011).
Mapping positional arguments of cell cordic.U3 ($paramod\rotator\iteration=3\tangle=17'00000011100100000).
Mapping positional arguments of cell cordic.U2 ($paramod\rotator\iteration=2\tangle=17'00000111000001001).
Mapping positional arguments of cell cordic.U1 ($paramod\rotator\iteration=1\tangle=17'00001101010010000).
Mapping positional arguments of cell cordic.U0 ($paramod\rotator\iteration=0\tangle=17'00010110100000000).
Mapping positional arguments of cell oscillator.randgen (fibonacci15).
Mapping positional arguments of cell top.SRAM (sram16x16).
Mapping positional arguments of cell top.F2SRAM (Flash_to_SRAM).
Mapping positional arguments of cell top.CORDIC (fullcordic).
Mapping positional arguments of cell top.Filter2 ($paramod\CIC\rate=1024\log2rate=10).
Mapping positional arguments of cell top.Filter1 ($paramod\CIC\rate=1024\log2rate=10).
Mapping positional arguments of cell top.Mult2 (mult16x16).
Mapping positional arguments of cell top.Mult1 (mult16x16).
Mapping positional arguments of cell top.ADC (adc_host).
Mapping positional arguments of cell top.DAC3 (sigma_delta).
Mapping positional arguments of cell top.DAC2 (sigma_delta).
Mapping positional arguments of cell top.DAC1 (sigma_delta).
Mapping positional arguments of cell top.DDS (dds).
Mapping positional arguments of cell top.PLL (pll).
Mapping positional arguments of cell top.OSC (oscillator).
Mapping positional arguments of cell top.UI_inst (UI).
Warning: Resizing cell port $paramod\CIC\rate=1024\log2rate=10.combram.indat from 49 bits to 64 bits.
Warning: Resizing cell port $paramod\CIC\rate=1024\log2rate=10.combram.outdat from 49 bits to 64 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WDATA from 8 bits to 16 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RADDR from 32 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RDATA from 8 bits to 16 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port top.DAC2.dac_val from 17 bits to 16 bits.
Warning: Resizing cell port top.DAC1.dac_val from 17 bits to 16 bits.
Warning: Resizing cell port top.UI_inst.TC from 4 bits to 3 bits.

22.3. Executing PROC pass (convert processes to netlists).

22.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

22.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../UI/delay_counter.v:62$776 in module $paramod\delay_counter\counter_width=20.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$767 in module $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$759 in module $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$751 in module $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$743 in module $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$735 in module $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$727 in module $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$719 in module $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$711 in module $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Removed 4 dead cases from process $proc$../dds.v:23$525 in module dds.
Marked 4 switch rules as full_case in process $proc$../dds.v:23$525 in module dds.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:187$505 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:174$501 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:166$497 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:155$492 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:141$490 in module spi_flash_reader.
Removed 1 dead cases from process $proc$../spi_flash_reader.v:112$487 in module spi_flash_reader.
Marked 5 switch rules as full_case in process $proc$../spi_flash_reader.v:112$487 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:104$485 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../UI/lcd_display.v:435$430 in module lcd.
Marked 4 switch rules as full_case in process $proc$../UI/lcd_display.v:219$422 in module lcd.
Removed 1 dead cases from process $proc$../UI/BinToLCD.v:36$224 in module BinToLCD.
Marked 24 switch rules as full_case in process $proc$../UI/BinToLCD.v:36$224 in module BinToLCD.
Marked 5 switch rules as full_case in process $proc$../UI/UI.v:129$155 in module UI.
Marked 1 switch rules as full_case in process $proc$../adc_host.v:29$39 in module adc_host.
Removed 1 dead cases from process $proc$../oscillator.v:34$31 in module oscillator.
Marked 1 switch rules as full_case in process $proc$../oscillator.v:34$31 in module oscillator.
Removed a total of 7 dead cases.

22.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 36 redundant assignments.
Promoted 141 assignments to connections.

22.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:26$710'.
  Set init value: \we = 1'0
Found init rule in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:25$709'.
  Set init value: \inaddr = 8'00000000
Found init rule in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:23$708'.
  Set init value: \OUTpipe = 49'0000000000000000000000000000000000000000000000000
Found init rule in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:23$707'.
  Set init value: \I0 = 49'0000000000000000000000000000000000000000000000000
Found init rule in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:21$706'.
  Set init value: \tickcount = 11'00000000000
Found init rule in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:20$705'.
  Set init value: \lasttick = 1'0
Found init rule in `\pll.$proc$../pll.v:39$562'.
  Set init value: \last_eP = 16'0000000000000000
Found init rule in `\pll.$proc$../pll.v:38$561'.
  Set init value: \eD = 16'0000000000000000
Found init rule in `\pll.$proc$../pll.v:31$560'.
  Set init value: \pipestep = 1'0
Found init rule in `\pll.$proc$../pll.v:30$559'.
  Set init value: \l2_in = 1'0
Found init rule in `\pll.$proc$../pll.v:30$558'.
  Set init value: \l_in = 1'0
Found init rule in `\pll.$proc$../pll.v:28$557'.
  Set init value: \incr = 17'00000001001011000
Found init rule in `\pll.$proc$../pll.v:25$556'.
  Set init value: \phase = 0
Found init rule in `\pll.$proc$../pll.v:17$555'.
  Set init value: \locked = 1'0
Found init rule in `\dds.$proc$../dds.v:21$538'.
  Set init value: \islast = 1'0
Found init rule in `\dds.$proc$../dds.v:21$537'.
  Set init value: \lastgo = 1'0
Found init rule in `\dds.$proc$../dds.v:21$536'.
  Set init value: \iscos = 1'0
Found init rule in `\dds.$proc$../dds.v:17$535'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:14$534'.
  Set init value: \cos = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:13$533'.
  Set init value: \sin = 16'0000000000000000
Found init rule in `\sigma_delta.$proc$../sigma_delta.v:16$524'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$484'.
  Set init value: \busystop = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$483'.
  Set init value: \spi_go = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$481'.
  Set init value: \spi_addr = 24'000000000000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$480'.
  Set init value: \second = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$479'.
  Set init value: \laststart = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$478'.
  Set init value: \poscount = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$477'.
  Set init value: \wdata = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$476'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$475'.
  Set init value: \wen = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$474'.
  Set init value: \busy = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:201$444'.
  Set init value: \tx_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:200$443'.
  Set init value: \main_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:196$442'.
  Set init value: \tx_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:195$441'.
  Set init value: \main_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:170$440'.
  Set init value: \LCD_E1 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:169$439'.
  Set init value: \LCD_E0 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:168$438'.
  Set init value: \SF_D1 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:167$437'.
  Set init value: \SF_D0 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:106$436'.
  Set init value: \pos = 0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:105$435'.
  Set init value: \display_state = 5'00000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:77$434'.
  Set init value: \tx_done = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:74$433'.
  Set init value: \tx_state = 3'110
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:32$398'.
  Set init value: \holdoff = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:31$397'.
  Set init value: \difference = 17'00000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:28$396'.
  Set init value: \dec = 4'0000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$395'.
  Set init value: \AngelaMerkel = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$394'.
  Set init value: \secondlastacc = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$393'.
  Set init value: \lastacc = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$392'.
  Set init value: \rest = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:26$391'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:24$390'.
  Set init value: \pos = 5'00000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$389'.
  Set init value: \leadz = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$388'.
  Set init value: \updating = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$387'.
  Set init value: \lastupdate = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:20$386'.
  Set init value: \we = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:15$385'.
  Set init value: \dat = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:71$222'.
  Set init value: \dispdone = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:70$221'.
  Set init value: \disppos = 5'00000
Found init rule in `\UI.$proc$../UI/UI.v:69$220'.
  Set init value: \repaintS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:69$219'.
  Set init value: \weS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:68$218'.
  Set init value: \datS = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:56$217'.
  Set init value: \state = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:53$216'.
  Set init value: \btnt3 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:53$215'.
  Set init value: \btnt2 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:53$214'.
  Set init value: \btnt1 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:53$213'.
  Set init value: \btnt0 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:52$212'.
  Set init value: \cnt3 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:52$211'.
  Set init value: \cnt2 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:52$210'.
  Set init value: \cnt1 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:52$209'.
  Set init value: \cnt0 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:51$208'.
  Set init value: \BP = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:46$207'.
  Set init value: \update = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:44$206'.
  Set init value: \count = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:32$205'.
  Set init value: \ismagphase = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:29$204'.
  Set init value: \refIO = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:28$203'.
  Set init value: \refampl = 2'00
Found init rule in `\UI.$proc$../UI/UI.v:27$202'.
  Set init value: \reffreq = 3'001
Found init rule in `\UI.$proc$../UI/UI.v:26$201'.
  Set init value: \TC = 3'110
Found init rule in `\UI.$proc$../UI/UI.v:25$200'.
  Set init value: \gain = 2'00
Found init rule in `\adc_host.$proc$../adc_host.v:23$51'.
  Set init value: \shiftdata = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:22$50'.
  Set init value: \count = 8'00000000
Found init rule in `\adc_host.$proc$../adc_host.v:21$49'.
  Set init value: \acq = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:19$48'.
  Set init value: \newdata = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:17$47'.
  Set init value: \data = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:14$46'.
  Set init value: \CONVST = 1'0
Found init rule in `\oscillator.$proc$../oscillator.v:27$35'.
  Set init value: \phaseword = 25'0000000000000000000000000
Found init rule in `\oscillator.$proc$../oscillator.v:26$34'.
  Set init value: \PHASENAKKUMULATOOOOOR = 0
Found init rule in `\top.$proc$TOP_V1.v:93$26'.
  Set init value: \loadlookup = 1'0
Found init rule in `\top.$proc$TOP_V1.v:70$25'.
  Set init value: \cnt = 25'0000000000000000000000000
Found init rule in `\top.$proc$TOP_V1.v:69$24'.
  Set init value: \rst = 1'1

22.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:435$430'.
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:219$422'.

22.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$838'.
Creating decoders for process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$814'.
Creating decoders for process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$786'.
Creating decoders for process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$776'.
     1/1: $0\counter[19:0]
Creating decoders for process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$775'.
Creating decoders for process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:26$710'.
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:25$709'.
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:23$708'.
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:23$707'.
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:21$706'.
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:20$705'.
Creating decoders for process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
     1/5: $0\we[0:0]
     2/5: $0\inaddr[7:0]
     3/5: $0\I0[48:0]
     4/5: $0\tickcount[10:0]
     5/5: $0\OUT[31:0]
Creating decoders for process `\pll.$proc$../pll.v:39$562'.
Creating decoders for process `\pll.$proc$../pll.v:38$561'.
Creating decoders for process `\pll.$proc$../pll.v:31$560'.
Creating decoders for process `\pll.$proc$../pll.v:30$559'.
Creating decoders for process `\pll.$proc$../pll.v:30$558'.
Creating decoders for process `\pll.$proc$../pll.v:28$557'.
Creating decoders for process `\pll.$proc$../pll.v:25$556'.
Creating decoders for process `\pll.$proc$../pll.v:17$555'.
Creating decoders for process `\pll.$proc$../pll.v:47$543'.
     1/6: $0\phase[31:0]
     2/6: $0\locked[0:0]
     3/6: $0\pipestep[0:0]
     4/6: $0\last_eP[15:0]
     5/6: $0\eD[15:0]
     6/6: $0\incr[16:0]
Creating decoders for process `\dds.$proc$../dds.v:21$538'.
Creating decoders for process `\dds.$proc$../dds.v:21$537'.
Creating decoders for process `\dds.$proc$../dds.v:21$536'.
Creating decoders for process `\dds.$proc$../dds.v:17$535'.
Creating decoders for process `\dds.$proc$../dds.v:14$534'.
Creating decoders for process `\dds.$proc$../dds.v:13$533'.
Creating decoders for process `\dds.$proc$../dds.v:23$525'.
     1/5: $0\islast[0:0]
     2/5: $0\iscos[0:0]
     3/5: $0\addr[15:0]
     4/5: $0\cos[15:0]
     5/5: $0\sin[15:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:16$524'.
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:20$522'.
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$511'.
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$505'.
     1/1: $0\rdy_i[0:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$501'.
     1/1: $0\cnt_len[17:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$497'.
     1/1: $0\cnt_cmd[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$492'.
     1/2: $0\cnt_bit_last[0:0]
     2/2: $0\cnt_bit[2:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$490'.
     1/1: $0\shift_reg[31:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$487'.
     1/5: $5\fsm_state_next[1:0]
     2/5: $4\fsm_state_next[1:0]
     3/5: $3\fsm_state_next[1:0]
     4/5: $2\fsm_state_next[1:0]
     5/5: $1\fsm_state_next[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$485'.
     1/1: $0\fsm_state[1:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$484'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$483'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$482'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$481'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$480'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$479'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$478'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$477'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$476'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$475'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$474'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
     1/10: $0\wen[0:0]
     2/10: $0\spi_go[0:0]
     3/10: $0\busystop[0:0]
     4/10: $0\spi_addr[23:0]
     5/10: $0\f_byte[7:0]
     6/10: $0\second[0:0]
     7/10: $0\poscount[16:0]
     8/10: $0\wdata[15:0]
     9/10: $0\addr[15:0]
    10/10: $0\busy[0:0]
Creating decoders for process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$894'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:201$444'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:200$443'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:196$442'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:195$441'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:170$440'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:169$439'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:168$438'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:167$437'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:106$436'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:105$435'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:77$434'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:74$433'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:435$430'.
     1/6: $0\tx_delay_load[0:0]
     2/6: $0\tx_delay_value[19:0]
     3/6: $0\LCD_E0[0:0]
     4/6: $0\SF_D0[3:0]
     5/6: $0\tx_done[0:0]
     6/6: $0\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:219$422'.
     1/7: $0\main_delay_value[19:0]
     2/7: $0\main_delay_load[0:0]
     3/7: $0\LCD_E1[0:0]
     4/7: $0\SF_D1[3:0]
     5/7: $0\display_state[4:0]
     6/7: $0\tx_byte[7:0]
     7/7: $0\pos[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:32$398'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:31$397'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:28$396'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$395'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$394'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$393'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$392'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:26$391'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:24$390'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$389'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$388'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$387'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:20$386'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:15$385'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
     1/28: $16\rest[15:0]
     2/28: $15\rest[15:0]
     3/28: $14\rest[15:0]
     4/28: $13\rest[15:0]
     5/28: $12\rest[15:0]
     6/28: $11\rest[15:0]
     7/28: $10\rest[15:0]
     8/28: $9\rest[15:0]
     9/28: $8\rest[15:0]
    10/28: $7\rest[15:0]
    11/28: $6\rest[15:0]
    12/28: $5\rest[15:0]
    13/28: $4\rest[15:0]
    14/28: $3\rest[15:0]
    15/28: $2\rest[15:0]
    16/28: $1\rest[15:0]
    17/28: $0\holdoff[0:0]
    18/28: $0\difference[16:0]
    19/28: $0\dec[3:0]
    20/28: $0\AngelaMerkel[15:0]
    21/28: $0\secondlastacc[15:0]
    22/28: $0\lastacc[15:0]
    23/28: $0\acc[16:0]
    24/28: $0\pos[4:0]
    25/28: $0\leadz[0:0]
    26/28: $0\updating[0:0]
    27/28: $0\dat[7:0]
    28/28: $0\we[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:71$222'.
Creating decoders for process `\UI.$proc$../UI/UI.v:70$221'.
Creating decoders for process `\UI.$proc$../UI/UI.v:69$220'.
Creating decoders for process `\UI.$proc$../UI/UI.v:69$219'.
Creating decoders for process `\UI.$proc$../UI/UI.v:68$218'.
Creating decoders for process `\UI.$proc$../UI/UI.v:56$217'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$216'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$215'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$214'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$213'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$212'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$211'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$210'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$209'.
Creating decoders for process `\UI.$proc$../UI/UI.v:51$208'.
Creating decoders for process `\UI.$proc$../UI/UI.v:46$207'.
Creating decoders for process `\UI.$proc$../UI/UI.v:44$206'.
Creating decoders for process `\UI.$proc$../UI/UI.v:32$205'.
Creating decoders for process `\UI.$proc$../UI/UI.v:29$204'.
Creating decoders for process `\UI.$proc$../UI/UI.v:28$203'.
Creating decoders for process `\UI.$proc$../UI/UI.v:27$202'.
Creating decoders for process `\UI.$proc$../UI/UI.v:26$201'.
Creating decoders for process `\UI.$proc$../UI/UI.v:25$200'.
Creating decoders for process `\UI.$proc$../UI/UI.v:129$155'.
     1/13: $0\state[3:0]
     2/13: $0\update[0:0]
     3/13: $0\weS[0:0]
     4/13: $0\repaintS[0:0]
     5/13: $0\dispdone[0:0]
     6/13: $0\disppos[4:0]
     7/13: $0\datS[7:0]
     8/13: $0\refampl[1:0]
     9/13: $0\reffreq[2:0]
    10/13: $0\ismagphase[0:0]
    11/13: $0\refIO[0:0]
    12/13: $0\TC[2:0]
    13/13: $0\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:76$135'.
     1/12: $0\BP[3:0] [3]
     2/12: $0\BP[3:0] [2]
     3/12: $0\BP[3:0] [1]
     4/12: $0\BP[3:0] [0]
     5/12: $0\btnt3[0:0]
     6/12: $0\btnt2[0:0]
     7/12: $0\btnt1[0:0]
     8/12: $0\btnt0[0:0]
     9/12: $0\cnt3[23:0]
    10/12: $0\cnt2[23:0]
    11/12: $0\cnt1[23:0]
    12/12: $0\cnt0[23:0]
Creating decoders for process `\cordic.$proc$../cordic/cordic.v:385$134'.
Creating decoders for process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$886'.
Creating decoders for process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$874'.
Creating decoders for process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
     1/1: $0\quadmem[0][1:0]
Creating decoders for process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$858'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:23$51'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:22$50'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:21$49'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:19$48'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:17$47'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:14$46'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:46$45'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:29$39'.
     1/5: $0\count[7:0]
     2/5: $0\newdata[0:0]
     3/5: $0\acq[0:0]
     4/5: $0\data[15:0]
     5/5: $0\CONVST[0:0]
Creating decoders for process `\oscillator.$proc$../oscillator.v:27$35'.
Creating decoders for process `\oscillator.$proc$../oscillator.v:26$34'.
Creating decoders for process `\oscillator.$proc$../oscillator.v:34$31'.
     1/1: $0\phaseword[24:0]
Creating decoders for process `\fibonacci15.$proc$../fibonacci15.v:10$29'.
Creating decoders for process `\fibonacci7.$proc$../fibonacci7.v:10$27'.
Creating decoders for process `\top.$proc$TOP_V1.v:93$26'.
Creating decoders for process `\top.$proc$TOP_V1.v:70$25'.
Creating decoders for process `\top.$proc$TOP_V1.v:69$24'.
Creating decoders for process `\top.$proc$TOP_V1.v:124$12'.
     1/2: $0\loadlookup[0:0]
     2/2: $0\rst[0:0]

22.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\signed_shifter\i=5.\Q' from process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$838'.
No latch inferred for signal `$paramod\signed_shifter\i=5.\j' from process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$838'.
No latch inferred for signal `$paramod\signed_shifter\i=6.\Q' from process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$814'.
No latch inferred for signal `$paramod\signed_shifter\i=6.\j' from process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$814'.
No latch inferred for signal `$paramod\signed_shifter\i=7.\Q' from process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$786'.
No latch inferred for signal `$paramod\signed_shifter\i=7.\j' from process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$786'.
No latch inferred for signal `$paramod\signed_shifter\i=0.\Q' from process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$775'.
No latch inferred for signal `$paramod\signed_shifter\i=0.\j' from process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$775'.
No latch inferred for signal `\spi_flash_reader.\fsm_state_next' from process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$487'.
No latch inferred for signal `\Flash_to_SRAM.\spi_len' from process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$482'.
No latch inferred for signal `$paramod\signed_shifter\i=1.\Q' from process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$894'.
No latch inferred for signal `$paramod\signed_shifter\i=1.\j' from process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$894'.
No latch inferred for signal `\cordic.\x[0]' from process `\cordic.$proc$../cordic/cordic.v:385$134'.
No latch inferred for signal `\cordic.\y[0]' from process `\cordic.$proc$../cordic/cordic.v:385$134'.
No latch inferred for signal `\cordic.\z[0]' from process `\cordic.$proc$../cordic/cordic.v:385$134'.
No latch inferred for signal `$paramod\signed_shifter\i=2.\Q' from process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$886'.
No latch inferred for signal `$paramod\signed_shifter\i=2.\j' from process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$886'.
No latch inferred for signal `$paramod\signed_shifter\i=3.\Q' from process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$874'.
No latch inferred for signal `$paramod\signed_shifter\i=3.\j' from process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$874'.
No latch inferred for signal `$paramod\signed_shifter\i=4.\Q' from process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$858'.
No latch inferred for signal `$paramod\signed_shifter\i=4.\j' from process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$858'.

22.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\delay_counter\counter_width=20.\counter' using process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$776'.
  created $dff cell `$procdff$3158' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3159' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_i_s_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3160' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_i_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3161' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3162' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_i_s_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3163' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_i_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3164' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\z_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
  created $dff cell `$procdff$3165' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3166' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_i_s_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3167' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_i_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3168' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3169' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_i_s_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3170' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_i_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3171' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\z_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
  created $dff cell `$procdff$3172' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3173' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_i_s_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3174' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_i_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3175' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3176' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_i_s_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3177' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_i_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3178' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\z_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
  created $dff cell `$procdff$3179' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3180' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_i_s_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3181' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_i_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3182' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3183' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_i_s_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3184' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_i_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3185' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\z_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
  created $dff cell `$procdff$3186' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3187' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_i_s_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3188' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_i_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3189' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3190' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_i_s_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3191' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_i_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3192' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\z_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
  created $dff cell `$procdff$3193' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3194' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_i_s_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3195' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_i_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3196' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3197' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_i_s_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3198' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_i_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3199' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\z_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
  created $dff cell `$procdff$3200' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3201' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_i_s_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3202' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_i_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3203' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3204' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_i_s_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3205' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_i_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3206' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\z_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
  created $dff cell `$procdff$3207' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3208' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_i_s_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3209' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_i_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3210' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3211' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_i_s_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3212' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_i_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3213' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\z_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
  created $dff cell `$procdff$3214' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\OUT' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3215' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\lasttick' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3216' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\tickcount' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3217' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\I0' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3218' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\OUTpipe' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3219' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\inaddr' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3220' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\we' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3221' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=1024\log2rate=10.\outaddr' using process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
  created $dff cell `$procdff$3222' with positive edge clock.
Creating register for signal `\pll.\phase' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3223' with positive edge clock.
Creating register for signal `\pll.\locked' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3224' with positive edge clock.
Creating register for signal `\pll.\incr' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3225' with positive edge clock.
Creating register for signal `\pll.\l_in' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3226' with positive edge clock.
Creating register for signal `\pll.\l2_in' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3227' with positive edge clock.
Creating register for signal `\pll.\pipestep' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3228' with positive edge clock.
Creating register for signal `\pll.\eD' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3229' with positive edge clock.
Creating register for signal `\pll.\last_eP' using process `\pll.$proc$../pll.v:47$543'.
  created $dff cell `$procdff$3230' with positive edge clock.
Creating register for signal `\dds.\sin' using process `\dds.$proc$../dds.v:23$525'.
  created $dff cell `$procdff$3231' with positive edge clock.
Creating register for signal `\dds.\cos' using process `\dds.$proc$../dds.v:23$525'.
  created $dff cell `$procdff$3232' with positive edge clock.
Creating register for signal `\dds.\addr' using process `\dds.$proc$../dds.v:23$525'.
  created $dff cell `$procdff$3233' with positive edge clock.
Creating register for signal `\dds.\iscos' using process `\dds.$proc$../dds.v:23$525'.
  created $dff cell `$procdff$3234' with positive edge clock.
Creating register for signal `\dds.\lastgo' using process `\dds.$proc$../dds.v:23$525'.
  created $dff cell `$procdff$3235' with positive edge clock.
Creating register for signal `\dds.\islast' using process `\dds.$proc$../dds.v:23$525'.
  created $dff cell `$procdff$3236' with positive edge clock.
Creating register for signal `\sigma_delta.\acc' using process `\sigma_delta.$proc$../sigma_delta.v:20$522'.
  created $dff cell `$procdff$3237' with positive edge clock.
Creating register for signal `\spi_flash_reader.\valid_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$511'.
  created $dff cell `$procdff$3238' with positive edge clock.
Creating register for signal `\spi_flash_reader.\rdy_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$505'.
  created $dff cell `$procdff$3239' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_len' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$501'.
  created $dff cell `$procdff$3240' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_cmd' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$497'.
  created $dff cell `$procdff$3241' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$492'.
  created $dff cell `$procdff$3242' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit_last' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$492'.
  created $dff cell `$procdff$3243' with positive edge clock.
Creating register for signal `\spi_flash_reader.\shift_reg' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$490'.
  created $dff cell `$procdff$3244' with positive edge clock.
Creating register for signal `\spi_flash_reader.\fsm_state' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$485'.
  created $dff cell `$procdff$3245' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wen' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3246' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busy' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3247' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3248' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wdata' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3249' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\poscount' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3250' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\laststart' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3251' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\second' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3252' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\f_byte' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3253' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3254' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_go' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3255' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busystop' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
  created $dff cell `$procdff$3256' with positive edge clock.
Creating register for signal `\lcd.\tx_state' using process `\lcd.$proc$../UI/lcd_display.v:435$430'.
  created $adff cell `$procdff$3257' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\tx_done' using process `\lcd.$proc$../UI/lcd_display.v:435$430'.
  created $dff cell `$procdff$3258' with positive edge clock.
Creating register for signal `\lcd.\SF_D0' using process `\lcd.$proc$../UI/lcd_display.v:435$430'.
  created $dff cell `$procdff$3259' with positive edge clock.
Creating register for signal `\lcd.\LCD_E0' using process `\lcd.$proc$../UI/lcd_display.v:435$430'.
  created $dff cell `$procdff$3260' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:435$430'.
  created $dff cell `$procdff$3261' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:435$430'.
  created $dff cell `$procdff$3262' with positive edge clock.
Creating register for signal `\lcd.\pos' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $dff cell `$procdff$3263' with positive edge clock.
Creating register for signal `\lcd.\tx_byte' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $dff cell `$procdff$3264' with positive edge clock.
Creating register for signal `\lcd.\display_state' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $adff cell `$procdff$3265' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\SF_D1' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $dff cell `$procdff$3266' with positive edge clock.
Creating register for signal `\lcd.\LCD_E1' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $dff cell `$procdff$3267' with positive edge clock.
Creating register for signal `\lcd.\main_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $adff cell `$procdff$3268' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\main_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:219$422'.
  created $adff cell `$procdff$3269' with positive edge clock and positive level reset.
Creating register for signal `\BinToLCD.\we' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3270' with positive edge clock.
Creating register for signal `\BinToLCD.\dat' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3271' with positive edge clock.
Creating register for signal `\BinToLCD.\lastupdate' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3272' with positive edge clock.
Creating register for signal `\BinToLCD.\updating' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3273' with positive edge clock.
Creating register for signal `\BinToLCD.\leadz' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3274' with positive edge clock.
Creating register for signal `\BinToLCD.\pos' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3275' with positive edge clock.
Creating register for signal `\BinToLCD.\acc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3276' with positive edge clock.
Creating register for signal `\BinToLCD.\rest' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3277' with positive edge clock.
Creating register for signal `\BinToLCD.\lastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3278' with positive edge clock.
Creating register for signal `\BinToLCD.\secondlastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3279' with positive edge clock.
Creating register for signal `\BinToLCD.\AngelaMerkel' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3280' with positive edge clock.
Creating register for signal `\BinToLCD.\dec' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3281' with positive edge clock.
Creating register for signal `\BinToLCD.\difference' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3282' with positive edge clock.
Creating register for signal `\BinToLCD.\holdoff' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
  created $dff cell `$procdff$3283' with positive edge clock.
Creating register for signal `\UI.\gain' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3284' with positive edge clock.
Creating register for signal `\UI.\TC' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3285' with positive edge clock.
Creating register for signal `\UI.\refIO' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3286' with positive edge clock.
Creating register for signal `\UI.\ismagphase' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3287' with positive edge clock.
Creating register for signal `\UI.\count' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3288' with positive edge clock.
Creating register for signal `\UI.\reffreq' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3289' with positive edge clock.
Creating register for signal `\UI.\refampl' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3290' with positive edge clock.
Creating register for signal `\UI.\update' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3291' with positive edge clock.
Creating register for signal `\UI.\state' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3292' with positive edge clock.
Creating register for signal `\UI.\datS' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3293' with positive edge clock.
Creating register for signal `\UI.\weS' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3294' with positive edge clock.
Creating register for signal `\UI.\repaintS' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3295' with positive edge clock.
Creating register for signal `\UI.\disppos' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3296' with positive edge clock.
Creating register for signal `\UI.\dispdone' using process `\UI.$proc$../UI/UI.v:129$155'.
  created $dff cell `$procdff$3297' with positive edge clock.
Creating register for signal `\UI.\BP' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3298' with positive edge clock.
Creating register for signal `\UI.\cnt0' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3299' with positive edge clock.
Creating register for signal `\UI.\cnt1' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3300' with positive edge clock.
Creating register for signal `\UI.\cnt2' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3301' with positive edge clock.
Creating register for signal `\UI.\cnt3' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3302' with positive edge clock.
Creating register for signal `\UI.\btnt0' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3303' with positive edge clock.
Creating register for signal `\UI.\btnt1' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3304' with positive edge clock.
Creating register for signal `\UI.\btnt2' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3305' with positive edge clock.
Creating register for signal `\UI.\btnt3' using process `\UI.$proc$../UI/UI.v:76$135'.
  created $dff cell `$procdff$3306' with positive edge clock.
Creating register for signal `\fullcordic.\i' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3307' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[0]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3308' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[1]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3309' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[2]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3310' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[3]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3311' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[4]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3312' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[5]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3313' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[6]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3314' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[7]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3315' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[8]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
  created $dff cell `$procdff$3316' with positive edge clock.
Creating register for signal `\adc_host.\shiftdata' using process `\adc_host.$proc$../adc_host.v:46$45'.
  created $dff cell `$procdff$3317' with negative edge clock.
Creating register for signal `\adc_host.\CONVST' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3318' with positive edge clock.
Creating register for signal `\adc_host.\newdata' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3319' with positive edge clock.
Creating register for signal `\adc_host.\data' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3320' with positive edge clock.
Creating register for signal `\adc_host.\acq' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3321' with positive edge clock.
Creating register for signal `\adc_host.\count' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3322' with positive edge clock.
Creating register for signal `\oscillator.\phasereg' using process `\oscillator.$proc$../oscillator.v:34$31'.
  created $dff cell `$procdff$3323' with positive edge clock.
Creating register for signal `\oscillator.\PHASENAKKUMULATOOOOOR' using process `\oscillator.$proc$../oscillator.v:34$31'.
  created $dff cell `$procdff$3324' with positive edge clock.
Creating register for signal `\oscillator.\phaseword' using process `\oscillator.$proc$../oscillator.v:34$31'.
  created $dff cell `$procdff$3325' with positive edge clock.
Creating register for signal `\fibonacci15.\fib' using process `\fibonacci15.$proc$../fibonacci15.v:10$29'.
  created $dff cell `$procdff$3326' with positive edge clock.
Creating register for signal `\fibonacci7.\fib' using process `\fibonacci7.$proc$../fibonacci7.v:10$27'.
  created $dff cell `$procdff$3327' with positive edge clock.
Creating register for signal `\top.\rst' using process `\top.$proc$TOP_V1.v:124$12'.
  created $dff cell `$procdff$3328' with positive edge clock.
Creating register for signal `\top.\cnt' using process `\top.$proc$TOP_V1.v:124$12'.
  created $dff cell `$procdff$3329' with positive edge clock.
Creating register for signal `\top.\loadlookup' using process `\top.$proc$TOP_V1.v:124$12'.
  created $dff cell `$procdff$3330' with positive edge clock.

22.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$838'.
Removing empty process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$814'.
Removing empty process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$786'.
Found and cleaned up 1 empty switch in `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$776'.
Removing empty process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$776'.
Removing empty process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$775'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
Removing empty process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$767'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
Removing empty process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$759'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
Removing empty process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$751'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
Removing empty process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$743'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
Removing empty process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$735'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
Removing empty process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$727'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
Removing empty process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$719'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
Removing empty process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$711'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:26$710'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:25$709'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:23$708'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:23$707'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:21$706'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:20$705'.
Found and cleaned up 3 empty switches in `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
Removing empty process `$paramod\CIC\rate=1024\log2rate=10.$proc$../filter/CIC.v:33$691'.
Removing empty process `pll.$proc$../pll.v:39$562'.
Removing empty process `pll.$proc$../pll.v:38$561'.
Removing empty process `pll.$proc$../pll.v:31$560'.
Removing empty process `pll.$proc$../pll.v:30$559'.
Removing empty process `pll.$proc$../pll.v:30$558'.
Removing empty process `pll.$proc$../pll.v:28$557'.
Removing empty process `pll.$proc$../pll.v:25$556'.
Removing empty process `pll.$proc$../pll.v:17$555'.
Found and cleaned up 3 empty switches in `\pll.$proc$../pll.v:47$543'.
Removing empty process `pll.$proc$../pll.v:47$543'.
Removing empty process `dds.$proc$../dds.v:21$538'.
Removing empty process `dds.$proc$../dds.v:21$537'.
Removing empty process `dds.$proc$../dds.v:21$536'.
Removing empty process `dds.$proc$../dds.v:17$535'.
Removing empty process `dds.$proc$../dds.v:14$534'.
Removing empty process `dds.$proc$../dds.v:13$533'.
Found and cleaned up 7 empty switches in `\dds.$proc$../dds.v:23$525'.
Removing empty process `dds.$proc$../dds.v:23$525'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:16$524'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:20$522'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:201$511'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:187$505'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:187$505'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:174$501'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:174$501'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:166$497'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:166$497'.
Found and cleaned up 3 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:155$492'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:155$492'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:141$490'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:141$490'.
Found and cleaned up 5 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:112$487'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:112$487'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:104$485'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:104$485'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$484'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$483'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$482'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$481'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$480'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$479'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$478'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$477'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$476'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$475'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$474'.
Found and cleaned up 5 empty switches in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$466'.
Removing empty process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$894'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:201$444'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:200$443'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:196$442'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:195$441'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:170$440'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:169$439'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:168$438'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:167$437'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:106$436'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:105$435'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:77$434'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:74$433'.
Found and cleaned up 8 empty switches in `\lcd.$proc$../UI/lcd_display.v:435$430'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:435$430'.
Found and cleaned up 22 empty switches in `\lcd.$proc$../UI/lcd_display.v:219$422'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:219$422'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:32$398'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:31$397'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:28$396'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$395'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$394'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$393'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$392'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:26$391'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:24$390'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$389'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$388'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$387'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:20$386'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:15$385'.
Found and cleaned up 80 empty switches in `\BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:36$224'.
Removing empty process `UI.$proc$../UI/UI.v:71$222'.
Removing empty process `UI.$proc$../UI/UI.v:70$221'.
Removing empty process `UI.$proc$../UI/UI.v:69$220'.
Removing empty process `UI.$proc$../UI/UI.v:69$219'.
Removing empty process `UI.$proc$../UI/UI.v:68$218'.
Removing empty process `UI.$proc$../UI/UI.v:56$217'.
Removing empty process `UI.$proc$../UI/UI.v:53$216'.
Removing empty process `UI.$proc$../UI/UI.v:53$215'.
Removing empty process `UI.$proc$../UI/UI.v:53$214'.
Removing empty process `UI.$proc$../UI/UI.v:53$213'.
Removing empty process `UI.$proc$../UI/UI.v:52$212'.
Removing empty process `UI.$proc$../UI/UI.v:52$211'.
Removing empty process `UI.$proc$../UI/UI.v:52$210'.
Removing empty process `UI.$proc$../UI/UI.v:52$209'.
Removing empty process `UI.$proc$../UI/UI.v:51$208'.
Removing empty process `UI.$proc$../UI/UI.v:46$207'.
Removing empty process `UI.$proc$../UI/UI.v:44$206'.
Removing empty process `UI.$proc$../UI/UI.v:32$205'.
Removing empty process `UI.$proc$../UI/UI.v:29$204'.
Removing empty process `UI.$proc$../UI/UI.v:28$203'.
Removing empty process `UI.$proc$../UI/UI.v:27$202'.
Removing empty process `UI.$proc$../UI/UI.v:26$201'.
Removing empty process `UI.$proc$../UI/UI.v:25$200'.
Found and cleaned up 42 empty switches in `\UI.$proc$../UI/UI.v:129$155'.
Removing empty process `UI.$proc$../UI/UI.v:129$155'.
Found and cleaned up 12 empty switches in `\UI.$proc$../UI/UI.v:76$135'.
Removing empty process `UI.$proc$../UI/UI.v:76$135'.
Removing empty process `cordic.$proc$../cordic/cordic.v:385$134'.
Removing empty process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$886'.
Removing empty process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$874'.
Found and cleaned up 3 empty switches in `\fullcordic.$proc$../cordic/fullcordic.v:45$111'.
Removing empty process `fullcordic.$proc$../cordic/fullcordic.v:45$111'.
Removing empty process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$858'.
Removing empty process `adc_host.$proc$../adc_host.v:23$51'.
Removing empty process `adc_host.$proc$../adc_host.v:22$50'.
Removing empty process `adc_host.$proc$../adc_host.v:21$49'.
Removing empty process `adc_host.$proc$../adc_host.v:19$48'.
Removing empty process `adc_host.$proc$../adc_host.v:17$47'.
Removing empty process `adc_host.$proc$../adc_host.v:14$46'.
Removing empty process `adc_host.$proc$../adc_host.v:46$45'.
Found and cleaned up 5 empty switches in `\adc_host.$proc$../adc_host.v:29$39'.
Removing empty process `adc_host.$proc$../adc_host.v:29$39'.
Removing empty process `oscillator.$proc$../oscillator.v:27$35'.
Removing empty process `oscillator.$proc$../oscillator.v:26$34'.
Found and cleaned up 1 empty switch in `\oscillator.$proc$../oscillator.v:34$31'.
Removing empty process `oscillator.$proc$../oscillator.v:34$31'.
Removing empty process `fibonacci15.$proc$../fibonacci15.v:10$29'.
Removing empty process `fibonacci7.$proc$../fibonacci7.v:10$27'.
Removing empty process `top.$proc$TOP_V1.v:93$26'.
Removing empty process `top.$proc$TOP_V1.v:70$25'.
Removing empty process `top.$proc$TOP_V1.v:69$24'.
Found and cleaned up 2 empty switches in `\top.$proc$TOP_V1.v:124$12'.
Removing empty process `top.$proc$TOP_V1.v:124$12'.
Cleaned up 226 empty switches.

22.4. Executing FLATTEN pass (flatten design).
Using template adc_host for cells of type adc_host.
Using template Flash_to_SRAM for cells of type Flash_to_SRAM.
Using template sram16x16 for cells of type sram16x16.
Using template dds for cells of type dds.
Using template mult16x16 for cells of type mult16x16.
Using template $paramod\CIC\rate=1024\log2rate=10 for cells of type $paramod\CIC\rate=1024\log2rate=10.
Using template fullcordic for cells of type fullcordic.
Using template UI for cells of type UI.
Using template oscillator for cells of type oscillator.
Using template pll for cells of type pll.
Using template sigma_delta for cells of type sigma_delta.
Using template spi_flash_reader for cells of type spi_flash_reader.
Using template dpram_64x8 for cells of type dpram_64x8.
Using template cordic for cells of type cordic.
Using template lcd for cells of type lcd.
Using template BinToLCD for cells of type BinToLCD.
Using template fibonacci15 for cells of type fibonacci15.
Using template fibonacci7 for cells of type fibonacci7.
Using template $paramod\rotator\iteration=0\tangle=17'00010110100000000 for cells of type $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Using template $paramod\rotator\iteration=1\tangle=17'00001101010010000 for cells of type $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Using template $paramod\rotator\iteration=2\tangle=17'00000111000001001 for cells of type $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Using template $paramod\rotator\iteration=3\tangle=17'00000011100100000 for cells of type $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Using template $paramod\rotator\iteration=4\tangle=17'00000001110010011 for cells of type $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Using template $paramod\rotator\iteration=5\tangle=17'00000000111001010 for cells of type $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Using template $paramod\rotator\iteration=6\tangle=17'00000000011100101 for cells of type $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Using template $paramod\rotator\iteration=7\tangle=17'00000000001110010 for cells of type $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Using template $paramod\delay_counter\counter_width=20 for cells of type $paramod\delay_counter\counter_width=20.
Using template $paramod\signed_shifter\i=0 for cells of type $paramod\signed_shifter\i=0.
Using template $paramod\signed_shifter\i=1 for cells of type $paramod\signed_shifter\i=1.
Using template $paramod\signed_shifter\i=2 for cells of type $paramod\signed_shifter\i=2.
Using template $paramod\signed_shifter\i=3 for cells of type $paramod\signed_shifter\i=3.
Using template $paramod\signed_shifter\i=4 for cells of type $paramod\signed_shifter\i=4.
Using template $paramod\signed_shifter\i=5 for cells of type $paramod\signed_shifter\i=5.
Using template $paramod\signed_shifter\i=6 for cells of type $paramod\signed_shifter\i=6.
Using template $paramod\signed_shifter\i=7 for cells of type $paramod\signed_shifter\i=7.
No more expansions possible.
Deleting now unused module $paramod\signed_shifter\i=5.
Deleting now unused module $paramod\signed_shifter\i=6.
Deleting now unused module $paramod\signed_shifter\i=7.
Deleting now unused module $paramod\delay_counter\counter_width=20.
Deleting now unused module $paramod\signed_shifter\i=0.
Deleting now unused module $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Deleting now unused module $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Deleting now unused module $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Deleting now unused module $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Deleting now unused module $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Deleting now unused module $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Deleting now unused module $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Deleting now unused module $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Deleting now unused module $paramod\CIC\rate=1024\log2rate=10.
Deleting now unused module pll.
Deleting now unused module mult16x16.
Deleting now unused module dds.
Deleting now unused module sigma_delta.
Deleting now unused module spi_flash_reader.
Deleting now unused module Flash_to_SRAM.
Deleting now unused module sram16x16.
Deleting now unused module $paramod\signed_shifter\i=1.
Deleting now unused module lcd.
Deleting now unused module BinToLCD.
Deleting now unused module UI.
Deleting now unused module cordic.
Deleting now unused module $paramod\signed_shifter\i=2.
Deleting now unused module $paramod\signed_shifter\i=3.
Deleting now unused module fullcordic.
Deleting now unused module dpram_64x8.
Deleting now unused module $paramod\signed_shifter\i=4.
Deleting now unused module adc_host.
Deleting now unused module oscillator.
Deleting now unused module fibonacci15.
Deleting now unused module fibonacci7.

22.5. Executing TRIBUF pass.

22.6. Executing DEMINOUT pass (demote inout ports to input or output).

22.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Warning: Driver-driver conflict for \OSC.randgen.fib [14] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [13] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [12] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [11] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [10] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [9] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [8] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [7] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [6] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [5] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [4] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [3] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [2] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [1] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [0] between cell $techmap\OSC.randgen.$procdff$3326.Q and constant 1'1 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [6] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [5] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [4] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [3] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [2] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [1] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [0] between cell $techmap\PLL.randgen.$procdff$3327.Q and constant 1'1 in top: Resolved using constant.
Removed 93 unused cells and 1156 unused wires.

22.9. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.\IO [8] is used but has no driver.
Warning: Wire top.\IO [7] is used but has no driver.
Warning: Wire top.\IO [6] is used but has no driver.
Warning: Wire top.\IO [5] is used but has no driver.
Warning: Wire top.\IO [4] is used but has no driver.
Warning: Wire top.\IO [3] is used but has no driver.
Warning: Wire top.\IO [2] is used but has no driver.
Warning: Wire top.\IO [1] is used but has no driver.
Warning: Wire top.\IO [0] is used but has no driver.
found and reported 9 problems.

22.10. Executing OPT pass (performing simple optimizations).

22.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 604 cells.

22.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3082: \UI_inst.btnt3 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3080: \UI_inst.btnt3 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3088: \UI_inst.btnt2 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3086: \UI_inst.btnt2 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3094: \UI_inst.btnt1 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3092: \UI_inst.btnt1 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3100: \UI_inst.btnt0 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3098: \UI_inst.btnt0 -> 1'1
      Replacing known input bits on port A of cell $techmap\DDS.$procmux$1173: \DDS.islast -> 1'0
      Replacing known input bits on port A of cell $techmap\DDS.$procmux$1177: \DDS.iscos -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.diplay_number.$procmux$1975: \Filter2.OUT [31:16] -> { 1'0 \Filter2.OUT [30:16] }
      Replacing known input bits on port A of cell $techmap\UI_inst.diplay_number.$procmux$2003: \Filter1.OUT [31:16] -> { 1'0 \Filter1.OUT [30:16] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1623.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1625.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1636.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1638.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1650.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1652.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1667.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1669.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1685.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1687.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1704.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1706.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1724.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1726.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1752.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1754.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1781.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1783.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1811.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1813.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1844.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1846.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1878.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1880.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1913.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1915.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1949.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1951.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$2011.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1241.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1247.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1254.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1262.
Removed 33 multiplexer ports.

22.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $techmap\PLL.$reduce_or$../pll.v:43$540: { \PLL.phase [25] \PLL.phase [26] \PLL.phase [27] \PLL.phase [28] \PLL.phase [29] \PLL.phase [30] \PLL.phase [31] }
    New input vector for $reduce_or cell $techmap\Filter2.$reduce_or$../filter/CIC.v:47$700: { \Filter2.tickcount [0] \Filter2.tickcount [1] \Filter2.tickcount [2] \Filter2.tickcount [3] \Filter2.tickcount [4] \Filter2.tickcount [5] \Filter2.tickcount [6] \Filter2.tickcount [7] \Filter2.tickcount [8] \Filter2.tickcount [9] \Filter2.tickcount [10] }
    New input vector for $reduce_or cell $techmap\Filter1.$reduce_or$../filter/CIC.v:47$700: { \Filter1.tickcount [0] \Filter1.tickcount [1] \Filter1.tickcount [2] \Filter1.tickcount [3] \Filter1.tickcount [4] \Filter1.tickcount [5] \Filter1.tickcount [6] \Filter1.tickcount [7] \Filter1.tickcount [8] \Filter1.tickcount [9] \Filter1.tickcount [10] }
    New input vector for $reduce_or cell $reduce_or$TOP_V1.v:115$10: { \ADC.data [0] \ADC.data [1] \ADC.data [2] \ADC.data [3] \ADC.data [4] \ADC.data [5] \ADC.data [6] \ADC.data [7] \ADC.data [8] \ADC.data [9] \ADC.data [10] \ADC.data [11] \ADC.data [12] \ADC.data [13] \ADC.data [14] \ADC.data [15] }
    New input vector for $reduce_or cell $techmap\UI_inst.$reduce_or$../UI/UI.v:215$166: { \UI_inst.BP [0] \UI_inst.BP [1] \UI_inst.BP [2] \UI_inst.BP [3] }
    New input vector for $reduce_and cell $techmap\PLL.$reduce_and$../pll.v:50$546: { \PLL.eP [12] \PLL.eP [13] \PLL.eP [14] \PLL.eP [15] }
    New input vector for $reduce_and cell $techmap\PLL.$reduce_and$../pll.v:50$545: { $techmap\PLL.$not$../pll.v:50$544_Y [0] $techmap\PLL.$not$../pll.v:50$544_Y [1] $techmap\PLL.$not$../pll.v:50$544_Y [2] $techmap\PLL.$not$../pll.v:50$544_Y [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:126$14: { \cnt [0] \cnt [1] \cnt [2] \cnt [3] \cnt [4] \cnt [5] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:110$7: { $not$TOP_V1.v:110$6_Y [0] $not$TOP_V1.v:110$6_Y [1] $not$TOP_V1.v:110$6_Y [2] $not$TOP_V1.v:110$6_Y [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:110$4: { \ADC.data [11] \ADC.data [12] \ADC.data [13] \ADC.data [14] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:93$141: { \UI_inst.cnt1 [0] \UI_inst.cnt1 [1] \UI_inst.cnt1 [2] \UI_inst.cnt1 [3] \UI_inst.cnt1 [4] \UI_inst.cnt1 [5] \UI_inst.cnt1 [6] \UI_inst.cnt1 [7] \UI_inst.cnt1 [8] \UI_inst.cnt1 [9] \UI_inst.cnt1 [10] \UI_inst.cnt1 [11] \UI_inst.cnt1 [12] \UI_inst.cnt1 [13] \UI_inst.cnt1 [14] \UI_inst.cnt1 [15] \UI_inst.cnt1 [16] \UI_inst.cnt1 [17] \UI_inst.cnt1 [18] \UI_inst.cnt1 [19] \UI_inst.cnt1 [20] \UI_inst.cnt1 [21] \UI_inst.cnt1 [22] \UI_inst.cnt1 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:83$137: { \UI_inst.cnt0 [0] \UI_inst.cnt0 [1] \UI_inst.cnt0 [2] \UI_inst.cnt0 [3] \UI_inst.cnt0 [4] \UI_inst.cnt0 [5] \UI_inst.cnt0 [6] \UI_inst.cnt0 [7] \UI_inst.cnt0 [8] \UI_inst.cnt0 [9] \UI_inst.cnt0 [10] \UI_inst.cnt0 [11] \UI_inst.cnt0 [12] \UI_inst.cnt0 [13] \UI_inst.cnt0 [14] \UI_inst.cnt0 [15] \UI_inst.cnt0 [16] \UI_inst.cnt0 [17] \UI_inst.cnt0 [18] \UI_inst.cnt0 [19] \UI_inst.cnt0 [20] \UI_inst.cnt0 [21] \UI_inst.cnt0 [22] \UI_inst.cnt0 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:136$158: { \UI_inst.disppos [0] \UI_inst.disppos [1] \UI_inst.disppos [2] \UI_inst.disppos [3] \UI_inst.disppos [4] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:134$157: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] \UI_inst.count [5] \UI_inst.count [6] \UI_inst.count [7] \UI_inst.count [8] \UI_inst.count [9] \UI_inst.count [10] \UI_inst.count [11] \UI_inst.count [12] \UI_inst.count [13] \UI_inst.count [14] \UI_inst.count [15] \UI_inst.count [16] \UI_inst.count [17] \UI_inst.count [18] \UI_inst.count [19] \UI_inst.count [20] \UI_inst.count [21] \UI_inst.count [22] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:113$149: { \UI_inst.cnt3 [0] \UI_inst.cnt3 [1] \UI_inst.cnt3 [2] \UI_inst.cnt3 [3] \UI_inst.cnt3 [4] \UI_inst.cnt3 [5] \UI_inst.cnt3 [6] \UI_inst.cnt3 [7] \UI_inst.cnt3 [8] \UI_inst.cnt3 [9] \UI_inst.cnt3 [10] \UI_inst.cnt3 [11] \UI_inst.cnt3 [12] \UI_inst.cnt3 [13] \UI_inst.cnt3 [14] \UI_inst.cnt3 [15] \UI_inst.cnt3 [16] \UI_inst.cnt3 [17] \UI_inst.cnt3 [18] \UI_inst.cnt3 [19] \UI_inst.cnt3 [20] \UI_inst.cnt3 [21] \UI_inst.cnt3 [22] \UI_inst.cnt3 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:103$145: { \UI_inst.cnt2 [0] \UI_inst.cnt2 [1] \UI_inst.cnt2 [2] \UI_inst.cnt2 [3] \UI_inst.cnt2 [4] \UI_inst.cnt2 [5] \UI_inst.cnt2 [6] \UI_inst.cnt2 [7] \UI_inst.cnt2 [8] \UI_inst.cnt2 [9] \UI_inst.cnt2 [10] \UI_inst.cnt2 [11] \UI_inst.cnt2 [12] \UI_inst.cnt2 [13] \UI_inst.cnt2 [14] \UI_inst.cnt2 [15] \UI_inst.cnt2 [16] \UI_inst.cnt2 [17] \UI_inst.cnt2 [18] \UI_inst.cnt2 [19] \UI_inst.cnt2 [20] \UI_inst.cnt2 [21] \UI_inst.cnt2 [22] \UI_inst.cnt2 [23] }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2883: { $techmap\UI_inst.$procmux$2915_CMP $techmap\UI_inst.$procmux$2914_CMP $techmap\UI_inst.$procmux$2913_CMP $techmap\UI_inst.$procmux$2911_CMP $techmap\UI_inst.$procmux$2910_CMP $techmap\UI_inst.$procmux$2909_CMP $techmap\UI_inst.$procmux$2907_CMP $techmap\UI_inst.$procmux$2906_CMP $techmap\UI_inst.$procmux$2905_CMP $techmap\UI_inst.$procmux$2904_CMP $techmap\UI_inst.$procmux$2903_CMP $techmap\UI_inst.$procmux$2902_CMP $auto$opt_reduce.cc:132:opt_mux$3332 $techmap\UI_inst.$procmux$2896_CMP $techmap\UI_inst.$procmux$2887_CMP $techmap\UI_inst.$procmux$2884_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2919: { $techmap\UI_inst.$procmux$2915_CMP $techmap\UI_inst.$procmux$2914_CMP $techmap\UI_inst.$procmux$2913_CMP $techmap\UI_inst.$procmux$2911_CMP $techmap\UI_inst.$procmux$2909_CMP $auto$opt_reduce.cc:132:opt_mux$3338 $techmap\UI_inst.$procmux$2907_CMP $techmap\UI_inst.$procmux$2906_CMP $auto$opt_reduce.cc:132:opt_mux$3336 $techmap\UI_inst.$procmux$2904_CMP $techmap\UI_inst.$procmux$2903_CMP $techmap\UI_inst.$procmux$2947_CMP $techmap\UI_inst.$procmux$2944_CMP $techmap\UI_inst.$procmux$2935_CMP $techmap\UI_inst.$procmux$2902_CMP $auto$opt_reduce.cc:132:opt_mux$3334 $techmap\UI_inst.$procmux$2884_CMP $techmap\UI_inst.$procmux$2920_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2963: { $techmap\UI_inst.$procmux$2915_CMP $techmap\UI_inst.$procmux$2913_CMP $techmap\UI_inst.$procmux$2909_CMP $techmap\UI_inst.$procmux$2976_CMP $techmap\UI_inst.$procmux$2975_CMP $techmap\UI_inst.$procmux$2972_CMP $techmap\UI_inst.$procmux$2969_CMP $auto$opt_reduce.cc:132:opt_mux$3344 $auto$opt_reduce.cc:132:opt_mux$3342 $auto$opt_reduce.cc:132:opt_mux$3340 $techmap\UI_inst.$procmux$2944_CMP $techmap\UI_inst.$procmux$2935_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$3008: { $techmap\UI_inst.$procmux$2915_CMP $techmap\UI_inst.$procmux$2914_CMP $techmap\UI_inst.$procmux$2912_CMP $techmap\UI_inst.$procmux$2911_CMP $techmap\UI_inst.$procmux$2910_CMP $techmap\UI_inst.$procmux$2907_CMP $auto$opt_reduce.cc:132:opt_mux$3352 $auto$opt_reduce.cc:132:opt_mux$3350 $techmap\UI_inst.$procmux$2904_CMP $techmap\UI_inst.$procmux$2902_CMP $techmap\UI_inst.$procmux$2897_CMP $techmap\UI_inst.$procmux$2896_CMP $auto$opt_reduce.cc:132:opt_mux$3348 $auto$opt_reduce.cc:132:opt_mux$3346 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$3050: $auto$opt_reduce.cc:132:opt_mux$3354
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1365: { $auto$opt_reduce.cc:132:opt_mux$3358 $auto$opt_reduce.cc:132:opt_mux$3356 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1375: { $auto$opt_reduce.cc:132:opt_mux$3362 $auto$opt_reduce.cc:132:opt_mux$3360 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1490: { $auto$opt_reduce.cc:132:opt_mux$3366 $auto$opt_reduce.cc:132:opt_mux$3364 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1511: { $auto$opt_reduce.cc:132:opt_mux$3368 $techmap\UI_inst.LCD.$procmux$1420_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1583: { $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:186$408_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:187$409_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:188$410_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$411_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:190$412_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:191$413_Y $auto$opt_reduce.cc:132:opt_mux$3372 $auto$opt_reduce.cc:132:opt_mux$3370 }
    New ctrl vector for $pmux cell $techmap\DDS.$procmux$1191: { $auto$opt_reduce.cc:132:opt_mux$3376 $auto$opt_reduce.cc:132:opt_mux$3374 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1954: { $techmap\UI_inst.diplay_number.$procmux$2008_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1996_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1980_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP $auto$opt_reduce.cc:132:opt_mux$3378 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2020: { $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $auto$opt_reduce.cc:132:opt_mux$3382 $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP $auto$opt_reduce.cc:132:opt_mux$3380 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2098: { $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1986_CMP $auto$opt_reduce.cc:132:opt_mux$3384 $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP $techmap\UI_inst.diplay_number.$procmux$1958_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2178: { $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $auto$opt_reduce.cc:132:opt_mux$3388 $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $auto$opt_reduce.cc:132:opt_mux$3386 $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2310: { $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $auto$opt_reduce.cc:132:opt_mux$3392 $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $auto$opt_reduce.cc:132:opt_mux$3390 $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2466: { $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $auto$opt_reduce.cc:132:opt_mux$3394 $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2559: { $techmap\UI_inst.diplay_number.$procmux$2010_CMP $techmap\UI_inst.diplay_number.$procmux$2008_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1986_CMP $techmap\UI_inst.diplay_number.$procmux$1982_CMP $auto$opt_reduce.cc:132:opt_mux$3400 $techmap\UI_inst.diplay_number.$procmux$1980_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $auto$opt_reduce.cc:132:opt_mux$3398 $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP $techmap\UI_inst.diplay_number.$procmux$1958_CMP $techmap\UI_inst.diplay_number.$procmux$1957_CMP $auto$opt_reduce.cc:132:opt_mux$3396 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2695: { $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1986_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP $techmap\UI_inst.diplay_number.$procmux$1958_CMP $auto$opt_reduce.cc:132:opt_mux$3402 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3339: { $techmap\UI_inst.$procmux$2947_CMP $techmap\UI_inst.$procmux$2910_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3343: { $techmap\UI_inst.$procmux$2968_CMP $techmap\UI_inst.$procmux$2914_CMP $techmap\UI_inst.$procmux$2912_CMP $techmap\UI_inst.$procmux$2911_CMP $techmap\UI_inst.$procmux$2908_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3345: { $techmap\UI_inst.$procmux$2920_CMP $techmap\UI_inst.$procmux$2908_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3363: { $techmap\UI_inst.LCD.$procmux$1491_CMP $techmap\UI_inst.LCD.$procmux$1435_CMP $techmap\UI_inst.LCD.$procmux$1429_CMP $techmap\UI_inst.LCD.$procmux$1423_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3369: { $techmap\UI_inst.LCD.$procmux$1541_CMP $techmap\UI_inst.LCD.$procmux$1520_CMP $techmap\UI_inst.LCD.$procmux$1442_CMP }
  Optimizing cells in module \top.
Performed a total of 40 changes.

22.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 186 cells.

22.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 826 unused wires.

22.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.9. Rerunning OPT passes. (Maybe there is more to do..)

22.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2824: { $techmap\UI_inst.$eq$../UI/UI.v:124$153_Y $auto$opt_reduce.cc:132:opt_mux$3404 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2846: { $techmap\UI_inst.$eq$../UI/UI.v:124$153_Y $auto$opt_reduce.cc:132:opt_mux$3406 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2868: $auto$opt_reduce.cc:132:opt_mux$3408
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1328: { $auto$opt_reduce.cc:132:opt_mux$3410 $techmap\UI_inst.LCD.$procmux$1330_CMP $techmap\UI_inst.LCD.$procmux$1329_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1348: { $techmap\UI_inst.LCD.$procmux$1342_CMP $techmap\UI_inst.LCD.$procmux$1339_CMP $auto$opt_reduce.cc:132:opt_mux$3412 $techmap\UI_inst.LCD.$procmux$1333_CMP $techmap\UI_inst.LCD.$procmux$1329_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1416: { $techmap\UI_inst.LCD.$procmux$1442_CMP $techmap\UI_inst.LCD.$procmux$1438_CMP $techmap\UI_inst.LCD.$procmux$1432_CMP $auto$opt_reduce.cc:132:opt_mux$3416 $auto$opt_reduce.cc:132:opt_mux$3414 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$411_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1452: { $techmap\UI_inst.LCD.$procmux$1442_CMP $auto$opt_reduce.cc:132:opt_mux$3418 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$411_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1954: { $techmap\UI_inst.diplay_number.$procmux$2008_CMP $techmap\UI_inst.diplay_number.$procmux$1996_CMP $techmap\UI_inst.diplay_number.$procmux$1980_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $auto$opt_reduce.cc:132:opt_mux$3420 $auto$opt_reduce.cc:132:opt_mux$3378 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2020: { $auto$opt_reduce.cc:132:opt_mux$3382 $auto$opt_reduce.cc:132:opt_mux$3422 $auto$opt_reduce.cc:132:opt_mux$3380 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2098: { $auto$opt_reduce.cc:132:opt_mux$3384 $auto$opt_reduce.cc:132:opt_mux$3424 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2178: { $auto$opt_reduce.cc:132:opt_mux$3382 $auto$opt_reduce.cc:132:opt_mux$3438 $auto$opt_reduce.cc:132:opt_mux$3436 $auto$opt_reduce.cc:132:opt_mux$3434 $auto$opt_reduce.cc:132:opt_mux$3432 $auto$opt_reduce.cc:132:opt_mux$3386 $auto$opt_reduce.cc:132:opt_mux$3430 $auto$opt_reduce.cc:132:opt_mux$3428 $auto$opt_reduce.cc:132:opt_mux$3426 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2244: $auto$opt_reduce.cc:132:opt_mux$3440
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2310: { $auto$opt_reduce.cc:132:opt_mux$3382 $auto$opt_reduce.cc:132:opt_mux$3454 $auto$opt_reduce.cc:132:opt_mux$3452 $auto$opt_reduce.cc:132:opt_mux$3450 $auto$opt_reduce.cc:132:opt_mux$3448 $auto$opt_reduce.cc:132:opt_mux$3386 $auto$opt_reduce.cc:132:opt_mux$3446 $auto$opt_reduce.cc:132:opt_mux$3444 $auto$opt_reduce.cc:132:opt_mux$3442 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2466: { $auto$opt_reduce.cc:132:opt_mux$3382 $auto$opt_reduce.cc:132:opt_mux$3458 $auto$opt_reduce.cc:132:opt_mux$3456 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2559: { $techmap\UI_inst.diplay_number.$procmux$2010_CMP $techmap\UI_inst.diplay_number.$procmux$2008_CMP $techmap\UI_inst.diplay_number.$procmux$1982_CMP $auto$opt_reduce.cc:132:opt_mux$3400 $techmap\UI_inst.diplay_number.$procmux$1980_CMP $auto$opt_reduce.cc:132:opt_mux$3386 $auto$opt_reduce.cc:132:opt_mux$3462 $auto$opt_reduce.cc:132:opt_mux$3460 $techmap\UI_inst.diplay_number.$procmux$1957_CMP $auto$opt_reduce.cc:132:opt_mux$3396 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2695: { $auto$opt_reduce.cc:132:opt_mux$3464 $auto$opt_reduce.cc:132:opt_mux$3402 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3421: { $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3423: { $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1986_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1958_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3439: { $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1986_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1958_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3455: { $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3461: { $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3463: { $techmap\UI_inst.diplay_number.$procmux$1997_CMP $techmap\UI_inst.diplay_number.$procmux$1986_CMP $techmap\UI_inst.diplay_number.$procmux$1969_CMP $techmap\UI_inst.diplay_number.$procmux$1958_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1914_CMP $techmap\UI_inst.diplay_number.$procmux$1879_CMP $techmap\UI_inst.diplay_number.$procmux$1845_CMP $techmap\UI_inst.diplay_number.$procmux$1812_CMP $techmap\UI_inst.diplay_number.$procmux$1782_CMP $techmap\UI_inst.diplay_number.$procmux$1753_CMP $techmap\UI_inst.diplay_number.$procmux$1725_CMP $techmap\UI_inst.diplay_number.$procmux$1705_CMP $techmap\UI_inst.diplay_number.$procmux$1686_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1651_CMP $techmap\UI_inst.diplay_number.$procmux$1637_CMP $techmap\UI_inst.diplay_number.$procmux$1624_CMP }
  Optimizing cells in module \top.
Performed a total of 22 changes.

22.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 13 cells.

22.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.

22.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.16. Rerunning OPT passes. (Maybe there is more to do..)

22.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 1 cells.

22.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.

22.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.23. Rerunning OPT passes. (Maybe there is more to do..)

22.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.30. Finished OPT passes. (There is nothing left to do.)

22.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$TOP_V1.v:125$13 ($add).
Removed top 7 bits (of 32) from port Y of cell top.$add$TOP_V1.v:125$13 ($add).
Removed top 1 bits (of 17) from mux cell top.$ternary$TOP_V1.v:197$18 ($mux).
Removed top 1 bits (of 17) from mux cell top.$ternary$TOP_V1.v:203$20 ($mux).
Removed top 2 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:35$43 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:34$42 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:33$41 ($eq).
Removed top 31 bits (of 32) from mux cell top.$techmap\ADC.$ternary$../adc_host.v:25$38 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\ADC.$add$../adc_host.v:31$40 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\ADC.$add$../adc_host.v:31$40 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$473 ($add).
Removed top 15 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$473 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$472 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$472 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\DDS.$procmux$1194_CMP0 ($eq).
Removed top 1 bits (of 4) from port A of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$702 ($add).
Removed top 28 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$702 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$702 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:44$699 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:44$699 ($add).
Removed top 22 bits (of 32) from port B of cell top.$techmap\Filter1.$ge$../filter/CIC.v:42$698 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:41$697 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:41$697 ($add).
Removed top 7 bits (of 8) from port A of cell top.$techmap\Filter1.$shl$../filter/CIC.v:37$692 ($shl).
Removed top 1 bits (of 4) from port B of cell top.$techmap\Filter1.$shl$../filter/CIC.v:37$692 ($shl).
Removed top 27 bits (of 32) from port B of cell top.$techmap\Filter2.$shr$../filter/CIC.v:47$703 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter2.$add$../filter/CIC.v:44$699 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\Filter2.$add$../filter/CIC.v:44$699 ($add).
Removed top 22 bits (of 32) from port B of cell top.$techmap\Filter2.$ge$../filter/CIC.v:42$698 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter2.$add$../filter/CIC.v:41$697 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$techmap\Filter2.$add$../filter/CIC.v:41$697 ($add).
Removed top 1 bits (of 2) from mux cell top.$techmap\CORDIC.$procmux$3120 ($mux).
Removed top 1 bits (of 17) from port B of cell top.$techmap\CORDIC.$add$../cordic/fullcordic.v:42$106 ($add).
Removed top 2 bits (of 17) from port B of cell top.$techmap\CORDIC.$add$../cordic/fullcordic.v:41$104 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\CORDIC.$eq$../cordic/fullcordic.v:41$103 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$3030_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$3008 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2992 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2981_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2976_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2973 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2970 ($mux).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2963 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2945 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2936 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2927 ($mux).
Removed top 5 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2924 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2915_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2914_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2913_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2912_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2911_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2910_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2909_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2908_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2907_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2906_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2905_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2904_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2903_CMP0 ($eq).
Removed top 7 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2898 ($mux).
Removed top 6 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2888 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2885 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2806_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2800_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2794_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2788_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2782_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2780_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2779_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:422$198 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:422$198 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:421$197 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:421$197 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:396$190 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:364$188 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:364$188 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:363$187 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:363$187 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:252$172 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:252$172 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:251$171 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:251$171 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:238$169 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:212$165 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:212$165 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:211$164 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:211$164 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:138$162 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:138$162 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:131$156 ($add).
Removed top 9 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:131$156 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:123$152 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:123$152 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:112$148 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:112$148 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:102$144 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:102$144 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:92$140 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:92$140 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:82$136 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:82$136 ($add).
Removed top 2 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3152_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3151_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3150_CMP0 ($eq).
Removed top 1 bits (of 25) from mux cell top.$techmap\OSC.$procmux$3145 ($pmux).
Removed top 14 bits (of 15) from port B of cell top.$techmap\OSC.$add$../oscillator.v:36$33 ($add).
Removed top 12 bits (of 17) from port B of cell top.$techmap\PLL.$add$../pll.v:65$554 ($add).
Removed top 10 bits (of 17) from port B of cell top.$techmap\PLL.$sub$../pll.v:65$553 ($sub).
Removed top 1 bits (of 16) from port B of cell top.$techmap\PLL.$sub$../pll.v:44$541 ($sub).
Removed top 6 bits (of 7) from port B of cell top.$techmap\PLL.$add$../pll.v:32$539 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$techmap\PLL.$add$../pll.v:32$539 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\F2SRAM.SPI_READER.$eq$../spi_flash_reader.v:169$498 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$495 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$495 ($add).
Removed top 1 bits (of 5) from mux cell top.$techmap\UI_inst.LCD.$procmux$1517 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1491_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1441_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1438_CMP0 ($eq).
Removed top 2 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1436 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1435_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1432_CMP0 ($eq).
Removed top 7 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1430 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1429_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1426_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1423_CMP0 ($eq).
Removed top 16 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1421 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1420_CMP0 ($eq).
Removed top 9 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1418 ($mux).
Removed top 3 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1414 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1342_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1339_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1336_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$426 ($add).
Removed top 3 bits (of 7) from port B of cell top.$techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:396$425 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$399 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2689 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2682 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2617 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2569 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$2009_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$2008_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1997_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1996_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1986_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1985_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1984_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1983_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1950_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1914_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1879_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1845_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1812_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1782_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1753_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$eq$../UI/BinToLCD.v:113$254 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$ne$../UI/BinToLCD.v:112$253 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$249 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$249 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$223 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$223 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$768 ($gt).
Removed top 3 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$766 ($sub).
Removed top 3 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$763 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$760 ($gt).
Removed top 4 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$758 ($sub).
Removed top 4 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$755 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$752 ($gt).
Removed top 5 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$750 ($sub).
Removed top 5 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$747 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$744 ($gt).
Removed top 6 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$742 ($sub).
Removed top 6 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$739 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$736 ($gt).
Removed top 7 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$734 ($sub).
Removed top 7 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$731 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$728 ($gt).
Removed top 8 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$726 ($sub).
Removed top 8 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$723 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$720 ($gt).
Removed top 9 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$718 ($sub).
Removed top 9 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$715 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$712 ($gt).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U1.y_shifter.$or$../cordic/cordic.v:201$897 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U1.x_shifter.$or$../cordic/cordic.v:201$897 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.y_shifter.$or$../cordic/cordic.v:201$892 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.y_shifter.$or$../cordic/cordic.v:201$889 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.x_shifter.$or$../cordic/cordic.v:201$892 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.x_shifter.$or$../cordic/cordic.v:201$889 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$883 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$880 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$877 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$883 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$880 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$877 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$870 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$867 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$864 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$861 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$870 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$867 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$864 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$861 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$853 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$850 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$847 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$844 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$841 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$853 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$850 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$847 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$844 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$841 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$832 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$829 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$826 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$823 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$820 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$817 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$832 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$829 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$826 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$823 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$820 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$817 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$807 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$804 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$801 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$798 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$795 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$792 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$789 ($or).
Removed top 24 bits (of 32) from wire top.$techmap\ADC.$add$../adc_host.v:31$40_Y.
Removed top 1 bits (of 2) from wire top.$techmap\CORDIC.$procmux$3120_Y.
Removed top 16 bits (of 32) from wire top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$472_Y.
Removed top 15 bits (of 32) from wire top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$473_Y.
Removed top 29 bits (of 32) from wire top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$495_Y.
Removed top 21 bits (of 32) from wire top.$techmap\Filter1.$add$../filter/CIC.v:41$697_Y.
Removed top 21 bits (of 32) from wire top.$techmap\Filter2.$add$../filter/CIC.v:41$697_Y.
Removed top 1 bits (of 25) from wire top.$techmap\OSC.$0\phaseword[24:0].
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:102$144_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:82$136_Y.
Removed top 3 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1414_Y.
Removed top 11 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1418_Y.
Removed top 16 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1421_Y.
Removed top 7 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1430_Y.
Removed top 2 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1436_Y.
Removed top 1 bits (of 5) from wire top.$techmap\UI_inst.LCD.$procmux$1517_Y.
Removed top 28 bits (of 32) from wire top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$249_Y.
Removed top 8 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$not$../UI/BinToLCD.v:352$353_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2569_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2571_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2617_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2620_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2624_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2682_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2685_Y.
Removed top 7 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2689_Y.
Removed top 13 bits (of 17) from wire top.CORDIC.X.
Removed top 13 bits (of 32) from wire top.Filter1.OUT.
Removed top 17 bits (of 18) from wire top.OSC.phase.
Removed top 17 bits (of 32) from wire top.OSC.phasereg.
Removed top 1 bits (of 8) from wire top.UI_inst.LCD.ramaddr.

22.12. Executing PEEPOPT pass (run peephole optimizers).

22.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 38 unused wires.

22.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\Filter2.$shr$../filter/CIC.v:47$703 ($shr):
    Found 1 activation_patterns using ctrl signal { $techmap\Filter2.$reduce_or$../filter/CIC.v:47$700_Y $techmap\Filter1.$logic_and$../filter/CIC.v:39$696_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\Filter1.$shr$../filter/CIC.v:47$703 ($shr):
    Found 1 activation_patterns using ctrl signal { $techmap\Filter1.$logic_and$../filter/CIC.v:39$696_Y $techmap\Filter1.$reduce_or$../filter/CIC.v:47$700_Y }.
    No candidates found.

22.15. Executing TECHMAP pass (map to technology primitives).

22.15.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

22.15.2. Continuing TECHMAP pass.
Using template $paramod$3fbee094385d1f2712c8f0e44e105767be1dc65d\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.

22.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.

22.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$TOP_V1.v:125$13 ($add).
  creating $macc model for $techmap\ADC.$add$../adc_host.v:31$40 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:41$104 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:42$106 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:43$107 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$769 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$770 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$772 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$761 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$763 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$765 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$762 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$764 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$766 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$753 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$755 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$757 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$754 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$756 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$758 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$745 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$747 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$749 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$746 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$748 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$750 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$737 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$739 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$741 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$738 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$740 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$742 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$729 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$731 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$733 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$730 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$732 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$734 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$721 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$723 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$725 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$722 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$724 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$726 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$713 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$715 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$716 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$718 ($sub).
  creating $macc model for $techmap\DAC1.$add$../sigma_delta.v:21$523 ($add).
  creating $macc model for $techmap\DAC2.$add$../sigma_delta.v:21$523 ($add).
  creating $macc model for $techmap\DAC3.$add$../sigma_delta.v:21$523 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$472 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$473 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$495 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$499 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504 ($sub).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:41$697 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:44$699 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:47$702 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:48$704 ($add).
  creating $macc model for $techmap\Filter1.$sub$../filter/CIC.v:37$693 ($sub).
  creating $macc model for $techmap\Filter1.$sub$../filter/CIC.v:38$694 ($sub).
  creating $macc model for $techmap\Filter2.$add$../filter/CIC.v:41$697 ($add).
  creating $macc model for $techmap\Filter2.$add$../filter/CIC.v:44$699 ($add).
  creating $macc model for $techmap\Filter2.$add$../filter/CIC.v:48$704 ($add).
  creating $macc model for $techmap\Filter2.$sub$../filter/CIC.v:37$693 ($sub).
  creating $macc model for $techmap\Filter2.$sub$../filter/CIC.v:38$694 ($sub).
  creating $macc model for $techmap\OSC.$add$../oscillator.v:35$32 ($add).
  creating $macc model for $techmap\OSC.$add$../oscillator.v:36$33 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:32$539 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:51$548 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:65$554 ($add).
  creating $macc model for $techmap\PLL.$sub$../pll.v:44$541 ($sub).
  creating $macc model for $techmap\PLL.$sub$../pll.v:61$551 ($sub).
  creating $macc model for $techmap\PLL.$sub$../pll.v:65$553 ($sub).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:102$144 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:112$148 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:131$156 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:138$162 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:211$164 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:251$171 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:363$187 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:422$198 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:82$136 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:92$140 ($add).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:123$152 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:212$165 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:252$172 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:364$188 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:421$197 ($sub).
  creating $macc model for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$426 ($add).
  creating $macc model for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$777 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$249 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$228 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$248 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$252 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$223 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$227 ($sub).
  merging $macc model for $techmap\PLL.$sub$../pll.v:65$553 into $techmap\PLL.$add$../pll.v:65$554.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$223.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$252.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$248.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$228.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$249.
  creating $alu model for $macc $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$777.
  creating $alu model for $macc $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$426.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:421$197.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:364$188.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:252$172.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:212$165.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:123$152.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:92$140.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:82$136.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:422$198.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:363$187.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:251$171.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:211$164.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:138$162.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:131$156.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:112$148.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:102$144.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$227.
  creating $alu model for $macc $techmap\PLL.$sub$../pll.v:61$551.
  creating $alu model for $macc $techmap\PLL.$sub$../pll.v:44$541.
  creating $alu model for $macc $techmap\PLL.$add$../pll.v:51$548.
  creating $alu model for $macc $techmap\PLL.$add$../pll.v:32$539.
  creating $alu model for $macc $techmap\OSC.$add$../oscillator.v:36$33.
  creating $alu model for $macc $techmap\OSC.$add$../oscillator.v:35$32.
  creating $alu model for $macc $techmap\Filter2.$sub$../filter/CIC.v:38$694.
  creating $alu model for $macc $techmap\Filter2.$sub$../filter/CIC.v:37$693.
  creating $alu model for $macc $techmap\Filter2.$add$../filter/CIC.v:48$704.
  creating $alu model for $macc $techmap\Filter2.$add$../filter/CIC.v:44$699.
  creating $alu model for $macc $techmap\Filter2.$add$../filter/CIC.v:41$697.
  creating $alu model for $macc $techmap\Filter1.$sub$../filter/CIC.v:38$694.
  creating $alu model for $macc $techmap\Filter1.$sub$../filter/CIC.v:37$693.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:48$704.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:47$702.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:44$699.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:41$697.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$499.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$495.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$473.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$472.
  creating $alu model for $macc $techmap\DAC3.$add$../sigma_delta.v:21$523.
  creating $alu model for $macc $techmap\DAC2.$add$../sigma_delta.v:21$523.
  creating $alu model for $macc $techmap\DAC1.$add$../sigma_delta.v:21$523.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$718.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$716.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$715.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$713.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$726.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$724.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$722.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$725.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$723.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$721.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$734.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$732.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$730.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$733.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$731.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$729.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$742.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$740.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$738.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$741.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$739.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$737.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$750.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$748.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$746.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$749.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$747.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$745.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$758.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$756.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$754.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$757.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$755.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$753.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$766.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$764.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$762.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$765.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$763.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$761.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$772.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$770.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$769.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:43$107.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:42$106.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:41$104.
  creating $alu model for $macc $techmap\ADC.$add$../adc_host.v:31$40.
  creating $alu model for $macc $add$TOP_V1.v:125$13.
  creating $macc cell for $techmap\PLL.$add$../pll.v:65$554: $auto$alumacc.cc:365:replace_macc$3498
  creating $alu model for $techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$768 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$760 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$752 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$744 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$736 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$728 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$720 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$712 ($gt): new $alu
  creating $alu model for $techmap\Filter1.$ge$../filter/CIC.v:42$698 ($ge): new $alu
  creating $alu model for $techmap\Filter2.$ge$../filter/CIC.v:42$698 ($ge): new $alu
  creating $alu cell for $techmap\Filter2.$ge$../filter/CIC.v:42$698: $auto$alumacc.cc:485:replace_alu$3509
  creating $alu cell for $techmap\Filter1.$ge$../filter/CIC.v:42$698: $auto$alumacc.cc:485:replace_alu$3518
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$712: $auto$alumacc.cc:485:replace_alu$3527
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$720: $auto$alumacc.cc:485:replace_alu$3534
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$728: $auto$alumacc.cc:485:replace_alu$3541
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$736: $auto$alumacc.cc:485:replace_alu$3548
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$744: $auto$alumacc.cc:485:replace_alu$3555
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$752: $auto$alumacc.cc:485:replace_alu$3562
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$760: $auto$alumacc.cc:485:replace_alu$3569
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$768: $auto$alumacc.cc:485:replace_alu$3576
  creating $alu cell for $add$TOP_V1.v:125$13: $auto$alumacc.cc:485:replace_alu$3583
  creating $alu cell for $techmap\ADC.$add$../adc_host.v:31$40: $auto$alumacc.cc:485:replace_alu$3586
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:41$104: $auto$alumacc.cc:485:replace_alu$3589
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:42$106: $auto$alumacc.cc:485:replace_alu$3592
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:43$107: $auto$alumacc.cc:485:replace_alu$3595
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$770: $auto$alumacc.cc:485:replace_alu$3598
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$769: $auto$alumacc.cc:485:replace_alu$3601
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$772: $auto$alumacc.cc:485:replace_alu$3604
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$761: $auto$alumacc.cc:485:replace_alu$3607
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$763: $auto$alumacc.cc:485:replace_alu$3610
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$765: $auto$alumacc.cc:485:replace_alu$3613
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$762: $auto$alumacc.cc:485:replace_alu$3616
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$764: $auto$alumacc.cc:485:replace_alu$3619
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$766: $auto$alumacc.cc:485:replace_alu$3622
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$755: $auto$alumacc.cc:485:replace_alu$3625
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$757: $auto$alumacc.cc:485:replace_alu$3628
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$754: $auto$alumacc.cc:485:replace_alu$3631
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$753: $auto$alumacc.cc:485:replace_alu$3634
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$756: $auto$alumacc.cc:485:replace_alu$3637
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$758: $auto$alumacc.cc:485:replace_alu$3640
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$745: $auto$alumacc.cc:485:replace_alu$3643
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$747: $auto$alumacc.cc:485:replace_alu$3646
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$749: $auto$alumacc.cc:485:replace_alu$3649
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$746: $auto$alumacc.cc:485:replace_alu$3652
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$748: $auto$alumacc.cc:485:replace_alu$3655
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$750: $auto$alumacc.cc:485:replace_alu$3658
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$739: $auto$alumacc.cc:485:replace_alu$3661
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$741: $auto$alumacc.cc:485:replace_alu$3664
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$738: $auto$alumacc.cc:485:replace_alu$3667
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$737: $auto$alumacc.cc:485:replace_alu$3670
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$740: $auto$alumacc.cc:485:replace_alu$3673
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$742: $auto$alumacc.cc:485:replace_alu$3676
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$731: $auto$alumacc.cc:485:replace_alu$3679
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$733: $auto$alumacc.cc:485:replace_alu$3682
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$730: $auto$alumacc.cc:485:replace_alu$3685
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$729: $auto$alumacc.cc:485:replace_alu$3688
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$732: $auto$alumacc.cc:485:replace_alu$3691
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$734: $auto$alumacc.cc:485:replace_alu$3694
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$721: $auto$alumacc.cc:485:replace_alu$3697
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$723: $auto$alumacc.cc:485:replace_alu$3700
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$725: $auto$alumacc.cc:485:replace_alu$3703
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$722: $auto$alumacc.cc:485:replace_alu$3706
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$724: $auto$alumacc.cc:485:replace_alu$3709
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$726: $auto$alumacc.cc:485:replace_alu$3712
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$715: $auto$alumacc.cc:485:replace_alu$3715
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$713: $auto$alumacc.cc:485:replace_alu$3718
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$716: $auto$alumacc.cc:485:replace_alu$3721
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$718: $auto$alumacc.cc:485:replace_alu$3724
  creating $alu cell for $techmap\DAC1.$add$../sigma_delta.v:21$523: $auto$alumacc.cc:485:replace_alu$3727
  creating $alu cell for $techmap\DAC2.$add$../sigma_delta.v:21$523: $auto$alumacc.cc:485:replace_alu$3730
  creating $alu cell for $techmap\DAC3.$add$../sigma_delta.v:21$523: $auto$alumacc.cc:485:replace_alu$3733
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$472: $auto$alumacc.cc:485:replace_alu$3736
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$473: $auto$alumacc.cc:485:replace_alu$3739
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$495: $auto$alumacc.cc:485:replace_alu$3742
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$499: $auto$alumacc.cc:485:replace_alu$3745
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504: $auto$alumacc.cc:485:replace_alu$3748
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:41$697: $auto$alumacc.cc:485:replace_alu$3751
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:44$699: $auto$alumacc.cc:485:replace_alu$3754
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:47$702: $auto$alumacc.cc:485:replace_alu$3757
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:48$704: $auto$alumacc.cc:485:replace_alu$3760
  creating $alu cell for $techmap\Filter1.$sub$../filter/CIC.v:37$693: $auto$alumacc.cc:485:replace_alu$3763
  creating $alu cell for $techmap\Filter1.$sub$../filter/CIC.v:38$694: $auto$alumacc.cc:485:replace_alu$3766
  creating $alu cell for $techmap\Filter2.$add$../filter/CIC.v:41$697: $auto$alumacc.cc:485:replace_alu$3769
  creating $alu cell for $techmap\Filter2.$add$../filter/CIC.v:44$699: $auto$alumacc.cc:485:replace_alu$3772
  creating $alu cell for $techmap\Filter2.$add$../filter/CIC.v:48$704: $auto$alumacc.cc:485:replace_alu$3775
  creating $alu cell for $techmap\Filter2.$sub$../filter/CIC.v:37$693: $auto$alumacc.cc:485:replace_alu$3778
  creating $alu cell for $techmap\Filter2.$sub$../filter/CIC.v:38$694: $auto$alumacc.cc:485:replace_alu$3781
  creating $alu cell for $techmap\OSC.$add$../oscillator.v:35$32: $auto$alumacc.cc:485:replace_alu$3784
  creating $alu cell for $techmap\OSC.$add$../oscillator.v:36$33: $auto$alumacc.cc:485:replace_alu$3787
  creating $alu cell for $techmap\PLL.$add$../pll.v:32$539: $auto$alumacc.cc:485:replace_alu$3790
  creating $alu cell for $techmap\PLL.$add$../pll.v:51$548: $auto$alumacc.cc:485:replace_alu$3793
  creating $alu cell for $techmap\PLL.$sub$../pll.v:44$541: $auto$alumacc.cc:485:replace_alu$3796
  creating $alu cell for $techmap\PLL.$sub$../pll.v:61$551: $auto$alumacc.cc:485:replace_alu$3799
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$227: $auto$alumacc.cc:485:replace_alu$3802
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:102$144: $auto$alumacc.cc:485:replace_alu$3805
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:112$148: $auto$alumacc.cc:485:replace_alu$3808
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:131$156: $auto$alumacc.cc:485:replace_alu$3811
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:138$162: $auto$alumacc.cc:485:replace_alu$3814
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:211$164: $auto$alumacc.cc:485:replace_alu$3817
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:251$171: $auto$alumacc.cc:485:replace_alu$3820
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:363$187: $auto$alumacc.cc:485:replace_alu$3823
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:422$198: $auto$alumacc.cc:485:replace_alu$3826
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:82$136: $auto$alumacc.cc:485:replace_alu$3829
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:92$140: $auto$alumacc.cc:485:replace_alu$3832
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:123$152: $auto$alumacc.cc:485:replace_alu$3835
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:212$165: $auto$alumacc.cc:485:replace_alu$3838
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:252$172: $auto$alumacc.cc:485:replace_alu$3841
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:364$188: $auto$alumacc.cc:485:replace_alu$3844
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:421$197: $auto$alumacc.cc:485:replace_alu$3847
  creating $alu cell for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$426: $auto$alumacc.cc:485:replace_alu$3850
  creating $alu cell for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$777: $auto$alumacc.cc:485:replace_alu$3853
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$249: $auto$alumacc.cc:485:replace_alu$3856
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$228: $auto$alumacc.cc:485:replace_alu$3859
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$248: $auto$alumacc.cc:485:replace_alu$3862
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$252: $auto$alumacc.cc:485:replace_alu$3865
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$223: $auto$alumacc.cc:485:replace_alu$3868
  created 106 $alu and 1 $macc cells.

22.19. Executing OPT pass (performing simple optimizations).

22.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$alumacc.cc:520:replace_alu$3516: { $auto$rtlil.cc:1863:Not$3513 $auto$rtlil.cc:1866:ReduceAnd$3515 }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$3514: { $auto$alumacc.cc:501:replace_alu$3510 [0] $auto$alumacc.cc:501:replace_alu$3510 [1] $auto$alumacc.cc:501:replace_alu$3510 [2] $auto$alumacc.cc:501:replace_alu$3510 [3] $auto$alumacc.cc:501:replace_alu$3510 [4] $auto$alumacc.cc:501:replace_alu$3510 [5] $auto$alumacc.cc:501:replace_alu$3510 [6] $auto$alumacc.cc:501:replace_alu$3510 [7] $auto$alumacc.cc:501:replace_alu$3510 [8] $auto$alumacc.cc:501:replace_alu$3510 [9] $auto$alumacc.cc:501:replace_alu$3510 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$3523: { $auto$alumacc.cc:501:replace_alu$3519 [0] $auto$alumacc.cc:501:replace_alu$3519 [1] $auto$alumacc.cc:501:replace_alu$3519 [2] $auto$alumacc.cc:501:replace_alu$3519 [3] $auto$alumacc.cc:501:replace_alu$3519 [4] $auto$alumacc.cc:501:replace_alu$3519 [5] $auto$alumacc.cc:501:replace_alu$3519 [6] $auto$alumacc.cc:501:replace_alu$3519 [7] $auto$alumacc.cc:501:replace_alu$3519 [8] $auto$alumacc.cc:501:replace_alu$3519 [9] $auto$alumacc.cc:501:replace_alu$3519 [10] }
  Optimizing cells in module \top.
Performed a total of 3 changes.

22.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

22.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 11 unused wires.

22.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.19.9. Rerunning OPT passes. (Maybe there is more to do..)

22.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

22.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.19.16. Finished OPT passes. (There is nothing left to do.)

22.20. Executing FSM pass (extract and optimize FSM).

22.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.CORDIC.cordicCORE.U0.z_1 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.CORDIC.quadmem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.SPI_READER.fsm_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.spi_addr as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.OSC.phaseword as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.BP as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.SF_D1 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.display_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.main_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_state as FSM state register:
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.AngelaMerkel as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.pos as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

22.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

22.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

22.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

22.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

22.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

22.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

22.21. Executing OPT pass (performing simple optimizations).

22.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

22.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.21.5. Finished fast OPT passes.

22.22. Executing MEMORY pass.

22.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

22.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

22.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

22.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

22.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

22.25. Executing TECHMAP pass (map to technology primitives).

22.25.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

22.25.2. Continuing TECHMAP pass.
No more expansions possible.

22.26. Executing ICE40_BRAMINIT pass.

22.27. Executing OPT pass (performing simple optimizations).

22.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

22.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 123 unused wires.

22.27.5. Finished fast OPT passes.

22.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

22.29. Executing OPT pass (performing simple optimizations).

22.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$108:
      Old ports: A={ $techmap\CORDIC.$add$../cordic/fullcordic.v:43$107_Y [16:9] \CORDIC.cordicCORE.U7.z_1 [8:0] }, B={ $techmap\CORDIC.$add$../cordic/fullcordic.v:42$106_Y [16:10] \CORDIC.cordicCORE.U7.z_1 [9:0] }, Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$108_Y
      New ports: A=$techmap\CORDIC.$add$../cordic/fullcordic.v:43$107_Y [16:9], B={ $techmap\CORDIC.$add$../cordic/fullcordic.v:42$106_Y [16:10] \CORDIC.cordicCORE.U7.z_1 [9] }, Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$108_Y [16:9]
      New connections: $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$108_Y [8:0] = \CORDIC.cordicCORE.U7.z_1 [8:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U0.$procmux$904:
      Old ports: A=17'11101001100000000, B=17'00010110100000000, Y=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y
      New ports: A=2'01, B=2'10, Y=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10:9]
      New connections: { $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [16:11] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [8:0] } = { $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10:9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10] 9'100000000 }
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U1.$procmux$934:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$766_Y [16:4] \CORDIC.cordicCORE.U0.z_1 [3:0] }, B={ $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$763_Y [16:4] \CORDIC.cordicCORE.U0.z_1 [3:0] }, Y=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$766_Y [16:4], B=$techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$763_Y [16:4], Y=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [16:4]
      New connections: $techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [3:0] = \CORDIC.cordicCORE.U0.z_1 [3:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U3.$procmux$994:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$750_Y [16:5] \CORDIC.cordicCORE.U2.z_1 [4:0] }, B={ $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$747_Y [16:5] \CORDIC.cordicCORE.U2.z_1 [4:0] }, Y=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$750_Y [16:5], B=$techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$747_Y [16:5], Y=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [16:5]
      New connections: $techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [4:0] = \CORDIC.cordicCORE.U2.z_1 [4:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U5.$procmux$1054:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$734_Y [16:1] \CORDIC.cordicCORE.U4.z_1 [0] }, B={ $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$731_Y [16:1] \CORDIC.cordicCORE.U4.z_1 [0] }, Y=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$734_Y [16:1], B=$techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$731_Y [16:1], Y=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [16:1]
      New connections: $techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [0] = \CORDIC.cordicCORE.U4.z_1 [0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U7.$procmux$1114:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$718_Y [16:1] \CORDIC.cordicCORE.U6.z_1 [0] }, B={ $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$715_Y [16:1] \CORDIC.cordicCORE.U6.z_1 [0] }, Y=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$718_Y [16:1], B=$techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$715_Y [16:1], Y=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [16:1]
      New connections: $techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [0] = \CORDIC.cordicCORE.U6.z_1 [0]
    Consolidated identical input bits for $pmux cell $techmap\OSC.$procmux$3145:
      Old ports: A=24'000000001110100100000100, B=168'000000011101001000001000000000111010010000010001000010010001101000101011000100100011010001010110001001000110100010101100010110110000010110110000101101100000101101100000, Y=$auto$wreduce.cc:460:run$3472 [23:0]
      New ports: A=22'0000000111010100000100, B=154'0000001110101000001000000001110100000001000100010010001110001010110010010001100001010110000010001101001010110001110110000001101100001010110000011101100000, Y={ $auto$wreduce.cc:460:run$3472 [23:22] $auto$wreduce.cc:460:run$3472 [20:11] $auto$wreduce.cc:460:run$3472 [9:0] }
      New connections: { $auto$wreduce.cc:460:run$3472 [21] $auto$wreduce.cc:460:run$3472 [10] } = { $auto$wreduce.cc:460:run$3472 [18] $auto$wreduce.cc:460:run$3472 [4] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2885:
      Old ports: A=5'00000, B=5'10101, Y=$techmap\UI_inst.$procmux$2885_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2885_Y [0]
      New connections: $techmap\UI_inst.$procmux$2885_Y [4:1] = { $techmap\UI_inst.$procmux$2885_Y [0] 1'0 $techmap\UI_inst.$procmux$2885_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2888:
      Old ports: A=2'00, B=2'11, Y=$techmap\UI_inst.$procmux$2888_Y [1:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2888_Y [0]
      New connections: $techmap\UI_inst.$procmux$2888_Y [1] = $techmap\UI_inst.$procmux$2888_Y [0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2890:
      Old ports: A={ 6'001100 $techmap\UI_inst.$procmux$2888_Y [1:0] }, B=8'00110110, Y=$techmap\UI_inst.$procmux$2890_Y
      New ports: A={ 1'0 $techmap\UI_inst.$procmux$2888_Y [1:0] }, B=3'110, Y=$techmap\UI_inst.$procmux$2890_Y [2:0]
      New connections: $techmap\UI_inst.$procmux$2890_Y [7:3] = 5'00110
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2900:
      Old ports: A={ 7'0011000 $techmap\UI_inst.$eq$../UI/UI.v:396$190_Y }, B=8'00110011, Y=$techmap\UI_inst.$procmux$2900_Y
      New ports: A={ 1'0 $techmap\UI_inst.$eq$../UI/UI.v:396$190_Y }, B=2'11, Y=$techmap\UI_inst.$procmux$2900_Y [1:0]
      New connections: $techmap\UI_inst.$procmux$2900_Y [7:2] = 6'001100
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2924:
      Old ports: A=3'000, B=3'101, Y=$techmap\UI_inst.$procmux$2924_Y [2:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2924_Y [0]
      New connections: $techmap\UI_inst.$procmux$2924_Y [2:1] = { $techmap\UI_inst.$procmux$2924_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2927:
      Old ports: A=5'10000, B=5'00000, Y=$techmap\UI_inst.$procmux$2927_Y [4:0]
      New ports: A=1'1, B=1'0, Y=$techmap\UI_inst.$procmux$2927_Y [4]
      New connections: $techmap\UI_inst.$procmux$2927_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2929:
      Old ports: A={ 3'001 $techmap\UI_inst.$procmux$2927_Y [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2929_Y
      New ports: A=$techmap\UI_inst.$procmux$2927_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2929_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2929_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2936:
      Old ports: A=5'10000, B=5'00000, Y=$techmap\UI_inst.$procmux$2936_Y [4:0]
      New ports: A=1'1, B=1'0, Y=$techmap\UI_inst.$procmux$2936_Y [4]
      New connections: $techmap\UI_inst.$procmux$2936_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2938:
      Old ports: A={ 3'001 $techmap\UI_inst.$procmux$2936_Y [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2938_Y
      New ports: A=$techmap\UI_inst.$procmux$2936_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2938_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2938_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2945:
      Old ports: A=5'00000, B=5'10001, Y=$techmap\UI_inst.$procmux$2945_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2945_Y [0]
      New connections: $techmap\UI_inst.$procmux$2945_Y [4:1] = { $techmap\UI_inst.$procmux$2945_Y [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2970:
      Old ports: A=5'01110, B=5'11000, Y=$techmap\UI_inst.$procmux$2970_Y [4:0]
      New ports: A=2'01, B=2'10, Y={ $techmap\UI_inst.$procmux$2970_Y [4] $techmap\UI_inst.$procmux$2970_Y [1] }
      New connections: { $techmap\UI_inst.$procmux$2970_Y [3:2] $techmap\UI_inst.$procmux$2970_Y [0] } = { 1'1 $techmap\UI_inst.$procmux$2970_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2973:
      Old ports: A=4'1001, B=4'0101, Y=$techmap\UI_inst.$procmux$2973_Y [3:0]
      New ports: A=2'10, B=2'01, Y=$techmap\UI_inst.$procmux$2973_Y [3:2]
      New connections: $techmap\UI_inst.$procmux$2973_Y [1:0] = 2'01
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2992:
      Old ports: A=5'00000, B=5'10110, Y=$techmap\UI_inst.$procmux$2992_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2992_Y [1]
      New connections: { $techmap\UI_inst.$procmux$2992_Y [4:2] $techmap\UI_inst.$procmux$2992_Y [0] } = { $techmap\UI_inst.$procmux$2992_Y [1] 1'0 $techmap\UI_inst.$procmux$2992_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2994:
      Old ports: A={ 3'001 $techmap\UI_inst.$procmux$2992_Y [4:0] }, B=8'00110100, Y=$techmap\UI_inst.$procmux$2994_Y
      New ports: A=$techmap\UI_inst.$procmux$2992_Y [4:0], B=5'10100, Y=$techmap\UI_inst.$procmux$2994_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2994_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1414:
      Old ports: A=17'00000000000000000, B=17'10100000001010000, Y=$auto$wreduce.cc:460:run$3475 [16:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3475 [4]
      New connections: { $auto$wreduce.cc:460:run$3475 [16:5] $auto$wreduce.cc:460:run$3475 [3:0] } = { $auto$wreduce.cc:460:run$3475 [4] 1'0 $auto$wreduce.cc:460:run$3475 [4] 7'0000000 $auto$wreduce.cc:460:run$3475 [4] 5'00000 }
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$1416:
      Old ports: A=20'00000000000000000000, B={ 22'1011011100011011000000 $auto$wreduce.cc:460:run$3479 [17:0] 7'0000000 $auto$wreduce.cc:460:run$3478 [12:0] 16'0000000000000000 $auto$wreduce.cc:460:run$3477 [3:0] 9'000000000 $auto$wreduce.cc:460:run$3476 [10:0] 3'000 $auto$wreduce.cc:460:run$3475 [16:0] }, Y=$techmap\UI_inst.LCD.$0\main_delay_value[19:0]
      New ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:460:run$3479 [17:0] 6'000000 $auto$wreduce.cc:460:run$3478 [12:0] 15'000000000000000 $auto$wreduce.cc:460:run$3477 [3:0] 8'00000000 $auto$wreduce.cc:460:run$3476 [10:0] 2'00 $auto$wreduce.cc:460:run$3475 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New connections: $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [18] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1418:
      Old ports: A=11'00000000000, B=11'11111010000, Y=$auto$wreduce.cc:460:run$3476 [10:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3476 [4]
      New connections: { $auto$wreduce.cc:460:run$3476 [10:5] $auto$wreduce.cc:460:run$3476 [3:0] } = { $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1421:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:460:run$3477 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3477 [0]
      New connections: $auto$wreduce.cc:460:run$3477 [3:1] = { $auto$wreduce.cc:460:run$3477 [0] 1'0 $auto$wreduce.cc:460:run$3477 [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1430:
      Old ports: A=13'0000000000000, B=13'1001110001000, Y=$auto$wreduce.cc:460:run$3478 [12:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3478 [3]
      New connections: { $auto$wreduce.cc:460:run$3478 [12:4] $auto$wreduce.cc:460:run$3478 [2:0] } = { $auto$wreduce.cc:460:run$3478 [3] 2'00 $auto$wreduce.cc:460:run$3478 [3] $auto$wreduce.cc:460:run$3478 [3] $auto$wreduce.cc:460:run$3478 [3] 6'000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1436:
      Old ports: A=18'000000000000000000, B=18'110010000011001000, Y=$auto$wreduce.cc:460:run$3479 [17:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3479 [3]
      New connections: { $auto$wreduce.cc:460:run$3479 [17:4] $auto$wreduce.cc:460:run$3479 [2:0] } = { $auto$wreduce.cc:460:run$3479 [3] $auto$wreduce.cc:460:run$3479 [3] 2'00 $auto$wreduce.cc:460:run$3479 [3] 5'00000 $auto$wreduce.cc:460:run$3479 [3] $auto$wreduce.cc:460:run$3479 [3] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1517:
      Old ports: A=4'0010, B=4'1000, Y=$auto$wreduce.cc:460:run$3480 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$3480 [3] $auto$wreduce.cc:460:run$3480 [1] }
      New connections: { $auto$wreduce.cc:460:run$3480 [2] $auto$wreduce.cc:460:run$3480 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$399:
      Old ports: A={ 3'000 \UI_inst.LCD.addr [3:0] }, B={ 3'100 \UI_inst.LCD.addr [3:0] }, Y=\UI_inst.LCD.ramaddr
      New ports: A=1'0, B=1'1, Y=\UI_inst.LCD.ramaddr [6]
      New connections: \UI_inst.LCD.ramaddr [5:0] = { 2'00 \UI_inst.LCD.addr [3:0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2562:
      Old ports: A=8'00100000, B=8'11011111, Y=$techmap\UI_inst.diplay_number.$procmux$2562_Y
      New ports: A=2'10, B=2'01, Y={ $techmap\UI_inst.diplay_number.$procmux$2562_Y [5] $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] }
      New connections: { $techmap\UI_inst.diplay_number.$procmux$2562_Y [7:6] $techmap\UI_inst.diplay_number.$procmux$2562_Y [4:1] } = { $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] $techmap\UI_inst.diplay_number.$procmux$2562_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2617:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:460:run$3485 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3485 [0]
      New connections: $auto$wreduce.cc:460:run$3485 [3:1] = { $auto$wreduce.cc:460:run$3485 [0] $auto$wreduce.cc:460:run$3485 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2620:
      Old ports: A={ 4'0010 $auto$wreduce.cc:460:run$3485 [3:0] }, B=8'00100000, Y=$auto$wreduce.cc:460:run$3486
      New ports: A=$auto$wreduce.cc:460:run$3485 [3:0], B=4'0000, Y=$auto$wreduce.cc:460:run$3486 [3:0]
      New connections: $auto$wreduce.cc:460:run$3486 [7:4] = 4'0010
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2624:
      Old ports: A=8'01011001, B=8'11110010, Y=$auto$wreduce.cc:460:run$3487
      New ports: A=2'01, B=2'10, Y=$auto$wreduce.cc:460:run$3487 [1:0]
      New connections: $auto$wreduce.cc:460:run$3487 [7:2] = { $auto$wreduce.cc:460:run$3487 [1] 1'1 $auto$wreduce.cc:460:run$3487 [1] 1'1 $auto$wreduce.cc:460:run$3487 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2682:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:460:run$3488 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3488 [0]
      New connections: $auto$wreduce.cc:460:run$3488 [3:1] = { $auto$wreduce.cc:460:run$3488 [0] $auto$wreduce.cc:460:run$3488 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2685:
      Old ports: A={ 4'0010 $auto$wreduce.cc:460:run$3488 [3:0] }, B=8'00100000, Y=$auto$wreduce.cc:460:run$3489
      New ports: A=$auto$wreduce.cc:460:run$3488 [3:0], B=4'0000, Y=$auto$wreduce.cc:460:run$3489 [3:0]
      New connections: $auto$wreduce.cc:460:run$3489 [7:4] = 4'0010
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2689:
      Old ports: A=4'1000, B=4'0010, Y=$auto$wreduce.cc:460:run$3490 [3:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:460:run$3490 [3] $auto$wreduce.cc:460:run$3490 [1] }
      New connections: { $auto$wreduce.cc:460:run$3490 [2] $auto$wreduce.cc:460:run$3490 [0] } = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$109:
      Old ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$108_Y, B={ $techmap\CORDIC.$add$../cordic/fullcordic.v:41$104_Y [16:9] \CORDIC.cordicCORE.U7.z_1 [8:0] }, Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$109_Y
      New ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$108_Y [16:9], B=$techmap\CORDIC.$add$../cordic/fullcordic.v:41$104_Y [16:9], Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$109_Y [16:9]
      New connections: $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$109_Y [8:0] = \CORDIC.cordicCORE.U7.z_1 [8:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U0.$procmux$907:
      Old ports: A=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y, B=17'00000000000000000, Y=$techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0]
      New ports: A={ $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10:9] 1'1 }, B=3'000, Y=$techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10:8]
      New connections: { $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [16:11] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [7:0] } = { $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10:9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2892:
      Old ports: A=$techmap\UI_inst.$procmux$2890_Y, B=8'00111001, Y=$techmap\UI_inst.$procmux$2892_Y
      New ports: A={ 1'0 $techmap\UI_inst.$procmux$2890_Y [2:0] }, B=4'1001, Y=$techmap\UI_inst.$procmux$2892_Y [3:0]
      New connections: $techmap\UI_inst.$procmux$2892_Y [7:4] = 4'0011
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2929:
      Old ports: A=$techmap\UI_inst.$procmux$2927_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2929_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2927_Y [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2929_Y [4] $techmap\UI_inst.$procmux$2929_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2929_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2931:
      Old ports: A=$techmap\UI_inst.$procmux$2929_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2931_Y
      New ports: A=$techmap\UI_inst.$procmux$2929_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2931_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2931_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2938:
      Old ports: A=$techmap\UI_inst.$procmux$2936_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2938_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2936_Y [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2938_Y [4] $techmap\UI_inst.$procmux$2938_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2938_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2940:
      Old ports: A=$techmap\UI_inst.$procmux$2938_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2940_Y
      New ports: A=$techmap\UI_inst.$procmux$2938_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2940_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2940_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2994:
      Old ports: A=$techmap\UI_inst.$procmux$2992_Y [4:0], B=5'10100, Y=$techmap\UI_inst.$procmux$2994_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2992_Y [1] $techmap\UI_inst.$procmux$2992_Y [1] }, B=2'10, Y=$techmap\UI_inst.$procmux$2994_Y [2:1]
      New connections: { $techmap\UI_inst.$procmux$2994_Y [4:3] $techmap\UI_inst.$procmux$2994_Y [0] } = { $techmap\UI_inst.$procmux$2994_Y [2] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2996:
      Old ports: A=$techmap\UI_inst.$procmux$2994_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2996_Y
      New ports: A=$techmap\UI_inst.$procmux$2994_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2996_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2996_Y [7:5] = 3'001
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$1416:
      Old ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:460:run$3479 [17:0] 6'000000 $auto$wreduce.cc:460:run$3478 [12:0] 15'000000000000000 $auto$wreduce.cc:460:run$3477 [3:0] 8'00000000 $auto$wreduce.cc:460:run$3476 [10:0] 2'00 $auto$wreduce.cc:460:run$3475 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New ports: A=13'0000000000000, B={ 13'1111001101100 $auto$wreduce.cc:460:run$3479 [3] 1'0 $auto$wreduce.cc:460:run$3479 [3] 4'0000 $auto$wreduce.cc:460:run$3479 [3] $auto$wreduce.cc:460:run$3479 [3] 2'00 $auto$wreduce.cc:460:run$3479 [3] 4'0000 $auto$wreduce.cc:460:run$3478 [3] 1'0 $auto$wreduce.cc:460:run$3478 [3] $auto$wreduce.cc:460:run$3478 [3] $auto$wreduce.cc:460:run$3478 [3] 3'000 $auto$wreduce.cc:460:run$3478 [3] 12'000000000000 $auto$wreduce.cc:460:run$3477 [0] $auto$wreduce.cc:460:run$3477 [0] 4'0000 $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] $auto$wreduce.cc:460:run$3476 [4] 1'0 $auto$wreduce.cc:460:run$3476 [4] 2'00 $auto$wreduce.cc:460:run$3475 [4] $auto$wreduce.cc:460:run$3475 [4] 6'000000 $auto$wreduce.cc:460:run$3475 [4] 1'0 $auto$wreduce.cc:460:run$3475 [4] 2'00 }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [16] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [14:12] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [10:3] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
      New connections: { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [15] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [11] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [2:1] } = { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [5] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [13] 3'000 $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2620:
      Old ports: A=$auto$wreduce.cc:460:run$3485 [3:0], B=4'0000, Y=$auto$wreduce.cc:460:run$3486 [3:0]
      New ports: A=$auto$wreduce.cc:460:run$3485 [0], B=1'0, Y=$auto$wreduce.cc:460:run$3486 [0]
      New connections: $auto$wreduce.cc:460:run$3486 [3:1] = { $auto$wreduce.cc:460:run$3486 [0] $auto$wreduce.cc:460:run$3486 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2685:
      Old ports: A=$auto$wreduce.cc:460:run$3488 [3:0], B=4'0000, Y=$auto$wreduce.cc:460:run$3489 [3:0]
      New ports: A=$auto$wreduce.cc:460:run$3488 [0], B=1'0, Y=$auto$wreduce.cc:460:run$3489 [0]
      New connections: $auto$wreduce.cc:460:run$3489 [3:1] = { $auto$wreduce.cc:460:run$3489 [0] $auto$wreduce.cc:460:run$3489 [0] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$110:
      Old ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$109_Y, B=\CORDIC.cordicCORE.U7.z_1, Y=\Ang
      New ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$109_Y [16:9], B=\CORDIC.cordicCORE.U7.z_1 [16:9], Y=\Ang [16:9]
      New connections: \Ang [8:0] = \CORDIC.cordicCORE.U7.z_1 [8:0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2894:
      Old ports: A=$techmap\UI_inst.$procmux$2892_Y, B=8'00110100, Y=$techmap\UI_inst.$procmux$2894_Y
      New ports: A=$techmap\UI_inst.$procmux$2892_Y [3:0], B=4'0100, Y=$techmap\UI_inst.$procmux$2894_Y [3:0]
      New connections: $techmap\UI_inst.$procmux$2894_Y [7:4] = 4'0011
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2931:
      Old ports: A=$techmap\UI_inst.$procmux$2929_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2931_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2929_Y [4] 1'0 $techmap\UI_inst.$procmux$2929_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2931_Y [4] $techmap\UI_inst.$procmux$2931_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2931_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2933:
      Old ports: A=$techmap\UI_inst.$procmux$2931_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2933_Y
      New ports: A=$techmap\UI_inst.$procmux$2931_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2933_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2933_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2940:
      Old ports: A=$techmap\UI_inst.$procmux$2938_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2940_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2938_Y [4] 1'0 $techmap\UI_inst.$procmux$2938_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2940_Y [4] $techmap\UI_inst.$procmux$2940_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2940_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2942:
      Old ports: A=$techmap\UI_inst.$procmux$2940_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2942_Y
      New ports: A=$techmap\UI_inst.$procmux$2940_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2942_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2942_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2996:
      Old ports: A=$techmap\UI_inst.$procmux$2994_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2996_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2994_Y [2] $techmap\UI_inst.$procmux$2994_Y [2:1] }, B=3'101, Y={ $techmap\UI_inst.$procmux$2996_Y [4] $techmap\UI_inst.$procmux$2996_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2996_Y [3] $techmap\UI_inst.$procmux$2996_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2998:
      Old ports: A=$techmap\UI_inst.$procmux$2996_Y, B=8'00100000, Y=$techmap\UI_inst.$procmux$2998_Y
      New ports: A=$techmap\UI_inst.$procmux$2996_Y [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2998_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2998_Y [7:5] = 3'001
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2883:
      Old ports: A=8'00100000, B={ 94'0110100101101110011101000101001001100101011001100100000101101101011100000110110000111010001100 $techmap\UI_inst.$procmux$2900_Y [1:0] 8'00101110 $techmap\UI_inst.$procmux$2894_Y 3'001 $techmap\UI_inst.$procmux$2885_Y [0] 1'0 $techmap\UI_inst.$procmux$2885_Y [0] 1'0 $techmap\UI_inst.$procmux$2885_Y [0] 8'01010110 }, Y=$techmap\UI_inst.$procmux$2883_Y
      New ports: A=7'0100000, B={ 82'1101001110111011101001010010110010111001101000001110110111100001101100011101001100 $techmap\UI_inst.$procmux$2900_Y [1:0] 10'0101110011 $techmap\UI_inst.$procmux$2894_Y [3:0] 2'01 $techmap\UI_inst.$procmux$2885_Y [0] 1'0 $techmap\UI_inst.$procmux$2885_Y [0] 1'0 $techmap\UI_inst.$procmux$2885_Y [0] 7'1010110 }, Y=$techmap\UI_inst.$procmux$2883_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2883_Y [7] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2919:
      Old ports: A=8'00100000, B={ 91'0110100101101110011101000101001001100110001011100100011001110010011001010111000100111010001 $techmap\UI_inst.$procmux$2945_Y [0] 3'000 $techmap\UI_inst.$procmux$2945_Y [0] $techmap\UI_inst.$procmux$2942_Y $techmap\UI_inst.$procmux$2933_Y 5'00110 $techmap\UI_inst.$procmux$2924_Y [0] 1'0 $techmap\UI_inst.$procmux$2924_Y [0] 24'001100000100100001111010 }, Y=$techmap\UI_inst.$procmux$2919_Y
      New ports: A=7'0100000, B={ 79'1101001110111011101001010010110011001011101000110111001011001011110001011101001 $techmap\UI_inst.$procmux$2945_Y [0] 3'000 $techmap\UI_inst.$procmux$2945_Y [0] 2'01 $techmap\UI_inst.$procmux$2942_Y [4:0] 2'01 $techmap\UI_inst.$procmux$2933_Y [4:0] 4'0110 $techmap\UI_inst.$procmux$2924_Y [0] 1'0 $techmap\UI_inst.$procmux$2924_Y [0] 21'011000010010001111010 }, Y=$techmap\UI_inst.$procmux$2919_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2919_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2933:
      Old ports: A=$techmap\UI_inst.$procmux$2931_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2933_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2931_Y [4] 1'0 $techmap\UI_inst.$procmux$2931_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2933_Y [4] $techmap\UI_inst.$procmux$2933_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2933_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2942:
      Old ports: A=$techmap\UI_inst.$procmux$2940_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2942_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2940_Y [4] 1'0 $techmap\UI_inst.$procmux$2940_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2942_Y [4] $techmap\UI_inst.$procmux$2942_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2942_Y [3] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2988:
      Old ports: A=8'00100000, B={ 40'0100011101100001011010010110111000111010 $techmap\UI_inst.$procmux$2998_Y 24'001100000110010001000010 }, Y=$techmap\UI_inst.$procmux$2988_Y
      New ports: A=7'0100000, B={ 37'1000111110000111010011101110011101001 $techmap\UI_inst.$procmux$2998_Y [4:0] 21'011000011001001000010 }, Y=$techmap\UI_inst.$procmux$2988_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2988_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2998:
      Old ports: A=$techmap\UI_inst.$procmux$2996_Y [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2998_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2996_Y [4] $techmap\UI_inst.$procmux$2996_Y [2:1] }, B=3'000, Y={ $techmap\UI_inst.$procmux$2998_Y [4] $techmap\UI_inst.$procmux$2998_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2998_Y [3] $techmap\UI_inst.$procmux$2998_Y [0] } = 2'00
  Optimizing cells in module \top.
Performed a total of 62 changes.

22.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 4 cells.

22.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

22.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.

22.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.29.9. Rerunning OPT passes. (Maybe there is more to do..)

22.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

22.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

22.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.29.16. Finished OPT passes. (There is nothing left to do.)

22.30. Executing ICE40_WRAPCARRY pass (wrap carries).

22.31. Executing TECHMAP pass (map to technology primitives).

22.31.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

22.31.2. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

22.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod$constmap:9e4fdcb0a66bbfb989de4b540b6b7d1348ed8ef7$paramod$fb8d876e240a0b92fccc4caec0b741ea68e248fc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=10\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$2c522b46cc21505f45a595eaa4706e490799228e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=3\Y_WIDTH=4 for cells of type $alu.
Using template $paramod$constmap:d0521459f0fb86cc32cc9b1590b67862dc67dbbd$paramod$93c08705e9f7437b3330e07efac558fa4bdbfcf5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=49\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod$constmap:e4cd6846b17672de58ad7294d07780760fcee900$paramod$1b4c14a1e593d52cbb6fd5b4be9702208802265c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=25\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=18 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=16 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=22\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=15\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=1\Y_WIDTH=18 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \PLL.incr (17 bits, signed)
  add \PLL.eD [15:11] (5 bits, signed)
  sub \PLL.last_eP [15:9] (7 bits, signed)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=21 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=13\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=20\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=32 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=25\Y_WIDTH=25 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=13\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=13\B_WIDTH=10\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=10\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=13\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=11\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=12\B_WIDTH=7\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=9\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=11\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=9\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=9\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=9\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=7\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=17 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
No more expansions possible.

22.32. Executing ICE40_OPT pass (performing simple optimizations).

22.32.1. Running ICE40 specific optimizations.

22.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 1779 cells.

22.32.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$13605 ($_DFF_P_) from module top.
Removing $auto$simplemap.cc:496:simplemap_adff$10573 ($_DFF_PP0_) from module top.
Removing $auto$simplemap.cc:420:simplemap_dff$9806 ($_DFF_P_) from module top.
Replaced 3 DFF cells.

22.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1755 unused cells and 3465 unused wires.

22.32.6. Rerunning OPT passes. (Removed registers in this run.)

22.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3527.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3527.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3534.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3534.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3541.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3541.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3548.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3548.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3555.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3555.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3562.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3562.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3569.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3569.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3576.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3576.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3583.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3586.slice[0].carry: CO=\ADC.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3589.slice[0].carry: CO=\CORDIC.cordicCORE.U7.z_1 [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3592.slice[0].carry: CO=\CORDIC.cordicCORE.U7.z_1 [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3595.slice[0].carry: CO=\CORDIC.cordicCORE.U7.z_1 [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3610.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3610.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3610.slice[2].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3610.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$3610.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3622.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3622.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$3622.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3622.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$3622.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3622.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[0].carry: CO=\CORDIC.cordicCORE.U1.z_1 [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3640.slice[0].carry: CO=\CORDIC.cordicCORE.U1.z_1 [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3646.slice[0].carry: CO=\CORDIC.cordicCORE.U2.z_1 [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3658.slice[0].carry: CO=\CORDIC.cordicCORE.U2.z_1 [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3661.slice[0].carry: CO=\CORDIC.cordicCORE.U3.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3676.slice[0].carry: CO=\CORDIC.cordicCORE.U3.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3679.slice[0].carry: CO=\CORDIC.cordicCORE.U4.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3694.slice[0].carry: CO=\CORDIC.cordicCORE.U4.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3700.slice[0].carry: CO=\CORDIC.cordicCORE.U5.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3712.slice[0].carry: CO=\CORDIC.cordicCORE.U5.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3715.slice[0].carry: CO=\CORDIC.cordicCORE.U6.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3724.slice[0].carry: CO=\CORDIC.cordicCORE.U6.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3727.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3730.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3733.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3736.slice[0].carry: CO=\F2SRAM.addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3739.slice[0].carry: CO=\F2SRAM.poscount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3742.slice[0].carry: CO=\F2SRAM.SPI_READER.cnt_bit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3751.slice[0].carry: CO=\Filter1.tickcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3754.slice[0].carry: CO=\Filter1.inaddr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3757.slice[0].carry: CO=\UI_inst.TC [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3757.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$3757.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3757.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3769.slice[0].carry: CO=\Filter2.tickcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3772.slice[0].carry: CO=\Filter2.inaddr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3787.slice[0].carry: CO=\OSC.PHASENAKKUMULATOOOOOR [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3790.slice[0].carry: CO=\PLL.phase [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3796.slice[0].carry: CO=\PLL.phase [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3805.slice[0].carry: CO=\UI_inst.cnt2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3808.slice[0].carry: CO=\UI_inst.cnt3 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3811.slice[0].carry: CO=\UI_inst.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3814.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3817.slice[0].carry: CO=\UI_inst.TC [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3823.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3829.slice[0].carry: CO=\UI_inst.cnt0 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3832.slice[0].carry: CO=\UI_inst.cnt1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3835.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3838.slice[0].carry: CO=\UI_inst.TC [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3844.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3850.slice[0].carry: CO=\UI_inst.LCD.pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3853.slice[0].carry: CO=\UI_inst.LCD.delay_counter.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3856.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3865.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3868.slice[0].carry: CO=\UI_inst.diplay_number.pos [0]

22.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 7 cells.

22.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$13728 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

22.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 12 unused cells and 4 unused wires.

22.32.12. Rerunning OPT passes. (Removed registers in this run.)

22.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3610.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3622.slice[4].carry: CO=\CORDIC.cordicCORE.U0.z_1 [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[2].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$3625.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3640.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3640.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$3640.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3640.slice[3].carry: CO=1'0

22.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 10 cells.

22.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.18. Rerunning OPT passes. (Removed registers in this run.)

22.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3610.slice[5].carry: CO=\CORDIC.cordicCORE.U0.z_1 [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3640.slice[4].carry: CO=\CORDIC.cordicCORE.U1.z_1 [4]

22.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 3 cells.

22.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.24. Rerunning OPT passes. (Removed registers in this run.)

22.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[5].carry: CO=1'0

22.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.30. Rerunning OPT passes. (Removed registers in this run.)

22.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[4].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[6].carry: CO=1'0

22.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.36. Rerunning OPT passes. (Removed registers in this run.)

22.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[5].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[5].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[7].carry: CO=1'0

22.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 1 cells.

22.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.42. Rerunning OPT passes. (Removed registers in this run.)

22.32.43. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[6].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[6].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[8].carry: CO=1'0

22.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.48. Rerunning OPT passes. (Removed registers in this run.)

22.32.49. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[7].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[7].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3625.slice[9].carry: CO=\CORDIC.cordicCORE.U1.z_1 [9]

22.32.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.52. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.54. Rerunning OPT passes. (Removed registers in this run.)

22.32.55. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[8].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[8].carry: CO=1'1

22.32.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.58. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

22.32.60. Rerunning OPT passes. (Removed registers in this run.)

22.32.61. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[9].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[9].carry: CO=1'1

22.32.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.64. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 2 unused wires.

22.32.66. Rerunning OPT passes. (Removed registers in this run.)

22.32.67. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3509.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$3509.BB [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3518.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$3518.BB [10]

22.32.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.70. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 6 unused wires.

22.32.72. Rerunning OPT passes. (Removed registers in this run.)

22.32.73. Running ICE40 specific optimizations.

22.32.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.32.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.32.76. Executing OPT_RMDFF pass (remove dff with constant values).

22.32.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.32.78. Finished OPT passes. (There is nothing left to do.)

22.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

22.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10001 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [0] -> \PLL.last_eP [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10002 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [1] -> \PLL.last_eP [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10003 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [2] -> \PLL.last_eP [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10004 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [3] -> \PLL.last_eP [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10005 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [4] -> \PLL.last_eP [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10006 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [5] -> \PLL.last_eP [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10007 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [6] -> \PLL.last_eP [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10008 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [7] -> \PLL.last_eP [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10009 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [8] -> \PLL.last_eP [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10010 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [9] -> \PLL.last_eP [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10011 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [10] -> \PLL.last_eP [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10012 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [11] -> \PLL.last_eP [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10013 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [12] -> \PLL.last_eP [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10014 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [13] -> \PLL.last_eP [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10015 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [14] -> \PLL.last_eP [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10016 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [15] -> \PLL.last_eP [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10028 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [11] -> \PLL.eD [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10029 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [12] -> \PLL.eD [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10030 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [13] -> \PLL.eD [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10031 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [14] -> \PLL.eD [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10032 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [15] -> \PLL.eD [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10036 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [0] -> \PLL.incr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10037 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [1] -> \PLL.incr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10038 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [2] -> \PLL.incr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10039 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [3] -> \PLL.incr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10040 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [4] -> \PLL.incr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10041 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [5] -> \PLL.incr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10042 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [6] -> \PLL.incr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10043 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [7] -> \PLL.incr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10044 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [8] -> \PLL.incr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10045 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [9] -> \PLL.incr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10046 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [10] -> \PLL.incr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10047 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [11] -> \PLL.incr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10048 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [12] -> \PLL.incr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10049 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [13] -> \PLL.incr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10050 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [14] -> \PLL.incr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10051 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [15] -> \PLL.incr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10052 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [16] -> \PLL.incr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10278 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [0] -> \F2SRAM.SPI_READER.fsm_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10279 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [1] -> \F2SRAM.SPI_READER.fsm_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10312 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit_last[0:0] -> \F2SRAM.SPI_READER.cnt_bit_last.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10313 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [0] -> \F2SRAM.SPI_READER.cnt_bit [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10314 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [1] -> \F2SRAM.SPI_READER.cnt_bit [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10315 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [2] -> \F2SRAM.SPI_READER.cnt_bit [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10316 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [0] -> \F2SRAM.SPI_READER.cnt_cmd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10317 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [1] -> \F2SRAM.SPI_READER.cnt_cmd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10318 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [0] -> \F2SRAM.SPI_READER.cnt_len [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10319 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [1] -> \F2SRAM.SPI_READER.cnt_len [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10320 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [2] -> \F2SRAM.SPI_READER.cnt_len [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10321 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [3] -> \F2SRAM.SPI_READER.cnt_len [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10322 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [4] -> \F2SRAM.SPI_READER.cnt_len [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10323 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [5] -> \F2SRAM.SPI_READER.cnt_len [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10324 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [6] -> \F2SRAM.SPI_READER.cnt_len [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10325 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [7] -> \F2SRAM.SPI_READER.cnt_len [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10326 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [8] -> \F2SRAM.SPI_READER.cnt_len [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10327 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [9] -> \F2SRAM.SPI_READER.cnt_len [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10328 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [10] -> \F2SRAM.SPI_READER.cnt_len [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10329 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [11] -> \F2SRAM.SPI_READER.cnt_len [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10330 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [12] -> \F2SRAM.SPI_READER.cnt_len [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10331 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [13] -> \F2SRAM.SPI_READER.cnt_len [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10332 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [14] -> \F2SRAM.SPI_READER.cnt_len [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10333 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [15] -> \F2SRAM.SPI_READER.cnt_len [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10334 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [16] -> \F2SRAM.SPI_READER.cnt_len [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10335 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [17] -> \F2SRAM.SPI_READER.cnt_len [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10575 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1490.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9376_Y -> \UI_inst.LCD.LCD_E1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10576 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1511.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [0] -> \UI_inst.LCD.SF_D1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10577 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1511.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [1] -> \UI_inst.LCD.SF_D1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10578 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1511.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [2] -> \UI_inst.LCD.SF_D1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10579 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1511.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [3] -> \UI_inst.LCD.SF_D1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10585 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [0] -> \UI_inst.LCD.tx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10586 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [1] -> \UI_inst.LCD.tx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10587 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [2] -> \UI_inst.LCD.tx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10588 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [3] -> \UI_inst.LCD.tx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10589 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [4] -> \UI_inst.LCD.tx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10590 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [5] -> \UI_inst.LCD.tx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10591 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [6] -> \UI_inst.LCD.tx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10592 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10886_Y [7] -> \UI_inst.LCD.tx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10593 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [0] -> \UI_inst.LCD.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10594 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [1] -> \UI_inst.LCD.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10595 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [2] -> \UI_inst.LCD.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10596 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [3] -> \UI_inst.LCD.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10597 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [4] -> \UI_inst.LCD.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10598 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [5] -> \UI_inst.LCD.pos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10599 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [6] -> \UI_inst.LCD.pos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10600 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [7] -> \UI_inst.LCD.pos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10601 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [8] -> \UI_inst.LCD.pos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10602 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [9] -> \UI_inst.LCD.pos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10603 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [10] -> \UI_inst.LCD.pos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10604 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [11] -> \UI_inst.LCD.pos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10605 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [12] -> \UI_inst.LCD.pos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10606 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [13] -> \UI_inst.LCD.pos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10607 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [14] -> \UI_inst.LCD.pos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10608 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [15] -> \UI_inst.LCD.pos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10609 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [16] -> \UI_inst.LCD.pos [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10610 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [17] -> \UI_inst.LCD.pos [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10611 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [18] -> \UI_inst.LCD.pos [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10612 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [19] -> \UI_inst.LCD.pos [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10613 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [20] -> \UI_inst.LCD.pos [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10614 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [21] -> \UI_inst.LCD.pos [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10615 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [22] -> \UI_inst.LCD.pos [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10616 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [23] -> \UI_inst.LCD.pos [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10617 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [24] -> \UI_inst.LCD.pos [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10618 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [25] -> \UI_inst.LCD.pos [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10619 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [26] -> \UI_inst.LCD.pos [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10620 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [27] -> \UI_inst.LCD.pos [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10621 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [28] -> \UI_inst.LCD.pos [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10622 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [29] -> \UI_inst.LCD.pos [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10623 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [30] -> \UI_inst.LCD.pos [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10624 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1601.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10784_Y [31] -> \UI_inst.LCD.pos [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10625 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1328.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11142_Y -> \UI_inst.LCD.tx_delay_load.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10626 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [0] -> \UI_inst.LCD.tx_delay_value [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10627 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [1] -> \UI_inst.LCD.tx_delay_value [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10628 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [2] -> \UI_inst.LCD.tx_delay_value [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10629 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [3] -> \UI_inst.LCD.tx_delay_value [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10630 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [4] -> \UI_inst.LCD.tx_delay_value [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10631 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [5] -> \UI_inst.LCD.tx_delay_value [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10632 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [6] -> \UI_inst.LCD.tx_delay_value [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10633 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [7] -> \UI_inst.LCD.tx_delay_value [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10634 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [8] -> \UI_inst.LCD.tx_delay_value [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10635 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [9] -> \UI_inst.LCD.tx_delay_value [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10636 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [10] -> \UI_inst.LCD.tx_delay_value [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10637 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [11] -> \UI_inst.LCD.tx_delay_value [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10638 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [12] -> \UI_inst.LCD.tx_delay_value [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10639 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [13] -> \UI_inst.LCD.tx_delay_value [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10640 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [14] -> \UI_inst.LCD.tx_delay_value [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10641 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [15] -> \UI_inst.LCD.tx_delay_value [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10642 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [16] -> \UI_inst.LCD.tx_delay_value [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10643 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [17] -> \UI_inst.LCD.tx_delay_value [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10644 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [18] -> \UI_inst.LCD.tx_delay_value [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10645 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1348.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11437_Y [19] -> \UI_inst.LCD.tx_delay_value [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10646 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1365.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9376_Y -> \UI_inst.LCD.LCD_E0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10647 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1375.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [0] -> \UI_inst.LCD.SF_D0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10648 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1375.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [1] -> \UI_inst.LCD.SF_D0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10649 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1375.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [2] -> \UI_inst.LCD.SF_D0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10650 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1375.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9403_Y [3] -> \UI_inst.LCD.SF_D0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10651 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1380.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9376_Y -> \UI_inst.LCD.tx_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11910 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\holdoff[0:0] -> \UI_inst.diplay_number.holdoff.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11927 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\difference[16:0] [16] -> \UI_inst.diplay_number.difference [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11928 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [0] -> \UI_inst.diplay_number.dec [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11929 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [1] -> \UI_inst.diplay_number.dec [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11930 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [2] -> \UI_inst.diplay_number.dec [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11931 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [3] -> \UI_inst.diplay_number.dec [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11932 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [0] -> \UI_inst.diplay_number.AngelaMerkel [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11933 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [1] -> \UI_inst.diplay_number.AngelaMerkel [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11934 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [2] -> \UI_inst.diplay_number.AngelaMerkel [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11935 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [3] -> \UI_inst.diplay_number.AngelaMerkel [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11936 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [4] -> \UI_inst.diplay_number.AngelaMerkel [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11937 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [5] -> \UI_inst.diplay_number.AngelaMerkel [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11938 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [6] -> \UI_inst.diplay_number.AngelaMerkel [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11939 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [7] -> \UI_inst.diplay_number.AngelaMerkel [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11940 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [8] -> \UI_inst.diplay_number.AngelaMerkel [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11941 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [9] -> \UI_inst.diplay_number.AngelaMerkel [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11942 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [10] -> \UI_inst.diplay_number.AngelaMerkel [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11943 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [11] -> \UI_inst.diplay_number.AngelaMerkel [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11944 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [12] -> \UI_inst.diplay_number.AngelaMerkel [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11945 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [13] -> \UI_inst.diplay_number.AngelaMerkel [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11946 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [14] -> \UI_inst.diplay_number.AngelaMerkel [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11947 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [15] -> \UI_inst.diplay_number.AngelaMerkel [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11948 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [0] -> \UI_inst.diplay_number.secondlastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11949 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [1] -> \UI_inst.diplay_number.secondlastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11950 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [2] -> \UI_inst.diplay_number.secondlastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11951 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [3] -> \UI_inst.diplay_number.secondlastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11952 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [4] -> \UI_inst.diplay_number.secondlastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11953 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [5] -> \UI_inst.diplay_number.secondlastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11954 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [6] -> \UI_inst.diplay_number.secondlastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11955 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [7] -> \UI_inst.diplay_number.secondlastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11956 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [8] -> \UI_inst.diplay_number.secondlastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11957 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [9] -> \UI_inst.diplay_number.secondlastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11958 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [10] -> \UI_inst.diplay_number.secondlastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11959 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [11] -> \UI_inst.diplay_number.secondlastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11960 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [12] -> \UI_inst.diplay_number.secondlastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11961 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [13] -> \UI_inst.diplay_number.secondlastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11962 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [14] -> \UI_inst.diplay_number.secondlastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11963 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [15] -> \UI_inst.diplay_number.secondlastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11964 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [0] -> \UI_inst.diplay_number.lastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11965 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [1] -> \UI_inst.diplay_number.lastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11966 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [2] -> \UI_inst.diplay_number.lastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11967 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [3] -> \UI_inst.diplay_number.lastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11968 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [4] -> \UI_inst.diplay_number.lastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11969 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [5] -> \UI_inst.diplay_number.lastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11970 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [6] -> \UI_inst.diplay_number.lastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11971 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [7] -> \UI_inst.diplay_number.lastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11972 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [8] -> \UI_inst.diplay_number.lastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11973 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [9] -> \UI_inst.diplay_number.lastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11974 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [10] -> \UI_inst.diplay_number.lastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11975 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [11] -> \UI_inst.diplay_number.lastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11976 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [12] -> \UI_inst.diplay_number.lastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11977 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [13] -> \UI_inst.diplay_number.lastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11978 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [14] -> \UI_inst.diplay_number.lastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11979 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [15] -> \UI_inst.diplay_number.lastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11980 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [0] -> \UI_inst.diplay_number.rest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11981 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [1] -> \UI_inst.diplay_number.rest [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11982 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [2] -> \UI_inst.diplay_number.rest [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11983 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [3] -> \UI_inst.diplay_number.rest [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11984 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [4] -> \UI_inst.diplay_number.rest [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11985 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [5] -> \UI_inst.diplay_number.rest [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11986 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [6] -> \UI_inst.diplay_number.rest [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11987 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [7] -> \UI_inst.diplay_number.rest [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11988 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [8] -> \UI_inst.diplay_number.rest [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11989 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [9] -> \UI_inst.diplay_number.rest [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11990 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [10] -> \UI_inst.diplay_number.rest [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11991 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [11] -> \UI_inst.diplay_number.rest [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11992 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [12] -> \UI_inst.diplay_number.rest [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11993 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [13] -> \UI_inst.diplay_number.rest [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11994 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [14] -> \UI_inst.diplay_number.rest [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11995 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [15] -> \UI_inst.diplay_number.rest [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11996 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [0] -> \UI_inst.diplay_number.acc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11997 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [1] -> \UI_inst.diplay_number.acc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11998 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [2] -> \UI_inst.diplay_number.acc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11999 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [3] -> \UI_inst.diplay_number.acc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12000 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [4] -> \UI_inst.diplay_number.acc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12001 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [5] -> \UI_inst.diplay_number.acc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12002 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [6] -> \UI_inst.diplay_number.acc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12003 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [7] -> \UI_inst.diplay_number.acc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12004 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [8] -> \UI_inst.diplay_number.acc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12005 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [9] -> \UI_inst.diplay_number.acc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12006 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [10] -> \UI_inst.diplay_number.acc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12007 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [11] -> \UI_inst.diplay_number.acc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12008 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [12] -> \UI_inst.diplay_number.acc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12009 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [13] -> \UI_inst.diplay_number.acc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12010 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [14] -> \UI_inst.diplay_number.acc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12011 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [15] -> \UI_inst.diplay_number.acc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12012 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [16] -> \UI_inst.diplay_number.acc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12013 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [0] -> \UI_inst.diplay_number.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12014 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [1] -> \UI_inst.diplay_number.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12015 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [2] -> \UI_inst.diplay_number.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12016 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [3] -> \UI_inst.diplay_number.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12017 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [4] -> \UI_inst.diplay_number.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12018 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\leadz[0:0] -> \UI_inst.diplay_number.leadz.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12019 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\updating[0:0] -> \UI_inst.diplay_number.updating.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12021 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [0] -> \UI_inst.diplay_number.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12022 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [1] -> \UI_inst.diplay_number.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12023 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [2] -> \UI_inst.diplay_number.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12024 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [3] -> \UI_inst.diplay_number.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12025 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [4] -> \UI_inst.diplay_number.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12026 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [5] -> \UI_inst.diplay_number.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12027 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [6] -> \UI_inst.diplay_number.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12028 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [7] -> \UI_inst.diplay_number.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$12029 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\we[0:0] -> \UI_inst.diplay_number.we.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4261 to $_DFFE_PP_ for $techmap\ADC.$0\acq[0:0] -> \ADC.acq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4262 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [0] -> \ADC.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4263 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [1] -> \ADC.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4264 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [2] -> \ADC.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4265 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [3] -> \ADC.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4266 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [4] -> \ADC.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4267 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [5] -> \ADC.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4268 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [6] -> \ADC.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4269 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [7] -> \ADC.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4270 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [8] -> \ADC.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4271 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [9] -> \ADC.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4272 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [10] -> \ADC.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4273 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [11] -> \ADC.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4274 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [12] -> \ADC.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4275 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [13] -> \ADC.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4276 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [14] -> \ADC.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4277 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [15] -> \ADC.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4279 to $_DFFE_PP_ for $techmap\ADC.$0\CONVST[0:0] -> \ADC.CONVST.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4402 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4428 to $_DFFE_PP_ for $0\loadlookup[0:0] -> \loadlookup.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4453 to $_DFFE_PP_ for $techmap\F2SRAM.$0\busystop[0:0] -> \F2SRAM.busystop.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4455 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [0] -> \F2SRAM.spi_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4456 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [1] -> \F2SRAM.spi_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4457 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [2] -> \F2SRAM.spi_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4458 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [3] -> \F2SRAM.spi_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4459 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [4] -> \F2SRAM.spi_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4460 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [5] -> \F2SRAM.spi_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4461 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [6] -> \F2SRAM.spi_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4462 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [7] -> \F2SRAM.spi_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4463 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [8] -> \F2SRAM.spi_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4464 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [9] -> \F2SRAM.spi_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4465 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [10] -> \F2SRAM.spi_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4466 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [11] -> \F2SRAM.spi_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4467 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [12] -> \F2SRAM.spi_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4468 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [13] -> \F2SRAM.spi_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4469 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [14] -> \F2SRAM.spi_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4470 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [15] -> \F2SRAM.spi_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4471 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [16] -> \F2SRAM.spi_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4472 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [17] -> \F2SRAM.spi_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4473 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [18] -> \F2SRAM.spi_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4474 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [19] -> \F2SRAM.spi_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4475 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [20] -> \F2SRAM.spi_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4476 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [21] -> \F2SRAM.spi_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4477 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [22] -> \F2SRAM.spi_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4478 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [23] -> \F2SRAM.spi_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4479 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [0] -> \F2SRAM.f_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4480 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [1] -> \F2SRAM.f_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4481 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [2] -> \F2SRAM.f_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4482 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [3] -> \F2SRAM.f_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4483 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [4] -> \F2SRAM.f_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4484 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [5] -> \F2SRAM.f_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4485 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [6] -> \F2SRAM.f_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4486 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [7] -> \F2SRAM.f_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4487 to $_DFFE_PP_ for $techmap\F2SRAM.$0\second[0:0] -> \F2SRAM.second.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4506 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [0] -> \F2SRAM.wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4507 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [1] -> \F2SRAM.wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4508 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [2] -> \F2SRAM.wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4509 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [3] -> \F2SRAM.wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4510 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [4] -> \F2SRAM.wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4511 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [5] -> \F2SRAM.wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4512 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [6] -> \F2SRAM.wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4513 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [7] -> \F2SRAM.wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4514 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [8] -> \F2SRAM.wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4515 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [9] -> \F2SRAM.wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4516 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [10] -> \F2SRAM.wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4517 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [11] -> \F2SRAM.wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4518 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [12] -> \F2SRAM.wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4519 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [13] -> \F2SRAM.wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4520 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [14] -> \F2SRAM.wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4521 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [15] -> \F2SRAM.wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4888 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [0] -> \DDS.addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4889 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [1] -> \DDS.addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4890 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [2] -> \DDS.addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4891 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [3] -> \DDS.addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4892 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [4] -> \DDS.addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4893 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [5] -> \DDS.addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4894 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [6] -> \DDS.addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4895 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [7] -> \DDS.addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4896 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [8] -> \DDS.addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4897 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [9] -> \DDS.addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4898 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [10] -> \DDS.addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4899 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [11] -> \DDS.addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4900 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [12] -> \DDS.addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4901 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [13] -> \DDS.addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4902 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [14] -> \DDS.addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4903 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [15] -> \DDS.addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4904 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [0] -> \DDS.cos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4905 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [1] -> \DDS.cos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4906 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [2] -> \DDS.cos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4907 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [3] -> \DDS.cos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4908 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [4] -> \DDS.cos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4909 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [5] -> \DDS.cos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4910 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [6] -> \DDS.cos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4911 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [7] -> \DDS.cos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4912 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [8] -> \DDS.cos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4913 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [9] -> \DDS.cos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4914 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [10] -> \DDS.cos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4915 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [11] -> \DDS.cos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4916 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [12] -> \DDS.cos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4917 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [13] -> \DDS.cos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4918 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [14] -> \DDS.cos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4919 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [15] -> \DDS.cos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4920 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [0] -> \DDS.sin [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4921 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [1] -> \DDS.sin [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4922 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [2] -> \DDS.sin [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4923 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [3] -> \DDS.sin [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4924 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [4] -> \DDS.sin [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4925 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [5] -> \DDS.sin [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4926 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [6] -> \DDS.sin [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4927 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [7] -> \DDS.sin [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4928 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [8] -> \DDS.sin [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4929 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [9] -> \DDS.sin [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4930 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [10] -> \DDS.sin [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4931 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [11] -> \DDS.sin [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4932 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [12] -> \DDS.sin [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4933 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [13] -> \DDS.sin [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4934 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [14] -> \DDS.sin [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4935 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [15] -> \DDS.sin [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5122 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [0] -> \Filter1.inaddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5123 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [1] -> \Filter1.inaddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5124 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [2] -> \Filter1.inaddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5125 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [3] -> \Filter1.inaddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5126 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [4] -> \Filter1.inaddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5127 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [5] -> \Filter1.inaddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5128 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [6] -> \Filter1.inaddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5129 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [7] -> \Filter1.inaddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5179 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [0] -> \Filter1.I0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5180 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [1] -> \Filter1.I0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5181 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [2] -> \Filter1.I0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5182 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [3] -> \Filter1.I0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5183 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [4] -> \Filter1.I0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5184 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [5] -> \Filter1.I0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5185 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [6] -> \Filter1.I0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5186 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [7] -> \Filter1.I0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5187 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [8] -> \Filter1.I0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5188 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [9] -> \Filter1.I0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5189 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [10] -> \Filter1.I0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5190 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [11] -> \Filter1.I0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5191 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [12] -> \Filter1.I0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5192 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [13] -> \Filter1.I0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5193 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [14] -> \Filter1.I0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5194 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [15] -> \Filter1.I0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5195 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [16] -> \Filter1.I0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5196 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [17] -> \Filter1.I0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5197 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [18] -> \Filter1.I0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5198 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [19] -> \Filter1.I0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5199 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [20] -> \Filter1.I0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5200 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [21] -> \Filter1.I0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5201 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [22] -> \Filter1.I0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5202 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [23] -> \Filter1.I0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5203 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [24] -> \Filter1.I0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5204 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [25] -> \Filter1.I0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5205 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [26] -> \Filter1.I0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5206 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [27] -> \Filter1.I0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5207 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [28] -> \Filter1.I0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5208 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [29] -> \Filter1.I0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5209 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [30] -> \Filter1.I0 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5210 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [31] -> \Filter1.I0 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5211 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [32] -> \Filter1.I0 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5212 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [33] -> \Filter1.I0 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5213 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [34] -> \Filter1.I0 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5214 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [35] -> \Filter1.I0 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5215 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [36] -> \Filter1.I0 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5216 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [37] -> \Filter1.I0 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5217 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [38] -> \Filter1.I0 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5218 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [39] -> \Filter1.I0 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5219 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [40] -> \Filter1.I0 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5220 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [41] -> \Filter1.I0 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5221 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [42] -> \Filter1.I0 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5222 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [43] -> \Filter1.I0 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5223 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [44] -> \Filter1.I0 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5224 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [45] -> \Filter1.I0 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5225 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [46] -> \Filter1.I0 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5226 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [47] -> \Filter1.I0 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5227 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [48] -> \Filter1.I0 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5228 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [0] -> \Filter1.tickcount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5229 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [1] -> \Filter1.tickcount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5230 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [2] -> \Filter1.tickcount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5231 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [3] -> \Filter1.tickcount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5232 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [4] -> \Filter1.tickcount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5233 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [5] -> \Filter1.tickcount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5234 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [6] -> \Filter1.tickcount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5235 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [7] -> \Filter1.tickcount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5236 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [8] -> \Filter1.tickcount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5237 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [9] -> \Filter1.tickcount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5238 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [10] -> \Filter1.tickcount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5240 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [0] -> \UI_inst.X [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5241 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [1] -> \UI_inst.X [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5242 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [2] -> \UI_inst.X [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5243 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [3] -> \UI_inst.X [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5244 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [4] -> \UI_inst.X [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5245 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [5] -> \UI_inst.X [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5246 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [6] -> \UI_inst.X [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5247 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [7] -> \UI_inst.X [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5248 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [8] -> \UI_inst.X [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5249 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [9] -> \UI_inst.X [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5250 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [10] -> \UI_inst.X [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5251 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [11] -> \UI_inst.X [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5252 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [12] -> \UI_inst.X [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5253 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [13] -> \UI_inst.X [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5254 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [14] -> \UI_inst.X [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5255 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [15] -> \UI_inst.X [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5256 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [16] -> \UI_inst.X [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5257 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [17] -> \UI_inst.X [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5258 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [18] -> \UI_inst.X [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5259 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [19] -> \UI_inst.X [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5260 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [20] -> \UI_inst.X [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5261 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [21] -> \UI_inst.X [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5262 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [22] -> \UI_inst.X [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5263 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [23] -> \UI_inst.X [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5264 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [24] -> \UI_inst.X [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5265 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [25] -> \UI_inst.X [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5266 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [26] -> \UI_inst.X [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5267 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [27] -> \UI_inst.X [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5268 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [28] -> \UI_inst.X [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5269 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [29] -> \UI_inst.X [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5270 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [30] -> \UI_inst.X [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5271 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [31] -> \UI_inst.X [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6738 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [0] -> \Filter2.inaddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6739 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [1] -> \Filter2.inaddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6740 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [2] -> \Filter2.inaddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6741 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [3] -> \Filter2.inaddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6742 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [4] -> \Filter2.inaddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6743 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [5] -> \Filter2.inaddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6744 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [6] -> \Filter2.inaddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6745 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [7] -> \Filter2.inaddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6795 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [0] -> \Filter2.I0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6796 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [1] -> \Filter2.I0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6797 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [2] -> \Filter2.I0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6798 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [3] -> \Filter2.I0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6799 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [4] -> \Filter2.I0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6800 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [5] -> \Filter2.I0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6801 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [6] -> \Filter2.I0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6802 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [7] -> \Filter2.I0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6803 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [8] -> \Filter2.I0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6804 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [9] -> \Filter2.I0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6805 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [10] -> \Filter2.I0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6806 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [11] -> \Filter2.I0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6807 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [12] -> \Filter2.I0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6808 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [13] -> \Filter2.I0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6809 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [14] -> \Filter2.I0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6810 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [15] -> \Filter2.I0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6811 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [16] -> \Filter2.I0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6812 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [17] -> \Filter2.I0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6813 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [18] -> \Filter2.I0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6814 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [19] -> \Filter2.I0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6815 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [20] -> \Filter2.I0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6816 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [21] -> \Filter2.I0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6817 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [22] -> \Filter2.I0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6818 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [23] -> \Filter2.I0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6819 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [24] -> \Filter2.I0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6820 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [25] -> \Filter2.I0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6821 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [26] -> \Filter2.I0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6822 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [27] -> \Filter2.I0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6823 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [28] -> \Filter2.I0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6824 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [29] -> \Filter2.I0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6825 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [30] -> \Filter2.I0 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6826 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [31] -> \Filter2.I0 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6827 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [32] -> \Filter2.I0 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6828 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [33] -> \Filter2.I0 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6829 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [34] -> \Filter2.I0 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6830 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [35] -> \Filter2.I0 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6831 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [36] -> \Filter2.I0 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6832 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [37] -> \Filter2.I0 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6833 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [38] -> \Filter2.I0 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6834 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [39] -> \Filter2.I0 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6835 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [40] -> \Filter2.I0 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6836 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [41] -> \Filter2.I0 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6837 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [42] -> \Filter2.I0 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6838 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [43] -> \Filter2.I0 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6839 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [44] -> \Filter2.I0 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6840 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [45] -> \Filter2.I0 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6841 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [46] -> \Filter2.I0 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6842 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [47] -> \Filter2.I0 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6843 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [48] -> \Filter2.I0 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6844 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [0] -> \Filter2.tickcount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6845 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [1] -> \Filter2.tickcount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6846 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [2] -> \Filter2.tickcount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6847 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [3] -> \Filter2.tickcount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6848 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [4] -> \Filter2.tickcount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6849 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [5] -> \Filter2.tickcount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6850 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [6] -> \Filter2.tickcount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6851 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [7] -> \Filter2.tickcount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6852 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [8] -> \Filter2.tickcount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6853 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [9] -> \Filter2.tickcount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6854 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [10] -> \Filter2.tickcount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6855 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [0] -> \Filter2.OUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6856 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [1] -> \Filter2.OUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6857 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [2] -> \Filter2.OUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6858 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [3] -> \Filter2.OUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6859 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [4] -> \Filter2.OUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6860 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [5] -> \Filter2.OUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6861 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [6] -> \Filter2.OUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6862 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [7] -> \Filter2.OUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6863 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [8] -> \Filter2.OUT [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6864 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [9] -> \Filter2.OUT [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6865 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [10] -> \Filter2.OUT [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6866 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [11] -> \Filter2.OUT [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6867 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [12] -> \Filter2.OUT [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6868 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [13] -> \Filter2.OUT [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6869 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [14] -> \Filter2.OUT [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6870 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [15] -> \Filter2.OUT [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6871 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [16] -> \Filter2.OUT [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6872 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [17] -> \Filter2.OUT [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6873 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [18] -> \Filter2.OUT [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6874 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [19] -> \Filter2.OUT [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6875 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [20] -> \Filter2.OUT [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6876 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [21] -> \Filter2.OUT [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6877 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [22] -> \Filter2.OUT [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6878 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [23] -> \Filter2.OUT [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6879 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [24] -> \Filter2.OUT [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6880 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [25] -> \Filter2.OUT [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6881 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [26] -> \Filter2.OUT [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6882 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [27] -> \Filter2.OUT [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6883 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [28] -> \Filter2.OUT [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6884 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [29] -> \Filter2.OUT [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6885 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [30] -> \Filter2.OUT [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6886 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [31] -> \Filter2.OUT [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8221 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [0] -> \UI_inst.cnt3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8222 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [1] -> \UI_inst.cnt3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8223 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [2] -> \UI_inst.cnt3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8224 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [3] -> \UI_inst.cnt3 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8225 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [4] -> \UI_inst.cnt3 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8226 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [5] -> \UI_inst.cnt3 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8227 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [6] -> \UI_inst.cnt3 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8228 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [7] -> \UI_inst.cnt3 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8229 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [8] -> \UI_inst.cnt3 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8230 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [9] -> \UI_inst.cnt3 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8231 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [10] -> \UI_inst.cnt3 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8232 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [11] -> \UI_inst.cnt3 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8233 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [12] -> \UI_inst.cnt3 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8234 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [13] -> \UI_inst.cnt3 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8235 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [14] -> \UI_inst.cnt3 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8236 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [15] -> \UI_inst.cnt3 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8237 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [16] -> \UI_inst.cnt3 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8238 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [17] -> \UI_inst.cnt3 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8239 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [18] -> \UI_inst.cnt3 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8240 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [19] -> \UI_inst.cnt3 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8241 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [20] -> \UI_inst.cnt3 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8242 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [21] -> \UI_inst.cnt3 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8243 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [22] -> \UI_inst.cnt3 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8244 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [23] -> \UI_inst.cnt3 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8245 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [0] -> \UI_inst.cnt2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8246 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [1] -> \UI_inst.cnt2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8247 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [2] -> \UI_inst.cnt2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8248 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [3] -> \UI_inst.cnt2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8249 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [4] -> \UI_inst.cnt2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8250 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [5] -> \UI_inst.cnt2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8251 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [6] -> \UI_inst.cnt2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8252 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [7] -> \UI_inst.cnt2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8253 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [8] -> \UI_inst.cnt2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8254 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [9] -> \UI_inst.cnt2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8255 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [10] -> \UI_inst.cnt2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8256 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [11] -> \UI_inst.cnt2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8257 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [12] -> \UI_inst.cnt2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8258 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [13] -> \UI_inst.cnt2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8259 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [14] -> \UI_inst.cnt2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8260 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [15] -> \UI_inst.cnt2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8261 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [16] -> \UI_inst.cnt2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8262 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [17] -> \UI_inst.cnt2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8263 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [18] -> \UI_inst.cnt2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8264 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [19] -> \UI_inst.cnt2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8265 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [20] -> \UI_inst.cnt2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8266 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [21] -> \UI_inst.cnt2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8267 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [22] -> \UI_inst.cnt2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8268 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [23] -> \UI_inst.cnt2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8269 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [0] -> \UI_inst.cnt1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8270 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [1] -> \UI_inst.cnt1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8271 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [2] -> \UI_inst.cnt1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8272 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [3] -> \UI_inst.cnt1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8273 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [4] -> \UI_inst.cnt1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8274 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [5] -> \UI_inst.cnt1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8275 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [6] -> \UI_inst.cnt1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8276 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [7] -> \UI_inst.cnt1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8277 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [8] -> \UI_inst.cnt1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8278 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [9] -> \UI_inst.cnt1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8279 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [10] -> \UI_inst.cnt1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8280 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [11] -> \UI_inst.cnt1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8281 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [12] -> \UI_inst.cnt1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8282 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [13] -> \UI_inst.cnt1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8283 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [14] -> \UI_inst.cnt1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8284 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [15] -> \UI_inst.cnt1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8285 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [16] -> \UI_inst.cnt1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8286 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [17] -> \UI_inst.cnt1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8287 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [18] -> \UI_inst.cnt1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8288 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [19] -> \UI_inst.cnt1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8289 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [20] -> \UI_inst.cnt1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8290 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [21] -> \UI_inst.cnt1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8291 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [22] -> \UI_inst.cnt1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8292 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [23] -> \UI_inst.cnt1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8293 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [0] -> \UI_inst.cnt0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8294 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [1] -> \UI_inst.cnt0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8295 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [2] -> \UI_inst.cnt0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8296 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [3] -> \UI_inst.cnt0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8297 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [4] -> \UI_inst.cnt0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8298 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [5] -> \UI_inst.cnt0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8299 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [6] -> \UI_inst.cnt0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8300 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [7] -> \UI_inst.cnt0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8301 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [8] -> \UI_inst.cnt0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8302 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [9] -> \UI_inst.cnt0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8303 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [10] -> \UI_inst.cnt0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8304 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [11] -> \UI_inst.cnt0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8305 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [12] -> \UI_inst.cnt0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8306 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [13] -> \UI_inst.cnt0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8307 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [14] -> \UI_inst.cnt0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8308 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [15] -> \UI_inst.cnt0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8309 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [16] -> \UI_inst.cnt0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8310 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [17] -> \UI_inst.cnt0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8311 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [18] -> \UI_inst.cnt0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8312 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [19] -> \UI_inst.cnt0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8313 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [20] -> \UI_inst.cnt0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8314 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [21] -> \UI_inst.cnt0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8315 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [22] -> \UI_inst.cnt0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8316 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [23] -> \UI_inst.cnt0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8329 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [0] -> \UI_inst.datS [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8330 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [1] -> \UI_inst.datS [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8331 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [2] -> \UI_inst.datS [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8332 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [3] -> \UI_inst.datS [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8333 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [4] -> \UI_inst.datS [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8334 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [5] -> \UI_inst.datS [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8335 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [6] -> \UI_inst.datS [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8336 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2916.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9005_Y [7] -> \UI_inst.datS [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8337 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2781.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9456_Y [0] -> \UI_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8338 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2781.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9456_Y [1] -> \UI_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8339 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2781.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9456_Y [2] -> \UI_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8340 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2781.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9456_Y [3] -> \UI_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8342 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [0] -> \UI_inst.refampl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8343 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [1] -> \UI_inst.refampl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8344 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [0] -> \UI_inst.reffreq [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8345 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [1] -> \UI_inst.reffreq [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8346 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [2] -> \UI_inst.reffreq [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8370 to $_DFFE_PP_ for $techmap\UI_inst.$0\ismagphase[0:0] -> \UI_inst.ismagphase.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8371 to $_DFFE_PP_ for $techmap\UI_inst.$0\refIO[0:0] -> \UI_inst.refIO.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8372 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[2:0] [0] -> \UI_inst.TC [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8373 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[2:0] [1] -> \UI_inst.TC [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8374 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[2:0] [2] -> \UI_inst.TC [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8375 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [0] -> \UI_inst.gain [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8376 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [1] -> \UI_inst.gain [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10580 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1519.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11076_Y [0] -> \UI_inst.LCD.display_state [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10581 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1519.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11076_Y [1] -> \UI_inst.LCD.display_state [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10582 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1519.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11076_Y [2] -> \UI_inst.LCD.display_state [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10583 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1519.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11076_Y [3] -> \UI_inst.LCD.display_state [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10584 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1519.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11076_Y [4] -> \UI_inst.LCD.display_state [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10652 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1387.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11341_Y [0] -> \UI_inst.LCD.tx_state [0].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$10653 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$1387.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11341_Y [1] -> \UI_inst.LCD.tx_state [1].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$10654 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$1387.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11341_Y [2] -> \UI_inst.LCD.tx_state [2].

22.35. Executing TECHMAP pass (map to technology primitives).

22.35.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

22.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$__DFFE_PP1 for cells of type $__DFFE_PP1.
No more expansions possible.

22.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3583.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3586.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3589.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3592.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3595.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3610.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3610.slice[1].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3610.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3610.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3622.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3622.slice[1].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3622.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3625.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3625.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3625.slice[7].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3625.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3625.slice[9].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3640.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3646.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3658.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3661.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3676.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3679.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3694.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3700.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3712.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3715.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3724.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3727.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3730.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3733.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3736.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3739.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3742.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3751.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3754.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3757.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3757.slice[2].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3757.slice[3].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3769.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3772.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3796.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3805.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3808.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3811.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3814.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3817.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3823.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3829.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3832.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3835.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3838.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3844.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3850.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3853.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3856.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3865.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3868.slice[0].carry ($lut).

22.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10001 (SB_DFFE): \PLL.last_eP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10002 (SB_DFFE): \PLL.last_eP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10003 (SB_DFFE): \PLL.last_eP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10004 (SB_DFFE): \PLL.last_eP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10005 (SB_DFFE): \PLL.last_eP [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10006 (SB_DFFE): \PLL.last_eP [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9807 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10007 (SB_DFFE): \PLL.last_eP [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10009 (SB_DFFE): \PLL.last_eP [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10010 (SB_DFFE): \PLL.last_eP [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10011 (SB_DFFE): \PLL.last_eP [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10012 (SB_DFFE): \PLL.last_eP [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10013 (SB_DFFE): \PLL.last_eP [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10014 (SB_DFFE): \PLL.last_eP [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10015 (SB_DFFE): \PLL.last_eP [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10016 (SB_DFFE): \PLL.last_eP [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10028 (SB_DFFE): \PLL.eD [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10029 (SB_DFFE): \PLL.eD [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10030 (SB_DFFE): \PLL.eD [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10031 (SB_DFFE): \PLL.eD [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10008 (SB_DFFE): \PLL.last_eP [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10035 (SB_DFF): \PLL.l_in = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10033 (SB_DFF): \PLL.pipestep = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10034 (SB_DFF): \PLL.l2_in = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10032 (SB_DFFE): \PLL.eD [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10037 (SB_DFFE): \PLL.incr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10038 (SB_DFFE): \PLL.incr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10039 (SB_DFFE): \PLL.incr [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10040 (SB_DFFE): \PLL.incr [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10041 (SB_DFFE): \PLL.incr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10042 (SB_DFFE): \PLL.incr [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10043 (SB_DFFE): \PLL.incr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10044 (SB_DFFE): \PLL.incr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10045 (SB_DFFE): \PLL.incr [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10046 (SB_DFFE): \PLL.incr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10047 (SB_DFFE): \PLL.incr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10048 (SB_DFFE): \PLL.incr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10049 (SB_DFFE): \PLL.incr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10050 (SB_DFFE): \PLL.incr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10051 (SB_DFFE): \PLL.incr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10036 (SB_DFFE): \PLL.incr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10053 (SB_DFF): \PLL.locked = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10052 (SB_DFFE): \PLL.incr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10055 (SB_DFF): \PLL.phase [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10056 (SB_DFF): \PLL.phase [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10057 (SB_DFF): \PLL.phase [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10058 (SB_DFF): \PLL.phase [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10059 (SB_DFF): \PLL.phase [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10060 (SB_DFF): \PLL.phase [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10061 (SB_DFF): \PLL.phase [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10062 (SB_DFF): \PLL.phase [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10063 (SB_DFF): \PLL.phase [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10064 (SB_DFF): \PLL.phase [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10065 (SB_DFF): \PLL.phase [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10066 (SB_DFF): \PLL.phase [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10067 (SB_DFF): \PLL.phase [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10068 (SB_DFF): \PLL.phase [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10069 (SB_DFF): \PLL.phase [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10070 (SB_DFF): \PLL.phase [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10071 (SB_DFF): \PLL.phase [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10072 (SB_DFF): \PLL.phase [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10073 (SB_DFF): \PLL.phase [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10074 (SB_DFF): \PLL.phase [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10075 (SB_DFF): \PLL.phase [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10076 (SB_DFF): \PLL.phase [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10077 (SB_DFF): \PLL.phase [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10078 (SB_DFF): \PLL.phase [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10079 (SB_DFF): \PLL.phase [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10080 (SB_DFF): \PLL.phase [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10081 (SB_DFF): \PLL.phase [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10082 (SB_DFF): \PLL.phase [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10083 (SB_DFF): \PLL.phase [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10084 (SB_DFF): \PLL.phase [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10085 (SB_DFF): \PLL.phase [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10221 (SB_DFF): \DAC1.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10222 (SB_DFF): \DAC1.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10223 (SB_DFF): \DAC1.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10224 (SB_DFF): \DAC1.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10225 (SB_DFF): \DAC1.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10226 (SB_DFF): \DAC1.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10054 (SB_DFF): \PLL.phase [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10227 (SB_DFF): \DAC1.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10229 (SB_DFF): \DAC1.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10230 (SB_DFF): \DAC1.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10231 (SB_DFF): \DAC1.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10232 (SB_DFF): \DAC1.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10233 (SB_DFF): \DAC1.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10234 (SB_DFF): \DAC1.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10235 (SB_DFF): \DAC1.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10236 (SB_DFF): \DAC1.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10237 (SB_DFF): \DAC1.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10241 (SB_DFF): \DAC2.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10242 (SB_DFF): \DAC2.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10243 (SB_DFF): \DAC2.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10244 (SB_DFF): \DAC2.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10245 (SB_DFF): \DAC2.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10246 (SB_DFF): \DAC2.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10228 (SB_DFF): \DAC1.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10247 (SB_DFF): \DAC2.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10249 (SB_DFF): \DAC2.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10250 (SB_DFF): \DAC2.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10251 (SB_DFF): \DAC2.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10252 (SB_DFF): \DAC2.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10253 (SB_DFF): \DAC2.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10254 (SB_DFF): \DAC2.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10255 (SB_DFF): \DAC2.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10256 (SB_DFF): \DAC2.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10257 (SB_DFF): \DAC2.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10258 (SB_DFF): \DAC3.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10259 (SB_DFF): \DAC3.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10260 (SB_DFF): \DAC3.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10261 (SB_DFF): \DAC3.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10262 (SB_DFF): \DAC3.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10263 (SB_DFF): \DAC3.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10248 (SB_DFF): \DAC2.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10264 (SB_DFF): \DAC3.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10266 (SB_DFF): \DAC3.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10267 (SB_DFF): \DAC3.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10268 (SB_DFF): \DAC3.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10269 (SB_DFF): \DAC3.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10270 (SB_DFF): \DAC3.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10271 (SB_DFF): \DAC3.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10272 (SB_DFF): \DAC3.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10273 (SB_DFF): \DAC3.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10274 (SB_DFF): \DAC3.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5207 (SB_DFFE): \Filter1.I0 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10265 (SB_DFF): \DAC3.acc [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10554 (SB_DFFR): \UI_inst.LCD.main_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10575 (SB_DFFE): \UI_inst.LCD.LCD_E1 = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10572 (SB_DFFR): \UI_inst.LCD.main_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10577 (SB_DFFE): \UI_inst.LCD.SF_D1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10578 (SB_DFFE): \UI_inst.LCD.SF_D1 [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10580 (SB_DFFER): \UI_inst.LCD.display_state [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10584 (SB_DFFER): \UI_inst.LCD.display_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10594 (SB_DFFE): \UI_inst.LCD.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10595 (SB_DFFE): \UI_inst.LCD.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10596 (SB_DFFE): \UI_inst.LCD.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10597 (SB_DFFE): \UI_inst.LCD.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10598 (SB_DFFE): \UI_inst.LCD.pos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10599 (SB_DFFE): \UI_inst.LCD.pos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10600 (SB_DFFE): \UI_inst.LCD.pos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10601 (SB_DFFE): \UI_inst.LCD.pos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10602 (SB_DFFE): \UI_inst.LCD.pos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10603 (SB_DFFE): \UI_inst.LCD.pos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10604 (SB_DFFE): \UI_inst.LCD.pos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10605 (SB_DFFE): \UI_inst.LCD.pos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10606 (SB_DFFE): \UI_inst.LCD.pos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10607 (SB_DFFE): \UI_inst.LCD.pos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10608 (SB_DFFE): \UI_inst.LCD.pos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10609 (SB_DFFE): \UI_inst.LCD.pos [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10610 (SB_DFFE): \UI_inst.LCD.pos [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10611 (SB_DFFE): \UI_inst.LCD.pos [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10612 (SB_DFFE): \UI_inst.LCD.pos [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10613 (SB_DFFE): \UI_inst.LCD.pos [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10614 (SB_DFFE): \UI_inst.LCD.pos [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10615 (SB_DFFE): \UI_inst.LCD.pos [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10616 (SB_DFFE): \UI_inst.LCD.pos [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10617 (SB_DFFE): \UI_inst.LCD.pos [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10618 (SB_DFFE): \UI_inst.LCD.pos [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10619 (SB_DFFE): \UI_inst.LCD.pos [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10620 (SB_DFFE): \UI_inst.LCD.pos [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10621 (SB_DFFE): \UI_inst.LCD.pos [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10622 (SB_DFFE): \UI_inst.LCD.pos [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10623 (SB_DFFE): \UI_inst.LCD.pos [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10593 (SB_DFFE): \UI_inst.LCD.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10625 (SB_DFFE): \UI_inst.LCD.tx_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10624 (SB_DFFE): \UI_inst.LCD.pos [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10627 (SB_DFFE): \UI_inst.LCD.tx_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10628 (SB_DFFE): \UI_inst.LCD.tx_delay_value [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10629 (SB_DFFE): \UI_inst.LCD.tx_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10630 (SB_DFFE): \UI_inst.LCD.tx_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10631 (SB_DFFE): \UI_inst.LCD.tx_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10632 (SB_DFFE): \UI_inst.LCD.tx_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10633 (SB_DFFE): \UI_inst.LCD.tx_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10634 (SB_DFFE): \UI_inst.LCD.tx_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10635 (SB_DFFE): \UI_inst.LCD.tx_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10636 (SB_DFFE): \UI_inst.LCD.tx_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10637 (SB_DFFE): \UI_inst.LCD.tx_delay_value [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10638 (SB_DFFE): \UI_inst.LCD.tx_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10639 (SB_DFFE): \UI_inst.LCD.tx_delay_value [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10640 (SB_DFFE): \UI_inst.LCD.tx_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10641 (SB_DFFE): \UI_inst.LCD.tx_delay_value [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10642 (SB_DFFE): \UI_inst.LCD.tx_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10643 (SB_DFFE): \UI_inst.LCD.tx_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10644 (SB_DFFE): \UI_inst.LCD.tx_delay_value [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10626 (SB_DFFE): \UI_inst.LCD.tx_delay_value [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10646 (SB_DFFE): \UI_inst.LCD.LCD_E0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10645 (SB_DFFE): \UI_inst.LCD.tx_delay_value [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10648 (SB_DFFE): \UI_inst.LCD.SF_D0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10649 (SB_DFFE): \UI_inst.LCD.SF_D0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10647 (SB_DFFE): \UI_inst.LCD.SF_D0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4460 (SB_DFFE): \F2SRAM.spi_addr [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10654 (SB_DFFES): \UI_inst.LCD.tx_state [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11910 (SB_DFFE): \UI_inst.diplay_number.holdoff = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11927 (SB_DFFE): \UI_inst.diplay_number.difference [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11929 (SB_DFFE): \UI_inst.diplay_number.dec [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11930 (SB_DFFE): \UI_inst.diplay_number.dec [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11928 (SB_DFFE): \UI_inst.diplay_number.dec [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11931 (SB_DFFE): \UI_inst.diplay_number.dec [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11933 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11934 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11935 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11936 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11937 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11938 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11939 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11940 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11941 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11942 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11943 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11944 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11945 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11946 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11932 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11947 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11949 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11950 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11951 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11952 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11953 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11954 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11955 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11956 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11957 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11958 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11959 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11960 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11961 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11962 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11948 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11963 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11965 (SB_DFFE): \UI_inst.diplay_number.lastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11966 (SB_DFFE): \UI_inst.diplay_number.lastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11967 (SB_DFFE): \UI_inst.diplay_number.lastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11968 (SB_DFFE): \UI_inst.diplay_number.lastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11969 (SB_DFFE): \UI_inst.diplay_number.lastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11970 (SB_DFFE): \UI_inst.diplay_number.lastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11971 (SB_DFFE): \UI_inst.diplay_number.lastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11972 (SB_DFFE): \UI_inst.diplay_number.lastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11973 (SB_DFFE): \UI_inst.diplay_number.lastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11974 (SB_DFFE): \UI_inst.diplay_number.lastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11975 (SB_DFFE): \UI_inst.diplay_number.lastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11976 (SB_DFFE): \UI_inst.diplay_number.lastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11977 (SB_DFFE): \UI_inst.diplay_number.lastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11978 (SB_DFFE): \UI_inst.diplay_number.lastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11964 (SB_DFFE): \UI_inst.diplay_number.lastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11979 (SB_DFFE): \UI_inst.diplay_number.lastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11981 (SB_DFFE): \UI_inst.diplay_number.rest [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11982 (SB_DFFE): \UI_inst.diplay_number.rest [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11983 (SB_DFFE): \UI_inst.diplay_number.rest [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11984 (SB_DFFE): \UI_inst.diplay_number.rest [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11985 (SB_DFFE): \UI_inst.diplay_number.rest [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11986 (SB_DFFE): \UI_inst.diplay_number.rest [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11987 (SB_DFFE): \UI_inst.diplay_number.rest [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11988 (SB_DFFE): \UI_inst.diplay_number.rest [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11989 (SB_DFFE): \UI_inst.diplay_number.rest [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11990 (SB_DFFE): \UI_inst.diplay_number.rest [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11991 (SB_DFFE): \UI_inst.diplay_number.rest [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11992 (SB_DFFE): \UI_inst.diplay_number.rest [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11993 (SB_DFFE): \UI_inst.diplay_number.rest [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11994 (SB_DFFE): \UI_inst.diplay_number.rest [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11980 (SB_DFFE): \UI_inst.diplay_number.rest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11995 (SB_DFFE): \UI_inst.diplay_number.rest [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11997 (SB_DFFE): \UI_inst.diplay_number.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11998 (SB_DFFE): \UI_inst.diplay_number.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11999 (SB_DFFE): \UI_inst.diplay_number.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12000 (SB_DFFE): \UI_inst.diplay_number.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12001 (SB_DFFE): \UI_inst.diplay_number.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12002 (SB_DFFE): \UI_inst.diplay_number.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12003 (SB_DFFE): \UI_inst.diplay_number.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12004 (SB_DFFE): \UI_inst.diplay_number.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12005 (SB_DFFE): \UI_inst.diplay_number.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12006 (SB_DFFE): \UI_inst.diplay_number.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12007 (SB_DFFE): \UI_inst.diplay_number.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12008 (SB_DFFE): \UI_inst.diplay_number.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12009 (SB_DFFE): \UI_inst.diplay_number.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12010 (SB_DFFE): \UI_inst.diplay_number.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12011 (SB_DFFE): \UI_inst.diplay_number.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11996 (SB_DFFE): \UI_inst.diplay_number.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12012 (SB_DFFE): \UI_inst.diplay_number.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12014 (SB_DFFE): \UI_inst.diplay_number.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12015 (SB_DFFE): \UI_inst.diplay_number.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12016 (SB_DFFE): \UI_inst.diplay_number.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12013 (SB_DFFE): \UI_inst.diplay_number.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12018 (SB_DFFE): \UI_inst.diplay_number.leadz = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12019 (SB_DFFE): \UI_inst.diplay_number.updating = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12020 (SB_DFF): \UI_inst.diplay_number.lastupdate = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12017 (SB_DFFE): \UI_inst.diplay_number.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12022 (SB_DFFE): \UI_inst.diplay_number.dat [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12023 (SB_DFFE): \UI_inst.diplay_number.dat [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12024 (SB_DFFE): \UI_inst.diplay_number.dat [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12025 (SB_DFFE): \UI_inst.diplay_number.dat [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12026 (SB_DFFE): \UI_inst.diplay_number.dat [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12027 (SB_DFFE): \UI_inst.diplay_number.dat [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12021 (SB_DFFE): \UI_inst.diplay_number.dat [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12028 (SB_DFFE): \UI_inst.diplay_number.dat [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4928 (SB_DFFE): \DDS.sin [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5195 (SB_DFFE): \Filter1.I0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5209 (SB_DFFE): \Filter1.I0 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4256 (SB_DFF): \ADC.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4257 (SB_DFF): \ADC.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4254 (SB_DFF): \ADC.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4258 (SB_DFF): \ADC.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4259 (SB_DFF): \ADC.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFF): \ADC.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4263 (SB_DFFE): \ADC.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8222 (SB_DFFE): \UI_inst.cnt3 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4261 (SB_DFFE): \ADC.acq = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4264 (SB_DFFE): \ADC.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4265 (SB_DFFE): \ADC.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4266 (SB_DFFE): \ADC.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4267 (SB_DFFE): \ADC.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4268 (SB_DFFE): \ADC.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4269 (SB_DFFE): \ADC.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4270 (SB_DFFE): \ADC.data [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4271 (SB_DFFE): \ADC.data [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4272 (SB_DFFE): \ADC.data [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4273 (SB_DFFE): \ADC.data [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4274 (SB_DFFE): \ADC.data [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4275 (SB_DFFE): \ADC.data [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4276 (SB_DFFE): \ADC.data [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4277 (SB_DFFE): \ADC.data [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4295 (SB_DFFN): \ADC.shiftdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4262 (SB_DFFE): \ADC.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4278 (SB_DFF): \ADC.newdata = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4279 (SB_DFFE): \ADC.CONVST = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4409 (SB_DFF): \cnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4281 (SB_DFFN): \ADC.shiftdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4282 (SB_DFFN): \ADC.shiftdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4283 (SB_DFFN): \ADC.shiftdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4284 (SB_DFFN): \ADC.shiftdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4285 (SB_DFFN): \ADC.shiftdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4286 (SB_DFFN): \ADC.shiftdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4287 (SB_DFFN): \ADC.shiftdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4288 (SB_DFFN): \ADC.shiftdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4289 (SB_DFFN): \ADC.shiftdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4290 (SB_DFFN): \ADC.shiftdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4291 (SB_DFFN): \ADC.shiftdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4292 (SB_DFFN): \ADC.shiftdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4293 (SB_DFFN): \ADC.shiftdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4294 (SB_DFFN): \ADC.shiftdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4411 (SB_DFF): \cnt [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4885 (SB_DFF): \DDS.islast = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4404 (SB_DFF): \cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4406 (SB_DFF): \cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4407 (SB_DFF): \cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4408 (SB_DFF): \cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4280 (SB_DFFN): \ADC.shiftdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4412 (SB_DFF): \cnt [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4413 (SB_DFF): \cnt [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4414 (SB_DFF): \cnt [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4415 (SB_DFF): \cnt [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4416 (SB_DFF): \cnt [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4417 (SB_DFF): \cnt [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4418 (SB_DFF): \cnt [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4419 (SB_DFF): \cnt [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4420 (SB_DFF): \cnt [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4421 (SB_DFF): \cnt [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4422 (SB_DFF): \cnt [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4423 (SB_DFF): \cnt [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4424 (SB_DFF): \cnt [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4425 (SB_DFF): \cnt [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4426 (SB_DFF): \cnt [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4427 (SB_DFF): \cnt [24] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10652 (SB_DFFER): \UI_inst.LCD.tx_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4403 (SB_DFF): \cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4461 (SB_DFFE): \F2SRAM.spi_addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4453 (SB_DFFE): \F2SRAM.busystop = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4454 (SB_DFF): \F2SRAM.spi_go = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4255 (SB_DFF): \ADC.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4456 (SB_DFFE): \F2SRAM.spi_addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4457 (SB_DFFE): \F2SRAM.spi_addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4458 (SB_DFFE): \F2SRAM.spi_addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4459 (SB_DFFE): \F2SRAM.spi_addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5210 (SB_DFFE): \Filter1.I0 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$12029 (SB_DFFE): \UI_inst.diplay_number.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4462 (SB_DFFE): \F2SRAM.spi_addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4463 (SB_DFFE): \F2SRAM.spi_addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4464 (SB_DFFE): \F2SRAM.spi_addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4465 (SB_DFFE): \F2SRAM.spi_addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4466 (SB_DFFE): \F2SRAM.spi_addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4467 (SB_DFFE): \F2SRAM.spi_addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4468 (SB_DFFE): \F2SRAM.spi_addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4469 (SB_DFFE): \F2SRAM.spi_addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4470 (SB_DFFE): \F2SRAM.spi_addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4471 (SB_DFFE): \F2SRAM.spi_addr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4472 (SB_DFFE): \F2SRAM.spi_addr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4473 (SB_DFFE): \F2SRAM.spi_addr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4474 (SB_DFFE): \F2SRAM.spi_addr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4475 (SB_DFFE): \F2SRAM.spi_addr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4476 (SB_DFFE): \F2SRAM.spi_addr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4477 (SB_DFFE): \F2SRAM.spi_addr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4455 (SB_DFFE): \F2SRAM.spi_addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4478 (SB_DFFE): \F2SRAM.spi_addr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4487 (SB_DFFE): \F2SRAM.second = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4488 (SB_DFF): \F2SRAM.laststart = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4490 (SB_DFF): \F2SRAM.poscount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4491 (SB_DFF): \F2SRAM.poscount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4492 (SB_DFF): \F2SRAM.poscount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4493 (SB_DFF): \F2SRAM.poscount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4494 (SB_DFF): \F2SRAM.poscount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4495 (SB_DFF): \F2SRAM.poscount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4496 (SB_DFF): \F2SRAM.poscount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4497 (SB_DFF): \F2SRAM.poscount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4498 (SB_DFF): \F2SRAM.poscount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4499 (SB_DFF): \F2SRAM.poscount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4500 (SB_DFF): \F2SRAM.poscount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4501 (SB_DFF): \F2SRAM.poscount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4502 (SB_DFF): \F2SRAM.poscount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4503 (SB_DFF): \F2SRAM.poscount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4504 (SB_DFF): \F2SRAM.poscount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4489 (SB_DFF): \F2SRAM.poscount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4505 (SB_DFF): \F2SRAM.poscount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4507 (SB_DFFE): \F2SRAM.wdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4508 (SB_DFFE): \F2SRAM.wdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4509 (SB_DFFE): \F2SRAM.wdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4510 (SB_DFFE): \F2SRAM.wdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4511 (SB_DFFE): \F2SRAM.wdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4512 (SB_DFFE): \F2SRAM.wdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4513 (SB_DFFE): \F2SRAM.wdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4514 (SB_DFFE): \F2SRAM.wdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4515 (SB_DFFE): \F2SRAM.wdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4516 (SB_DFFE): \F2SRAM.wdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4517 (SB_DFFE): \F2SRAM.wdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4518 (SB_DFFE): \F2SRAM.wdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4519 (SB_DFFE): \F2SRAM.wdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4520 (SB_DFFE): \F2SRAM.wdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4506 (SB_DFFE): \F2SRAM.wdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4521 (SB_DFFE): \F2SRAM.wdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4523 (SB_DFF): \F2SRAM.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4524 (SB_DFF): \F2SRAM.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4525 (SB_DFF): \F2SRAM.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4526 (SB_DFF): \F2SRAM.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4527 (SB_DFF): \F2SRAM.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4528 (SB_DFF): \F2SRAM.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4529 (SB_DFF): \F2SRAM.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4530 (SB_DFF): \F2SRAM.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4531 (SB_DFF): \F2SRAM.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4532 (SB_DFF): \F2SRAM.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4533 (SB_DFF): \F2SRAM.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4534 (SB_DFF): \F2SRAM.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4535 (SB_DFF): \F2SRAM.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4536 (SB_DFF): \F2SRAM.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4522 (SB_DFF): \F2SRAM.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4538 (SB_DFF): \F2SRAM.busy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5176 (SB_DFF): \Filter1.OUTpipe [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4405 (SB_DFF): \cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4886 (SB_DFF): \DDS.lastgo = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4887 (SB_DFF): \DDS.iscos = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4913 (SB_DFFE): \DDS.cos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4915 (SB_DFFE): \DDS.cos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4917 (SB_DFFE): \DDS.cos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4919 (SB_DFFE): \DDS.cos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4922 (SB_DFFE): \DDS.sin [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4924 (SB_DFFE): \DDS.sin [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4926 (SB_DFFE): \DDS.sin [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4895 (SB_DFFE): \DDS.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4927 (SB_DFFE): \DDS.sin [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4897 (SB_DFFE): \DDS.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4929 (SB_DFFE): \DDS.sin [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4899 (SB_DFFE): \DDS.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4930 (SB_DFFE): \DDS.sin [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4901 (SB_DFFE): \DDS.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4931 (SB_DFFE): \DDS.sin [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4888 (SB_DFFE): \DDS.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4903 (SB_DFFE): \DDS.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4932 (SB_DFFE): \DDS.sin [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4906 (SB_DFFE): \DDS.cos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4933 (SB_DFFE): \DDS.sin [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4908 (SB_DFFE): \DDS.cos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4934 (SB_DFFE): \DDS.sin [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4910 (SB_DFFE): \DDS.cos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4935 (SB_DFFE): \DDS.sin [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4912 (SB_DFFE): \DDS.cos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4889 (SB_DFFE): \DDS.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4914 (SB_DFFE): \DDS.cos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4890 (SB_DFFE): \DDS.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4916 (SB_DFFE): \DDS.cos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4891 (SB_DFFE): \DDS.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4918 (SB_DFFE): \DDS.cos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4904 (SB_DFFE): \DDS.cos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4892 (SB_DFFE): \DDS.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4921 (SB_DFFE): \DDS.sin [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4893 (SB_DFFE): \DDS.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4923 (SB_DFFE): \DDS.sin [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4894 (SB_DFFE): \DDS.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4925 (SB_DFFE): \DDS.sin [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4896 (SB_DFFE): \DDS.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4898 (SB_DFFE): \DDS.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4537 (SB_DFF): \F2SRAM.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4900 (SB_DFFE): \DDS.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4902 (SB_DFFE): \DDS.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4905 (SB_DFFE): \DDS.cos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4907 (SB_DFFE): \DDS.cos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4909 (SB_DFFE): \DDS.cos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4911 (SB_DFFE): \DDS.cos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5194 (SB_DFFE): \Filter1.I0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8375 (SB_DFFE): \UI_inst.gain [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5121 (SB_DFF): \Filter1.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5123 (SB_DFFE): \Filter1.inaddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5124 (SB_DFFE): \Filter1.inaddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5125 (SB_DFFE): \Filter1.inaddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5126 (SB_DFFE): \Filter1.inaddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5127 (SB_DFFE): \Filter1.inaddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5128 (SB_DFFE): \Filter1.inaddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5122 (SB_DFFE): \Filter1.inaddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5129 (SB_DFFE): \Filter1.inaddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5131 (SB_DFF): \Filter1.OUTpipe [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5132 (SB_DFF): \Filter1.OUTpipe [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5133 (SB_DFF): \Filter1.OUTpipe [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5134 (SB_DFF): \Filter1.OUTpipe [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5135 (SB_DFF): \Filter1.OUTpipe [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5136 (SB_DFF): \Filter1.OUTpipe [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5137 (SB_DFF): \Filter1.OUTpipe [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5138 (SB_DFF): \Filter1.OUTpipe [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5139 (SB_DFF): \Filter1.OUTpipe [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5140 (SB_DFF): \Filter1.OUTpipe [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5141 (SB_DFF): \Filter1.OUTpipe [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5142 (SB_DFF): \Filter1.OUTpipe [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5143 (SB_DFF): \Filter1.OUTpipe [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5144 (SB_DFF): \Filter1.OUTpipe [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5145 (SB_DFF): \Filter1.OUTpipe [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5146 (SB_DFF): \Filter1.OUTpipe [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5147 (SB_DFF): \Filter1.OUTpipe [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5148 (SB_DFF): \Filter1.OUTpipe [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5149 (SB_DFF): \Filter1.OUTpipe [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5150 (SB_DFF): \Filter1.OUTpipe [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5151 (SB_DFF): \Filter1.OUTpipe [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5152 (SB_DFF): \Filter1.OUTpipe [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5153 (SB_DFF): \Filter1.OUTpipe [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5154 (SB_DFF): \Filter1.OUTpipe [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5155 (SB_DFF): \Filter1.OUTpipe [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5156 (SB_DFF): \Filter1.OUTpipe [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5170 (SB_DFF): \Filter1.OUTpipe [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5157 (SB_DFF): \Filter1.OUTpipe [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5159 (SB_DFF): \Filter1.OUTpipe [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5160 (SB_DFF): \Filter1.OUTpipe [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5161 (SB_DFF): \Filter1.OUTpipe [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5162 (SB_DFF): \Filter1.OUTpipe [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5163 (SB_DFF): \Filter1.OUTpipe [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5164 (SB_DFF): \Filter1.OUTpipe [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5165 (SB_DFF): \Filter1.OUTpipe [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5166 (SB_DFF): \Filter1.OUTpipe [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5167 (SB_DFF): \Filter1.OUTpipe [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5168 (SB_DFF): \Filter1.OUTpipe [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5169 (SB_DFF): \Filter1.OUTpipe [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4539 (SB_DFF): \F2SRAM.wen = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5171 (SB_DFF): \Filter1.OUTpipe [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5172 (SB_DFF): \Filter1.OUTpipe [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5173 (SB_DFF): \Filter1.OUTpipe [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5174 (SB_DFF): \Filter1.OUTpipe [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5175 (SB_DFF): \Filter1.OUTpipe [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5180 (SB_DFFE): \Filter1.I0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5130 (SB_DFF): \Filter1.OUTpipe [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5178 (SB_DFF): \Filter1.OUTpipe [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5181 (SB_DFFE): \Filter1.I0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5182 (SB_DFFE): \Filter1.I0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5183 (SB_DFFE): \Filter1.I0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5184 (SB_DFFE): \Filter1.I0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5185 (SB_DFFE): \Filter1.I0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5186 (SB_DFFE): \Filter1.I0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5187 (SB_DFFE): \Filter1.I0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5188 (SB_DFFE): \Filter1.I0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5189 (SB_DFFE): \Filter1.I0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4920 (SB_DFFE): \DDS.sin [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5191 (SB_DFFE): \Filter1.I0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5192 (SB_DFFE): \Filter1.I0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5193 (SB_DFFE): \Filter1.I0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5199 (SB_DFFE): \Filter1.I0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5205 (SB_DFFE): \Filter1.I0 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5204 (SB_DFFE): \Filter1.I0 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5197 (SB_DFFE): \Filter1.I0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5200 (SB_DFFE): \Filter1.I0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5201 (SB_DFFE): \Filter1.I0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5202 (SB_DFFE): \Filter1.I0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5198 (SB_DFFE): \Filter1.I0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5196 (SB_DFFE): \Filter1.I0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5211 (SB_DFFE): \Filter1.I0 [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8217 (SB_DFF): \UI_inst.btnt3 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4428 (SB_DFFE): \loadlookup = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5212 (SB_DFFE): \Filter1.I0 [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5213 (SB_DFFE): \Filter1.I0 [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5214 (SB_DFFE): \Filter1.I0 [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5215 (SB_DFFE): \Filter1.I0 [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5216 (SB_DFFE): \Filter1.I0 [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5217 (SB_DFFE): \Filter1.I0 [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5218 (SB_DFFE): \Filter1.I0 [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5219 (SB_DFFE): \Filter1.I0 [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5220 (SB_DFFE): \Filter1.I0 [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5221 (SB_DFFE): \Filter1.I0 [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5222 (SB_DFFE): \Filter1.I0 [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5223 (SB_DFFE): \Filter1.I0 [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5224 (SB_DFFE): \Filter1.I0 [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5225 (SB_DFFE): \Filter1.I0 [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5226 (SB_DFFE): \Filter1.I0 [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5227 (SB_DFFE): \Filter1.I0 [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5229 (SB_DFFE): \Filter1.tickcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5179 (SB_DFFE): \Filter1.I0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5230 (SB_DFFE): \Filter1.tickcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5231 (SB_DFFE): \Filter1.tickcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5233 (SB_DFFE): \Filter1.tickcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5234 (SB_DFFE): \Filter1.tickcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5235 (SB_DFFE): \Filter1.tickcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5236 (SB_DFFE): \Filter1.tickcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5237 (SB_DFFE): \Filter1.tickcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5238 (SB_DFFE): \Filter1.tickcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5228 (SB_DFFE): \Filter1.tickcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5239 (SB_DFF): \Filter1.lasttick = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5232 (SB_DFFE): \Filter1.tickcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6739 (SB_DFFE): \Filter2.inaddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFF): \Filter2.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6740 (SB_DFFE): \Filter2.inaddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6741 (SB_DFFE): \Filter2.inaddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6742 (SB_DFFE): \Filter2.inaddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6744 (SB_DFFE): \Filter2.inaddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6745 (SB_DFFE): \Filter2.inaddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6747 (SB_DFF): \Filter2.OUTpipe [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6738 (SB_DFFE): \Filter2.inaddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6748 (SB_DFF): \Filter2.OUTpipe [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6749 (SB_DFF): \Filter2.OUTpipe [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6750 (SB_DFF): \Filter2.OUTpipe [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6751 (SB_DFF): \Filter2.OUTpipe [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6752 (SB_DFF): \Filter2.OUTpipe [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6753 (SB_DFF): \Filter2.OUTpipe [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6754 (SB_DFF): \Filter2.OUTpipe [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6755 (SB_DFF): \Filter2.OUTpipe [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6756 (SB_DFF): \Filter2.OUTpipe [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6757 (SB_DFF): \Filter2.OUTpipe [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6758 (SB_DFF): \Filter2.OUTpipe [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6759 (SB_DFF): \Filter2.OUTpipe [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6760 (SB_DFF): \Filter2.OUTpipe [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6761 (SB_DFF): \Filter2.OUTpipe [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6762 (SB_DFF): \Filter2.OUTpipe [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6763 (SB_DFF): \Filter2.OUTpipe [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6764 (SB_DFF): \Filter2.OUTpipe [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6765 (SB_DFF): \Filter2.OUTpipe [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6766 (SB_DFF): \Filter2.OUTpipe [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6767 (SB_DFF): \Filter2.OUTpipe [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6768 (SB_DFF): \Filter2.OUTpipe [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6769 (SB_DFF): \Filter2.OUTpipe [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6770 (SB_DFF): \Filter2.OUTpipe [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6771 (SB_DFF): \Filter2.OUTpipe [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6772 (SB_DFF): \Filter2.OUTpipe [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6773 (SB_DFF): \Filter2.OUTpipe [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6774 (SB_DFF): \Filter2.OUTpipe [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6775 (SB_DFF): \Filter2.OUTpipe [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6776 (SB_DFF): \Filter2.OUTpipe [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6777 (SB_DFF): \Filter2.OUTpipe [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6778 (SB_DFF): \Filter2.OUTpipe [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6779 (SB_DFF): \Filter2.OUTpipe [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6780 (SB_DFF): \Filter2.OUTpipe [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6781 (SB_DFF): \Filter2.OUTpipe [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6782 (SB_DFF): \Filter2.OUTpipe [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6783 (SB_DFF): \Filter2.OUTpipe [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6784 (SB_DFF): \Filter2.OUTpipe [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6785 (SB_DFF): \Filter2.OUTpipe [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6786 (SB_DFF): \Filter2.OUTpipe [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6787 (SB_DFF): \Filter2.OUTpipe [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6788 (SB_DFF): \Filter2.OUTpipe [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6789 (SB_DFF): \Filter2.OUTpipe [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6790 (SB_DFF): \Filter2.OUTpipe [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6791 (SB_DFF): \Filter2.OUTpipe [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6792 (SB_DFF): \Filter2.OUTpipe [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6793 (SB_DFF): \Filter2.OUTpipe [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6794 (SB_DFF): \Filter2.OUTpipe [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6796 (SB_DFFE): \Filter2.I0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6746 (SB_DFF): \Filter2.OUTpipe [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6797 (SB_DFFE): \Filter2.I0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6798 (SB_DFFE): \Filter2.I0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6799 (SB_DFFE): \Filter2.I0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6800 (SB_DFFE): \Filter2.I0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6801 (SB_DFFE): \Filter2.I0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6802 (SB_DFFE): \Filter2.I0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6803 (SB_DFFE): \Filter2.I0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6804 (SB_DFFE): \Filter2.I0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6805 (SB_DFFE): \Filter2.I0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6806 (SB_DFFE): \Filter2.I0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6807 (SB_DFFE): \Filter2.I0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6808 (SB_DFFE): \Filter2.I0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6809 (SB_DFFE): \Filter2.I0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6810 (SB_DFFE): \Filter2.I0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6811 (SB_DFFE): \Filter2.I0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6812 (SB_DFFE): \Filter2.I0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6813 (SB_DFFE): \Filter2.I0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6814 (SB_DFFE): \Filter2.I0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6815 (SB_DFFE): \Filter2.I0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6816 (SB_DFFE): \Filter2.I0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6817 (SB_DFFE): \Filter2.I0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6818 (SB_DFFE): \Filter2.I0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6819 (SB_DFFE): \Filter2.I0 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6820 (SB_DFFE): \Filter2.I0 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6821 (SB_DFFE): \Filter2.I0 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6822 (SB_DFFE): \Filter2.I0 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6823 (SB_DFFE): \Filter2.I0 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6824 (SB_DFFE): \Filter2.I0 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6825 (SB_DFFE): \Filter2.I0 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6826 (SB_DFFE): \Filter2.I0 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6827 (SB_DFFE): \Filter2.I0 [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6828 (SB_DFFE): \Filter2.I0 [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6829 (SB_DFFE): \Filter2.I0 [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6830 (SB_DFFE): \Filter2.I0 [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6831 (SB_DFFE): \Filter2.I0 [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6832 (SB_DFFE): \Filter2.I0 [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6833 (SB_DFFE): \Filter2.I0 [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6834 (SB_DFFE): \Filter2.I0 [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6835 (SB_DFFE): \Filter2.I0 [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6836 (SB_DFFE): \Filter2.I0 [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6837 (SB_DFFE): \Filter2.I0 [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6838 (SB_DFFE): \Filter2.I0 [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6839 (SB_DFFE): \Filter2.I0 [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6840 (SB_DFFE): \Filter2.I0 [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6841 (SB_DFFE): \Filter2.I0 [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6842 (SB_DFFE): \Filter2.I0 [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6843 (SB_DFFE): \Filter2.I0 [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6845 (SB_DFFE): \Filter2.tickcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6795 (SB_DFFE): \Filter2.I0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6846 (SB_DFFE): \Filter2.tickcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6847 (SB_DFFE): \Filter2.tickcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6848 (SB_DFFE): \Filter2.tickcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6849 (SB_DFFE): \Filter2.tickcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6850 (SB_DFFE): \Filter2.tickcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6851 (SB_DFFE): \Filter2.tickcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6852 (SB_DFFE): \Filter2.tickcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6853 (SB_DFFE): \Filter2.tickcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6854 (SB_DFFE): \Filter2.tickcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6844 (SB_DFFE): \Filter2.tickcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4253 (SB_DFF): \ADC.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4402 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5177 (SB_DFF): \Filter1.OUTpipe [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4410 (SB_DFF): \cnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5203 (SB_DFFE): \Filter1.I0 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5208 (SB_DFFE): \Filter1.I0 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8218 (SB_DFF): \UI_inst.btnt2 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8219 (SB_DFF): \UI_inst.btnt1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8220 (SB_DFF): \UI_inst.btnt0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8223 (SB_DFFE): \UI_inst.cnt3 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8224 (SB_DFFE): \UI_inst.cnt3 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8225 (SB_DFFE): \UI_inst.cnt3 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8226 (SB_DFFE): \UI_inst.cnt3 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8227 (SB_DFFE): \UI_inst.cnt3 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8228 (SB_DFFE): \UI_inst.cnt3 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8229 (SB_DFFE): \UI_inst.cnt3 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8230 (SB_DFFE): \UI_inst.cnt3 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8231 (SB_DFFE): \UI_inst.cnt3 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8232 (SB_DFFE): \UI_inst.cnt3 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8233 (SB_DFFE): \UI_inst.cnt3 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8234 (SB_DFFE): \UI_inst.cnt3 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8235 (SB_DFFE): \UI_inst.cnt3 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8236 (SB_DFFE): \UI_inst.cnt3 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8237 (SB_DFFE): \UI_inst.cnt3 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8238 (SB_DFFE): \UI_inst.cnt3 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8239 (SB_DFFE): \UI_inst.cnt3 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8240 (SB_DFFE): \UI_inst.cnt3 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8241 (SB_DFFE): \UI_inst.cnt3 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8242 (SB_DFFE): \UI_inst.cnt3 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8243 (SB_DFFE): \UI_inst.cnt3 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8244 (SB_DFFE): \UI_inst.cnt3 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8246 (SB_DFFE): \UI_inst.cnt2 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8221 (SB_DFFE): \UI_inst.cnt3 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8247 (SB_DFFE): \UI_inst.cnt2 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8248 (SB_DFFE): \UI_inst.cnt2 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8249 (SB_DFFE): \UI_inst.cnt2 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8250 (SB_DFFE): \UI_inst.cnt2 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8251 (SB_DFFE): \UI_inst.cnt2 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8252 (SB_DFFE): \UI_inst.cnt2 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8253 (SB_DFFE): \UI_inst.cnt2 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8254 (SB_DFFE): \UI_inst.cnt2 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8255 (SB_DFFE): \UI_inst.cnt2 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8256 (SB_DFFE): \UI_inst.cnt2 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8257 (SB_DFFE): \UI_inst.cnt2 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8258 (SB_DFFE): \UI_inst.cnt2 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8259 (SB_DFFE): \UI_inst.cnt2 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8260 (SB_DFFE): \UI_inst.cnt2 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8261 (SB_DFFE): \UI_inst.cnt2 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8262 (SB_DFFE): \UI_inst.cnt2 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8263 (SB_DFFE): \UI_inst.cnt2 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8264 (SB_DFFE): \UI_inst.cnt2 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8265 (SB_DFFE): \UI_inst.cnt2 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8266 (SB_DFFE): \UI_inst.cnt2 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8267 (SB_DFFE): \UI_inst.cnt2 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8268 (SB_DFFE): \UI_inst.cnt2 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8270 (SB_DFFE): \UI_inst.cnt1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8245 (SB_DFFE): \UI_inst.cnt2 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8271 (SB_DFFE): \UI_inst.cnt1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8272 (SB_DFFE): \UI_inst.cnt1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8273 (SB_DFFE): \UI_inst.cnt1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8274 (SB_DFFE): \UI_inst.cnt1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8275 (SB_DFFE): \UI_inst.cnt1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8276 (SB_DFFE): \UI_inst.cnt1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8277 (SB_DFFE): \UI_inst.cnt1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8278 (SB_DFFE): \UI_inst.cnt1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8279 (SB_DFFE): \UI_inst.cnt1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8280 (SB_DFFE): \UI_inst.cnt1 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8281 (SB_DFFE): \UI_inst.cnt1 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8282 (SB_DFFE): \UI_inst.cnt1 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8283 (SB_DFFE): \UI_inst.cnt1 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8284 (SB_DFFE): \UI_inst.cnt1 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8285 (SB_DFFE): \UI_inst.cnt1 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8286 (SB_DFFE): \UI_inst.cnt1 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8287 (SB_DFFE): \UI_inst.cnt1 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8288 (SB_DFFE): \UI_inst.cnt1 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8289 (SB_DFFE): \UI_inst.cnt1 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8290 (SB_DFFE): \UI_inst.cnt1 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8291 (SB_DFFE): \UI_inst.cnt1 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8292 (SB_DFFE): \UI_inst.cnt1 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8294 (SB_DFFE): \UI_inst.cnt0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8269 (SB_DFFE): \UI_inst.cnt1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8295 (SB_DFFE): \UI_inst.cnt0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8296 (SB_DFFE): \UI_inst.cnt0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8297 (SB_DFFE): \UI_inst.cnt0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8298 (SB_DFFE): \UI_inst.cnt0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8299 (SB_DFFE): \UI_inst.cnt0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8300 (SB_DFFE): \UI_inst.cnt0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8301 (SB_DFFE): \UI_inst.cnt0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8302 (SB_DFFE): \UI_inst.cnt0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8303 (SB_DFFE): \UI_inst.cnt0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8304 (SB_DFFE): \UI_inst.cnt0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8305 (SB_DFFE): \UI_inst.cnt0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8306 (SB_DFFE): \UI_inst.cnt0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8307 (SB_DFFE): \UI_inst.cnt0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8308 (SB_DFFE): \UI_inst.cnt0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8309 (SB_DFFE): \UI_inst.cnt0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8310 (SB_DFFE): \UI_inst.cnt0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8311 (SB_DFFE): \UI_inst.cnt0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8312 (SB_DFFE): \UI_inst.cnt0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8313 (SB_DFFE): \UI_inst.cnt0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8314 (SB_DFFE): \UI_inst.cnt0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8315 (SB_DFFE): \UI_inst.cnt0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8316 (SB_DFFE): \UI_inst.cnt0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8318 (SB_DFF): \UI_inst.BP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8293 (SB_DFFE): \UI_inst.cnt0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8319 (SB_DFF): \UI_inst.BP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8320 (SB_DFF): \UI_inst.BP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8323 (SB_DFF): \UI_inst.disppos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8317 (SB_DFF): \UI_inst.BP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8321 (SB_DFF): \UI_inst.dispdone = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8324 (SB_DFF): \UI_inst.disppos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8325 (SB_DFF): \UI_inst.disppos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8326 (SB_DFF): \UI_inst.disppos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8330 (SB_DFFE): \UI_inst.datS [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8322 (SB_DFF): \UI_inst.disppos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8327 (SB_DFF): \UI_inst.repaintS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8328 (SB_DFF): \UI_inst.weS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8331 (SB_DFFE): \UI_inst.datS [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8332 (SB_DFFE): \UI_inst.datS [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8333 (SB_DFFE): \UI_inst.datS [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8334 (SB_DFFE): \UI_inst.datS [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8335 (SB_DFFE): \UI_inst.datS [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8336 (SB_DFFE): \UI_inst.datS [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8338 (SB_DFFE): \UI_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8329 (SB_DFFE): \UI_inst.datS [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8339 (SB_DFFE): \UI_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8340 (SB_DFFE): \UI_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8343 (SB_DFFE): \UI_inst.refampl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8337 (SB_DFFE): \UI_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8341 (SB_DFF): \UI_inst.update = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8345 (SB_DFFE): \UI_inst.reffreq [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8342 (SB_DFFE): \UI_inst.refampl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8346 (SB_DFFE): \UI_inst.reffreq [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8348 (SB_DFF): \UI_inst.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8344 (SB_DFFE): \UI_inst.reffreq [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8349 (SB_DFF): \UI_inst.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8350 (SB_DFF): \UI_inst.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8351 (SB_DFF): \UI_inst.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8352 (SB_DFF): \UI_inst.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8353 (SB_DFF): \UI_inst.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8354 (SB_DFF): \UI_inst.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8355 (SB_DFF): \UI_inst.count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8356 (SB_DFF): \UI_inst.count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8357 (SB_DFF): \UI_inst.count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8358 (SB_DFF): \UI_inst.count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8359 (SB_DFF): \UI_inst.count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8360 (SB_DFF): \UI_inst.count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8361 (SB_DFF): \UI_inst.count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8362 (SB_DFF): \UI_inst.count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8363 (SB_DFF): \UI_inst.count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8364 (SB_DFF): \UI_inst.count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8365 (SB_DFF): \UI_inst.count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8366 (SB_DFF): \UI_inst.count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8367 (SB_DFF): \UI_inst.count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8368 (SB_DFF): \UI_inst.count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8369 (SB_DFF): \UI_inst.count [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8373 (SB_DFFE): \UI_inst.TC [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8347 (SB_DFF): \UI_inst.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8370 (SB_DFFE): \UI_inst.ismagphase = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8371 (SB_DFFE): \UI_inst.refIO = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8374 (SB_DFFE): \UI_inst.TC [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8376 (SB_DFFE): \UI_inst.gain [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8372 (SB_DFFE): \UI_inst.TC [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6743 (SB_DFFE): \Filter2.inaddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5206 (SB_DFFE): \Filter1.I0 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9782 (SB_DFF): \OSC.phaseword [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9783 (SB_DFF): \OSC.phaseword [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9784 (SB_DFF): \OSC.phaseword [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9785 (SB_DFF): \OSC.phaseword [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9787 (SB_DFF): \OSC.phaseword [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5158 (SB_DFF): \Filter1.OUTpipe [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9788 (SB_DFF): \OSC.phaseword [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9790 (SB_DFF): \OSC.phaseword [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9791 (SB_DFF): \OSC.phaseword [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9792 (SB_DFF): \OSC.phaseword [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9793 (SB_DFF): \OSC.phaseword [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9794 (SB_DFF): \OSC.phaseword [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9795 (SB_DFF): \OSC.phaseword [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9796 (SB_DFF): \OSC.phaseword [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9797 (SB_DFF): \OSC.phaseword [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9798 (SB_DFF): \OSC.phaseword [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9799 (SB_DFF): \OSC.phaseword [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9801 (SB_DFF): \OSC.phaseword [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9802 (SB_DFF): \OSC.phaseword [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9803 (SB_DFF): \OSC.phaseword [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9804 (SB_DFF): \OSC.phaseword [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9789 (SB_DFF): \OSC.phaseword [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9805 (SB_DFF): \OSC.phaseword [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9808 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9809 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9810 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9811 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9812 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9813 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9814 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9815 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9816 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9817 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9818 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9819 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9820 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9821 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9822 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9823 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9824 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9825 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9826 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9827 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9828 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9829 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9830 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9831 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9832 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9833 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9834 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9835 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9836 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9837 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9838 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5190 (SB_DFFE): \Filter1.I0 [11] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10556 (SB_DFFR): \UI_inst.LCD.main_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10558 (SB_DFFR): \UI_inst.LCD.main_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10559 (SB_DFFR): \UI_inst.LCD.main_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10560 (SB_DFFR): \UI_inst.LCD.main_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10561 (SB_DFFR): \UI_inst.LCD.main_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10562 (SB_DFFR): \UI_inst.LCD.main_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10563 (SB_DFFR): \UI_inst.LCD.main_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10564 (SB_DFFR): \UI_inst.LCD.main_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10565 (SB_DFFR): \UI_inst.LCD.main_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10567 (SB_DFFR): \UI_inst.LCD.main_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10569 (SB_DFFR): \UI_inst.LCD.main_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10571 (SB_DFFR): \UI_inst.LCD.main_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10576 (SB_DFFE): \UI_inst.LCD.SF_D1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10579 (SB_DFFE): \UI_inst.LCD.SF_D1 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10581 (SB_DFFER): \UI_inst.LCD.display_state [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10582 (SB_DFFER): \UI_inst.LCD.display_state [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10583 (SB_DFFER): \UI_inst.LCD.display_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10651 (SB_DFFE): \UI_inst.LCD.tx_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10650 (SB_DFFE): \UI_inst.LCD.SF_D0 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10653 (SB_DFFES): \UI_inst.LCD.tx_state [1] = 1

22.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$10190 (A=$auto$simplemap.cc:309:simplemap_lut$34215, B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10001 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10191 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [1], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10002 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10192 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [2], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10003 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10193 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [3], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10004 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10194 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [4], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10005 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10195 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [5], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10006 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10196 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [6], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10007 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10198 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [8], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10009 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10199 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [9], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10010 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10200 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [10], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10011 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10201 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [11], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10012 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10202 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [12], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10013 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10203 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [13], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10014 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10204 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [14], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10015 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10205 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [15], B=1'0, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10016 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10197 (A=$techmap\PLL.$sub$../pll.v:44$541_Y [7], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$540_Y) into $auto$simplemap.cc:420:simplemap_dff$10008 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10136 (A=$techmap\PLL.$add$../pll.v:51$548_Y [1], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10055 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10137 (A=$techmap\PLL.$add$../pll.v:51$548_Y [2], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10056 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10138 (A=$techmap\PLL.$add$../pll.v:51$548_Y [3], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10057 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10139 (A=$techmap\PLL.$add$../pll.v:51$548_Y [4], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10058 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10140 (A=$techmap\PLL.$add$../pll.v:51$548_Y [5], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10059 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10141 (A=$techmap\PLL.$add$../pll.v:51$548_Y [6], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10060 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10142 (A=$techmap\PLL.$add$../pll.v:51$548_Y [7], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10061 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10143 (A=$techmap\PLL.$add$../pll.v:51$548_Y [8], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10062 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10144 (A=$techmap\PLL.$add$../pll.v:51$548_Y [9], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10063 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10145 (A=$techmap\PLL.$add$../pll.v:51$548_Y [10], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10064 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10146 (A=$techmap\PLL.$add$../pll.v:51$548_Y [11], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10065 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10147 (A=$techmap\PLL.$add$../pll.v:51$548_Y [12], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10066 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10148 (A=$techmap\PLL.$add$../pll.v:51$548_Y [13], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10067 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10149 (A=$techmap\PLL.$add$../pll.v:51$548_Y [14], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10068 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10150 (A=$techmap\PLL.$add$../pll.v:51$548_Y [15], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10069 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10151 (A=$techmap\PLL.$add$../pll.v:51$548_Y [16], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10070 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10152 (A=$techmap\PLL.$add$../pll.v:51$548_Y [17], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10071 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10153 (A=$techmap\PLL.$add$../pll.v:51$548_Y [18], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10072 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10154 (A=$techmap\PLL.$add$../pll.v:51$548_Y [19], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10073 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10155 (A=$techmap\PLL.$add$../pll.v:51$548_Y [20], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10074 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10156 (A=$techmap\PLL.$add$../pll.v:51$548_Y [21], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10075 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10157 (A=$techmap\PLL.$add$../pll.v:51$548_Y [22], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10076 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10158 (A=$techmap\PLL.$add$../pll.v:51$548_Y [23], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10077 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10159 (A=$techmap\PLL.$add$../pll.v:51$548_Y [24], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10078 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10160 (A=$techmap\PLL.$add$../pll.v:51$548_Y [25], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10079 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10161 (A=$techmap\PLL.$add$../pll.v:51$548_Y [26], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10080 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10162 (A=$techmap\PLL.$add$../pll.v:51$548_Y [27], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10081 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10163 (A=$techmap\PLL.$add$../pll.v:51$548_Y [28], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10082 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10164 (A=$techmap\PLL.$add$../pll.v:51$548_Y [29], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10083 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10165 (A=$techmap\PLL.$add$../pll.v:51$548_Y [30], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10084 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10166 (A=$techmap\PLL.$add$../pll.v:51$548_Y [31], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10085 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10135 (A=$techmap\PLL.$add$../pll.v:51$548_Y [0], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$10054 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10337 (A=\F2SRAM.SPI_READER.fsm_state_next [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10278 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10338 (A=\F2SRAM.SPI_READER.fsm_state_next [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10279 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10371 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10281 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10372 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10282 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10373 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10283 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10374 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10284 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10375 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10285 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10377 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10287 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10378 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10288 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10379 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10289 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10380 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10290 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10381 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10291 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10382 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10292 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10383 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10293 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10384 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10294 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10385 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10295 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10386 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10296 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10387 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10297 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10388 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10298 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10389 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10299 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10390 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10300 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10391 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10301 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10392 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10302 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10393 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10303 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10394 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [24], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10304 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10395 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [25], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10305 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10396 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10306 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10397 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [27], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10307 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10398 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10308 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10399 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [29], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10309 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10400 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10310 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10370 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10280 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10444 (A=$techmap\F2SRAM.SPI_READER.$eq$../spi_flash_reader.v:163$496_Y, B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10312 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10401 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [31], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10311 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10435 (A=$techmap\F2SRAM.SPI_READER.$procmux$1227_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10314 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10434 (A=$techmap\F2SRAM.SPI_READER.$procmux$1227_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10313 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10436 (A=$techmap\F2SRAM.SPI_READER.$procmux$1227_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10315 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10446 (A=$auto$alumacc.cc:485:replace_alu$3745.lcu.p [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10316 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10447 (A=$techmap$auto$alumacc.cc:485:replace_alu$3745.$xor$/home/norman/anaconda3/bin/../share/yosys/techmap.v:263$8598_Y [1], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10317 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10451 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [1], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10319 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10452 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [2], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10320 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10453 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [3], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10321 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10454 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [4], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10322 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10455 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [5], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10323 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10456 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [6], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10324 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10457 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [7], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10325 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10458 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [8], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10326 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10459 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [9], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10327 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10460 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [10], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10328 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10461 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [11], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10329 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10462 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [12], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10330 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10463 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [13], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10331 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10464 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [14], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10332 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10465 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [15], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10333 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10466 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [16], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10334 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10450 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10318 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13719 (A=$auto$rtlil.cc:1895:Xor$3582, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13611 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13718 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13613 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13684 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13616 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13685 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13617 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13686 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13618 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13687 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13619 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13688 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13620 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13689 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13621 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13690 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13622 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13691 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13623 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13692 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13624 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13693 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13625 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13694 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13626 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13695 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13627 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13696 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13628 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13697 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13629 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13698 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13630 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13683 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13615 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13699 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13631 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13650 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13633 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13651 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13634 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13652 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13653 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13636 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13654 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13655 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13656 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13657 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13658 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13659 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13660 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13661 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13662 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13663 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13664 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13665 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13848 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13729 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13849 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13730 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13852 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13733 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13853 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13734 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13854 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13735 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13855 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13736 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13856 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13737 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13857 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13738 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13858 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13739 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13859 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13740 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13851 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13732 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13860 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13741 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13811 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13743 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13812 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13744 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13813 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13745 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13814 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13746 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13815 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13747 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13816 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13748 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13817 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13749 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13818 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13750 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13819 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13751 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13820 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13752 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13821 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13753 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13822 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13754 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13823 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13755 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13824 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13756 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13825 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13757 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13810 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13742 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13826 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13758 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13777 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13760 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13778 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13761 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13779 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13762 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13780 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13763 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13781 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13764 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13782 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13765 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13783 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13766 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13784 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13767 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13785 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13768 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13786 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13769 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13787 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13770 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13788 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13771 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13789 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13772 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13790 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13773 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13791 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13774 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13776 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13759 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13792 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13775 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14003 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13884 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14005 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13886 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14006 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13887 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14007 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13888 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14002 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13883 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14008 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13889 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14010 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13891 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14011 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13892 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14012 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13893 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14013 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13894 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14014 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13895 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14015 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13896 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14016 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13897 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14017 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13898 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14009 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13890 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14018 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13899 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13969 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13901 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13970 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13902 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13971 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13903 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13972 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13904 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13973 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13905 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13974 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13906 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13975 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13907 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13976 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13908 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13977 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13909 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13978 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13910 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13979 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13911 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13980 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13912 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13981 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13913 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13982 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13914 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13983 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13915 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13968 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13900 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13984 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13916 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13935 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13918 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13936 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13919 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13937 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13920 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13938 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13921 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13939 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13922 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13940 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13923 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13941 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13924 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13942 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13925 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13943 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13926 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13944 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13927 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13945 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13928 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13946 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13929 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13947 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13930 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13948 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13931 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13949 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13932 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13934 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13917 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13950 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13933 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14159 (A=\CORDIC.cordicCORE.U2.z_1 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14040 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14161 (A=\CORDIC.cordicCORE.U2.z_1 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14042 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14162 (A=\CORDIC.cordicCORE.U2.z_1 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14043 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14163 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14044 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14158 (A=\CORDIC.cordicCORE.U2.z_1 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14039 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14164 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14045 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14166 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14047 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14167 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14048 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14168 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14049 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14169 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14050 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14170 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14051 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14171 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14052 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14172 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14053 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14173 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14054 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14165 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14046 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14174 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14055 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14125 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14057 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14126 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14058 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14127 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14059 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14128 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14060 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14129 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14061 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14130 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14062 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14131 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14063 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14132 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14064 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14133 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14065 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14134 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14066 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14135 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14067 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14136 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14068 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14137 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14069 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14138 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14070 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14139 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14071 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14124 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14056 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14140 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14072 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14091 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14074 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14092 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14075 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14093 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14076 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14094 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14077 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14095 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14078 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14096 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14079 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14097 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14080 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14098 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14081 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14099 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14082 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14100 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14083 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14101 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14084 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14102 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14085 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14103 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14086 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14104 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14087 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14105 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14088 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14090 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14073 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14106 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14089 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14316 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14197 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14317 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14198 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14318 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14199 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14319 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14200 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14320 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14201 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14315 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14321 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14323 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14324 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14325 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14326 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14327 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14328 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14329 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14330 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14322 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14331 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14282 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14283 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14284 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14285 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14286 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14287 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14288 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14289 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14290 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14291 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14292 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14293 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14225 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14294 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14226 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14295 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14227 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14296 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14228 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14281 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14297 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14229 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14248 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14231 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14249 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14232 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14250 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14233 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14251 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14234 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14252 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14235 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14253 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14236 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14254 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14237 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14255 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14238 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14256 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14239 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14257 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14258 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14241 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14259 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14242 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14260 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14243 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14261 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14262 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14245 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14247 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14230 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14263 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14246 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14475 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14356 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14476 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14357 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14477 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14358 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14478 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14359 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14479 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14360 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14474 (A=\CORDIC.cordicCORE.U4.z_1 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14355 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14480 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14361 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14482 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14363 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14483 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14364 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14484 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14365 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14485 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14366 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14486 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14367 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14487 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14368 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14488 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14369 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14489 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14370 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14481 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14362 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14490 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14371 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14441 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14373 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14442 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14374 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14443 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14375 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14444 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14376 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14445 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14377 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14446 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14378 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14447 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14379 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14448 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14380 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14449 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14381 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14450 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14382 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14451 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14383 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14452 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14384 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14453 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14385 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14454 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14386 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14455 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14387 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14440 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14372 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14456 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14388 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14407 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14390 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14408 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14391 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14409 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14392 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14410 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14393 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14411 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14394 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14412 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14395 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14413 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14396 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14414 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14397 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14415 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14398 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14416 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14399 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14417 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14400 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14418 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14401 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14419 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14402 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14420 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14403 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14421 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14404 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14406 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14389 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14422 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14405 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14630 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14511 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14631 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14512 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14632 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14513 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14633 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14514 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14634 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14515 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14629 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14510 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14635 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14516 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14637 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14518 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14638 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14519 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14639 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14520 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14640 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14521 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14641 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14522 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14642 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14523 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14643 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14524 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14644 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14525 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14636 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14517 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14645 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14526 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14596 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14597 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14598 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14599 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14600 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14601 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14602 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14603 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14604 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14605 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14606 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14538 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14607 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14608 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14609 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14610 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14595 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14611 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14562 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14563 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14564 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14565 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14566 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14567 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14568 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14569 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14570 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14571 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14572 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14573 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14574 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14575 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14576 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14561 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14577 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14741 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14673 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14742 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14674 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14743 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14744 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14676 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14745 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14677 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14740 (A=\CORDIC.cordicCORE.U6.z_1 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14672 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14746 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14678 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14748 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14680 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14749 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14681 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14750 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14682 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14751 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14683 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14752 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14684 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14753 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14685 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14754 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14686 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14755 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14687 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14756 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14688 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14707 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14690 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14708 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14691 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14709 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14692 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14710 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14693 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14711 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14694 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14712 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14695 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14713 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14696 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14714 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14697 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14715 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14698 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14716 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14699 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14717 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14700 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14718 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14701 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14719 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14702 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14720 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14703 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14721 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14704 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14706 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14689 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14722 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14705 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4319 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [3], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4320 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [4], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4317 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [1], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4254 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4321 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [5], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4322 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [6], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4323 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [7], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8522 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5078 (A=\DDS.iscos, B=1'0, S=\DDS.islast) into $auto$simplemap.cc:420:simplemap_dff$4885 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4318 (A=1'0, B=$auto$wreduce.cc:460:run$3465 [2], S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5077 (A=$techmap\DDS.$logic_and$../dds.v:25$527_Y, B=1'0, S=\DDS.iscos) into $auto$simplemap.cc:420:simplemap_dff$4887 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5423 (A=1'0, B=$auto$rtlil.cc:1867:ReduceOr$3526, S=$techmap\Filter1.$logic_and$../filter/CIC.v:39$696_Y) into $auto$simplemap.cc:420:simplemap_dff$5121 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4769 (A=1'0, B=$techmap\F2SRAM.$procmux$1274_Y, S=\F2SRAM.busy) into $auto$simplemap.cc:420:simplemap_dff$4539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13649 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13632 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10376 (A=$techmap\F2SRAM.SPI_READER.$procmux$1233_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10286 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8578 (A=$techmap\UI_inst.$procmux$3082_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5348 (A=$auto$wreduce.cc:460:run$3470 [1], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5349 (A=$auto$wreduce.cc:460:run$3470 [2], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5350 (A=$auto$wreduce.cc:460:run$3470 [3], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5352 (A=$auto$wreduce.cc:460:run$3470 [5], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5353 (A=$auto$wreduce.cc:460:run$3470 [6], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5354 (A=$auto$wreduce.cc:460:run$3470 [7], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5355 (A=$auto$wreduce.cc:460:run$3470 [8], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5356 (A=$auto$wreduce.cc:460:run$3470 [9], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5357 (A=$auto$wreduce.cc:460:run$3470 [10], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5347 (A=$auto$simplemap.cc:309:simplemap_lut$34082, B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14747 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14679 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5351 (A=$auto$wreduce.cc:460:run$3470 [4], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3526) into $auto$simplemap.cc:420:simplemap_dff$5232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7038 (A=1'0, B=$auto$rtlil.cc:1867:ReduceOr$3517, S=$techmap\Filter1.$logic_and$../filter/CIC.v:39$696_Y) into $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6963 (A=$auto$wreduce.cc:460:run$3471 [1], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6845 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6964 (A=$auto$wreduce.cc:460:run$3471 [2], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6846 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6965 (A=$auto$wreduce.cc:460:run$3471 [3], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6847 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6966 (A=$auto$wreduce.cc:460:run$3471 [4], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6848 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6967 (A=$auto$wreduce.cc:460:run$3471 [5], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6849 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6968 (A=$auto$wreduce.cc:460:run$3471 [6], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6850 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6969 (A=$auto$wreduce.cc:460:run$3471 [7], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6851 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6970 (A=$auto$wreduce.cc:460:run$3471 [8], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6852 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6971 (A=$auto$wreduce.cc:460:run$3471 [9], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6853 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6972 (A=$auto$wreduce.cc:460:run$3471 [10], B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6854 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6962 (A=$auto$simplemap.cc:309:simplemap_lut$34177, B=1'0, S=$auto$rtlil.cc:1867:ReduceOr$3517) into $auto$simplemap.cc:420:simplemap_dff$6844 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4316 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$33455, S=$auto$simplemap.cc:256:simplemap_eqne$4334) into $auto$simplemap.cc:420:simplemap_dff$4253 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7954 (A=$techmap\CORDIC.$procmux$3122_Y [0], B=1'1, S=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:49$116_Y) into $auto$simplemap.cc:420:simplemap_dff$7952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7955 (A=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:30$85_Y, B=1'1, S=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:49$116_Y) into $auto$simplemap.cc:420:simplemap_dff$7953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8575 (A=$techmap\UI_inst.$procmux$3088_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8572 (A=$techmap\UI_inst.$procmux$3094_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8569 (A=$techmap\UI_inst.$procmux$3100_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8523 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8524 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8525 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8526 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8527 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8528 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8529 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8530 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8531 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8532 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8533 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8534 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8535 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8536 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8537 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8538 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8539 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8540 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8541 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8241 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8542 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8543 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8544 (A=$techmap\UI_inst.$add$../UI/UI.v:112$148_Y [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8474 (A=$auto$wreduce.cc:460:run$3473 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8521 (A=$auto$simplemap.cc:309:simplemap_lut$34253, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8475 (A=$auto$wreduce.cc:460:run$3473 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8476 (A=$auto$wreduce.cc:460:run$3473 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8477 (A=$auto$wreduce.cc:460:run$3473 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8478 (A=$auto$wreduce.cc:460:run$3473 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8250 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8479 (A=$auto$wreduce.cc:460:run$3473 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8251 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8480 (A=$auto$wreduce.cc:460:run$3473 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8252 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8481 (A=$auto$wreduce.cc:460:run$3473 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8482 (A=$auto$wreduce.cc:460:run$3473 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8254 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8483 (A=$auto$wreduce.cc:460:run$3473 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8255 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8484 (A=$auto$wreduce.cc:460:run$3473 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8256 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8485 (A=$auto$wreduce.cc:460:run$3473 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8257 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8486 (A=$auto$wreduce.cc:460:run$3473 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8258 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8487 (A=$auto$wreduce.cc:460:run$3473 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8259 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8488 (A=$auto$wreduce.cc:460:run$3473 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8260 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8489 (A=$auto$wreduce.cc:460:run$3473 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8261 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8490 (A=$auto$wreduce.cc:460:run$3473 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8262 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8491 (A=$auto$wreduce.cc:460:run$3473 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8263 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8492 (A=$auto$wreduce.cc:460:run$3473 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8264 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8493 (A=$auto$wreduce.cc:460:run$3473 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8265 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8494 (A=$auto$wreduce.cc:460:run$3473 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8266 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8495 (A=$auto$wreduce.cc:460:run$3473 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8267 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8496 (A=$auto$wreduce.cc:460:run$3473 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8268 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8426 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8270 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8473 (A=$auto$simplemap.cc:309:simplemap_lut$34234, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8427 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8271 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8428 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8272 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8429 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8273 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8430 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8274 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8431 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8275 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8432 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8276 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8433 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8277 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8434 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8278 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8435 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8279 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8436 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8280 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8437 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8281 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8438 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8282 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8439 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8283 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8440 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8284 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8441 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8285 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8442 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8286 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8443 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8287 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8444 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8288 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8445 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8289 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8446 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8290 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8447 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8291 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8448 (A=$techmap\UI_inst.$add$../UI/UI.v:92$140_Y [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8292 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8378 (A=$auto$wreduce.cc:460:run$3474 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8294 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8425 (A=$auto$simplemap.cc:309:simplemap_lut$34367, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8269 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8379 (A=$auto$wreduce.cc:460:run$3474 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8295 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8380 (A=$auto$wreduce.cc:460:run$3474 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8296 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8381 (A=$auto$wreduce.cc:460:run$3474 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8297 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8382 (A=$auto$wreduce.cc:460:run$3474 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8298 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8383 (A=$auto$wreduce.cc:460:run$3474 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8299 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8384 (A=$auto$wreduce.cc:460:run$3474 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8300 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8385 (A=$auto$wreduce.cc:460:run$3474 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8301 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8386 (A=$auto$wreduce.cc:460:run$3474 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8302 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8387 (A=$auto$wreduce.cc:460:run$3474 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8303 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8388 (A=$auto$wreduce.cc:460:run$3474 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8304 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8389 (A=$auto$wreduce.cc:460:run$3474 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8305 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8390 (A=$auto$wreduce.cc:460:run$3474 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8306 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8391 (A=$auto$wreduce.cc:460:run$3474 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8307 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8392 (A=$auto$wreduce.cc:460:run$3474 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8308 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8393 (A=$auto$wreduce.cc:460:run$3474 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8309 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8394 (A=$auto$wreduce.cc:460:run$3474 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8310 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8395 (A=$auto$wreduce.cc:460:run$3474 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8311 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8396 (A=$auto$wreduce.cc:460:run$3474 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8312 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8397 (A=$auto$wreduce.cc:460:run$3474 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8313 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8398 (A=$auto$wreduce.cc:460:run$3474 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8314 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8399 (A=$auto$wreduce.cc:460:run$3474 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8315 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8400 (A=$auto$wreduce.cc:460:run$3474 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8316 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8377 (A=$auto$simplemap.cc:309:simplemap_lut$34348, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8293 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14846 (A=1'0, B=$techmap$techmap\UI_inst.$procmux$2824.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9379_Y, S=$techmap$techmap\UI_inst.$procmux$2824.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9375_Y) into $auto$simplemap.cc:420:simplemap_dff$8327 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18418 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18120 [2], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9782 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18419 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9964_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9783 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18420 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$18147 [1], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9784 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18421 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9966_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9785 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18423 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9968_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18424 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18205 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18426 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$18084 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18427 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9972_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9791 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18422 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9967_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18428 (A=1'1, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9973_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9793 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18429 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9974_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9794 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18430 (A=1'1, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9975_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18431 (A=1'1, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9976_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18432 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$18133 [1], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9797 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18433 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9978_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9798 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18434 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9979_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9799 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18436 (A=1'0, B=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9981_Y, S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9801 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18437 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18088 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9802 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18435 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18106 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9803 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18438 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18075 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9804 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18425 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18196 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9789 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18439 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18066 [0], S=$techmap$techmap\OSC.$procmux$3145.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9954_Y) into $auto$simplemap.cc:420:simplemap_dff$9805 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10467 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$504_Y [17], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10335 (SB_DFFE).

22.40. Executing ICE40_OPT pass (performing simple optimizations).

22.40.1. Running ICE40 specific optimizations.

22.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 818 cells.

22.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

22.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 624 unused cells and 8013 unused wires.

22.40.6. Rerunning OPT passes. (Removed registers in this run.)

22.40.7. Running ICE40 specific optimizations.

22.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

22.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.40.12. Rerunning OPT passes. (Removed registers in this run.)

22.40.13. Running ICE40 specific optimizations.

22.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

22.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.40.18. Finished OPT passes. (There is nothing left to do.)

22.41. Executing TECHMAP pass (map to technology primitives).

22.41.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

22.41.2. Continuing TECHMAP pass.
No more expansions possible.

22.42. Executing ABC pass (technology mapping using ABC).

22.42.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 5792 gates and 7920 wires to a netlist network with 2126 inputs and 1463 outputs.

22.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1950.
ABC: Participating nodes from both networks       =    4315.
ABC: Participating nodes from the first network   =    1999. (  83.96 % of nodes)
ABC: Participating nodes from the second network  =    2316. (  97.27 % of nodes)
ABC: Node pairs (any polarity)                    =    1999. (  83.96 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1646. (  69.13 % of names can be moved)
ABC: Total runtime =     0.11 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

22.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2375
ABC RESULTS:        internal signals:     4331
ABC RESULTS:           input signals:     2126
ABC RESULTS:          output signals:     1463
Removing temp directory.

22.43. Executing ICE40_WRAPCARRY pass (wrap carries).

22.44. Executing TECHMAP pass (map to technology primitives).

22.44.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

22.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 291 unused cells and 3314 unused wires.

22.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3789
  1-LUT              423
  2-LUT              348
  3-LUT             2364
  4-LUT              654
  with \SB_CARRY    1333

Eliminating LUTs.
Number of LUTs:     3788
  1-LUT              422
  2-LUT              348
  3-LUT             2364
  4-LUT              654
  with \SB_CARRY    1333

Combining LUTs.
Number of LUTs:     3732
  1-LUT              411
  2-LUT              320
  3-LUT             2315
  4-LUT              686
  with \SB_CARRY    1333

Eliminated 1 LUTs.
Combined 56 LUTs.

22.46. Executing TECHMAP pass (map to technology primitives).

22.46.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

22.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010110101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010110100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001110101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010111000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000110000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110010101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111011000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001011010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110001010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101011010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011011111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001100110011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001010100 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 7518 unused wires.

22.47. Executing AUTONAME pass.
Renamed 119025 objects in module top (54 iterations).

22.48. Executing HIERARCHY pass (managing design hierarchy).

22.48.1. Analyzing design hierarchy..
Top module:  \top

22.48.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

22.49. Printing statistics.

=== top ===

   Number of wires:               3677
   Number of wire bits:          11407
   Number of public wires:        3677
   Number of public wire bits:   11407
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               6794
     SB_CARRY                     1514
     SB_DFF                        339
     SB_DFFE                       517
     SB_DFFER                        8
     SB_DFFESR                     129
     SB_DFFESS                      31
     SB_DFFN                        16
     SB_DFFR                        14
     SB_DFFSR                      458
     SB_DFFSS                       17
     SB_IO                           4
     SB_LUT4                      3732
     SB_MAC16                        2
     SB_RAM40_4K                     9
     SB_SPRAM256KA                   4

22.50. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

22.51. Executing JSON backend.

Warnings: 54 unique messages, 55 total
End of script. Logfile hash: d2d6c10ec5, CPU: user 22.53s system 0.13s, MEM: 145.78 MB peak
Yosys 0.9+1706 (git sha1 81e6b040, x86_64-conda_cos6-linux-gnu-gcc 1.23.0.449-a04d0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/tmp/really-long-path/conda/conda-bld/yosys_1579927201458/work=/usr/local/src/conda/yosys-0.9_3096_g81e6b040 -fdebug-prefix-map=/home/norman/anaconda3=/usr/local/src/conda-prefix -fPIC -Os)
Time spent: 29% 37x opt_expr (6 sec), 21% 34x opt_clean (4 sec), 20% 30x opt_merge (4 sec), ...
