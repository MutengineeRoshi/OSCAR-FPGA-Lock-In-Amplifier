
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+1706 (git sha1 81e6b040, x86_64-conda_cos6-linux-gnu-gcc 1.23.0.449-a04d0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/tmp/really-long-path/conda/conda-bld/yosys_1579927201458/work=/usr/local/src/conda/yosys-0.9_3096_g81e6b040 -fdebug-prefix-map=/home/norman/anaconda3=/usr/local/src/conda-prefix -fPIC -Os)


-- Parsing `TOP_V1.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: TOP_V1.v
Parsing Verilog input from `TOP_V1.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `../fibonacci7.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ../fibonacci7.v
Parsing Verilog input from `../fibonacci7.v' to AST representation.
Generating RTLIL representation for module `\fibonacci7'.
Warning: wire '\fib' is assigned in a block at ../fibonacci7.v:11.
Warning: wire '\fib' is assigned in a block at ../fibonacci7.v:12.
../fibonacci7.v:12: Warning: Range select out of bounds on signal `\fib': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Parsing `../fibonacci15.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: ../fibonacci15.v
Parsing Verilog input from `../fibonacci15.v' to AST representation.
Generating RTLIL representation for module `\fibonacci15'.
Warning: wire '\fib' is assigned in a block at ../fibonacci15.v:11.
Warning: wire '\fib' is assigned in a block at ../fibonacci15.v:12.
../fibonacci15.v:12: Warning: Range select out of bounds on signal `\fib': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Parsing `../oscillator.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: ../oscillator.v
Parsing Verilog input from `../oscillator.v' to AST representation.
Generating RTLIL representation for module `\oscillator'.
Successfully finished Verilog frontend.

-- Parsing `../adc_host.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ../adc_host.v
Parsing Verilog input from `../adc_host.v' to AST representation.
Generating RTLIL representation for module `\adc_host'.
Successfully finished Verilog frontend.

-- Parsing `../filter/RIIR.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: ../filter/RIIR.v
Parsing Verilog input from `../filter/RIIR.v' to AST representation.
Warning: Found one of those horrible `(synopsys|synthesis) translate_off' comments.
Yosys does support them but it is recommended to use `ifdef constructs instead!
Generating RTLIL representation for module `\RIIR'.
Successfully finished Verilog frontend.

-- Parsing `../filter/CIC.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ../filter/CIC.v
Parsing Verilog input from `../filter/CIC.v' to AST representation.
Generating RTLIL representation for module `\CIC'.
Successfully finished Verilog frontend.

-- Parsing `../filter/dpram_64x8.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: ../filter/dpram_64x8.v
Parsing Verilog input from `../filter/dpram_64x8.v' to AST representation.
Generating RTLIL representation for module `\dpram_64x8'.
Successfully finished Verilog frontend.

-- Parsing `../cordic/fullcordic.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: ../cordic/fullcordic.v
Parsing Verilog input from `../cordic/fullcordic.v' to AST representation.
Generating RTLIL representation for module `\fullcordic'.
Warning: Replacing memory \quadmem with list of registers. See ../cordic/fullcordic.v:46
Successfully finished Verilog frontend.

-- Parsing `../cordic/cordic.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: ../cordic/cordic.v
Parsing Verilog input from `../cordic/cordic.v' to AST representation.
Generating RTLIL representation for module `\signed_shifter'.
Generating RTLIL representation for module `\rotator'.
Generating RTLIL representation for module `\cordic'.
Successfully finished Verilog frontend.

-- Parsing `../UI/UI.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: ../UI/UI.v
Parsing Verilog input from `../UI/UI.v' to AST representation.
Generating RTLIL representation for module `\UI'.
Successfully finished Verilog frontend.

-- Parsing `../UI/BinToLCD.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: ../UI/BinToLCD.v
Parsing Verilog input from `../UI/BinToLCD.v' to AST representation.
Generating RTLIL representation for module `\BinToLCD'.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_defines.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: ../UI/lcd_defines.v
Parsing Verilog input from `../UI/lcd_defines.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_display.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: ../UI/lcd_display.v
Parsing Verilog input from `../UI/lcd_display.v' to AST representation.
Generating RTLIL representation for module `\lcd'.
Successfully finished Verilog frontend.

-- Parsing `../UI/delay_counter.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: ../UI/delay_counter.v
Parsing Verilog input from `../UI/delay_counter.v' to AST representation.
Generating RTLIL representation for module `\delay_counter'.
Successfully finished Verilog frontend.

-- Parsing `../sram16x16.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: ../sram16x16.v
Parsing Verilog input from `../sram16x16.v' to AST representation.
Generating RTLIL representation for module `\sram16x16'.
Successfully finished Verilog frontend.

-- Parsing `../Flash_to_SRAM.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: ../Flash_to_SRAM.v
Parsing Verilog input from `../Flash_to_SRAM.v' to AST representation.
Generating RTLIL representation for module `\Flash_to_SRAM'.
Successfully finished Verilog frontend.

-- Parsing `../spi_flash_reader.v' using frontend `verilog' --

18. Executing Verilog-2005 frontend: ../spi_flash_reader.v
Parsing Verilog input from `../spi_flash_reader.v' to AST representation.
Generating RTLIL representation for module `\spi_flash_reader'.
Successfully finished Verilog frontend.

-- Parsing `../sigma_delta.v' using frontend `verilog' --

19. Executing Verilog-2005 frontend: ../sigma_delta.v
Parsing Verilog input from `../sigma_delta.v' to AST representation.
Generating RTLIL representation for module `\sigma_delta'.
Successfully finished Verilog frontend.

-- Parsing `../dds.v' using frontend `verilog' --

20. Executing Verilog-2005 frontend: ../dds.v
Parsing Verilog input from `../dds.v' to AST representation.
Generating RTLIL representation for module `\dds'.
Successfully finished Verilog frontend.

-- Parsing `../mult16x16.v' using frontend `verilog' --

21. Executing Verilog-2005 frontend: ../mult16x16.v
Parsing Verilog input from `../mult16x16.v' to AST representation.
Generating RTLIL representation for module `\mult16x16'.
Successfully finished Verilog frontend.

-- Parsing `../pll.v' using frontend `verilog' --

22. Executing Verilog-2005 frontend: ../pll.v
Parsing Verilog input from `../pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json yosysout.json' --

23. Executing SYNTH_ICE40 pass.

23.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

23.2. Executing HIERARCHY pass (managing design hierarchy).

23.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             \rotator
Used module:                 \signed_shifter
Used module:     \RIIR
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             \delay_counter
Used module:         \BinToLCD
Parameter \iteration = 7
Parameter \tangle = 17'00000000001110010

23.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 7
Parameter \tangle = 17'00000000001110010
Generating RTLIL representation for module `$paramod\rotator\iteration=7\tangle=17'00000000001110010'.
Parameter \iteration = 6
Parameter \tangle = 17'00000000011100101

23.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 6
Parameter \tangle = 17'00000000011100101
Generating RTLIL representation for module `$paramod\rotator\iteration=6\tangle=17'00000000011100101'.
Parameter \iteration = 5
Parameter \tangle = 17'00000000111001010

23.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 5
Parameter \tangle = 17'00000000111001010
Generating RTLIL representation for module `$paramod\rotator\iteration=5\tangle=17'00000000111001010'.
Parameter \iteration = 4
Parameter \tangle = 17'00000001110010011

23.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 4
Parameter \tangle = 17'00000001110010011
Generating RTLIL representation for module `$paramod\rotator\iteration=4\tangle=17'00000001110010011'.
Parameter \iteration = 3
Parameter \tangle = 17'00000011100100000

23.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 3
Parameter \tangle = 17'00000011100100000
Generating RTLIL representation for module `$paramod\rotator\iteration=3\tangle=17'00000011100100000'.
Parameter \iteration = 2
Parameter \tangle = 17'00000111000001001

23.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 2
Parameter \tangle = 17'00000111000001001
Generating RTLIL representation for module `$paramod\rotator\iteration=2\tangle=17'00000111000001001'.
Parameter \iteration = 1
Parameter \tangle = 17'00001101010010000

23.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 1
Parameter \tangle = 17'00001101010010000
Generating RTLIL representation for module `$paramod\rotator\iteration=1\tangle=17'00001101010010000'.
Parameter \iteration = 0
Parameter \tangle = 17'00010110100000000

23.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 0
Parameter \tangle = 17'00010110100000000
Generating RTLIL representation for module `$paramod\rotator\iteration=0\tangle=17'00010110100000000'.
Parameter \i = 0

23.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 0
Generating RTLIL representation for module `$paramod\signed_shifter\i=0'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.
Parameter \counter_width = 20

23.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\delay_counter'.
Parameter \counter_width = 20
Generating RTLIL representation for module `$paramod\delay_counter\counter_width=20'.

23.2.12. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 \signed_shifter
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:     \RIIR
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Parameter \i = 7

23.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 7
Generating RTLIL representation for module `$paramod\signed_shifter\i=7'.
Parameter \i = 7
Found cached RTLIL representation for module `$paramod\signed_shifter\i=7'.
Parameter \i = 6

23.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 6
Generating RTLIL representation for module `$paramod\signed_shifter\i=6'.
Parameter \i = 6
Found cached RTLIL representation for module `$paramod\signed_shifter\i=6'.
Parameter \i = 5

23.2.15. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 5
Generating RTLIL representation for module `$paramod\signed_shifter\i=5'.
Parameter \i = 5
Found cached RTLIL representation for module `$paramod\signed_shifter\i=5'.
Parameter \i = 4

23.2.16. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 4
Generating RTLIL representation for module `$paramod\signed_shifter\i=4'.
Parameter \i = 4
Found cached RTLIL representation for module `$paramod\signed_shifter\i=4'.
Parameter \i = 3

23.2.17. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 3
Generating RTLIL representation for module `$paramod\signed_shifter\i=3'.
Parameter \i = 3
Found cached RTLIL representation for module `$paramod\signed_shifter\i=3'.
Parameter \i = 2

23.2.18. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 2
Generating RTLIL representation for module `$paramod\signed_shifter\i=2'.
Parameter \i = 2
Found cached RTLIL representation for module `$paramod\signed_shifter\i=2'.
Parameter \i = 1

23.2.19. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 1
Generating RTLIL representation for module `$paramod\signed_shifter\i=1'.
Parameter \i = 1
Found cached RTLIL representation for module `$paramod\signed_shifter\i=1'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.

23.2.20. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 $paramod\signed_shifter\i=7
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:                 $paramod\signed_shifter\i=6
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:                 $paramod\signed_shifter\i=5
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:                 $paramod\signed_shifter\i=4
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:                 $paramod\signed_shifter\i=3
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:                 $paramod\signed_shifter\i=2
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:                 $paramod\signed_shifter\i=1
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:                 $paramod\signed_shifter\i=0
Used module:     \RIIR
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

23.2.21. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 $paramod\signed_shifter\i=7
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:                 $paramod\signed_shifter\i=6
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:                 $paramod\signed_shifter\i=5
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:                 $paramod\signed_shifter\i=4
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:                 $paramod\signed_shifter\i=3
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:                 $paramod\signed_shifter\i=2
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:                 $paramod\signed_shifter\i=1
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:                 $paramod\signed_shifter\i=0
Used module:     \RIIR
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Removing unused module `\delay_counter'.
Removing unused module `\rotator'.
Removing unused module `\signed_shifter'.
Removing unused module `\dpram_64x8'.
Removing unused module `\CIC'.
Removed 5 unused modules.
Mapping positional arguments of cell $paramod\rotator\iteration=0\tangle=17'00010110100000000.y_shifter ($paramod\signed_shifter\i=0).
Mapping positional arguments of cell $paramod\rotator\iteration=0\tangle=17'00010110100000000.x_shifter ($paramod\signed_shifter\i=0).
Mapping positional arguments of cell $paramod\rotator\iteration=1\tangle=17'00001101010010000.y_shifter ($paramod\signed_shifter\i=1).
Mapping positional arguments of cell $paramod\rotator\iteration=1\tangle=17'00001101010010000.x_shifter ($paramod\signed_shifter\i=1).
Mapping positional arguments of cell $paramod\rotator\iteration=2\tangle=17'00000111000001001.y_shifter ($paramod\signed_shifter\i=2).
Mapping positional arguments of cell $paramod\rotator\iteration=2\tangle=17'00000111000001001.x_shifter ($paramod\signed_shifter\i=2).
Mapping positional arguments of cell $paramod\rotator\iteration=3\tangle=17'00000011100100000.y_shifter ($paramod\signed_shifter\i=3).
Mapping positional arguments of cell $paramod\rotator\iteration=3\tangle=17'00000011100100000.x_shifter ($paramod\signed_shifter\i=3).
Mapping positional arguments of cell $paramod\rotator\iteration=4\tangle=17'00000001110010011.y_shifter ($paramod\signed_shifter\i=4).
Mapping positional arguments of cell $paramod\rotator\iteration=4\tangle=17'00000001110010011.x_shifter ($paramod\signed_shifter\i=4).
Mapping positional arguments of cell $paramod\rotator\iteration=5\tangle=17'00000000111001010.y_shifter ($paramod\signed_shifter\i=5).
Mapping positional arguments of cell $paramod\rotator\iteration=5\tangle=17'00000000111001010.x_shifter ($paramod\signed_shifter\i=5).
Mapping positional arguments of cell $paramod\rotator\iteration=6\tangle=17'00000000011100101.y_shifter ($paramod\signed_shifter\i=6).
Mapping positional arguments of cell $paramod\rotator\iteration=6\tangle=17'00000000011100101.x_shifter ($paramod\signed_shifter\i=6).
Mapping positional arguments of cell $paramod\rotator\iteration=7\tangle=17'00000000001110010.y_shifter ($paramod\signed_shifter\i=7).
Mapping positional arguments of cell $paramod\rotator\iteration=7\tangle=17'00000000001110010.x_shifter ($paramod\signed_shifter\i=7).
Mapping positional arguments of cell pll.randgen (fibonacci7).
Mapping positional arguments of cell UI.LCD (lcd).
Mapping positional arguments of cell UI.diplay_number (BinToLCD).
Mapping positional arguments of cell cordic.U7 ($paramod\rotator\iteration=7\tangle=17'00000000001110010).
Mapping positional arguments of cell cordic.U6 ($paramod\rotator\iteration=6\tangle=17'00000000011100101).
Mapping positional arguments of cell cordic.U5 ($paramod\rotator\iteration=5\tangle=17'00000000111001010).
Mapping positional arguments of cell cordic.U4 ($paramod\rotator\iteration=4\tangle=17'00000001110010011).
Mapping positional arguments of cell cordic.U3 ($paramod\rotator\iteration=3\tangle=17'00000011100100000).
Mapping positional arguments of cell cordic.U2 ($paramod\rotator\iteration=2\tangle=17'00000111000001001).
Mapping positional arguments of cell cordic.U1 ($paramod\rotator\iteration=1\tangle=17'00001101010010000).
Mapping positional arguments of cell cordic.U0 ($paramod\rotator\iteration=0\tangle=17'00010110100000000).
Mapping positional arguments of cell oscillator.randgen (fibonacci15).
Mapping positional arguments of cell top.SRAM (sram16x16).
Mapping positional arguments of cell top.F2SRAM (Flash_to_SRAM).
Mapping positional arguments of cell top.CORDIC (fullcordic).
Mapping positional arguments of cell top.Y_IIR_1 (RIIR).
Mapping positional arguments of cell top.X_IIR_1 (RIIR).
Mapping positional arguments of cell top.Mult2 (mult16x16).
Mapping positional arguments of cell top.Mult1 (mult16x16).
Mapping positional arguments of cell top.ADC (adc_host).
Mapping positional arguments of cell top.DAC3 (sigma_delta).
Mapping positional arguments of cell top.DAC2 (sigma_delta).
Mapping positional arguments of cell top.DAC1 (sigma_delta).
Mapping positional arguments of cell top.DDS (dds).
Mapping positional arguments of cell top.PLL (pll).
Mapping positional arguments of cell top.OSC (oscillator).
Mapping positional arguments of cell top.UI_inst (UI).
Warning: Resizing cell port lcd.ram40_4kinst_physical.WDATA from 8 bits to 16 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RADDR from 32 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RDATA from 8 bits to 16 bits.
Warning: Resizing cell port top.Y_IIR_1.b from 5 bits to 4 bits.
Warning: Resizing cell port top.X_IIR_1.b from 5 bits to 4 bits.

23.3. Executing PROC pass (convert processes to netlists).

23.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

23.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../UI/delay_counter.v:62$777 in module $paramod\delay_counter\counter_width=20.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$768 in module $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$760 in module $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$752 in module $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$744 in module $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$736 in module $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$728 in module $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$720 in module $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$712 in module $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Removed 4 dead cases from process $proc$../dds.v:23$546 in module dds.
Marked 4 switch rules as full_case in process $proc$../dds.v:23$546 in module dds.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:187$526 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:174$522 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:166$518 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:155$513 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:141$511 in module spi_flash_reader.
Removed 1 dead cases from process $proc$../spi_flash_reader.v:112$508 in module spi_flash_reader.
Marked 5 switch rules as full_case in process $proc$../spi_flash_reader.v:112$508 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:104$506 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../UI/lcd_display.v:435$451 in module lcd.
Marked 4 switch rules as full_case in process $proc$../UI/lcd_display.v:219$443 in module lcd.
Removed 1 dead cases from process $proc$../UI/BinToLCD.v:36$245 in module BinToLCD.
Marked 24 switch rules as full_case in process $proc$../UI/BinToLCD.v:36$245 in module BinToLCD.
Marked 5 switch rules as full_case in process $proc$../UI/UI.v:129$176 in module UI.
Marked 1 switch rules as full_case in process $proc$../filter/RIIR.v:29$52 in module RIIR.
Marked 1 switch rules as full_case in process $proc$../adc_host.v:29$39 in module adc_host.
Removed 1 dead cases from process $proc$../oscillator.v:34$31 in module oscillator.
Marked 1 switch rules as full_case in process $proc$../oscillator.v:34$31 in module oscillator.
Removed a total of 7 dead cases.

23.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 38 redundant assignments.
Promoted 143 assignments to connections.

23.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\pll.$proc$../pll.v:39$583'.
  Set init value: \last_eP = 16'0000000000000000
Found init rule in `\pll.$proc$../pll.v:38$582'.
  Set init value: \eD = 16'0000000000000000
Found init rule in `\pll.$proc$../pll.v:31$581'.
  Set init value: \pipestep = 1'0
Found init rule in `\pll.$proc$../pll.v:30$580'.
  Set init value: \l2_in = 1'0
Found init rule in `\pll.$proc$../pll.v:30$579'.
  Set init value: \l_in = 1'0
Found init rule in `\pll.$proc$../pll.v:28$578'.
  Set init value: \incr = 17'00000001001011000
Found init rule in `\pll.$proc$../pll.v:25$577'.
  Set init value: \phase = 0
Found init rule in `\pll.$proc$../pll.v:17$576'.
  Set init value: \locked = 1'0
Found init rule in `\dds.$proc$../dds.v:21$559'.
  Set init value: \islast = 1'0
Found init rule in `\dds.$proc$../dds.v:21$558'.
  Set init value: \lastgo = 1'0
Found init rule in `\dds.$proc$../dds.v:21$557'.
  Set init value: \iscos = 1'0
Found init rule in `\dds.$proc$../dds.v:17$556'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:14$555'.
  Set init value: \cos = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:13$554'.
  Set init value: \sin = 16'0000000000000000
Found init rule in `\sigma_delta.$proc$../sigma_delta.v:16$545'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$505'.
  Set init value: \busystop = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$504'.
  Set init value: \spi_go = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$502'.
  Set init value: \spi_addr = 24'000000000000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$501'.
  Set init value: \second = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$500'.
  Set init value: \laststart = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$499'.
  Set init value: \poscount = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$498'.
  Set init value: \wdata = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$497'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$496'.
  Set init value: \wen = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$495'.
  Set init value: \busy = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:201$465'.
  Set init value: \tx_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:200$464'.
  Set init value: \main_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:196$463'.
  Set init value: \tx_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:195$462'.
  Set init value: \main_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:170$461'.
  Set init value: \LCD_E1 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:169$460'.
  Set init value: \LCD_E0 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:168$459'.
  Set init value: \SF_D1 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:167$458'.
  Set init value: \SF_D0 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:106$457'.
  Set init value: \pos = 0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:105$456'.
  Set init value: \display_state = 5'00000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:77$455'.
  Set init value: \tx_done = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:74$454'.
  Set init value: \tx_state = 3'110
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:32$419'.
  Set init value: \holdoff = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:31$418'.
  Set init value: \difference = 17'00000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:28$417'.
  Set init value: \dec = 4'0000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$416'.
  Set init value: \AngelaMerkel = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$415'.
  Set init value: \secondlastacc = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$414'.
  Set init value: \lastacc = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$413'.
  Set init value: \rest = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:26$412'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:24$411'.
  Set init value: \pos = 5'00000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$410'.
  Set init value: \leadz = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$409'.
  Set init value: \updating = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$408'.
  Set init value: \lastupdate = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:20$407'.
  Set init value: \we = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:15$406'.
  Set init value: \dat = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:71$243'.
  Set init value: \dispdone = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:70$242'.
  Set init value: \disppos = 5'00000
Found init rule in `\UI.$proc$../UI/UI.v:69$241'.
  Set init value: \repaintS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:69$240'.
  Set init value: \weS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:68$239'.
  Set init value: \datS = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:56$238'.
  Set init value: \state = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:53$237'.
  Set init value: \btnt3 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:53$236'.
  Set init value: \btnt2 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:53$235'.
  Set init value: \btnt1 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:53$234'.
  Set init value: \btnt0 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:52$233'.
  Set init value: \cnt3 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:52$232'.
  Set init value: \cnt2 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:52$231'.
  Set init value: \cnt1 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:52$230'.
  Set init value: \cnt0 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:51$229'.
  Set init value: \BP = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:46$228'.
  Set init value: \update = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:44$227'.
  Set init value: \count = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:32$226'.
  Set init value: \ismagphase = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:29$225'.
  Set init value: \refIO = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:28$224'.
  Set init value: \refampl = 2'00
Found init rule in `\UI.$proc$../UI/UI.v:27$223'.
  Set init value: \reffreq = 3'001
Found init rule in `\UI.$proc$../UI/UI.v:26$222'.
  Set init value: \TC = 4'0011
Found init rule in `\UI.$proc$../UI/UI.v:25$221'.
  Set init value: \gain = 2'00
Found init rule in `\RIIR.$proc$../filter/RIIR.v:17$71'.
  Set init value: \inp_shift_reg = 0
Found init rule in `\RIIR.$proc$../filter/RIIR.v:16$70'.
  Set init value: \z_shift_reg = 48'000000000000000000000000000000000000000000000000
Found init rule in `\RIIR.$proc$../filter/RIIR.v:15$69'.
  Set init value: \p_reg = 48'000000000000000000000000000000000000000000000000
Found init rule in `\RIIR.$proc$../filter/RIIR.v:14$68'.
  Set init value: \p_step = 1'0
Found init rule in `\RIIR.$proc$../filter/RIIR.v:13$67'.
  Set init value: \b_reg = 5'00000
Found init rule in `\RIIR.$proc$../filter/RIIR.v:10$66'.
  Set init value: \z = 48'000000000000000000000000000000000000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:23$51'.
  Set init value: \shiftdata = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:22$50'.
  Set init value: \count = 8'00000000
Found init rule in `\adc_host.$proc$../adc_host.v:21$49'.
  Set init value: \acq = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:19$48'.
  Set init value: \newdata = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:17$47'.
  Set init value: \data = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:14$46'.
  Set init value: \CONVST = 1'0
Found init rule in `\oscillator.$proc$../oscillator.v:27$35'.
  Set init value: \phaseword = 25'0000000000000000000000000
Found init rule in `\oscillator.$proc$../oscillator.v:26$34'.
  Set init value: \PHASENAKKUMULATOOOOOR = 0
Found init rule in `\top.$proc$TOP_V1.v:91$26'.
  Set init value: \loadlookup = 1'0
Found init rule in `\top.$proc$TOP_V1.v:69$25'.
  Set init value: \cnt = 25'0000000000000000000000000
Found init rule in `\top.$proc$TOP_V1.v:68$24'.
  Set init value: \rst = 1'1

23.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:435$451'.
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:219$443'.

23.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$815'.
Creating decoders for process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$787'.
Creating decoders for process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$777'.
     1/1: $0\counter[19:0]
Creating decoders for process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$776'.
Creating decoders for process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
     1/7: $0\z_1[16:0]
     2/7: $0\y_1[16:0]
     3/7: $0\x_1[16:0]
     4/7: $0\y_i_pipe[16:0]
     5/7: $0\y_i_s_pipe[16:0]
     6/7: $0\x_i_pipe[16:0]
     7/7: $0\x_i_s_pipe[16:0]
Creating decoders for process `\pll.$proc$../pll.v:39$583'.
Creating decoders for process `\pll.$proc$../pll.v:38$582'.
Creating decoders for process `\pll.$proc$../pll.v:31$581'.
Creating decoders for process `\pll.$proc$../pll.v:30$580'.
Creating decoders for process `\pll.$proc$../pll.v:30$579'.
Creating decoders for process `\pll.$proc$../pll.v:28$578'.
Creating decoders for process `\pll.$proc$../pll.v:25$577'.
Creating decoders for process `\pll.$proc$../pll.v:17$576'.
Creating decoders for process `\pll.$proc$../pll.v:47$564'.
     1/6: $0\phase[31:0]
     2/6: $0\locked[0:0]
     3/6: $0\pipestep[0:0]
     4/6: $0\last_eP[15:0]
     5/6: $0\eD[15:0]
     6/6: $0\incr[16:0]
Creating decoders for process `\dds.$proc$../dds.v:21$559'.
Creating decoders for process `\dds.$proc$../dds.v:21$558'.
Creating decoders for process `\dds.$proc$../dds.v:21$557'.
Creating decoders for process `\dds.$proc$../dds.v:17$556'.
Creating decoders for process `\dds.$proc$../dds.v:14$555'.
Creating decoders for process `\dds.$proc$../dds.v:13$554'.
Creating decoders for process `\dds.$proc$../dds.v:23$546'.
     1/5: $0\islast[0:0]
     2/5: $0\iscos[0:0]
     3/5: $0\addr[15:0]
     4/5: $0\cos[15:0]
     5/5: $0\sin[15:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:16$545'.
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:20$543'.
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$532'.
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$526'.
     1/1: $0\rdy_i[0:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$522'.
     1/1: $0\cnt_len[17:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$518'.
     1/1: $0\cnt_cmd[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$513'.
     1/2: $0\cnt_bit_last[0:0]
     2/2: $0\cnt_bit[2:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$511'.
     1/1: $0\shift_reg[31:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$508'.
     1/5: $5\fsm_state_next[1:0]
     2/5: $4\fsm_state_next[1:0]
     3/5: $3\fsm_state_next[1:0]
     4/5: $2\fsm_state_next[1:0]
     5/5: $1\fsm_state_next[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$506'.
     1/1: $0\fsm_state[1:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$505'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$504'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$503'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$502'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$501'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$500'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$499'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$498'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$497'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$496'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$495'.
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
     1/10: $0\wen[0:0]
     2/10: $0\spi_go[0:0]
     3/10: $0\busystop[0:0]
     4/10: $0\spi_addr[23:0]
     5/10: $0\f_byte[7:0]
     6/10: $0\second[0:0]
     7/10: $0\poscount[16:0]
     8/10: $0\wdata[15:0]
     9/10: $0\addr[15:0]
    10/10: $0\busy[0:0]
Creating decoders for process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$895'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:201$465'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:200$464'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:196$463'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:195$462'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:170$461'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:169$460'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:168$459'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:167$458'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:106$457'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:105$456'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:77$455'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:74$454'.
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:435$451'.
     1/6: $0\tx_delay_load[0:0]
     2/6: $0\tx_delay_value[19:0]
     3/6: $0\LCD_E0[0:0]
     4/6: $0\SF_D0[3:0]
     5/6: $0\tx_done[0:0]
     6/6: $0\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:219$443'.
     1/7: $0\main_delay_value[19:0]
     2/7: $0\main_delay_load[0:0]
     3/7: $0\LCD_E1[0:0]
     4/7: $0\SF_D1[3:0]
     5/7: $0\display_state[4:0]
     6/7: $0\tx_byte[7:0]
     7/7: $0\pos[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:32$419'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:31$418'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:28$417'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$416'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$415'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$414'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$413'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:26$412'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:24$411'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$410'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$409'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$408'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:20$407'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:15$406'.
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
     1/28: $16\rest[15:0]
     2/28: $15\rest[15:0]
     3/28: $14\rest[15:0]
     4/28: $13\rest[15:0]
     5/28: $12\rest[15:0]
     6/28: $11\rest[15:0]
     7/28: $10\rest[15:0]
     8/28: $9\rest[15:0]
     9/28: $8\rest[15:0]
    10/28: $7\rest[15:0]
    11/28: $6\rest[15:0]
    12/28: $5\rest[15:0]
    13/28: $4\rest[15:0]
    14/28: $3\rest[15:0]
    15/28: $2\rest[15:0]
    16/28: $1\rest[15:0]
    17/28: $0\holdoff[0:0]
    18/28: $0\difference[16:0]
    19/28: $0\dec[3:0]
    20/28: $0\AngelaMerkel[15:0]
    21/28: $0\secondlastacc[15:0]
    22/28: $0\lastacc[15:0]
    23/28: $0\acc[16:0]
    24/28: $0\pos[4:0]
    25/28: $0\leadz[0:0]
    26/28: $0\updating[0:0]
    27/28: $0\dat[7:0]
    28/28: $0\we[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:71$243'.
Creating decoders for process `\UI.$proc$../UI/UI.v:70$242'.
Creating decoders for process `\UI.$proc$../UI/UI.v:69$241'.
Creating decoders for process `\UI.$proc$../UI/UI.v:69$240'.
Creating decoders for process `\UI.$proc$../UI/UI.v:68$239'.
Creating decoders for process `\UI.$proc$../UI/UI.v:56$238'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$237'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$236'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$235'.
Creating decoders for process `\UI.$proc$../UI/UI.v:53$234'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$233'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$232'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$231'.
Creating decoders for process `\UI.$proc$../UI/UI.v:52$230'.
Creating decoders for process `\UI.$proc$../UI/UI.v:51$229'.
Creating decoders for process `\UI.$proc$../UI/UI.v:46$228'.
Creating decoders for process `\UI.$proc$../UI/UI.v:44$227'.
Creating decoders for process `\UI.$proc$../UI/UI.v:32$226'.
Creating decoders for process `\UI.$proc$../UI/UI.v:29$225'.
Creating decoders for process `\UI.$proc$../UI/UI.v:28$224'.
Creating decoders for process `\UI.$proc$../UI/UI.v:27$223'.
Creating decoders for process `\UI.$proc$../UI/UI.v:26$222'.
Creating decoders for process `\UI.$proc$../UI/UI.v:25$221'.
Creating decoders for process `\UI.$proc$../UI/UI.v:129$176'.
     1/13: $0\state[3:0]
     2/13: $0\update[0:0]
     3/13: $0\weS[0:0]
     4/13: $0\repaintS[0:0]
     5/13: $0\dispdone[0:0]
     6/13: $0\disppos[4:0]
     7/13: $0\datS[7:0]
     8/13: $0\refampl[1:0]
     9/13: $0\reffreq[2:0]
    10/13: $0\ismagphase[0:0]
    11/13: $0\refIO[0:0]
    12/13: $0\TC[3:0]
    13/13: $0\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:76$156'.
     1/12: $0\BP[3:0] [3]
     2/12: $0\BP[3:0] [2]
     3/12: $0\BP[3:0] [1]
     4/12: $0\BP[3:0] [0]
     5/12: $0\btnt3[0:0]
     6/12: $0\btnt2[0:0]
     7/12: $0\btnt1[0:0]
     8/12: $0\btnt0[0:0]
     9/12: $0\cnt3[23:0]
    10/12: $0\cnt2[23:0]
    11/12: $0\cnt1[23:0]
    12/12: $0\cnt0[23:0]
Creating decoders for process `\cordic.$proc$../cordic/cordic.v:385$155'.
Creating decoders for process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$887'.
Creating decoders for process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$875'.
Creating decoders for process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
     1/1: $0\quadmem[0][1:0]
Creating decoders for process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$859'.
Creating decoders for process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$839'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:18$72'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:17$71'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:16$70'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:15$69'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:14$68'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:13$67'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:10$66'.
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:41$55'.
     1/3: $0\p_reg[47:0]
     2/3: $0\p_step[0:0]
     3/3: $0\z[47:0]
Creating decoders for process `\RIIR.$proc$../filter/RIIR.v:29$52'.
     1/2: $0\preshift[3:0]
     2/2: $0\postshift[3:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:23$51'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:22$50'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:21$49'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:19$48'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:17$47'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:14$46'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:46$45'.
Creating decoders for process `\adc_host.$proc$../adc_host.v:29$39'.
     1/5: $0\count[7:0]
     2/5: $0\newdata[0:0]
     3/5: $0\acq[0:0]
     4/5: $0\data[15:0]
     5/5: $0\CONVST[0:0]
Creating decoders for process `\oscillator.$proc$../oscillator.v:27$35'.
Creating decoders for process `\oscillator.$proc$../oscillator.v:26$34'.
Creating decoders for process `\oscillator.$proc$../oscillator.v:34$31'.
     1/1: $0\phaseword[24:0]
Creating decoders for process `\fibonacci15.$proc$../fibonacci15.v:10$29'.
Creating decoders for process `\fibonacci7.$proc$../fibonacci7.v:10$27'.
Creating decoders for process `\top.$proc$TOP_V1.v:91$26'.
Creating decoders for process `\top.$proc$TOP_V1.v:69$25'.
Creating decoders for process `\top.$proc$TOP_V1.v:68$24'.
Creating decoders for process `\top.$proc$TOP_V1.v:121$12'.
     1/2: $0\loadlookup[0:0]
     2/2: $0\rst[0:0]

23.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\signed_shifter\i=6.\Q' from process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$815'.
No latch inferred for signal `$paramod\signed_shifter\i=6.\j' from process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$815'.
No latch inferred for signal `$paramod\signed_shifter\i=7.\Q' from process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$787'.
No latch inferred for signal `$paramod\signed_shifter\i=7.\j' from process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$787'.
No latch inferred for signal `$paramod\signed_shifter\i=0.\Q' from process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$776'.
No latch inferred for signal `$paramod\signed_shifter\i=0.\j' from process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$776'.
No latch inferred for signal `\spi_flash_reader.\fsm_state_next' from process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$508'.
No latch inferred for signal `\Flash_to_SRAM.\spi_len' from process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$503'.
No latch inferred for signal `$paramod\signed_shifter\i=1.\Q' from process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$895'.
No latch inferred for signal `$paramod\signed_shifter\i=1.\j' from process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$895'.
No latch inferred for signal `\cordic.\x[0]' from process `\cordic.$proc$../cordic/cordic.v:385$155'.
No latch inferred for signal `\cordic.\y[0]' from process `\cordic.$proc$../cordic/cordic.v:385$155'.
No latch inferred for signal `\cordic.\z[0]' from process `\cordic.$proc$../cordic/cordic.v:385$155'.
No latch inferred for signal `$paramod\signed_shifter\i=2.\Q' from process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$887'.
No latch inferred for signal `$paramod\signed_shifter\i=2.\j' from process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$887'.
No latch inferred for signal `$paramod\signed_shifter\i=3.\Q' from process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$875'.
No latch inferred for signal `$paramod\signed_shifter\i=3.\j' from process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$875'.
No latch inferred for signal `$paramod\signed_shifter\i=4.\Q' from process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$859'.
No latch inferred for signal `$paramod\signed_shifter\i=4.\j' from process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$859'.
No latch inferred for signal `$paramod\signed_shifter\i=5.\Q' from process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$839'.
No latch inferred for signal `$paramod\signed_shifter\i=5.\j' from process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$839'.
No latch inferred for signal `\RIIR.\tick_l' from process `\RIIR.$proc$../filter/RIIR.v:18$72'.
No latch inferred for signal `\RIIR.\preshift' from process `\RIIR.$proc$../filter/RIIR.v:29$52'.
No latch inferred for signal `\RIIR.\postshift' from process `\RIIR.$proc$../filter/RIIR.v:29$52'.

23.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\delay_counter\counter_width=20.\counter' using process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$777'.
  created $dff cell `$procdff$3154' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3155' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_i_s_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3156' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_i_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3157' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3158' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_i_s_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3159' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_i_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3160' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\z_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
  created $dff cell `$procdff$3161' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3162' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_i_s_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3163' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_i_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3164' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3165' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_i_s_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3166' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_i_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3167' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\z_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
  created $dff cell `$procdff$3168' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3169' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_i_s_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3170' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_i_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3171' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3172' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_i_s_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3173' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_i_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3174' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\z_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
  created $dff cell `$procdff$3175' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3176' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_i_s_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3177' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_i_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3178' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3179' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_i_s_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3180' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_i_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3181' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\z_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
  created $dff cell `$procdff$3182' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3183' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_i_s_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3184' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_i_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3185' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3186' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_i_s_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3187' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_i_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3188' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\z_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
  created $dff cell `$procdff$3189' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3190' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_i_s_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3191' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_i_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3192' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3193' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_i_s_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3194' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_i_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3195' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\z_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
  created $dff cell `$procdff$3196' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3197' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_i_s_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3198' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_i_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3199' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3200' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_i_s_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3201' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_i_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3202' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\z_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
  created $dff cell `$procdff$3203' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3204' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_i_s_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3205' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_i_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3206' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3207' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_i_s_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3208' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_i_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3209' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\z_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
  created $dff cell `$procdff$3210' with positive edge clock.
Creating register for signal `\pll.\phase' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3211' with positive edge clock.
Creating register for signal `\pll.\locked' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3212' with positive edge clock.
Creating register for signal `\pll.\incr' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3213' with positive edge clock.
Creating register for signal `\pll.\l_in' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3214' with positive edge clock.
Creating register for signal `\pll.\l2_in' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3215' with positive edge clock.
Creating register for signal `\pll.\pipestep' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3216' with positive edge clock.
Creating register for signal `\pll.\eD' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3217' with positive edge clock.
Creating register for signal `\pll.\last_eP' using process `\pll.$proc$../pll.v:47$564'.
  created $dff cell `$procdff$3218' with positive edge clock.
Creating register for signal `\dds.\sin' using process `\dds.$proc$../dds.v:23$546'.
  created $dff cell `$procdff$3219' with positive edge clock.
Creating register for signal `\dds.\cos' using process `\dds.$proc$../dds.v:23$546'.
  created $dff cell `$procdff$3220' with positive edge clock.
Creating register for signal `\dds.\addr' using process `\dds.$proc$../dds.v:23$546'.
  created $dff cell `$procdff$3221' with positive edge clock.
Creating register for signal `\dds.\iscos' using process `\dds.$proc$../dds.v:23$546'.
  created $dff cell `$procdff$3222' with positive edge clock.
Creating register for signal `\dds.\lastgo' using process `\dds.$proc$../dds.v:23$546'.
  created $dff cell `$procdff$3223' with positive edge clock.
Creating register for signal `\dds.\islast' using process `\dds.$proc$../dds.v:23$546'.
  created $dff cell `$procdff$3224' with positive edge clock.
Creating register for signal `\sigma_delta.\acc' using process `\sigma_delta.$proc$../sigma_delta.v:20$543'.
  created $dff cell `$procdff$3225' with positive edge clock.
Creating register for signal `\spi_flash_reader.\valid_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$532'.
  created $dff cell `$procdff$3226' with positive edge clock.
Creating register for signal `\spi_flash_reader.\rdy_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$526'.
  created $dff cell `$procdff$3227' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_len' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$522'.
  created $dff cell `$procdff$3228' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_cmd' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$518'.
  created $dff cell `$procdff$3229' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$513'.
  created $dff cell `$procdff$3230' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit_last' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$513'.
  created $dff cell `$procdff$3231' with positive edge clock.
Creating register for signal `\spi_flash_reader.\shift_reg' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$511'.
  created $dff cell `$procdff$3232' with positive edge clock.
Creating register for signal `\spi_flash_reader.\fsm_state' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$506'.
  created $dff cell `$procdff$3233' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wen' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3234' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busy' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3235' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3236' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wdata' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3237' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\poscount' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3238' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\laststart' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3239' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\second' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3240' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\f_byte' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3241' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3242' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_go' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3243' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busystop' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
  created $dff cell `$procdff$3244' with positive edge clock.
Creating register for signal `\lcd.\tx_state' using process `\lcd.$proc$../UI/lcd_display.v:435$451'.
  created $adff cell `$procdff$3245' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\tx_done' using process `\lcd.$proc$../UI/lcd_display.v:435$451'.
  created $dff cell `$procdff$3246' with positive edge clock.
Creating register for signal `\lcd.\SF_D0' using process `\lcd.$proc$../UI/lcd_display.v:435$451'.
  created $dff cell `$procdff$3247' with positive edge clock.
Creating register for signal `\lcd.\LCD_E0' using process `\lcd.$proc$../UI/lcd_display.v:435$451'.
  created $dff cell `$procdff$3248' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:435$451'.
  created $dff cell `$procdff$3249' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:435$451'.
  created $dff cell `$procdff$3250' with positive edge clock.
Creating register for signal `\lcd.\pos' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $dff cell `$procdff$3251' with positive edge clock.
Creating register for signal `\lcd.\tx_byte' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $dff cell `$procdff$3252' with positive edge clock.
Creating register for signal `\lcd.\display_state' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $adff cell `$procdff$3253' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\SF_D1' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $dff cell `$procdff$3254' with positive edge clock.
Creating register for signal `\lcd.\LCD_E1' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $dff cell `$procdff$3255' with positive edge clock.
Creating register for signal `\lcd.\main_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $adff cell `$procdff$3256' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\main_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:219$443'.
  created $adff cell `$procdff$3257' with positive edge clock and positive level reset.
Creating register for signal `\BinToLCD.\we' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3258' with positive edge clock.
Creating register for signal `\BinToLCD.\dat' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3259' with positive edge clock.
Creating register for signal `\BinToLCD.\lastupdate' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3260' with positive edge clock.
Creating register for signal `\BinToLCD.\updating' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3261' with positive edge clock.
Creating register for signal `\BinToLCD.\leadz' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3262' with positive edge clock.
Creating register for signal `\BinToLCD.\pos' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3263' with positive edge clock.
Creating register for signal `\BinToLCD.\acc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3264' with positive edge clock.
Creating register for signal `\BinToLCD.\rest' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3265' with positive edge clock.
Creating register for signal `\BinToLCD.\lastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3266' with positive edge clock.
Creating register for signal `\BinToLCD.\secondlastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3267' with positive edge clock.
Creating register for signal `\BinToLCD.\AngelaMerkel' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3268' with positive edge clock.
Creating register for signal `\BinToLCD.\dec' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3269' with positive edge clock.
Creating register for signal `\BinToLCD.\difference' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3270' with positive edge clock.
Creating register for signal `\BinToLCD.\holdoff' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
  created $dff cell `$procdff$3271' with positive edge clock.
Creating register for signal `\UI.\gain' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3272' with positive edge clock.
Creating register for signal `\UI.\TC' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3273' with positive edge clock.
Creating register for signal `\UI.\refIO' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3274' with positive edge clock.
Creating register for signal `\UI.\ismagphase' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3275' with positive edge clock.
Creating register for signal `\UI.\count' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3276' with positive edge clock.
Creating register for signal `\UI.\reffreq' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3277' with positive edge clock.
Creating register for signal `\UI.\refampl' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3278' with positive edge clock.
Creating register for signal `\UI.\update' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3279' with positive edge clock.
Creating register for signal `\UI.\state' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3280' with positive edge clock.
Creating register for signal `\UI.\datS' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3281' with positive edge clock.
Creating register for signal `\UI.\weS' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3282' with positive edge clock.
Creating register for signal `\UI.\repaintS' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3283' with positive edge clock.
Creating register for signal `\UI.\disppos' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3284' with positive edge clock.
Creating register for signal `\UI.\dispdone' using process `\UI.$proc$../UI/UI.v:129$176'.
  created $dff cell `$procdff$3285' with positive edge clock.
Creating register for signal `\UI.\BP' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3286' with positive edge clock.
Creating register for signal `\UI.\cnt0' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3287' with positive edge clock.
Creating register for signal `\UI.\cnt1' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3288' with positive edge clock.
Creating register for signal `\UI.\cnt2' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3289' with positive edge clock.
Creating register for signal `\UI.\cnt3' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3290' with positive edge clock.
Creating register for signal `\UI.\btnt0' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3291' with positive edge clock.
Creating register for signal `\UI.\btnt1' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3292' with positive edge clock.
Creating register for signal `\UI.\btnt2' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3293' with positive edge clock.
Creating register for signal `\UI.\btnt3' using process `\UI.$proc$../UI/UI.v:76$156'.
  created $dff cell `$procdff$3294' with positive edge clock.
Creating register for signal `\fullcordic.\i' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3295' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[0]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3296' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[1]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3297' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[2]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3298' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[3]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3299' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[4]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3300' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[5]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3301' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[6]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3302' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[7]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3303' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[8]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
  created $dff cell `$procdff$3304' with positive edge clock.
Creating register for signal `\RIIR.\outp' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3305' with positive edge clock.
Creating register for signal `\RIIR.\z' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3306' with positive edge clock.
Creating register for signal `\RIIR.\b_reg' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3307' with positive edge clock.
Creating register for signal `\RIIR.\p_step' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3308' with positive edge clock.
Creating register for signal `\RIIR.\p_reg' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3309' with positive edge clock.
Creating register for signal `\RIIR.\z_shift_reg' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3310' with positive edge clock.
Creating register for signal `\RIIR.\inp_shift_reg' using process `\RIIR.$proc$../filter/RIIR.v:41$55'.
  created $dff cell `$procdff$3311' with positive edge clock.
Creating register for signal `\adc_host.\shiftdata' using process `\adc_host.$proc$../adc_host.v:46$45'.
  created $dff cell `$procdff$3312' with negative edge clock.
Creating register for signal `\adc_host.\CONVST' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3313' with positive edge clock.
Creating register for signal `\adc_host.\newdata' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3314' with positive edge clock.
Creating register for signal `\adc_host.\data' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3315' with positive edge clock.
Creating register for signal `\adc_host.\acq' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3316' with positive edge clock.
Creating register for signal `\adc_host.\count' using process `\adc_host.$proc$../adc_host.v:29$39'.
  created $dff cell `$procdff$3317' with positive edge clock.
Creating register for signal `\oscillator.\phasereg' using process `\oscillator.$proc$../oscillator.v:34$31'.
  created $dff cell `$procdff$3318' with positive edge clock.
Creating register for signal `\oscillator.\PHASENAKKUMULATOOOOOR' using process `\oscillator.$proc$../oscillator.v:34$31'.
  created $dff cell `$procdff$3319' with positive edge clock.
Creating register for signal `\oscillator.\phaseword' using process `\oscillator.$proc$../oscillator.v:34$31'.
  created $dff cell `$procdff$3320' with positive edge clock.
Creating register for signal `\fibonacci15.\fib' using process `\fibonacci15.$proc$../fibonacci15.v:10$29'.
  created $dff cell `$procdff$3321' with positive edge clock.
Creating register for signal `\fibonacci7.\fib' using process `\fibonacci7.$proc$../fibonacci7.v:10$27'.
  created $dff cell `$procdff$3322' with positive edge clock.
Creating register for signal `\top.\rst' using process `\top.$proc$TOP_V1.v:121$12'.
  created $dff cell `$procdff$3323' with positive edge clock.
Creating register for signal `\top.\cnt' using process `\top.$proc$TOP_V1.v:121$12'.
  created $dff cell `$procdff$3324' with positive edge clock.
Creating register for signal `\top.\loadlookup' using process `\top.$proc$TOP_V1.v:121$12'.
  created $dff cell `$procdff$3325' with positive edge clock.

23.3.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$815'.
Removing empty process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$787'.
Found and cleaned up 1 empty switch in `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$777'.
Removing empty process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$777'.
Removing empty process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$776'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
Removing empty process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$768'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
Removing empty process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$760'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
Removing empty process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$752'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
Removing empty process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$744'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
Removing empty process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$736'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
Removing empty process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$728'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
Removing empty process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$720'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
Removing empty process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$712'.
Removing empty process `pll.$proc$../pll.v:39$583'.
Removing empty process `pll.$proc$../pll.v:38$582'.
Removing empty process `pll.$proc$../pll.v:31$581'.
Removing empty process `pll.$proc$../pll.v:30$580'.
Removing empty process `pll.$proc$../pll.v:30$579'.
Removing empty process `pll.$proc$../pll.v:28$578'.
Removing empty process `pll.$proc$../pll.v:25$577'.
Removing empty process `pll.$proc$../pll.v:17$576'.
Found and cleaned up 3 empty switches in `\pll.$proc$../pll.v:47$564'.
Removing empty process `pll.$proc$../pll.v:47$564'.
Removing empty process `dds.$proc$../dds.v:21$559'.
Removing empty process `dds.$proc$../dds.v:21$558'.
Removing empty process `dds.$proc$../dds.v:21$557'.
Removing empty process `dds.$proc$../dds.v:17$556'.
Removing empty process `dds.$proc$../dds.v:14$555'.
Removing empty process `dds.$proc$../dds.v:13$554'.
Found and cleaned up 7 empty switches in `\dds.$proc$../dds.v:23$546'.
Removing empty process `dds.$proc$../dds.v:23$546'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:16$545'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:20$543'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:201$532'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:187$526'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:187$526'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:174$522'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:174$522'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:166$518'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:166$518'.
Found and cleaned up 3 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:155$513'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:155$513'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:141$511'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:141$511'.
Found and cleaned up 5 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:112$508'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:112$508'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:104$506'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:104$506'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$505'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$504'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$503'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$502'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$501'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$500'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$499'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$498'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$497'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$496'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$495'.
Found and cleaned up 5 empty switches in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$487'.
Removing empty process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$895'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:201$465'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:200$464'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:196$463'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:195$462'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:170$461'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:169$460'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:168$459'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:167$458'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:106$457'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:105$456'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:77$455'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:74$454'.
Found and cleaned up 8 empty switches in `\lcd.$proc$../UI/lcd_display.v:435$451'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:435$451'.
Found and cleaned up 22 empty switches in `\lcd.$proc$../UI/lcd_display.v:219$443'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:219$443'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:32$419'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:31$418'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:28$417'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$416'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$415'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$414'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$413'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:26$412'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:24$411'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$410'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$409'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$408'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:20$407'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:15$406'.
Found and cleaned up 80 empty switches in `\BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:36$245'.
Removing empty process `UI.$proc$../UI/UI.v:71$243'.
Removing empty process `UI.$proc$../UI/UI.v:70$242'.
Removing empty process `UI.$proc$../UI/UI.v:69$241'.
Removing empty process `UI.$proc$../UI/UI.v:69$240'.
Removing empty process `UI.$proc$../UI/UI.v:68$239'.
Removing empty process `UI.$proc$../UI/UI.v:56$238'.
Removing empty process `UI.$proc$../UI/UI.v:53$237'.
Removing empty process `UI.$proc$../UI/UI.v:53$236'.
Removing empty process `UI.$proc$../UI/UI.v:53$235'.
Removing empty process `UI.$proc$../UI/UI.v:53$234'.
Removing empty process `UI.$proc$../UI/UI.v:52$233'.
Removing empty process `UI.$proc$../UI/UI.v:52$232'.
Removing empty process `UI.$proc$../UI/UI.v:52$231'.
Removing empty process `UI.$proc$../UI/UI.v:52$230'.
Removing empty process `UI.$proc$../UI/UI.v:51$229'.
Removing empty process `UI.$proc$../UI/UI.v:46$228'.
Removing empty process `UI.$proc$../UI/UI.v:44$227'.
Removing empty process `UI.$proc$../UI/UI.v:32$226'.
Removing empty process `UI.$proc$../UI/UI.v:29$225'.
Removing empty process `UI.$proc$../UI/UI.v:28$224'.
Removing empty process `UI.$proc$../UI/UI.v:27$223'.
Removing empty process `UI.$proc$../UI/UI.v:26$222'.
Removing empty process `UI.$proc$../UI/UI.v:25$221'.
Found and cleaned up 42 empty switches in `\UI.$proc$../UI/UI.v:129$176'.
Removing empty process `UI.$proc$../UI/UI.v:129$176'.
Found and cleaned up 12 empty switches in `\UI.$proc$../UI/UI.v:76$156'.
Removing empty process `UI.$proc$../UI/UI.v:76$156'.
Removing empty process `cordic.$proc$../cordic/cordic.v:385$155'.
Removing empty process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$887'.
Removing empty process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$875'.
Found and cleaned up 3 empty switches in `\fullcordic.$proc$../cordic/fullcordic.v:45$132'.
Removing empty process `fullcordic.$proc$../cordic/fullcordic.v:45$132'.
Removing empty process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$859'.
Removing empty process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$839'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:18$72'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:17$71'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:16$70'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:15$69'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:14$68'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:13$67'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:10$66'.
Found and cleaned up 2 empty switches in `\RIIR.$proc$../filter/RIIR.v:41$55'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:41$55'.
Found and cleaned up 1 empty switch in `\RIIR.$proc$../filter/RIIR.v:29$52'.
Removing empty process `RIIR.$proc$../filter/RIIR.v:29$52'.
Removing empty process `adc_host.$proc$../adc_host.v:23$51'.
Removing empty process `adc_host.$proc$../adc_host.v:22$50'.
Removing empty process `adc_host.$proc$../adc_host.v:21$49'.
Removing empty process `adc_host.$proc$../adc_host.v:19$48'.
Removing empty process `adc_host.$proc$../adc_host.v:17$47'.
Removing empty process `adc_host.$proc$../adc_host.v:14$46'.
Removing empty process `adc_host.$proc$../adc_host.v:46$45'.
Found and cleaned up 5 empty switches in `\adc_host.$proc$../adc_host.v:29$39'.
Removing empty process `adc_host.$proc$../adc_host.v:29$39'.
Removing empty process `oscillator.$proc$../oscillator.v:27$35'.
Removing empty process `oscillator.$proc$../oscillator.v:26$34'.
Found and cleaned up 1 empty switch in `\oscillator.$proc$../oscillator.v:34$31'.
Removing empty process `oscillator.$proc$../oscillator.v:34$31'.
Removing empty process `fibonacci15.$proc$../fibonacci15.v:10$29'.
Removing empty process `fibonacci7.$proc$../fibonacci7.v:10$27'.
Removing empty process `top.$proc$TOP_V1.v:91$26'.
Removing empty process `top.$proc$TOP_V1.v:69$25'.
Removing empty process `top.$proc$TOP_V1.v:68$24'.
Found and cleaned up 2 empty switches in `\top.$proc$TOP_V1.v:121$12'.
Removing empty process `top.$proc$TOP_V1.v:121$12'.
Cleaned up 226 empty switches.

23.4. Executing FLATTEN pass (flatten design).
Using template adc_host for cells of type adc_host.
Using template Flash_to_SRAM for cells of type Flash_to_SRAM.
Using template sram16x16 for cells of type sram16x16.
Using template dds for cells of type dds.
Using template mult16x16 for cells of type mult16x16.
Using template RIIR for cells of type RIIR.
Using template fullcordic for cells of type fullcordic.
Using template UI for cells of type UI.
Using template oscillator for cells of type oscillator.
Using template pll for cells of type pll.
Using template sigma_delta for cells of type sigma_delta.
Using template spi_flash_reader for cells of type spi_flash_reader.
Using template cordic for cells of type cordic.
Using template lcd for cells of type lcd.
Using template BinToLCD for cells of type BinToLCD.
Using template fibonacci15 for cells of type fibonacci15.
Using template fibonacci7 for cells of type fibonacci7.
Using template $paramod\rotator\iteration=0\tangle=17'00010110100000000 for cells of type $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Using template $paramod\rotator\iteration=1\tangle=17'00001101010010000 for cells of type $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Using template $paramod\rotator\iteration=2\tangle=17'00000111000001001 for cells of type $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Using template $paramod\rotator\iteration=3\tangle=17'00000011100100000 for cells of type $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Using template $paramod\rotator\iteration=4\tangle=17'00000001110010011 for cells of type $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Using template $paramod\rotator\iteration=5\tangle=17'00000000111001010 for cells of type $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Using template $paramod\rotator\iteration=6\tangle=17'00000000011100101 for cells of type $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Using template $paramod\rotator\iteration=7\tangle=17'00000000001110010 for cells of type $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Using template $paramod\delay_counter\counter_width=20 for cells of type $paramod\delay_counter\counter_width=20.
Using template $paramod\signed_shifter\i=0 for cells of type $paramod\signed_shifter\i=0.
Using template $paramod\signed_shifter\i=1 for cells of type $paramod\signed_shifter\i=1.
Using template $paramod\signed_shifter\i=2 for cells of type $paramod\signed_shifter\i=2.
Using template $paramod\signed_shifter\i=3 for cells of type $paramod\signed_shifter\i=3.
Using template $paramod\signed_shifter\i=4 for cells of type $paramod\signed_shifter\i=4.
Using template $paramod\signed_shifter\i=5 for cells of type $paramod\signed_shifter\i=5.
Using template $paramod\signed_shifter\i=6 for cells of type $paramod\signed_shifter\i=6.
Using template $paramod\signed_shifter\i=7 for cells of type $paramod\signed_shifter\i=7.
No more expansions possible.
Deleting now unused module $paramod\signed_shifter\i=6.
Deleting now unused module $paramod\signed_shifter\i=7.
Deleting now unused module $paramod\delay_counter\counter_width=20.
Deleting now unused module $paramod\signed_shifter\i=0.
Deleting now unused module $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Deleting now unused module $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Deleting now unused module $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Deleting now unused module $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Deleting now unused module $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Deleting now unused module $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Deleting now unused module $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Deleting now unused module $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Deleting now unused module pll.
Deleting now unused module mult16x16.
Deleting now unused module dds.
Deleting now unused module sigma_delta.
Deleting now unused module spi_flash_reader.
Deleting now unused module Flash_to_SRAM.
Deleting now unused module sram16x16.
Deleting now unused module $paramod\signed_shifter\i=1.
Deleting now unused module lcd.
Deleting now unused module BinToLCD.
Deleting now unused module UI.
Deleting now unused module cordic.
Deleting now unused module $paramod\signed_shifter\i=2.
Deleting now unused module $paramod\signed_shifter\i=3.
Deleting now unused module fullcordic.
Deleting now unused module $paramod\signed_shifter\i=4.
Deleting now unused module $paramod\signed_shifter\i=5.
Deleting now unused module RIIR.
Deleting now unused module adc_host.
Deleting now unused module oscillator.
Deleting now unused module fibonacci15.
Deleting now unused module fibonacci7.

23.5. Executing TRIBUF pass.

23.6. Executing DEMINOUT pass (demote inout ports to input or output).

23.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Warning: Driver-driver conflict for \OSC.randgen.fib [14] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [13] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [12] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [11] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [10] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [9] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [8] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [7] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [6] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [5] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [4] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [3] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [2] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [1] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [0] between cell $techmap\OSC.randgen.$procdff$3321.Q and constant 1'1 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [6] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [5] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [4] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [3] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [2] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [1] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [0] between cell $techmap\PLL.randgen.$procdff$3322.Q and constant 1'1 in top: Resolved using constant.
Removed 91 unused cells and 1157 unused wires.

23.9. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.\IO [8] is used but has no driver.
Warning: Wire top.\IO [7] is used but has no driver.
Warning: Wire top.\IO [6] is used but has no driver.
Warning: Wire top.\IO [5] is used but has no driver.
Warning: Wire top.\IO [4] is used but has no driver.
Warning: Wire top.\IO [3] is used but has no driver.
Warning: Wire top.\IO [2] is used but has no driver.
Warning: Wire top.\IO [1] is used but has no driver.
Warning: Wire top.\IO [0] is used but has no driver.
found and reported 9 problems.

23.10. Executing OPT pass (performing simple optimizations).

23.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 603 cells.

23.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3064: \UI_inst.btnt3 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3062: \UI_inst.btnt3 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3070: \UI_inst.btnt2 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3068: \UI_inst.btnt2 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3076: \UI_inst.btnt1 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3074: \UI_inst.btnt1 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3082: \UI_inst.btnt0 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$3080: \UI_inst.btnt0 -> 1'1
      Replacing known input bits on port A of cell $techmap\DDS.$procmux$1155: \DDS.islast -> 1'0
      Replacing known input bits on port A of cell $techmap\DDS.$procmux$1159: \DDS.iscos -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.diplay_number.$procmux$1957: \Y_IIR_1.outp [31:16] -> { 1'0 \Y_IIR_1.outp [30:16] }
      Replacing known input bits on port A of cell $techmap\UI_inst.diplay_number.$procmux$1985: \X_IIR_1.outp [31:16] -> { 1'0 \X_IIR_1.outp [30:16] }
      Replacing known input bits on port A of cell $techmap\X_IIR_1.$procmux$3110: \X_IIR_1.p_step -> 1'0
      Replacing known input bits on port A of cell $techmap\Y_IIR_1.$procmux$3110: \Y_IIR_1.p_step -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1605.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1607.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1618.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1620.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1632.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1634.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1649.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1651.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1667.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1669.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1686.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1688.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1706.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1708.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1734.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1736.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1763.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1765.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1793.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1795.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1826.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1828.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1860.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1862.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1895.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1897.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1931.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1933.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1993.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1223.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1229.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1236.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1244.
Removed 33 multiplexer ports.

23.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $techmap\PLL.$reduce_or$../pll.v:43$561: { \PLL.phase [25] \PLL.phase [26] \PLL.phase [27] \PLL.phase [28] \PLL.phase [29] \PLL.phase [30] \PLL.phase [31] }
    New input vector for $reduce_or cell $reduce_or$TOP_V1.v:111$3: { \CORDIC.cordicCORE.U7.x_1 [10] \CORDIC.cordicCORE.U7.x_1 [11] \CORDIC.cordicCORE.U7.x_1 [12] \CORDIC.cordicCORE.U7.x_1 [13] \CORDIC.cordicCORE.U7.x_1 [14] \CORDIC.cordicCORE.U7.x_1 [15] \CORDIC.cordicCORE.U7.x_1 [16] }
    New input vector for $reduce_or cell $techmap\UI_inst.$reduce_or$../UI/UI.v:215$187: { \UI_inst.BP [0] \UI_inst.BP [1] \UI_inst.BP [2] \UI_inst.BP [3] }
    New input vector for $reduce_and cell $techmap\PLL.$reduce_and$../pll.v:50$567: { \PLL.eP [12] \PLL.eP [13] \PLL.eP [14] \PLL.eP [15] }
    New input vector for $reduce_and cell $techmap\PLL.$reduce_and$../pll.v:50$566: { $techmap\PLL.$not$../pll.v:50$565_Y [0] $techmap\PLL.$not$../pll.v:50$565_Y [1] $techmap\PLL.$not$../pll.v:50$565_Y [2] $techmap\PLL.$not$../pll.v:50$565_Y [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:123$14: { \cnt [0] \cnt [1] \cnt [2] \cnt [3] \cnt [4] \cnt [5] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:114$8: { $not$TOP_V1.v:114$7_Y [0] $not$TOP_V1.v:114$7_Y [1] $not$TOP_V1.v:114$7_Y [2] $not$TOP_V1.v:114$7_Y [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:114$5: { \ADC.data [11] \ADC.data [12] \ADC.data [13] \ADC.data [14] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:93$162: { \UI_inst.cnt1 [0] \UI_inst.cnt1 [1] \UI_inst.cnt1 [2] \UI_inst.cnt1 [3] \UI_inst.cnt1 [4] \UI_inst.cnt1 [5] \UI_inst.cnt1 [6] \UI_inst.cnt1 [7] \UI_inst.cnt1 [8] \UI_inst.cnt1 [9] \UI_inst.cnt1 [10] \UI_inst.cnt1 [11] \UI_inst.cnt1 [12] \UI_inst.cnt1 [13] \UI_inst.cnt1 [14] \UI_inst.cnt1 [15] \UI_inst.cnt1 [16] \UI_inst.cnt1 [17] \UI_inst.cnt1 [18] \UI_inst.cnt1 [19] \UI_inst.cnt1 [20] \UI_inst.cnt1 [21] \UI_inst.cnt1 [22] \UI_inst.cnt1 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:83$158: { \UI_inst.cnt0 [0] \UI_inst.cnt0 [1] \UI_inst.cnt0 [2] \UI_inst.cnt0 [3] \UI_inst.cnt0 [4] \UI_inst.cnt0 [5] \UI_inst.cnt0 [6] \UI_inst.cnt0 [7] \UI_inst.cnt0 [8] \UI_inst.cnt0 [9] \UI_inst.cnt0 [10] \UI_inst.cnt0 [11] \UI_inst.cnt0 [12] \UI_inst.cnt0 [13] \UI_inst.cnt0 [14] \UI_inst.cnt0 [15] \UI_inst.cnt0 [16] \UI_inst.cnt0 [17] \UI_inst.cnt0 [18] \UI_inst.cnt0 [19] \UI_inst.cnt0 [20] \UI_inst.cnt0 [21] \UI_inst.cnt0 [22] \UI_inst.cnt0 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:136$179: { \UI_inst.disppos [0] \UI_inst.disppos [1] \UI_inst.disppos [2] \UI_inst.disppos [3] \UI_inst.disppos [4] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:134$178: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] \UI_inst.count [5] \UI_inst.count [6] \UI_inst.count [7] \UI_inst.count [8] \UI_inst.count [9] \UI_inst.count [10] \UI_inst.count [11] \UI_inst.count [12] \UI_inst.count [13] \UI_inst.count [14] \UI_inst.count [15] \UI_inst.count [16] \UI_inst.count [17] \UI_inst.count [18] \UI_inst.count [19] \UI_inst.count [20] \UI_inst.count [21] \UI_inst.count [22] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:113$170: { \UI_inst.cnt3 [0] \UI_inst.cnt3 [1] \UI_inst.cnt3 [2] \UI_inst.cnt3 [3] \UI_inst.cnt3 [4] \UI_inst.cnt3 [5] \UI_inst.cnt3 [6] \UI_inst.cnt3 [7] \UI_inst.cnt3 [8] \UI_inst.cnt3 [9] \UI_inst.cnt3 [10] \UI_inst.cnt3 [11] \UI_inst.cnt3 [12] \UI_inst.cnt3 [13] \UI_inst.cnt3 [14] \UI_inst.cnt3 [15] \UI_inst.cnt3 [16] \UI_inst.cnt3 [17] \UI_inst.cnt3 [18] \UI_inst.cnt3 [19] \UI_inst.cnt3 [20] \UI_inst.cnt3 [21] \UI_inst.cnt3 [22] \UI_inst.cnt3 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:103$166: { \UI_inst.cnt2 [0] \UI_inst.cnt2 [1] \UI_inst.cnt2 [2] \UI_inst.cnt2 [3] \UI_inst.cnt2 [4] \UI_inst.cnt2 [5] \UI_inst.cnt2 [6] \UI_inst.cnt2 [7] \UI_inst.cnt2 [8] \UI_inst.cnt2 [9] \UI_inst.cnt2 [10] \UI_inst.cnt2 [11] \UI_inst.cnt2 [12] \UI_inst.cnt2 [13] \UI_inst.cnt2 [14] \UI_inst.cnt2 [15] \UI_inst.cnt2 [16] \UI_inst.cnt2 [17] \UI_inst.cnt2 [18] \UI_inst.cnt2 [19] \UI_inst.cnt2 [20] \UI_inst.cnt2 [21] \UI_inst.cnt2 [22] \UI_inst.cnt2 [23] }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2945: { $techmap\UI_inst.$procmux$2897_CMP $techmap\UI_inst.$procmux$2895_CMP $techmap\UI_inst.$procmux$2891_CMP $techmap\UI_inst.$procmux$2958_CMP $techmap\UI_inst.$procmux$2957_CMP $techmap\UI_inst.$procmux$2954_CMP $techmap\UI_inst.$procmux$2951_CMP $auto$opt_reduce.cc:132:opt_mux$3331 $auto$opt_reduce.cc:132:opt_mux$3329 $auto$opt_reduce.cc:132:opt_mux$3327 $techmap\UI_inst.$procmux$2926_CMP $techmap\UI_inst.$procmux$2917_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2990: { $techmap\UI_inst.$procmux$2897_CMP $techmap\UI_inst.$procmux$2896_CMP $techmap\UI_inst.$procmux$2894_CMP $techmap\UI_inst.$procmux$2893_CMP $techmap\UI_inst.$procmux$2892_CMP $techmap\UI_inst.$procmux$2889_CMP $auto$opt_reduce.cc:132:opt_mux$3339 $auto$opt_reduce.cc:132:opt_mux$3337 $techmap\UI_inst.$procmux$2886_CMP $techmap\UI_inst.$procmux$2884_CMP $techmap\UI_inst.$procmux$2879_CMP $techmap\UI_inst.$procmux$2878_CMP $auto$opt_reduce.cc:132:opt_mux$3335 $auto$opt_reduce.cc:132:opt_mux$3333 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$3032: $auto$opt_reduce.cc:132:opt_mux$3341
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1347: { $auto$opt_reduce.cc:132:opt_mux$3345 $auto$opt_reduce.cc:132:opt_mux$3343 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1357: { $auto$opt_reduce.cc:132:opt_mux$3349 $auto$opt_reduce.cc:132:opt_mux$3347 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1472: { $auto$opt_reduce.cc:132:opt_mux$3353 $auto$opt_reduce.cc:132:opt_mux$3351 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1493: { $auto$opt_reduce.cc:132:opt_mux$3355 $techmap\UI_inst.LCD.$procmux$1402_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1565: { $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:186$429_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:187$430_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:188$431_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$432_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:190$433_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:191$434_Y $auto$opt_reduce.cc:132:opt_mux$3359 $auto$opt_reduce.cc:132:opt_mux$3357 }
    New ctrl vector for $pmux cell $techmap\DDS.$procmux$1173: { $auto$opt_reduce.cc:132:opt_mux$3363 $auto$opt_reduce.cc:132:opt_mux$3361 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2901: { $techmap\UI_inst.$procmux$2897_CMP $techmap\UI_inst.$procmux$2896_CMP $techmap\UI_inst.$procmux$2895_CMP $techmap\UI_inst.$procmux$2893_CMP $techmap\UI_inst.$procmux$2891_CMP $auto$opt_reduce.cc:132:opt_mux$3369 $techmap\UI_inst.$procmux$2889_CMP $techmap\UI_inst.$procmux$2888_CMP $auto$opt_reduce.cc:132:opt_mux$3367 $techmap\UI_inst.$procmux$2886_CMP $techmap\UI_inst.$procmux$2885_CMP $techmap\UI_inst.$procmux$2929_CMP $techmap\UI_inst.$procmux$2926_CMP $techmap\UI_inst.$procmux$2917_CMP $techmap\UI_inst.$procmux$2884_CMP $auto$opt_reduce.cc:132:opt_mux$3365 $techmap\UI_inst.$procmux$2866_CMP $techmap\UI_inst.$procmux$2902_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1936: { $techmap\UI_inst.diplay_number.$procmux$1990_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1978_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1962_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP $auto$opt_reduce.cc:132:opt_mux$3371 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2002: { $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $auto$opt_reduce.cc:132:opt_mux$3375 $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP $auto$opt_reduce.cc:132:opt_mux$3373 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2080: { $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $auto$opt_reduce.cc:132:opt_mux$3377 $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP $techmap\UI_inst.diplay_number.$procmux$1940_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2160: { $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $auto$opt_reduce.cc:132:opt_mux$3381 $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $auto$opt_reduce.cc:132:opt_mux$3379 $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2292: { $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $auto$opt_reduce.cc:132:opt_mux$3385 $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $auto$opt_reduce.cc:132:opt_mux$3383 $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2865: { $techmap\UI_inst.$procmux$2897_CMP $techmap\UI_inst.$procmux$2896_CMP $techmap\UI_inst.$procmux$2895_CMP $techmap\UI_inst.$procmux$2893_CMP $techmap\UI_inst.$procmux$2892_CMP $techmap\UI_inst.$procmux$2891_CMP $techmap\UI_inst.$procmux$2889_CMP $techmap\UI_inst.$procmux$2888_CMP $techmap\UI_inst.$procmux$2887_CMP $techmap\UI_inst.$procmux$2886_CMP $techmap\UI_inst.$procmux$2885_CMP $techmap\UI_inst.$procmux$2884_CMP $auto$opt_reduce.cc:132:opt_mux$3387 $techmap\UI_inst.$procmux$2878_CMP $techmap\UI_inst.$procmux$2869_CMP $techmap\UI_inst.$procmux$2866_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2448: { $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $auto$opt_reduce.cc:132:opt_mux$3389 $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2541: { $techmap\UI_inst.diplay_number.$procmux$1992_CMP $techmap\UI_inst.diplay_number.$procmux$1990_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $techmap\UI_inst.diplay_number.$procmux$1964_CMP $auto$opt_reduce.cc:132:opt_mux$3395 $techmap\UI_inst.diplay_number.$procmux$1962_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $auto$opt_reduce.cc:132:opt_mux$3393 $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP $techmap\UI_inst.diplay_number.$procmux$1940_CMP $techmap\UI_inst.diplay_number.$procmux$1939_CMP $auto$opt_reduce.cc:132:opt_mux$3391 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2677: { $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP $techmap\UI_inst.diplay_number.$procmux$1940_CMP $auto$opt_reduce.cc:132:opt_mux$3397 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3326: { $techmap\UI_inst.$procmux$2929_CMP $techmap\UI_inst.$procmux$2892_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3330: { $techmap\UI_inst.$procmux$2950_CMP $techmap\UI_inst.$procmux$2896_CMP $techmap\UI_inst.$procmux$2894_CMP $techmap\UI_inst.$procmux$2893_CMP $techmap\UI_inst.$procmux$2890_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3332: { $techmap\UI_inst.$procmux$2902_CMP $techmap\UI_inst.$procmux$2890_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3350: { $techmap\UI_inst.LCD.$procmux$1473_CMP $techmap\UI_inst.LCD.$procmux$1417_CMP $techmap\UI_inst.LCD.$procmux$1411_CMP $techmap\UI_inst.LCD.$procmux$1405_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3356: { $techmap\UI_inst.LCD.$procmux$1523_CMP $techmap\UI_inst.LCD.$procmux$1502_CMP $techmap\UI_inst.LCD.$procmux$1424_CMP }
  Optimizing cells in module \top.
Performed a total of 38 changes.

23.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 188 cells.

23.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

23.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 825 unused wires.

23.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.10.9. Rerunning OPT passes. (Maybe there is more to do..)

23.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2806: { $techmap\UI_inst.$eq$../UI/UI.v:124$174_Y $auto$opt_reduce.cc:132:opt_mux$3399 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2828: { $techmap\UI_inst.$eq$../UI/UI.v:124$174_Y $auto$opt_reduce.cc:132:opt_mux$3401 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2850: $auto$opt_reduce.cc:132:opt_mux$3403
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1310: { $auto$opt_reduce.cc:132:opt_mux$3405 $techmap\UI_inst.LCD.$procmux$1312_CMP $techmap\UI_inst.LCD.$procmux$1311_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1330: { $techmap\UI_inst.LCD.$procmux$1324_CMP $techmap\UI_inst.LCD.$procmux$1321_CMP $auto$opt_reduce.cc:132:opt_mux$3407 $techmap\UI_inst.LCD.$procmux$1315_CMP $techmap\UI_inst.LCD.$procmux$1311_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1398: { $techmap\UI_inst.LCD.$procmux$1424_CMP $techmap\UI_inst.LCD.$procmux$1420_CMP $techmap\UI_inst.LCD.$procmux$1414_CMP $auto$opt_reduce.cc:132:opt_mux$3411 $auto$opt_reduce.cc:132:opt_mux$3409 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$432_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1434: { $techmap\UI_inst.LCD.$procmux$1424_CMP $auto$opt_reduce.cc:132:opt_mux$3413 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$432_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1936: { $techmap\UI_inst.diplay_number.$procmux$1990_CMP $techmap\UI_inst.diplay_number.$procmux$1978_CMP $techmap\UI_inst.diplay_number.$procmux$1962_CMP $techmap\UI_inst.diplay_number.$procmux$1950_CMP $auto$opt_reduce.cc:132:opt_mux$3415 $auto$opt_reduce.cc:132:opt_mux$3371 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2002: { $auto$opt_reduce.cc:132:opt_mux$3375 $auto$opt_reduce.cc:132:opt_mux$3417 $auto$opt_reduce.cc:132:opt_mux$3373 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2080: { $auto$opt_reduce.cc:132:opt_mux$3377 $auto$opt_reduce.cc:132:opt_mux$3419 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2160: { $auto$opt_reduce.cc:132:opt_mux$3375 $auto$opt_reduce.cc:132:opt_mux$3433 $auto$opt_reduce.cc:132:opt_mux$3431 $auto$opt_reduce.cc:132:opt_mux$3429 $auto$opt_reduce.cc:132:opt_mux$3427 $auto$opt_reduce.cc:132:opt_mux$3379 $auto$opt_reduce.cc:132:opt_mux$3425 $auto$opt_reduce.cc:132:opt_mux$3423 $auto$opt_reduce.cc:132:opt_mux$3421 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2226: $auto$opt_reduce.cc:132:opt_mux$3435
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2292: { $auto$opt_reduce.cc:132:opt_mux$3375 $auto$opt_reduce.cc:132:opt_mux$3449 $auto$opt_reduce.cc:132:opt_mux$3447 $auto$opt_reduce.cc:132:opt_mux$3445 $auto$opt_reduce.cc:132:opt_mux$3443 $auto$opt_reduce.cc:132:opt_mux$3379 $auto$opt_reduce.cc:132:opt_mux$3441 $auto$opt_reduce.cc:132:opt_mux$3439 $auto$opt_reduce.cc:132:opt_mux$3437 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2448: { $auto$opt_reduce.cc:132:opt_mux$3375 $auto$opt_reduce.cc:132:opt_mux$3453 $auto$opt_reduce.cc:132:opt_mux$3451 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2541: { $techmap\UI_inst.diplay_number.$procmux$1992_CMP $techmap\UI_inst.diplay_number.$procmux$1990_CMP $techmap\UI_inst.diplay_number.$procmux$1964_CMP $auto$opt_reduce.cc:132:opt_mux$3395 $techmap\UI_inst.diplay_number.$procmux$1962_CMP $auto$opt_reduce.cc:132:opt_mux$3379 $auto$opt_reduce.cc:132:opt_mux$3457 $auto$opt_reduce.cc:132:opt_mux$3455 $techmap\UI_inst.diplay_number.$procmux$1939_CMP $auto$opt_reduce.cc:132:opt_mux$3391 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2677: { $auto$opt_reduce.cc:132:opt_mux$3459 $auto$opt_reduce.cc:132:opt_mux$3397 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3416: { $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3418: { $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1940_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3434: { $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1940_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3450: { $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3456: { $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3458: { $techmap\UI_inst.diplay_number.$procmux$1979_CMP $techmap\UI_inst.diplay_number.$procmux$1968_CMP $techmap\UI_inst.diplay_number.$procmux$1951_CMP $techmap\UI_inst.diplay_number.$procmux$1940_CMP $techmap\UI_inst.diplay_number.$procmux$1932_CMP $techmap\UI_inst.diplay_number.$procmux$1896_CMP $techmap\UI_inst.diplay_number.$procmux$1861_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $techmap\UI_inst.diplay_number.$procmux$1794_CMP $techmap\UI_inst.diplay_number.$procmux$1764_CMP $techmap\UI_inst.diplay_number.$procmux$1735_CMP $techmap\UI_inst.diplay_number.$procmux$1707_CMP $techmap\UI_inst.diplay_number.$procmux$1687_CMP $techmap\UI_inst.diplay_number.$procmux$1668_CMP $techmap\UI_inst.diplay_number.$procmux$1650_CMP $techmap\UI_inst.diplay_number.$procmux$1633_CMP $techmap\UI_inst.diplay_number.$procmux$1619_CMP $techmap\UI_inst.diplay_number.$procmux$1606_CMP }
  Optimizing cells in module \top.
Performed a total of 22 changes.

23.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 13 cells.

23.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

23.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.

23.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.10.16. Rerunning OPT passes. (Maybe there is more to do..)

23.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

23.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 1 cells.

23.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

23.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.

23.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.10.23. Rerunning OPT passes. (Maybe there is more to do..)

23.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

23.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

23.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.10.30. Finished OPT passes. (There is nothing left to do.)

23.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$TOP_V1.v:122$13 ($add).
Removed top 7 bits (of 32) from port Y of cell top.$add$TOP_V1.v:122$13 ($add).
Removed top 2 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:35$43 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:34$42 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:33$41 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\ADC.$add$../adc_host.v:31$40 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\ADC.$add$../adc_host.v:31$40 ($add).
Removed top 31 bits (of 32) from mux cell top.$techmap\ADC.$ternary$../adc_host.v:25$38 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$494 ($add).
Removed top 15 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$494 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$493 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$493 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\DDS.$procmux$1176_CMP0 ($eq).
Removed top 16 bits (of 48) from port Y of cell top.$techmap\X_IIR_1.$sshr$../filter/RIIR.v:53$65 ($sshr).
Removed top 1 bits (of 5) from port Y of cell top.$techmap\X_IIR_1.$sub$../filter/RIIR.v:34$54 ($sub).
Removed top 1 bits (of 5) from port A of cell top.$techmap\X_IIR_1.$sub$../filter/RIIR.v:34$54 ($sub).
Removed top 16 bits (of 48) from port Y of cell top.$techmap\Y_IIR_1.$sshr$../filter/RIIR.v:53$65 ($sshr).
Removed top 1 bits (of 2) from mux cell top.$techmap\CORDIC.$procmux$3102 ($mux).
Removed top 1 bits (of 17) from port B of cell top.$techmap\CORDIC.$add$../cordic/fullcordic.v:42$127 ($add).
Removed top 2 bits (of 17) from port B of cell top.$techmap\CORDIC.$add$../cordic/fullcordic.v:41$125 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\CORDIC.$eq$../cordic/fullcordic.v:41$124 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$3012_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2990 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2974 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2963_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2958_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2955 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2952 ($mux).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2945 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2927 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2918 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2909 ($mux).
Removed top 5 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2906 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2897_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2896_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2895_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2894_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2893_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2892_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2891_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2890_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2889_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2888_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2887_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2886_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2885_CMP0 ($eq).
Removed top 7 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2880 ($mux).
Removed top 6 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2870 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2867 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2788_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2782_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2776_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2770_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2764_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2762_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2761_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:422$219 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:422$219 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:421$218 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:421$218 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:396$211 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:364$209 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:364$209 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:363$208 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:363$208 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:252$193 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:252$193 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:251$192 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:251$192 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:238$190 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:212$186 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:212$186 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:211$185 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:211$185 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:138$183 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:138$183 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:131$177 ($add).
Removed top 9 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:131$177 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:123$173 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:123$173 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:112$169 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:112$169 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:102$165 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:102$165 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:92$161 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:92$161 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:82$157 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:82$157 ($add).
Removed top 2 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3148_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3147_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3146_CMP0 ($eq).
Removed top 1 bits (of 25) from mux cell top.$techmap\OSC.$procmux$3141 ($pmux).
Removed top 14 bits (of 15) from port B of cell top.$techmap\OSC.$add$../oscillator.v:36$33 ($add).
Removed top 12 bits (of 17) from port B of cell top.$techmap\PLL.$add$../pll.v:65$575 ($add).
Removed top 10 bits (of 17) from port B of cell top.$techmap\PLL.$sub$../pll.v:65$574 ($sub).
Removed top 1 bits (of 16) from port B of cell top.$techmap\PLL.$sub$../pll.v:44$562 ($sub).
Removed top 6 bits (of 7) from port B of cell top.$techmap\PLL.$add$../pll.v:32$560 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$techmap\PLL.$add$../pll.v:32$560 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\F2SRAM.SPI_READER.$eq$../spi_flash_reader.v:169$519 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$516 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$516 ($add).
Removed top 1 bits (of 5) from mux cell top.$techmap\UI_inst.LCD.$procmux$1499 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1473_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1423_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1420_CMP0 ($eq).
Removed top 2 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1418 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1417_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1414_CMP0 ($eq).
Removed top 7 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1412 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1411_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1408_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1405_CMP0 ($eq).
Removed top 16 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1403 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1402_CMP0 ($eq).
Removed top 9 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1400 ($mux).
Removed top 3 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1396 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1324_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1321_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1318_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$447 ($add).
Removed top 3 bits (of 7) from port B of cell top.$techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:396$446 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$420 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2671 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2664 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2599 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2551 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1991_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1990_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1979_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1978_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1968_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1967_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1966_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1965_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1932_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1896_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1861_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1827_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1794_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1764_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1735_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$eq$../UI/BinToLCD.v:113$275 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$ne$../UI/BinToLCD.v:112$274 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$270 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$270 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$244 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$244 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$769 ($gt).
Removed top 3 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$767 ($sub).
Removed top 3 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$764 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$761 ($gt).
Removed top 4 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$759 ($sub).
Removed top 4 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$756 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$753 ($gt).
Removed top 5 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$751 ($sub).
Removed top 5 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$748 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$745 ($gt).
Removed top 6 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$743 ($sub).
Removed top 6 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$740 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$737 ($gt).
Removed top 7 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$735 ($sub).
Removed top 7 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$732 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$729 ($gt).
Removed top 8 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$727 ($sub).
Removed top 8 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$724 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$721 ($gt).
Removed top 9 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$719 ($sub).
Removed top 9 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$716 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$713 ($gt).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U1.y_shifter.$or$../cordic/cordic.v:201$898 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U1.x_shifter.$or$../cordic/cordic.v:201$898 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.y_shifter.$or$../cordic/cordic.v:201$893 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.y_shifter.$or$../cordic/cordic.v:201$890 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.x_shifter.$or$../cordic/cordic.v:201$893 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.x_shifter.$or$../cordic/cordic.v:201$890 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$884 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$881 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$878 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$884 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$881 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$878 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$871 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$868 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$865 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$862 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$871 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$868 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$865 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$862 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$854 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$851 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$848 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$845 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$842 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$854 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$851 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$848 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$845 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$842 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$833 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$830 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$827 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$824 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$821 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$818 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$833 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$830 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$827 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$824 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$821 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$818 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$808 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$805 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$802 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$799 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$796 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$793 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$790 ($or).
Removed top 24 bits (of 32) from wire top.$techmap\ADC.$add$../adc_host.v:31$40_Y.
Removed top 1 bits (of 2) from wire top.$techmap\CORDIC.$procmux$3102_Y.
Removed top 29 bits (of 32) from wire top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$516_Y.
Removed top 1 bits (of 25) from wire top.$techmap\OSC.$0\phaseword[24:0].
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:102$165_Y.
Removed top 16 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:131$177_Y.
Removed top 27 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:138$183_Y.
Removed top 30 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:251$192_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:82$157_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2867_Y.
Removed top 6 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2870_Y.
Removed top 7 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2880_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2906_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2909_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2918_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2927_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2945_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2952_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2955_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2974_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2976_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2978_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2990_Y.
Removed top 3 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1396_Y.
Removed top 15 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1400_Y.
Removed top 16 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1403_Y.
Removed top 7 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1412_Y.
Removed top 2 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1418_Y.
Removed top 1 bits (of 5) from wire top.$techmap\UI_inst.LCD.$procmux$1499_Y.
Removed top 28 bits (of 32) from wire top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$270_Y.
Removed top 11 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2158_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2160_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2163_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2167_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2172_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2176_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2180_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2184_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2224_Y.
Removed top 3 bits (of 16) from wire top.$techmap\UI_inst.diplay_number.$procmux$2226_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2551_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2553_Y.
Removed top 7 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2599_Y.
Removed top 4 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2664_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2667_Y.
Removed top 7 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2671_Y.
Removed top 1 bits (of 5) from wire top.$techmap\X_IIR_1.$sub$../filter/RIIR.v:34$54_Y.
Removed top 11 bits (of 16) from wire top.DAC3.dac_val.
Removed top 1 bits (of 25) from wire top.PLL.phase_out_temp.
Removed top 1 bits (of 8) from wire top.UI_inst.LCD.ramaddr.

23.12. Executing PEEPOPT pass (run peephole optimizers).

23.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 56 unused wires.

23.14. Executing SHARE pass (SAT-based resource sharing).

23.15. Executing TECHMAP pass (map to technology primitives).

23.15.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

23.15.2. Continuing TECHMAP pass.
Using template $paramod$3fbee094385d1f2712c8f0e44e105767be1dc65d\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.

23.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.

23.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$TOP_V1.v:122$13 ($add).
  creating $macc model for $techmap\ADC.$add$../adc_host.v:31$40 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:41$125 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:42$127 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:43$128 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$770 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$771 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$773 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$762 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$764 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$766 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$763 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$765 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$767 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$754 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$756 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$758 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$755 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$757 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$759 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$746 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$748 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$750 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$747 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$749 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$751 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$738 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$740 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$742 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$739 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$741 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$743 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$730 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$732 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$734 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$731 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$733 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$735 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$722 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$724 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$726 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$723 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$725 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$727 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$714 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$716 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$717 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$719 ($sub).
  creating $macc model for $techmap\DAC1.$add$../sigma_delta.v:21$544 ($add).
  creating $macc model for $techmap\DAC2.$add$../sigma_delta.v:21$544 ($add).
  creating $macc model for $techmap\DAC3.$add$../sigma_delta.v:21$544 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$493 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$494 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$516 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$520 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525 ($sub).
  creating $macc model for $techmap\OSC.$add$../oscillator.v:35$32 ($add).
  creating $macc model for $techmap\OSC.$add$../oscillator.v:36$33 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:32$560 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:51$569 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:65$575 ($add).
  creating $macc model for $techmap\PLL.$sub$../pll.v:44$562 ($sub).
  creating $macc model for $techmap\PLL.$sub$../pll.v:61$572 ($sub).
  creating $macc model for $techmap\PLL.$sub$../pll.v:65$574 ($sub).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:102$165 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:112$169 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:131$177 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:138$183 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:211$185 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:251$192 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:363$208 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:422$219 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:82$157 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:92$161 ($add).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:123$173 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:212$186 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:252$193 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:364$209 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:421$218 ($sub).
  creating $macc model for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$447 ($add).
  creating $macc model for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$778 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$270 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$249 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$269 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$273 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$244 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$248 ($sub).
  creating $macc model for $techmap\X_IIR_1.$add$../filter/RIIR.v:42$56 ($add).
  creating $macc model for $techmap\X_IIR_1.$add$../filter/RIIR.v:50$64 ($add).
  creating $macc model for $techmap\X_IIR_1.$sub$../filter/RIIR.v:34$54 ($sub).
  creating $macc model for $techmap\X_IIR_1.$sub$../filter/RIIR.v:47$63 ($sub).
  creating $macc model for $techmap\Y_IIR_1.$add$../filter/RIIR.v:50$64 ($add).
  creating $macc model for $techmap\Y_IIR_1.$sub$../filter/RIIR.v:47$63 ($sub).
  merging $macc model for $techmap\PLL.$sub$../pll.v:65$574 into $techmap\PLL.$add$../pll.v:65$575.
  creating $alu model for $macc $techmap\Y_IIR_1.$add$../filter/RIIR.v:50$64.
  creating $alu model for $macc $techmap\X_IIR_1.$sub$../filter/RIIR.v:47$63.
  creating $alu model for $macc $techmap\X_IIR_1.$sub$../filter/RIIR.v:34$54.
  creating $alu model for $macc $techmap\X_IIR_1.$add$../filter/RIIR.v:50$64.
  creating $alu model for $macc $techmap\X_IIR_1.$add$../filter/RIIR.v:42$56.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$248.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$244.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$273.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$269.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$249.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$270.
  creating $alu model for $macc $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$778.
  creating $alu model for $macc $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$447.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:421$218.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:364$209.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:252$193.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:212$186.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:123$173.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:92$161.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:82$157.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:422$219.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:363$208.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:251$192.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:211$185.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:138$183.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:131$177.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:112$169.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:102$165.
  creating $alu model for $macc $techmap\Y_IIR_1.$sub$../filter/RIIR.v:47$63.
  creating $alu model for $macc $techmap\PLL.$sub$../pll.v:61$572.
  creating $alu model for $macc $techmap\PLL.$sub$../pll.v:44$562.
  creating $alu model for $macc $techmap\PLL.$add$../pll.v:51$569.
  creating $alu model for $macc $techmap\PLL.$add$../pll.v:32$560.
  creating $alu model for $macc $techmap\OSC.$add$../oscillator.v:36$33.
  creating $alu model for $macc $techmap\OSC.$add$../oscillator.v:35$32.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$520.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$516.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$494.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$493.
  creating $alu model for $macc $techmap\DAC3.$add$../sigma_delta.v:21$544.
  creating $alu model for $macc $techmap\DAC2.$add$../sigma_delta.v:21$544.
  creating $alu model for $macc $techmap\DAC1.$add$../sigma_delta.v:21$544.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$719.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$717.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$716.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$714.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$727.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$725.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$723.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$726.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$724.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$722.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$735.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$733.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$731.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$734.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$732.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$730.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$743.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$741.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$739.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$742.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$740.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$738.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$751.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$749.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$747.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$750.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$748.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$746.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$759.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$757.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$755.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$758.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$756.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$754.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$767.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$765.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$763.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$766.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$764.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$762.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$773.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$771.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$770.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:43$128.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:42$127.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:41$125.
  creating $alu model for $macc $techmap\ADC.$add$../adc_host.v:31$40.
  creating $alu model for $macc $add$TOP_V1.v:122$13.
  creating $macc cell for $techmap\PLL.$add$../pll.v:65$575: $auto$alumacc.cc:365:replace_macc$3512
  creating $alu model for $techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$769 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$761 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$753 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$745 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$737 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$729 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$721 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$713 ($gt): new $alu
  creating $alu model for $techmap\X_IIR_1.$ge$../filter/RIIR.v:32$53 ($ge): new $alu
  creating $alu cell for $techmap\X_IIR_1.$ge$../filter/RIIR.v:32$53: $auto$alumacc.cc:485:replace_alu$3522
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$713: $auto$alumacc.cc:485:replace_alu$3531
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$721: $auto$alumacc.cc:485:replace_alu$3538
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$729: $auto$alumacc.cc:485:replace_alu$3545
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$737: $auto$alumacc.cc:485:replace_alu$3552
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$745: $auto$alumacc.cc:485:replace_alu$3559
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$753: $auto$alumacc.cc:485:replace_alu$3566
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$761: $auto$alumacc.cc:485:replace_alu$3573
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$769: $auto$alumacc.cc:485:replace_alu$3580
  creating $alu cell for $add$TOP_V1.v:122$13: $auto$alumacc.cc:485:replace_alu$3587
  creating $alu cell for $techmap\ADC.$add$../adc_host.v:31$40: $auto$alumacc.cc:485:replace_alu$3590
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:41$125: $auto$alumacc.cc:485:replace_alu$3593
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:42$127: $auto$alumacc.cc:485:replace_alu$3596
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:43$128: $auto$alumacc.cc:485:replace_alu$3599
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$771: $auto$alumacc.cc:485:replace_alu$3602
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$770: $auto$alumacc.cc:485:replace_alu$3605
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$773: $auto$alumacc.cc:485:replace_alu$3608
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$764: $auto$alumacc.cc:485:replace_alu$3611
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$766: $auto$alumacc.cc:485:replace_alu$3614
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$763: $auto$alumacc.cc:485:replace_alu$3617
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$762: $auto$alumacc.cc:485:replace_alu$3620
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$765: $auto$alumacc.cc:485:replace_alu$3623
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$767: $auto$alumacc.cc:485:replace_alu$3626
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$754: $auto$alumacc.cc:485:replace_alu$3629
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$756: $auto$alumacc.cc:485:replace_alu$3632
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$758: $auto$alumacc.cc:485:replace_alu$3635
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$755: $auto$alumacc.cc:485:replace_alu$3638
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$757: $auto$alumacc.cc:485:replace_alu$3641
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$759: $auto$alumacc.cc:485:replace_alu$3644
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$746: $auto$alumacc.cc:485:replace_alu$3647
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$748: $auto$alumacc.cc:485:replace_alu$3650
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$750: $auto$alumacc.cc:485:replace_alu$3653
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$747: $auto$alumacc.cc:485:replace_alu$3656
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$749: $auto$alumacc.cc:485:replace_alu$3659
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$751: $auto$alumacc.cc:485:replace_alu$3662
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$740: $auto$alumacc.cc:485:replace_alu$3665
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$742: $auto$alumacc.cc:485:replace_alu$3668
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$739: $auto$alumacc.cc:485:replace_alu$3671
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$738: $auto$alumacc.cc:485:replace_alu$3674
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$741: $auto$alumacc.cc:485:replace_alu$3677
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$743: $auto$alumacc.cc:485:replace_alu$3680
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$732: $auto$alumacc.cc:485:replace_alu$3683
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$734: $auto$alumacc.cc:485:replace_alu$3686
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$731: $auto$alumacc.cc:485:replace_alu$3689
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$730: $auto$alumacc.cc:485:replace_alu$3692
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$733: $auto$alumacc.cc:485:replace_alu$3695
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$735: $auto$alumacc.cc:485:replace_alu$3698
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$724: $auto$alumacc.cc:485:replace_alu$3701
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$726: $auto$alumacc.cc:485:replace_alu$3704
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$723: $auto$alumacc.cc:485:replace_alu$3707
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$722: $auto$alumacc.cc:485:replace_alu$3710
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$725: $auto$alumacc.cc:485:replace_alu$3713
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$727: $auto$alumacc.cc:485:replace_alu$3716
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$714: $auto$alumacc.cc:485:replace_alu$3719
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$716: $auto$alumacc.cc:485:replace_alu$3722
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$717: $auto$alumacc.cc:485:replace_alu$3725
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$719: $auto$alumacc.cc:485:replace_alu$3728
  creating $alu cell for $techmap\DAC1.$add$../sigma_delta.v:21$544: $auto$alumacc.cc:485:replace_alu$3731
  creating $alu cell for $techmap\DAC2.$add$../sigma_delta.v:21$544: $auto$alumacc.cc:485:replace_alu$3734
  creating $alu cell for $techmap\DAC3.$add$../sigma_delta.v:21$544: $auto$alumacc.cc:485:replace_alu$3737
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$493: $auto$alumacc.cc:485:replace_alu$3740
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$494: $auto$alumacc.cc:485:replace_alu$3743
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$516: $auto$alumacc.cc:485:replace_alu$3746
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$520: $auto$alumacc.cc:485:replace_alu$3749
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525: $auto$alumacc.cc:485:replace_alu$3752
  creating $alu cell for $techmap\OSC.$add$../oscillator.v:35$32: $auto$alumacc.cc:485:replace_alu$3755
  creating $alu cell for $techmap\OSC.$add$../oscillator.v:36$33: $auto$alumacc.cc:485:replace_alu$3758
  creating $alu cell for $techmap\PLL.$add$../pll.v:32$560: $auto$alumacc.cc:485:replace_alu$3761
  creating $alu cell for $techmap\PLL.$add$../pll.v:51$569: $auto$alumacc.cc:485:replace_alu$3764
  creating $alu cell for $techmap\PLL.$sub$../pll.v:44$562: $auto$alumacc.cc:485:replace_alu$3767
  creating $alu cell for $techmap\PLL.$sub$../pll.v:61$572: $auto$alumacc.cc:485:replace_alu$3770
  creating $alu cell for $techmap\Y_IIR_1.$sub$../filter/RIIR.v:47$63: $auto$alumacc.cc:485:replace_alu$3773
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:102$165: $auto$alumacc.cc:485:replace_alu$3776
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:112$169: $auto$alumacc.cc:485:replace_alu$3779
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:131$177: $auto$alumacc.cc:485:replace_alu$3782
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:138$183: $auto$alumacc.cc:485:replace_alu$3785
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:211$185: $auto$alumacc.cc:485:replace_alu$3788
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:251$192: $auto$alumacc.cc:485:replace_alu$3791
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:363$208: $auto$alumacc.cc:485:replace_alu$3794
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:422$219: $auto$alumacc.cc:485:replace_alu$3797
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:82$157: $auto$alumacc.cc:485:replace_alu$3800
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:92$161: $auto$alumacc.cc:485:replace_alu$3803
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:123$173: $auto$alumacc.cc:485:replace_alu$3806
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:212$186: $auto$alumacc.cc:485:replace_alu$3809
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:252$193: $auto$alumacc.cc:485:replace_alu$3812
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:364$209: $auto$alumacc.cc:485:replace_alu$3815
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:421$218: $auto$alumacc.cc:485:replace_alu$3818
  creating $alu cell for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$447: $auto$alumacc.cc:485:replace_alu$3821
  creating $alu cell for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$778: $auto$alumacc.cc:485:replace_alu$3824
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$270: $auto$alumacc.cc:485:replace_alu$3827
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$249: $auto$alumacc.cc:485:replace_alu$3830
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$269: $auto$alumacc.cc:485:replace_alu$3833
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$273: $auto$alumacc.cc:485:replace_alu$3836
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$244: $auto$alumacc.cc:485:replace_alu$3839
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$248: $auto$alumacc.cc:485:replace_alu$3842
  creating $alu cell for $techmap\X_IIR_1.$add$../filter/RIIR.v:42$56: $auto$alumacc.cc:485:replace_alu$3845
  creating $alu cell for $techmap\X_IIR_1.$add$../filter/RIIR.v:50$64: $auto$alumacc.cc:485:replace_alu$3848
  creating $alu cell for $techmap\X_IIR_1.$sub$../filter/RIIR.v:34$54: $auto$alumacc.cc:485:replace_alu$3851
  creating $alu cell for $techmap\X_IIR_1.$sub$../filter/RIIR.v:47$63: $auto$alumacc.cc:485:replace_alu$3854
  creating $alu cell for $techmap\Y_IIR_1.$add$../filter/RIIR.v:50$64: $auto$alumacc.cc:485:replace_alu$3857
  created 100 $alu and 1 $macc cells.

23.19. Executing OPT pass (performing simple optimizations).

23.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$3527: { $auto$alumacc.cc:501:replace_alu$3523 [0] $auto$alumacc.cc:501:replace_alu$3523 [1] $auto$alumacc.cc:501:replace_alu$3523 [2] $auto$alumacc.cc:501:replace_alu$3523 [3] $auto$alumacc.cc:501:replace_alu$3523 [4] }
  Optimizing cells in module \top.
Performed a total of 1 changes.

23.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

23.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 10 unused wires.

23.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.19.9. Rerunning OPT passes. (Maybe there is more to do..)

23.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

23.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

23.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.19.16. Finished OPT passes. (There is nothing left to do.)

23.20. Executing FSM pass (extract and optimize FSM).

23.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.CORDIC.cordicCORE.U0.z_1 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.CORDIC.quadmem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.SPI_READER.fsm_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.spi_addr as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.OSC.phaseword as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.BP as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.SF_D1 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.display_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.main_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_state as FSM state register:
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.AngelaMerkel as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.pos as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

23.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

23.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

23.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

23.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

23.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

23.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

23.21. Executing OPT pass (performing simple optimizations).

23.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

23.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.21.5. Finished fast OPT passes.

23.22. Executing MEMORY pass.

23.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

23.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

23.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

23.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

23.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

23.25. Executing TECHMAP pass (map to technology primitives).

23.25.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

23.25.2. Continuing TECHMAP pass.
No more expansions possible.

23.26. Executing ICE40_BRAMINIT pass.

23.27. Executing OPT pass (performing simple optimizations).

23.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

23.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 123 unused wires.

23.27.5. Finished fast OPT passes.

23.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

23.29. Executing OPT pass (performing simple optimizations).

23.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$129:
      Old ports: A={ $techmap\CORDIC.$add$../cordic/fullcordic.v:43$128_Y [16:9] \CORDIC.cordicCORE.U7.z_1 [8:0] }, B={ $techmap\CORDIC.$add$../cordic/fullcordic.v:42$127_Y [16:10] \CORDIC.cordicCORE.U7.z_1 [9:0] }, Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$129_Y
      New ports: A=$techmap\CORDIC.$add$../cordic/fullcordic.v:43$128_Y [16:9], B={ $techmap\CORDIC.$add$../cordic/fullcordic.v:42$127_Y [16:10] \CORDIC.cordicCORE.U7.z_1 [9] }, Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$129_Y [16:9]
      New connections: $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$129_Y [8:0] = \CORDIC.cordicCORE.U7.z_1 [8:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U0.$procmux$904:
      Old ports: A=17'11101001100000000, B=17'00010110100000000, Y=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y
      New ports: A=2'01, B=2'10, Y=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10:9]
      New connections: { $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [16:11] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [8:0] } = { $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10:9] $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10] 9'100000000 }
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U1.$procmux$934:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$767_Y [16:4] \CORDIC.cordicCORE.U0.z_1 [3:0] }, B={ $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$764_Y [16:4] \CORDIC.cordicCORE.U0.z_1 [3:0] }, Y=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$767_Y [16:4], B=$techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$764_Y [16:4], Y=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [16:4]
      New connections: $techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [3:0] = \CORDIC.cordicCORE.U0.z_1 [3:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U3.$procmux$994:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$751_Y [16:5] \CORDIC.cordicCORE.U2.z_1 [4:0] }, B={ $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$748_Y [16:5] \CORDIC.cordicCORE.U2.z_1 [4:0] }, Y=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$751_Y [16:5], B=$techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$748_Y [16:5], Y=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [16:5]
      New connections: $techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [4:0] = \CORDIC.cordicCORE.U2.z_1 [4:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U5.$procmux$1054:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$735_Y [16:1] \CORDIC.cordicCORE.U4.z_1 [0] }, B={ $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$732_Y [16:1] \CORDIC.cordicCORE.U4.z_1 [0] }, Y=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$735_Y [16:1], B=$techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$732_Y [16:1], Y=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [16:1]
      New connections: $techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [0] = \CORDIC.cordicCORE.U4.z_1 [0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U7.$procmux$1114:
      Old ports: A={ $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$719_Y [16:1] \CORDIC.cordicCORE.U6.z_1 [0] }, B={ $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$716_Y [16:1] \CORDIC.cordicCORE.U6.z_1 [0] }, Y=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y
      New ports: A=$techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$719_Y [16:1], B=$techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$716_Y [16:1], Y=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [16:1]
      New connections: $techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [0] = \CORDIC.cordicCORE.U6.z_1 [0]
    Consolidated identical input bits for $pmux cell $techmap\OSC.$procmux$3141:
      Old ports: A=24'000000001110100100000100, B=168'000000011101001000001000000000111010010000010001000010010001101000101011000100100011010001010110001001000110100010101100010110110000010110110000101101100000101101100000, Y=$auto$wreduce.cc:460:run$3463 [23:0]
      New ports: A=22'0000000111010100000100, B=154'0000001110101000001000000001110100000001000100010010001110001010110010010001100001010110000010001101001010110001110110000001101100001010110000011101100000, Y={ $auto$wreduce.cc:460:run$3463 [23:22] $auto$wreduce.cc:460:run$3463 [20:11] $auto$wreduce.cc:460:run$3463 [9:0] }
      New connections: { $auto$wreduce.cc:460:run$3463 [21] $auto$wreduce.cc:460:run$3463 [10] } = { $auto$wreduce.cc:460:run$3463 [18] $auto$wreduce.cc:460:run$3463 [4] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2867:
      Old ports: A=5'00000, B=5'10101, Y=$auto$wreduce.cc:460:run$3469 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3469 [0]
      New connections: $auto$wreduce.cc:460:run$3469 [4:1] = { $auto$wreduce.cc:460:run$3469 [0] 1'0 $auto$wreduce.cc:460:run$3469 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2870:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:460:run$3470 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3470 [0]
      New connections: $auto$wreduce.cc:460:run$3470 [1] = $auto$wreduce.cc:460:run$3470 [0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2872:
      Old ports: A={ 6'001100 $auto$wreduce.cc:460:run$3470 [1:0] }, B=8'00110110, Y=$techmap\UI_inst.$procmux$2872_Y
      New ports: A={ 1'0 $auto$wreduce.cc:460:run$3470 [1:0] }, B=3'110, Y=$techmap\UI_inst.$procmux$2872_Y [2:0]
      New connections: $techmap\UI_inst.$procmux$2872_Y [7:3] = 5'00110
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2882:
      Old ports: A={ 7'0011000 $auto$wreduce.cc:460:run$3471 [0] }, B=8'00110011, Y=$techmap\UI_inst.$procmux$2882_Y
      New ports: A={ 1'0 $auto$wreduce.cc:460:run$3471 [0] }, B=2'11, Y=$techmap\UI_inst.$procmux$2882_Y [1:0]
      New connections: $techmap\UI_inst.$procmux$2882_Y [7:2] = 6'001100
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2906:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:460:run$3472 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3472 [0]
      New connections: $auto$wreduce.cc:460:run$3472 [2:1] = { $auto$wreduce.cc:460:run$3472 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2909:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:460:run$3473 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$3473 [4]
      New connections: $auto$wreduce.cc:460:run$3473 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2911:
      Old ports: A={ 3'001 $auto$wreduce.cc:460:run$3473 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2911_Y
      New ports: A=$auto$wreduce.cc:460:run$3473 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2911_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2911_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2918:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:460:run$3474 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:460:run$3474 [4]
      New connections: $auto$wreduce.cc:460:run$3474 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2920:
      Old ports: A={ 3'001 $auto$wreduce.cc:460:run$3474 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2920_Y
      New ports: A=$auto$wreduce.cc:460:run$3474 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2920_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2920_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2927:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:460:run$3475 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3475 [0]
      New connections: $auto$wreduce.cc:460:run$3475 [4:1] = { $auto$wreduce.cc:460:run$3475 [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2952:
      Old ports: A=5'01110, B=5'11000, Y=$auto$wreduce.cc:460:run$3477 [4:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$3477 [4] $auto$wreduce.cc:460:run$3477 [1] }
      New connections: { $auto$wreduce.cc:460:run$3477 [3:2] $auto$wreduce.cc:460:run$3477 [0] } = { 1'1 $auto$wreduce.cc:460:run$3477 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2955:
      Old ports: A=4'1001, B=4'0101, Y=$auto$wreduce.cc:460:run$3478 [3:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:460:run$3478 [3:2]
      New connections: $auto$wreduce.cc:460:run$3478 [1:0] = 2'01
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2974:
      Old ports: A=5'00000, B=5'10110, Y=$auto$wreduce.cc:460:run$3479 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3479 [1]
      New connections: { $auto$wreduce.cc:460:run$3479 [4:2] $auto$wreduce.cc:460:run$3479 [0] } = { $auto$wreduce.cc:460:run$3479 [1] 1'0 $auto$wreduce.cc:460:run$3479 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2976:
      Old ports: A={ 3'001 $auto$wreduce.cc:460:run$3479 [4:0] }, B=8'00110100, Y=$auto$wreduce.cc:460:run$3480
      New ports: A=$auto$wreduce.cc:460:run$3479 [4:0], B=5'10100, Y=$auto$wreduce.cc:460:run$3480 [4:0]
      New connections: $auto$wreduce.cc:460:run$3480 [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1396:
      Old ports: A=17'00000000000000000, B=17'10100000001010000, Y=$auto$wreduce.cc:460:run$3483 [16:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3483 [4]
      New connections: { $auto$wreduce.cc:460:run$3483 [16:5] $auto$wreduce.cc:460:run$3483 [3:0] } = { $auto$wreduce.cc:460:run$3483 [4] 1'0 $auto$wreduce.cc:460:run$3483 [4] 7'0000000 $auto$wreduce.cc:460:run$3483 [4] 5'00000 }
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$1398:
      Old ports: A=20'00000000000000000000, B={ 22'1011011100011011000000 $auto$wreduce.cc:460:run$3487 [17:0] 7'0000000 $auto$wreduce.cc:460:run$3486 [12:0] 16'0000000000000000 $auto$wreduce.cc:460:run$3485 [3:0] 9'000000000 $auto$wreduce.cc:460:run$3484 [10:0] 3'000 $auto$wreduce.cc:460:run$3483 [16:0] }, Y=$techmap\UI_inst.LCD.$0\main_delay_value[19:0]
      New ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:460:run$3487 [17:0] 6'000000 $auto$wreduce.cc:460:run$3486 [12:0] 15'000000000000000 $auto$wreduce.cc:460:run$3485 [3:0] 8'00000000 $auto$wreduce.cc:460:run$3484 [10:0] 2'00 $auto$wreduce.cc:460:run$3483 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New connections: $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [18] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1400:
      Old ports: A=11'00000000000, B=11'11111010000, Y=$auto$wreduce.cc:460:run$3484 [10:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3484 [4]
      New connections: { $auto$wreduce.cc:460:run$3484 [10:5] $auto$wreduce.cc:460:run$3484 [3:0] } = { $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1403:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:460:run$3485 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3485 [0]
      New connections: $auto$wreduce.cc:460:run$3485 [3:1] = { $auto$wreduce.cc:460:run$3485 [0] 1'0 $auto$wreduce.cc:460:run$3485 [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1412:
      Old ports: A=13'0000000000000, B=13'1001110001000, Y=$auto$wreduce.cc:460:run$3486 [12:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3486 [3]
      New connections: { $auto$wreduce.cc:460:run$3486 [12:4] $auto$wreduce.cc:460:run$3486 [2:0] } = { $auto$wreduce.cc:460:run$3486 [3] 2'00 $auto$wreduce.cc:460:run$3486 [3] $auto$wreduce.cc:460:run$3486 [3] $auto$wreduce.cc:460:run$3486 [3] 6'000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1418:
      Old ports: A=18'000000000000000000, B=18'110010000011001000, Y=$auto$wreduce.cc:460:run$3487 [17:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3487 [3]
      New connections: { $auto$wreduce.cc:460:run$3487 [17:4] $auto$wreduce.cc:460:run$3487 [2:0] } = { $auto$wreduce.cc:460:run$3487 [3] $auto$wreduce.cc:460:run$3487 [3] 2'00 $auto$wreduce.cc:460:run$3487 [3] 5'00000 $auto$wreduce.cc:460:run$3487 [3] $auto$wreduce.cc:460:run$3487 [3] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1499:
      Old ports: A=4'0010, B=4'1000, Y=$auto$wreduce.cc:460:run$3488 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:460:run$3488 [3] $auto$wreduce.cc:460:run$3488 [1] }
      New connections: { $auto$wreduce.cc:460:run$3488 [2] $auto$wreduce.cc:460:run$3488 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$420:
      Old ports: A={ 3'000 \UI_inst.LCD.addr [3:0] }, B={ 3'100 \UI_inst.LCD.addr [3:0] }, Y=\UI_inst.LCD.ramaddr
      New ports: A=1'0, B=1'1, Y=\UI_inst.LCD.ramaddr [6]
      New connections: \UI_inst.LCD.ramaddr [5:0] = { 2'00 \UI_inst.LCD.addr [3:0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2544:
      Old ports: A=8'00100000, B=8'11011111, Y=$techmap\UI_inst.diplay_number.$procmux$2544_Y
      New ports: A=2'10, B=2'01, Y={ $techmap\UI_inst.diplay_number.$procmux$2544_Y [5] $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] }
      New connections: { $techmap\UI_inst.diplay_number.$procmux$2544_Y [7:6] $techmap\UI_inst.diplay_number.$procmux$2544_Y [4:1] } = { $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] $techmap\UI_inst.diplay_number.$procmux$2544_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2599:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:460:run$3502 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3502 [0]
      New connections: $auto$wreduce.cc:460:run$3502 [3:1] = { $auto$wreduce.cc:460:run$3502 [0] $auto$wreduce.cc:460:run$3502 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2602:
      Old ports: A={ 4'0010 $auto$wreduce.cc:460:run$3502 [3:0] }, B=8'00100000, Y=$techmap\UI_inst.diplay_number.$procmux$2602_Y
      New ports: A=$auto$wreduce.cc:460:run$3502 [3:0], B=4'0000, Y=$techmap\UI_inst.diplay_number.$procmux$2602_Y [3:0]
      New connections: $techmap\UI_inst.diplay_number.$procmux$2602_Y [7:4] = 4'0010
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2606:
      Old ports: A=8'01011001, B=8'11110010, Y=$techmap\UI_inst.diplay_number.$procmux$2606_Y
      New ports: A=2'01, B=2'10, Y=$techmap\UI_inst.diplay_number.$procmux$2606_Y [1:0]
      New connections: $techmap\UI_inst.diplay_number.$procmux$2606_Y [7:2] = { $techmap\UI_inst.diplay_number.$procmux$2606_Y [1] 1'1 $techmap\UI_inst.diplay_number.$procmux$2606_Y [1] 1'1 $techmap\UI_inst.diplay_number.$procmux$2606_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2664:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:460:run$3503 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:460:run$3503 [0]
      New connections: $auto$wreduce.cc:460:run$3503 [3:1] = { $auto$wreduce.cc:460:run$3503 [0] $auto$wreduce.cc:460:run$3503 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2667:
      Old ports: A={ 4'0010 $auto$wreduce.cc:460:run$3503 [3:0] }, B=8'00100000, Y=$auto$wreduce.cc:460:run$3504
      New ports: A=$auto$wreduce.cc:460:run$3503 [3:0], B=4'0000, Y=$auto$wreduce.cc:460:run$3504 [3:0]
      New connections: $auto$wreduce.cc:460:run$3504 [7:4] = 4'0010
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2671:
      Old ports: A=4'1000, B=4'0010, Y=$auto$wreduce.cc:460:run$3505 [3:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:460:run$3505 [3] $auto$wreduce.cc:460:run$3505 [1] }
      New connections: { $auto$wreduce.cc:460:run$3505 [2] $auto$wreduce.cc:460:run$3505 [0] } = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$130:
      Old ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$129_Y, B={ $techmap\CORDIC.$add$../cordic/fullcordic.v:41$125_Y [16:9] \CORDIC.cordicCORE.U7.z_1 [8:0] }, Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$130_Y
      New ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$129_Y [16:9], B=$techmap\CORDIC.$add$../cordic/fullcordic.v:41$125_Y [16:9], Y=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$130_Y [16:9]
      New connections: $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$130_Y [8:0] = \CORDIC.cordicCORE.U7.z_1 [8:0]
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U0.$procmux$907:
      Old ports: A=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y, B=17'00000000000000000, Y=$techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0]
      New ports: A={ $techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [10:9] 1'1 }, B=3'000, Y=$techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10:8]
      New connections: { $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [16:11] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [7:0] } = { $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10:9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2874:
      Old ports: A=$techmap\UI_inst.$procmux$2872_Y, B=8'00111001, Y=$techmap\UI_inst.$procmux$2874_Y
      New ports: A={ 1'0 $techmap\UI_inst.$procmux$2872_Y [2:0] }, B=4'1001, Y=$techmap\UI_inst.$procmux$2874_Y [3:0]
      New connections: $techmap\UI_inst.$procmux$2874_Y [7:4] = 4'0011
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2911:
      Old ports: A=$auto$wreduce.cc:460:run$3473 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2911_Y [4:0]
      New ports: A={ $auto$wreduce.cc:460:run$3473 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2911_Y [4] $techmap\UI_inst.$procmux$2911_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2911_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2913:
      Old ports: A=$techmap\UI_inst.$procmux$2911_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2913_Y
      New ports: A=$techmap\UI_inst.$procmux$2911_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2913_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2913_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2920:
      Old ports: A=$auto$wreduce.cc:460:run$3474 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2920_Y [4:0]
      New ports: A={ $auto$wreduce.cc:460:run$3474 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2920_Y [4] $techmap\UI_inst.$procmux$2920_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2920_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2922:
      Old ports: A=$techmap\UI_inst.$procmux$2920_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2922_Y
      New ports: A=$techmap\UI_inst.$procmux$2920_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2922_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2922_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2976:
      Old ports: A=$auto$wreduce.cc:460:run$3479 [4:0], B=5'10100, Y=$auto$wreduce.cc:460:run$3480 [4:0]
      New ports: A={ $auto$wreduce.cc:460:run$3479 [1] $auto$wreduce.cc:460:run$3479 [1] }, B=2'10, Y=$auto$wreduce.cc:460:run$3480 [2:1]
      New connections: { $auto$wreduce.cc:460:run$3480 [4:3] $auto$wreduce.cc:460:run$3480 [0] } = { $auto$wreduce.cc:460:run$3480 [2] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2978:
      Old ports: A=$auto$wreduce.cc:460:run$3480, B=8'00110010, Y=$auto$wreduce.cc:460:run$3481
      New ports: A=$auto$wreduce.cc:460:run$3480 [4:0], B=5'10010, Y=$auto$wreduce.cc:460:run$3481 [4:0]
      New connections: $auto$wreduce.cc:460:run$3481 [7:5] = 3'001
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$1398:
      Old ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:460:run$3487 [17:0] 6'000000 $auto$wreduce.cc:460:run$3486 [12:0] 15'000000000000000 $auto$wreduce.cc:460:run$3485 [3:0] 8'00000000 $auto$wreduce.cc:460:run$3484 [10:0] 2'00 $auto$wreduce.cc:460:run$3483 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New ports: A=13'0000000000000, B={ 13'1111001101100 $auto$wreduce.cc:460:run$3487 [3] 1'0 $auto$wreduce.cc:460:run$3487 [3] 4'0000 $auto$wreduce.cc:460:run$3487 [3] $auto$wreduce.cc:460:run$3487 [3] 2'00 $auto$wreduce.cc:460:run$3487 [3] 4'0000 $auto$wreduce.cc:460:run$3486 [3] 1'0 $auto$wreduce.cc:460:run$3486 [3] $auto$wreduce.cc:460:run$3486 [3] $auto$wreduce.cc:460:run$3486 [3] 3'000 $auto$wreduce.cc:460:run$3486 [3] 12'000000000000 $auto$wreduce.cc:460:run$3485 [0] $auto$wreduce.cc:460:run$3485 [0] 4'0000 $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] $auto$wreduce.cc:460:run$3484 [4] 1'0 $auto$wreduce.cc:460:run$3484 [4] 2'00 $auto$wreduce.cc:460:run$3483 [4] $auto$wreduce.cc:460:run$3483 [4] 6'000000 $auto$wreduce.cc:460:run$3483 [4] 1'0 $auto$wreduce.cc:460:run$3483 [4] 2'00 }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [16] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [14:12] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [10:3] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
      New connections: { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [15] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [11] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [2:1] } = { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [5] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [13] 3'000 $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2602:
      Old ports: A=$auto$wreduce.cc:460:run$3502 [3:0], B=4'0000, Y=$techmap\UI_inst.diplay_number.$procmux$2602_Y [3:0]
      New ports: A=$auto$wreduce.cc:460:run$3502 [0], B=1'0, Y=$techmap\UI_inst.diplay_number.$procmux$2602_Y [0]
      New connections: $techmap\UI_inst.diplay_number.$procmux$2602_Y [3:1] = { $techmap\UI_inst.diplay_number.$procmux$2602_Y [0] $techmap\UI_inst.diplay_number.$procmux$2602_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2667:
      Old ports: A=$auto$wreduce.cc:460:run$3503 [3:0], B=4'0000, Y=$auto$wreduce.cc:460:run$3504 [3:0]
      New ports: A=$auto$wreduce.cc:460:run$3503 [0], B=1'0, Y=$auto$wreduce.cc:460:run$3504 [0]
      New connections: $auto$wreduce.cc:460:run$3504 [3:1] = { $auto$wreduce.cc:460:run$3504 [0] $auto$wreduce.cc:460:run$3504 [0] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$131:
      Old ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$130_Y, B=\CORDIC.cordicCORE.U7.z_1, Y={ \Ang [16:1] \UI_inst.diplay_number.Ang [0] }
      New ports: A=$techmap\CORDIC.$ternary$../cordic/fullcordic.v:43$130_Y [16:9], B=\CORDIC.cordicCORE.U7.z_1 [16:9], Y=\Ang [16:9]
      New connections: { \Ang [8:1] \UI_inst.diplay_number.Ang [0] } = \CORDIC.cordicCORE.U7.z_1 [8:0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2876:
      Old ports: A=$techmap\UI_inst.$procmux$2874_Y, B=8'00110100, Y=$techmap\UI_inst.$procmux$2876_Y
      New ports: A=$techmap\UI_inst.$procmux$2874_Y [3:0], B=4'0100, Y=$techmap\UI_inst.$procmux$2876_Y [3:0]
      New connections: $techmap\UI_inst.$procmux$2876_Y [7:4] = 4'0011
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2913:
      Old ports: A=$techmap\UI_inst.$procmux$2911_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2913_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2911_Y [4] 1'0 $techmap\UI_inst.$procmux$2911_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2913_Y [4] $techmap\UI_inst.$procmux$2913_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2913_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2915:
      Old ports: A=$techmap\UI_inst.$procmux$2913_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2915_Y
      New ports: A=$techmap\UI_inst.$procmux$2913_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2915_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2915_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2922:
      Old ports: A=$techmap\UI_inst.$procmux$2920_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2922_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2920_Y [4] 1'0 $techmap\UI_inst.$procmux$2920_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2922_Y [4] $techmap\UI_inst.$procmux$2922_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2922_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2924:
      Old ports: A=$techmap\UI_inst.$procmux$2922_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2924_Y
      New ports: A=$techmap\UI_inst.$procmux$2922_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2924_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2924_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2978:
      Old ports: A=$auto$wreduce.cc:460:run$3480 [4:0], B=5'10010, Y=$auto$wreduce.cc:460:run$3481 [4:0]
      New ports: A={ $auto$wreduce.cc:460:run$3480 [2] $auto$wreduce.cc:460:run$3480 [2:1] }, B=3'101, Y={ $auto$wreduce.cc:460:run$3481 [4] $auto$wreduce.cc:460:run$3481 [2:1] }
      New connections: { $auto$wreduce.cc:460:run$3481 [3] $auto$wreduce.cc:460:run$3481 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2980:
      Old ports: A=$auto$wreduce.cc:460:run$3481, B=8'00100000, Y=$techmap\UI_inst.$procmux$2980_Y
      New ports: A=$auto$wreduce.cc:460:run$3481 [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2980_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2980_Y [7:5] = 3'001
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2865:
      Old ports: A=8'00100000, B={ 94'0110100101101110011101000101001001100101011001100100000101101101011100000110110000111010001100 $techmap\UI_inst.$procmux$2882_Y [1:0] 8'00101110 $techmap\UI_inst.$procmux$2876_Y 3'001 $auto$wreduce.cc:460:run$3469 [0] 1'0 $auto$wreduce.cc:460:run$3469 [0] 1'0 $auto$wreduce.cc:460:run$3469 [0] 8'01010110 }, Y=$techmap\UI_inst.$procmux$2865_Y
      New ports: A=7'0100000, B={ 82'1101001110111011101001010010110010111001101000001110110111100001101100011101001100 $techmap\UI_inst.$procmux$2882_Y [1:0] 10'0101110011 $techmap\UI_inst.$procmux$2876_Y [3:0] 2'01 $auto$wreduce.cc:460:run$3469 [0] 1'0 $auto$wreduce.cc:460:run$3469 [0] 1'0 $auto$wreduce.cc:460:run$3469 [0] 7'1010110 }, Y=$techmap\UI_inst.$procmux$2865_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2865_Y [7] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2901:
      Old ports: A=8'00100000, B={ 91'0110100101101110011101000101001001100110001011100100011001110010011001010111000100111010001 $auto$wreduce.cc:460:run$3475 [0] 3'000 $auto$wreduce.cc:460:run$3475 [0] $techmap\UI_inst.$procmux$2924_Y $techmap\UI_inst.$procmux$2915_Y 5'00110 $auto$wreduce.cc:460:run$3472 [0] 1'0 $auto$wreduce.cc:460:run$3472 [0] 24'001100000100100001111010 }, Y=$techmap\UI_inst.$procmux$2901_Y
      New ports: A=7'0100000, B={ 79'1101001110111011101001010010110011001011101000110111001011001011110001011101001 $auto$wreduce.cc:460:run$3475 [0] 3'000 $auto$wreduce.cc:460:run$3475 [0] 2'01 $techmap\UI_inst.$procmux$2924_Y [4:0] 2'01 $techmap\UI_inst.$procmux$2915_Y [4:0] 4'0110 $auto$wreduce.cc:460:run$3472 [0] 1'0 $auto$wreduce.cc:460:run$3472 [0] 21'011000010010001111010 }, Y=$techmap\UI_inst.$procmux$2901_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2901_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2915:
      Old ports: A=$techmap\UI_inst.$procmux$2913_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2915_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2913_Y [4] 1'0 $techmap\UI_inst.$procmux$2913_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2915_Y [4] $techmap\UI_inst.$procmux$2915_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2915_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2924:
      Old ports: A=$techmap\UI_inst.$procmux$2922_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2924_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2922_Y [4] 1'0 $techmap\UI_inst.$procmux$2922_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2924_Y [4] $techmap\UI_inst.$procmux$2924_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2924_Y [3] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2970:
      Old ports: A=8'00100000, B={ 40'0100011101100001011010010110111000111010 $techmap\UI_inst.$procmux$2980_Y 24'001100000110010001000010 }, Y=$techmap\UI_inst.$procmux$2970_Y
      New ports: A=7'0100000, B={ 37'1000111110000111010011101110011101001 $techmap\UI_inst.$procmux$2980_Y [4:0] 21'011000011001001000010 }, Y=$techmap\UI_inst.$procmux$2970_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2970_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2980:
      Old ports: A=$auto$wreduce.cc:460:run$3481 [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2980_Y [4:0]
      New ports: A={ $auto$wreduce.cc:460:run$3481 [4] $auto$wreduce.cc:460:run$3481 [2:1] }, B=3'000, Y={ $techmap\UI_inst.$procmux$2980_Y [4] $techmap\UI_inst.$procmux$2980_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2980_Y [3] $techmap\UI_inst.$procmux$2980_Y [0] } = 2'00
  Optimizing cells in module \top.
Performed a total of 62 changes.

23.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 4 cells.

23.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

23.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.

23.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.29.9. Rerunning OPT passes. (Maybe there is more to do..)

23.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.

23.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

23.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

23.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.29.16. Finished OPT passes. (There is nothing left to do.)

23.30. Executing ICE40_WRAPCARRY pass (wrap carries).

23.31. Executing TECHMAP pass (map to technology primitives).

23.31.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/techmap.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

23.31.2. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

23.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:9e4fdcb0a66bbfb989de4b540b6b7d1348ed8ef7$paramod$fb8d876e240a0b92fccc4caec0b741ea68e248fc\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:2eb9044907daa6a11216fa52ffed66768aae7f41$paramod$8dcb0d0e06f98eadd1625deafad9880dfa72c77c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=48\Y_WIDTH=48 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:ed9e050f439620a549adde3a13b12005bae08fed$paramod$39bfe0dc5dc87928a02631250a3f10867635045c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod$constmap:7721b1ce55cd39473bb58780ed71464196a12f4b$paramod$d5ca79e8b055de9a96a28d5b0487e8768533d94a\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=48\B_WIDTH=48\Y_WIDTH=48 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=6\B_WIDTH=7\Y_WIDTH=7 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using extmapper maccmap for cells of type $macc.
  add \PLL.incr (17 bits, signed)
  add \PLL.eD [15:11] (5 bits, signed)
  sub \PLL.last_eP [15:9] (7 bits, signed)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=18 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=16 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=22\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=15\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=25\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=1\Y_WIDTH=18 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=21 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=13\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=20\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=32 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $ne.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=3\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=10\B_WIDTH=13\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=25\Y_WIDTH=25 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=13\B_WIDTH=10\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=13\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=13\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=11\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=12\B_WIDTH=7\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=12\Y_WIDTH=12 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=9\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=11\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=9\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=9\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=9\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=7\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=7\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=17 for cells of type $fa.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.

23.32. Executing ICE40_OPT pass (performing simple optimizations).

23.32.1. Running ICE40 specific optimizations.

23.32.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 1761 cells.

23.32.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$13424 ($_DFF_P_) from module top.
Removing $auto$simplemap.cc:496:simplemap_adff$10420 ($_DFF_PP0_) from module top.
Removing $auto$simplemap.cc:420:simplemap_dff$5203 ($_DFF_P_) from module top.
Replaced 3 DFF cells.

23.32.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1691 unused cells and 3380 unused wires.

23.32.6. Rerunning OPT passes. (Removed registers in this run.)

23.32.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3522.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3531.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3531.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3538.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3538.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3545.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3545.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3552.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3552.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3559.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3559.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3566.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3566.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3573.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3573.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3580.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3580.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3587.slice[0].carry: CO=\cnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3590.slice[0].carry: CO=\ADC.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3593.slice[0].carry: CO=\CORDIC.cordicCORE.U7.z_1 [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3596.slice[0].carry: CO=\CORDIC.cordicCORE.U7.z_1 [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3599.slice[0].carry: CO=\CORDIC.cordicCORE.U7.z_1 [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3611.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3611.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3611.slice[2].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3611.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$3611.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3626.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3626.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$3626.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3626.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$3626.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3626.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[0].carry: CO=\CORDIC.cordicCORE.U1.z_1 [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3644.slice[0].carry: CO=\CORDIC.cordicCORE.U1.z_1 [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3650.slice[0].carry: CO=\CORDIC.cordicCORE.U2.z_1 [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3662.slice[0].carry: CO=\CORDIC.cordicCORE.U2.z_1 [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3665.slice[0].carry: CO=\CORDIC.cordicCORE.U3.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3680.slice[0].carry: CO=\CORDIC.cordicCORE.U3.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3683.slice[0].carry: CO=\CORDIC.cordicCORE.U4.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3698.slice[0].carry: CO=\CORDIC.cordicCORE.U4.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3701.slice[0].carry: CO=\CORDIC.cordicCORE.U5.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3716.slice[0].carry: CO=\CORDIC.cordicCORE.U5.z_1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3722.slice[0].carry: CO=\CORDIC.cordicCORE.U6.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3728.slice[0].carry: CO=\CORDIC.cordicCORE.U6.z_1 [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3731.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3734.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3737.slice[16].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3740.slice[0].carry: CO=\F2SRAM.addr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3743.slice[0].carry: CO=\F2SRAM.poscount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3746.slice[0].carry: CO=\F2SRAM.SPI_READER.cnt_bit [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3758.slice[0].carry: CO=\OSC.PHASENAKKUMULATOOOOOR [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3761.slice[0].carry: CO=\PLL.phase [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3767.slice[0].carry: CO=\PLL.phase [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3776.slice[0].carry: CO=\UI_inst.cnt2 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3779.slice[0].carry: CO=\UI_inst.cnt3 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3782.slice[0].carry: CO=\UI_inst.count [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3785.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3788.slice[0].carry: CO=\UI_inst.TC [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3794.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3800.slice[0].carry: CO=\UI_inst.cnt0 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3803.slice[0].carry: CO=\UI_inst.cnt1 [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3806.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3809.slice[0].carry: CO=\UI_inst.TC [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3815.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3821.slice[0].carry: CO=\UI_inst.LCD.pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3824.slice[0].carry: CO=\UI_inst.LCD.delay_counter.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3827.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3836.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3839.slice[0].carry: CO=\UI_inst.diplay_number.pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3845.slice[0].carry: CO=\UI_inst.TC [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3845.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3851.slice[0].carry: CO=1'0

23.32.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 10 cells.

23.32.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$13550 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

23.32.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 18 unused cells and 12 unused wires.

23.32.12. Rerunning OPT passes. (Removed registers in this run.)

23.32.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3522.slice[1].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3611.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3626.slice[4].carry: CO=\CORDIC.cordicCORE.U0.z_1 [8]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[2].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$3632.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3644.slice[1].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3644.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$3644.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3644.slice[3].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3851.slice[1].carry: CO=1'0

23.32.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 10 cells.

23.32.16. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 0 unused wires.

23.32.18. Rerunning OPT passes. (Removed registers in this run.)

23.32.19. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3522.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3611.slice[5].carry: CO=\CORDIC.cordicCORE.U0.z_1 [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[4].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3644.slice[4].carry: CO=\CORDIC.cordicCORE.U1.z_1 [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3851.slice[2].carry: CO=1'0

23.32.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 3 cells.

23.32.22. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 1 unused wires.

23.32.24. Rerunning OPT passes. (Removed registers in this run.)

23.32.25. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3522.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[5].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3851.slice[3].carry: CO=1'0

23.32.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.32.28. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 2 unused wires.

23.32.30. Rerunning OPT passes. (Removed registers in this run.)

23.32.31. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3522.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$3522.BB [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[6].carry: CO=1'0

23.32.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.32.34. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 3 unused wires.

23.32.36. Rerunning OPT passes. (Removed registers in this run.)

23.32.37. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[7].carry: CO=1'0

23.32.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 1 cells.

23.32.40. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.32.42. Rerunning OPT passes. (Removed registers in this run.)

23.32.43. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[8].carry: CO=1'0

23.32.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.32.46. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.32.48. Rerunning OPT passes. (Removed registers in this run.)

23.32.49. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3632.slice[9].carry: CO=\CORDIC.cordicCORE.U1.z_1 [9]

23.32.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.32.52. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.32.54. Rerunning OPT passes. (Removed registers in this run.)

23.32.55. Running ICE40 specific optimizations.

23.32.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.32.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.32.58. Executing OPT_RMDFF pass (remove dff with constant values).

23.32.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.32.60. Finished OPT passes. (There is nothing left to do.)

23.33. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

23.34. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10132 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [0] -> \F2SRAM.SPI_READER.fsm_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10133 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [1] -> \F2SRAM.SPI_READER.fsm_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10166 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit_last[0:0] -> \F2SRAM.SPI_READER.cnt_bit_last.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10167 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [0] -> \F2SRAM.SPI_READER.cnt_bit [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10168 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [1] -> \F2SRAM.SPI_READER.cnt_bit [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10169 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [2] -> \F2SRAM.SPI_READER.cnt_bit [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10170 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [0] -> \F2SRAM.SPI_READER.cnt_cmd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10171 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [1] -> \F2SRAM.SPI_READER.cnt_cmd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10172 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [0] -> \F2SRAM.SPI_READER.cnt_len [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10173 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [1] -> \F2SRAM.SPI_READER.cnt_len [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10174 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [2] -> \F2SRAM.SPI_READER.cnt_len [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10175 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [3] -> \F2SRAM.SPI_READER.cnt_len [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10176 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [4] -> \F2SRAM.SPI_READER.cnt_len [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10177 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [5] -> \F2SRAM.SPI_READER.cnt_len [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10178 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [6] -> \F2SRAM.SPI_READER.cnt_len [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10179 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [7] -> \F2SRAM.SPI_READER.cnt_len [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10180 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [8] -> \F2SRAM.SPI_READER.cnt_len [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10181 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [9] -> \F2SRAM.SPI_READER.cnt_len [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10182 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [10] -> \F2SRAM.SPI_READER.cnt_len [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10183 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [11] -> \F2SRAM.SPI_READER.cnt_len [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10184 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [12] -> \F2SRAM.SPI_READER.cnt_len [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10185 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [13] -> \F2SRAM.SPI_READER.cnt_len [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10186 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [14] -> \F2SRAM.SPI_READER.cnt_len [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10187 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [15] -> \F2SRAM.SPI_READER.cnt_len [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10188 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [16] -> \F2SRAM.SPI_READER.cnt_len [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10189 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [17] -> \F2SRAM.SPI_READER.cnt_len [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10422 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1472.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9244_Y -> \UI_inst.LCD.LCD_E1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10423 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1493.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [0] -> \UI_inst.LCD.SF_D1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10424 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1493.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [1] -> \UI_inst.LCD.SF_D1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10425 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1493.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [2] -> \UI_inst.LCD.SF_D1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10426 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1493.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [3] -> \UI_inst.LCD.SF_D1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10432 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [0] -> \UI_inst.LCD.tx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10433 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [1] -> \UI_inst.LCD.tx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10434 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [2] -> \UI_inst.LCD.tx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10435 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [3] -> \UI_inst.LCD.tx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10436 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [4] -> \UI_inst.LCD.tx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10437 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [5] -> \UI_inst.LCD.tx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10438 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [6] -> \UI_inst.LCD.tx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10439 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1565.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10733_Y [7] -> \UI_inst.LCD.tx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10440 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [0] -> \UI_inst.LCD.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10441 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [1] -> \UI_inst.LCD.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10442 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [2] -> \UI_inst.LCD.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10443 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [3] -> \UI_inst.LCD.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10444 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [4] -> \UI_inst.LCD.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10445 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [5] -> \UI_inst.LCD.pos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10446 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [6] -> \UI_inst.LCD.pos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10447 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [7] -> \UI_inst.LCD.pos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10448 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [8] -> \UI_inst.LCD.pos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10449 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [9] -> \UI_inst.LCD.pos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10450 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [10] -> \UI_inst.LCD.pos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10451 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [11] -> \UI_inst.LCD.pos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10452 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [12] -> \UI_inst.LCD.pos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10453 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [13] -> \UI_inst.LCD.pos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10454 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [14] -> \UI_inst.LCD.pos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10455 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [15] -> \UI_inst.LCD.pos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10456 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [16] -> \UI_inst.LCD.pos [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10457 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [17] -> \UI_inst.LCD.pos [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10458 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [18] -> \UI_inst.LCD.pos [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10459 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [19] -> \UI_inst.LCD.pos [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10460 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [20] -> \UI_inst.LCD.pos [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10461 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [21] -> \UI_inst.LCD.pos [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10462 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [22] -> \UI_inst.LCD.pos [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10463 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [23] -> \UI_inst.LCD.pos [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10464 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [24] -> \UI_inst.LCD.pos [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10465 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [25] -> \UI_inst.LCD.pos [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10466 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [26] -> \UI_inst.LCD.pos [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10467 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [27] -> \UI_inst.LCD.pos [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10468 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [28] -> \UI_inst.LCD.pos [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10469 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [29] -> \UI_inst.LCD.pos [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10470 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [30] -> \UI_inst.LCD.pos [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10471 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1583.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10631_Y [31] -> \UI_inst.LCD.pos [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10472 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1310.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10989_Y -> \UI_inst.LCD.tx_delay_load.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10473 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [0] -> \UI_inst.LCD.tx_delay_value [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10474 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [1] -> \UI_inst.LCD.tx_delay_value [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10475 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [2] -> \UI_inst.LCD.tx_delay_value [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10476 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [3] -> \UI_inst.LCD.tx_delay_value [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10477 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [4] -> \UI_inst.LCD.tx_delay_value [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10478 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [5] -> \UI_inst.LCD.tx_delay_value [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10479 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [6] -> \UI_inst.LCD.tx_delay_value [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10480 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [7] -> \UI_inst.LCD.tx_delay_value [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10481 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [8] -> \UI_inst.LCD.tx_delay_value [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10482 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [9] -> \UI_inst.LCD.tx_delay_value [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10483 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [10] -> \UI_inst.LCD.tx_delay_value [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10484 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [11] -> \UI_inst.LCD.tx_delay_value [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10485 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [12] -> \UI_inst.LCD.tx_delay_value [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10486 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [13] -> \UI_inst.LCD.tx_delay_value [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10487 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [14] -> \UI_inst.LCD.tx_delay_value [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10488 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [15] -> \UI_inst.LCD.tx_delay_value [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10489 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [16] -> \UI_inst.LCD.tx_delay_value [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10490 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [17] -> \UI_inst.LCD.tx_delay_value [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10491 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [18] -> \UI_inst.LCD.tx_delay_value [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10492 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1330.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11284_Y [19] -> \UI_inst.LCD.tx_delay_value [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10493 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1347.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9244_Y -> \UI_inst.LCD.LCD_E0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10494 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1357.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [0] -> \UI_inst.LCD.SF_D0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10495 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1357.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [1] -> \UI_inst.LCD.SF_D0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10496 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1357.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [2] -> \UI_inst.LCD.SF_D0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10497 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1357.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8469_Y [3] -> \UI_inst.LCD.SF_D0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10498 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1362.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9244_Y -> \UI_inst.LCD.tx_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11722 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\holdoff[0:0] -> \UI_inst.diplay_number.holdoff.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11739 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\difference[16:0] [16] -> \UI_inst.diplay_number.difference [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11740 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [0] -> \UI_inst.diplay_number.dec [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11741 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [1] -> \UI_inst.diplay_number.dec [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11742 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [2] -> \UI_inst.diplay_number.dec [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11743 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [3] -> \UI_inst.diplay_number.dec [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11744 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [0] -> \UI_inst.diplay_number.AngelaMerkel [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11745 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [1] -> \UI_inst.diplay_number.AngelaMerkel [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11746 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [2] -> \UI_inst.diplay_number.AngelaMerkel [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11747 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [3] -> \UI_inst.diplay_number.AngelaMerkel [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11748 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [4] -> \UI_inst.diplay_number.AngelaMerkel [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11749 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [5] -> \UI_inst.diplay_number.AngelaMerkel [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11750 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [6] -> \UI_inst.diplay_number.AngelaMerkel [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11751 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [7] -> \UI_inst.diplay_number.AngelaMerkel [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11752 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [8] -> \UI_inst.diplay_number.AngelaMerkel [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11753 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [9] -> \UI_inst.diplay_number.AngelaMerkel [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11754 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [10] -> \UI_inst.diplay_number.AngelaMerkel [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11755 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [11] -> \UI_inst.diplay_number.AngelaMerkel [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11756 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [12] -> \UI_inst.diplay_number.AngelaMerkel [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11757 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [13] -> \UI_inst.diplay_number.AngelaMerkel [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11758 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [14] -> \UI_inst.diplay_number.AngelaMerkel [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11759 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [15] -> \UI_inst.diplay_number.AngelaMerkel [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11760 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [0] -> \UI_inst.diplay_number.secondlastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11761 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [1] -> \UI_inst.diplay_number.secondlastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11762 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [2] -> \UI_inst.diplay_number.secondlastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11763 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [3] -> \UI_inst.diplay_number.secondlastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11764 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [4] -> \UI_inst.diplay_number.secondlastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11765 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [5] -> \UI_inst.diplay_number.secondlastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11766 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [6] -> \UI_inst.diplay_number.secondlastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11767 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [7] -> \UI_inst.diplay_number.secondlastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11768 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [8] -> \UI_inst.diplay_number.secondlastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11769 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [9] -> \UI_inst.diplay_number.secondlastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11770 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [10] -> \UI_inst.diplay_number.secondlastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11771 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [11] -> \UI_inst.diplay_number.secondlastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11772 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [12] -> \UI_inst.diplay_number.secondlastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11773 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [13] -> \UI_inst.diplay_number.secondlastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11774 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [14] -> \UI_inst.diplay_number.secondlastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11775 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [15] -> \UI_inst.diplay_number.secondlastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11776 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [0] -> \UI_inst.diplay_number.lastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11777 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [1] -> \UI_inst.diplay_number.lastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11778 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [2] -> \UI_inst.diplay_number.lastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11779 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [3] -> \UI_inst.diplay_number.lastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11780 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [4] -> \UI_inst.diplay_number.lastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11781 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [5] -> \UI_inst.diplay_number.lastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11782 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [6] -> \UI_inst.diplay_number.lastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11783 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [7] -> \UI_inst.diplay_number.lastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11784 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [8] -> \UI_inst.diplay_number.lastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11785 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [9] -> \UI_inst.diplay_number.lastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11786 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [10] -> \UI_inst.diplay_number.lastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11787 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [11] -> \UI_inst.diplay_number.lastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11788 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [12] -> \UI_inst.diplay_number.lastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11789 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [13] -> \UI_inst.diplay_number.lastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11790 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [14] -> \UI_inst.diplay_number.lastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11791 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [15] -> \UI_inst.diplay_number.lastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11792 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [0] -> \UI_inst.diplay_number.rest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11793 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [1] -> \UI_inst.diplay_number.rest [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11794 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [2] -> \UI_inst.diplay_number.rest [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11795 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [3] -> \UI_inst.diplay_number.rest [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11796 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [4] -> \UI_inst.diplay_number.rest [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11797 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [5] -> \UI_inst.diplay_number.rest [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11798 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [6] -> \UI_inst.diplay_number.rest [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11799 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [7] -> \UI_inst.diplay_number.rest [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11800 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [8] -> \UI_inst.diplay_number.rest [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11801 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [9] -> \UI_inst.diplay_number.rest [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11802 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [10] -> \UI_inst.diplay_number.rest [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11803 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [11] -> \UI_inst.diplay_number.rest [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11804 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [12] -> \UI_inst.diplay_number.rest [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11805 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [13] -> \UI_inst.diplay_number.rest [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11806 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [14] -> \UI_inst.diplay_number.rest [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11807 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [15] -> \UI_inst.diplay_number.rest [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11808 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [0] -> \UI_inst.diplay_number.acc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11809 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [1] -> \UI_inst.diplay_number.acc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11810 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [2] -> \UI_inst.diplay_number.acc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11811 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [3] -> \UI_inst.diplay_number.acc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11812 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [4] -> \UI_inst.diplay_number.acc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11813 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [5] -> \UI_inst.diplay_number.acc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11814 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [6] -> \UI_inst.diplay_number.acc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11815 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [7] -> \UI_inst.diplay_number.acc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11816 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [8] -> \UI_inst.diplay_number.acc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11817 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [9] -> \UI_inst.diplay_number.acc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11818 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [10] -> \UI_inst.diplay_number.acc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11819 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [11] -> \UI_inst.diplay_number.acc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11820 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [12] -> \UI_inst.diplay_number.acc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11821 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [13] -> \UI_inst.diplay_number.acc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11822 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [14] -> \UI_inst.diplay_number.acc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11823 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [15] -> \UI_inst.diplay_number.acc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11824 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [16] -> \UI_inst.diplay_number.acc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11825 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [0] -> \UI_inst.diplay_number.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11826 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [1] -> \UI_inst.diplay_number.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11827 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [2] -> \UI_inst.diplay_number.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11828 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [3] -> \UI_inst.diplay_number.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11829 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [4] -> \UI_inst.diplay_number.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11830 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\leadz[0:0] -> \UI_inst.diplay_number.leadz.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11831 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\updating[0:0] -> \UI_inst.diplay_number.updating.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11833 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [0] -> \UI_inst.diplay_number.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11834 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [1] -> \UI_inst.diplay_number.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11835 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [2] -> \UI_inst.diplay_number.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11836 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [3] -> \UI_inst.diplay_number.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11837 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [4] -> \UI_inst.diplay_number.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11838 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [5] -> \UI_inst.diplay_number.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11839 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [6] -> \UI_inst.diplay_number.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11840 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [7] -> \UI_inst.diplay_number.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11841 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\we[0:0] -> \UI_inst.diplay_number.we.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4241 to $_DFFE_PP_ for $techmap\ADC.$0\acq[0:0] -> \ADC.acq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4242 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [0] -> \ADC.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4243 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [1] -> \ADC.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4244 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [2] -> \ADC.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4245 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [3] -> \ADC.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4246 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [4] -> \ADC.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4247 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [5] -> \ADC.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4248 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [6] -> \ADC.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4249 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [7] -> \ADC.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4250 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [8] -> \ADC.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4251 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [9] -> \ADC.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4252 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [10] -> \ADC.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4253 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [11] -> \ADC.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4254 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [12] -> \ADC.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4255 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [13] -> \ADC.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4256 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [14] -> \ADC.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4257 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [15] -> \ADC.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4259 to $_DFFE_PP_ for $techmap\ADC.$0\CONVST[0:0] -> \ADC.CONVST.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4382 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4408 to $_DFFE_PP_ for $0\loadlookup[0:0] -> \loadlookup.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4417 to $_DFFE_PP_ for $techmap\F2SRAM.$0\busystop[0:0] -> \F2SRAM.busystop.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4419 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [0] -> \F2SRAM.spi_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4420 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [1] -> \F2SRAM.spi_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4421 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [2] -> \F2SRAM.spi_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4422 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [3] -> \F2SRAM.spi_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4423 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [4] -> \F2SRAM.spi_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4424 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [5] -> \F2SRAM.spi_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4425 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [6] -> \F2SRAM.spi_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4426 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [7] -> \F2SRAM.spi_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4427 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [8] -> \F2SRAM.spi_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4428 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [9] -> \F2SRAM.spi_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4429 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [10] -> \F2SRAM.spi_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4430 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [11] -> \F2SRAM.spi_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4431 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [12] -> \F2SRAM.spi_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4432 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [13] -> \F2SRAM.spi_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4433 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [14] -> \F2SRAM.spi_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4434 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [15] -> \F2SRAM.spi_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4435 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [16] -> \F2SRAM.spi_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4436 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [17] -> \F2SRAM.spi_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4437 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [18] -> \F2SRAM.spi_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4438 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [19] -> \F2SRAM.spi_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4439 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [20] -> \F2SRAM.spi_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4440 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [21] -> \F2SRAM.spi_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4441 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [22] -> \F2SRAM.spi_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4442 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [23] -> \F2SRAM.spi_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4443 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [0] -> \F2SRAM.f_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4444 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [1] -> \F2SRAM.f_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4445 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [2] -> \F2SRAM.f_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4446 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [3] -> \F2SRAM.f_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4447 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [4] -> \F2SRAM.f_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4448 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [5] -> \F2SRAM.f_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4449 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [6] -> \F2SRAM.f_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4450 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [7] -> \F2SRAM.f_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4451 to $_DFFE_PP_ for $techmap\F2SRAM.$0\second[0:0] -> \F2SRAM.second.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4470 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [0] -> \F2SRAM.wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4471 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [1] -> \F2SRAM.wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4472 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [2] -> \F2SRAM.wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4473 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [3] -> \F2SRAM.wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4474 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [4] -> \F2SRAM.wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4475 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [5] -> \F2SRAM.wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4476 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [6] -> \F2SRAM.wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4477 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [7] -> \F2SRAM.wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4478 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [8] -> \F2SRAM.wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4479 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [9] -> \F2SRAM.wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4480 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [10] -> \F2SRAM.wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4481 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [11] -> \F2SRAM.wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4482 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [12] -> \F2SRAM.wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4483 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [13] -> \F2SRAM.wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4484 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [14] -> \F2SRAM.wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4485 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [15] -> \F2SRAM.wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4848 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [0] -> \DDS.addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4849 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [1] -> \DDS.addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4850 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [2] -> \DDS.addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4851 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [3] -> \DDS.addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4852 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [4] -> \DDS.addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4853 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [5] -> \DDS.addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4854 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [6] -> \DDS.addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4855 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [7] -> \DDS.addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4856 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [8] -> \DDS.addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4857 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [9] -> \DDS.addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4858 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [10] -> \DDS.addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4859 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [11] -> \DDS.addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4860 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [12] -> \DDS.addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4861 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [13] -> \DDS.addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4862 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [14] -> \DDS.addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4863 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [15] -> \DDS.addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4864 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [0] -> \DDS.cos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4865 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [1] -> \DDS.cos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4866 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [2] -> \DDS.cos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4867 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [3] -> \DDS.cos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4868 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [4] -> \DDS.cos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4869 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [5] -> \DDS.cos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4870 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [6] -> \DDS.cos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4871 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [7] -> \DDS.cos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4872 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [8] -> \DDS.cos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4873 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [9] -> \DDS.cos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4874 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [10] -> \DDS.cos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4875 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [11] -> \DDS.cos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4876 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [12] -> \DDS.cos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4877 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [13] -> \DDS.cos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4878 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [14] -> \DDS.cos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4879 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [15] -> \DDS.cos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4880 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [0] -> \DDS.sin [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4881 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [1] -> \DDS.sin [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4882 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [2] -> \DDS.sin [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4883 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [3] -> \DDS.sin [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4884 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [4] -> \DDS.sin [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4885 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [5] -> \DDS.sin [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4886 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [6] -> \DDS.sin [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4887 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [7] -> \DDS.sin [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4888 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [8] -> \DDS.sin [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4889 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [9] -> \DDS.sin [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4890 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [10] -> \DDS.sin [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4891 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [11] -> \DDS.sin [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4892 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [12] -> \DDS.sin [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4893 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [13] -> \DDS.sin [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4894 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [14] -> \DDS.sin [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4895 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [15] -> \DDS.sin [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5154 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [0] -> \X_IIR_1.p_reg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5155 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [1] -> \X_IIR_1.p_reg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5156 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [2] -> \X_IIR_1.p_reg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5157 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [3] -> \X_IIR_1.p_reg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5158 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [4] -> \X_IIR_1.p_reg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5159 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [5] -> \X_IIR_1.p_reg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5160 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [6] -> \X_IIR_1.p_reg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5161 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [7] -> \X_IIR_1.p_reg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5162 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [8] -> \X_IIR_1.p_reg [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5163 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [9] -> \X_IIR_1.p_reg [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5164 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [10] -> \X_IIR_1.p_reg [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5165 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [11] -> \X_IIR_1.p_reg [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5166 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [12] -> \X_IIR_1.p_reg [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5167 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [13] -> \X_IIR_1.p_reg [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5168 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [14] -> \X_IIR_1.p_reg [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5169 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [15] -> \X_IIR_1.p_reg [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5170 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [16] -> \X_IIR_1.p_reg [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5171 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [17] -> \X_IIR_1.p_reg [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5172 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [18] -> \X_IIR_1.p_reg [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5173 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [19] -> \X_IIR_1.p_reg [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5174 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [20] -> \X_IIR_1.p_reg [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5175 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [21] -> \X_IIR_1.p_reg [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5176 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [22] -> \X_IIR_1.p_reg [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5177 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [23] -> \X_IIR_1.p_reg [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5178 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [24] -> \X_IIR_1.p_reg [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5179 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [25] -> \X_IIR_1.p_reg [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5180 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [26] -> \X_IIR_1.p_reg [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5181 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [27] -> \X_IIR_1.p_reg [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5182 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [28] -> \X_IIR_1.p_reg [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5183 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [29] -> \X_IIR_1.p_reg [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5184 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [30] -> \X_IIR_1.p_reg [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5185 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [31] -> \X_IIR_1.p_reg [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5186 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [32] -> \X_IIR_1.p_reg [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5187 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [33] -> \X_IIR_1.p_reg [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5188 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [34] -> \X_IIR_1.p_reg [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5189 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [35] -> \X_IIR_1.p_reg [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5190 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [36] -> \X_IIR_1.p_reg [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5191 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [37] -> \X_IIR_1.p_reg [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5192 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [38] -> \X_IIR_1.p_reg [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5193 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [39] -> \X_IIR_1.p_reg [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5194 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [40] -> \X_IIR_1.p_reg [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5195 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [41] -> \X_IIR_1.p_reg [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5196 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [42] -> \X_IIR_1.p_reg [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5197 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [43] -> \X_IIR_1.p_reg [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5198 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [44] -> \X_IIR_1.p_reg [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5199 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [45] -> \X_IIR_1.p_reg [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5200 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [46] -> \X_IIR_1.p_reg [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5201 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\p_reg[47:0] [47] -> \X_IIR_1.p_reg [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5208 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [0] -> \X_IIR_1.z [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5209 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [1] -> \X_IIR_1.z [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5210 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [2] -> \X_IIR_1.z [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5211 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [3] -> \X_IIR_1.z [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5212 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [4] -> \X_IIR_1.z [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5213 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [5] -> \X_IIR_1.z [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5214 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [6] -> \X_IIR_1.z [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5215 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [7] -> \X_IIR_1.z [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5216 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [8] -> \X_IIR_1.z [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5217 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [9] -> \X_IIR_1.z [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5218 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [10] -> \X_IIR_1.z [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5219 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [11] -> \X_IIR_1.z [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5220 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [12] -> \X_IIR_1.z [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5221 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [13] -> \X_IIR_1.z [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5222 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [14] -> \X_IIR_1.z [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5223 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [15] -> \X_IIR_1.z [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5224 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [16] -> \X_IIR_1.z [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5225 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [17] -> \X_IIR_1.z [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5226 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [18] -> \X_IIR_1.z [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5227 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [19] -> \X_IIR_1.z [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5228 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [20] -> \X_IIR_1.z [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5229 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [21] -> \X_IIR_1.z [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5230 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [22] -> \X_IIR_1.z [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5231 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [23] -> \X_IIR_1.z [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5232 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [24] -> \X_IIR_1.z [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5233 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [25] -> \X_IIR_1.z [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5234 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [26] -> \X_IIR_1.z [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5235 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [27] -> \X_IIR_1.z [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5236 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [28] -> \X_IIR_1.z [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5237 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [29] -> \X_IIR_1.z [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5238 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [30] -> \X_IIR_1.z [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5239 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [31] -> \X_IIR_1.z [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5240 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [32] -> \X_IIR_1.z [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5241 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [33] -> \X_IIR_1.z [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5242 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [34] -> \X_IIR_1.z [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5243 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [35] -> \X_IIR_1.z [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5244 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [36] -> \X_IIR_1.z [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5245 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [37] -> \X_IIR_1.z [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5246 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [38] -> \X_IIR_1.z [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5247 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [39] -> \X_IIR_1.z [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5248 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [40] -> \X_IIR_1.z [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5249 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [41] -> \X_IIR_1.z [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5250 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [42] -> \X_IIR_1.z [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5251 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [43] -> \X_IIR_1.z [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5252 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [44] -> \X_IIR_1.z [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5253 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [45] -> \X_IIR_1.z [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5254 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [46] -> \X_IIR_1.z [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5255 to $_DFFE_PP_ for $techmap\X_IIR_1.$0\z[47:0] [47] -> \X_IIR_1.z [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7475 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [0] -> \Y_IIR_1.p_reg [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7476 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [1] -> \Y_IIR_1.p_reg [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7477 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [2] -> \Y_IIR_1.p_reg [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7478 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [3] -> \Y_IIR_1.p_reg [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7479 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [4] -> \Y_IIR_1.p_reg [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7480 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [5] -> \Y_IIR_1.p_reg [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7481 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [6] -> \Y_IIR_1.p_reg [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7482 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [7] -> \Y_IIR_1.p_reg [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7483 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [8] -> \Y_IIR_1.p_reg [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7484 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [9] -> \Y_IIR_1.p_reg [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7485 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [10] -> \Y_IIR_1.p_reg [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7486 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [11] -> \Y_IIR_1.p_reg [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7487 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [12] -> \Y_IIR_1.p_reg [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7488 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [13] -> \Y_IIR_1.p_reg [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7489 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [14] -> \Y_IIR_1.p_reg [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7490 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [15] -> \Y_IIR_1.p_reg [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7491 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [16] -> \Y_IIR_1.p_reg [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7492 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [17] -> \Y_IIR_1.p_reg [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7493 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [18] -> \Y_IIR_1.p_reg [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7494 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [19] -> \Y_IIR_1.p_reg [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7495 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [20] -> \Y_IIR_1.p_reg [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7496 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [21] -> \Y_IIR_1.p_reg [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7497 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [22] -> \Y_IIR_1.p_reg [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7498 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [23] -> \Y_IIR_1.p_reg [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7499 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [24] -> \Y_IIR_1.p_reg [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7500 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [25] -> \Y_IIR_1.p_reg [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7501 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [26] -> \Y_IIR_1.p_reg [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7502 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [27] -> \Y_IIR_1.p_reg [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7503 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [28] -> \Y_IIR_1.p_reg [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7504 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [29] -> \Y_IIR_1.p_reg [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7505 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [30] -> \Y_IIR_1.p_reg [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7506 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [31] -> \Y_IIR_1.p_reg [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7507 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [32] -> \Y_IIR_1.p_reg [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7508 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [33] -> \Y_IIR_1.p_reg [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7509 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [34] -> \Y_IIR_1.p_reg [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7510 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [35] -> \Y_IIR_1.p_reg [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7511 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [36] -> \Y_IIR_1.p_reg [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7512 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [37] -> \Y_IIR_1.p_reg [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7513 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [38] -> \Y_IIR_1.p_reg [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7514 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [39] -> \Y_IIR_1.p_reg [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7515 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [40] -> \Y_IIR_1.p_reg [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7516 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [41] -> \Y_IIR_1.p_reg [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7517 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [42] -> \Y_IIR_1.p_reg [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7518 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [43] -> \Y_IIR_1.p_reg [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7519 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [44] -> \Y_IIR_1.p_reg [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7520 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [45] -> \Y_IIR_1.p_reg [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7521 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [46] -> \Y_IIR_1.p_reg [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7522 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\p_reg[47:0] [47] -> \Y_IIR_1.p_reg [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7524 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [0] -> \Y_IIR_1.z [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7525 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [1] -> \Y_IIR_1.z [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7526 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [2] -> \Y_IIR_1.z [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7527 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [3] -> \Y_IIR_1.z [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7528 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [4] -> \Y_IIR_1.z [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7529 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [5] -> \Y_IIR_1.z [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7530 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [6] -> \Y_IIR_1.z [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7531 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [7] -> \Y_IIR_1.z [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7532 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [8] -> \Y_IIR_1.z [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7533 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [9] -> \Y_IIR_1.z [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7534 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [10] -> \Y_IIR_1.z [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7535 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [11] -> \Y_IIR_1.z [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7536 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [12] -> \Y_IIR_1.z [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7537 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [13] -> \Y_IIR_1.z [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7538 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [14] -> \Y_IIR_1.z [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7539 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [15] -> \Y_IIR_1.z [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7540 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [16] -> \Y_IIR_1.z [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7541 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [17] -> \Y_IIR_1.z [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7542 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [18] -> \Y_IIR_1.z [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7543 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [19] -> \Y_IIR_1.z [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7544 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [20] -> \Y_IIR_1.z [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7545 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [21] -> \Y_IIR_1.z [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7546 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [22] -> \Y_IIR_1.z [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7547 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [23] -> \Y_IIR_1.z [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7548 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [24] -> \Y_IIR_1.z [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7549 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [25] -> \Y_IIR_1.z [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7550 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [26] -> \Y_IIR_1.z [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7551 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [27] -> \Y_IIR_1.z [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7552 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [28] -> \Y_IIR_1.z [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7553 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [29] -> \Y_IIR_1.z [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7554 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [30] -> \Y_IIR_1.z [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7555 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [31] -> \Y_IIR_1.z [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7556 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [32] -> \Y_IIR_1.z [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7557 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [33] -> \Y_IIR_1.z [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7558 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [34] -> \Y_IIR_1.z [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7559 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [35] -> \Y_IIR_1.z [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7560 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [36] -> \Y_IIR_1.z [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7561 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [37] -> \Y_IIR_1.z [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7562 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [38] -> \Y_IIR_1.z [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7563 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [39] -> \Y_IIR_1.z [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7564 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [40] -> \Y_IIR_1.z [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7565 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [41] -> \Y_IIR_1.z [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7566 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [42] -> \Y_IIR_1.z [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7567 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [43] -> \Y_IIR_1.z [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7568 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [44] -> \Y_IIR_1.z [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7569 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [45] -> \Y_IIR_1.z [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7570 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [46] -> \Y_IIR_1.z [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$7571 to $_DFFE_PP_ for $techmap\Y_IIR_1.$0\z[47:0] [47] -> \Y_IIR_1.z [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8073 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [0] -> \UI_inst.cnt3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8074 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [1] -> \UI_inst.cnt3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8075 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [2] -> \UI_inst.cnt3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8076 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [3] -> \UI_inst.cnt3 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8077 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [4] -> \UI_inst.cnt3 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8078 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [5] -> \UI_inst.cnt3 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8079 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [6] -> \UI_inst.cnt3 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8080 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [7] -> \UI_inst.cnt3 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8081 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [8] -> \UI_inst.cnt3 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8082 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [9] -> \UI_inst.cnt3 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8083 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [10] -> \UI_inst.cnt3 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8084 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [11] -> \UI_inst.cnt3 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8085 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [12] -> \UI_inst.cnt3 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8086 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [13] -> \UI_inst.cnt3 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8087 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [14] -> \UI_inst.cnt3 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8088 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [15] -> \UI_inst.cnt3 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8089 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [16] -> \UI_inst.cnt3 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8090 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [17] -> \UI_inst.cnt3 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8091 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [18] -> \UI_inst.cnt3 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8092 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [19] -> \UI_inst.cnt3 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8093 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [20] -> \UI_inst.cnt3 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8094 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [21] -> \UI_inst.cnt3 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8095 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [22] -> \UI_inst.cnt3 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8096 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [23] -> \UI_inst.cnt3 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8097 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [0] -> \UI_inst.cnt2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8098 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [1] -> \UI_inst.cnt2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8099 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [2] -> \UI_inst.cnt2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8100 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [3] -> \UI_inst.cnt2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8101 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [4] -> \UI_inst.cnt2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8102 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [5] -> \UI_inst.cnt2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8103 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [6] -> \UI_inst.cnt2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8104 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [7] -> \UI_inst.cnt2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8105 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [8] -> \UI_inst.cnt2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8106 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [9] -> \UI_inst.cnt2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8107 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [10] -> \UI_inst.cnt2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8108 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [11] -> \UI_inst.cnt2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8109 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [12] -> \UI_inst.cnt2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8110 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [13] -> \UI_inst.cnt2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8111 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [14] -> \UI_inst.cnt2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8112 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [15] -> \UI_inst.cnt2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8113 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [16] -> \UI_inst.cnt2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8114 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [17] -> \UI_inst.cnt2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8115 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [18] -> \UI_inst.cnt2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8116 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [19] -> \UI_inst.cnt2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8117 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [20] -> \UI_inst.cnt2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8118 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [21] -> \UI_inst.cnt2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8119 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [22] -> \UI_inst.cnt2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8120 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [23] -> \UI_inst.cnt2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8121 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [0] -> \UI_inst.cnt1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8122 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [1] -> \UI_inst.cnt1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8123 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [2] -> \UI_inst.cnt1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8124 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [3] -> \UI_inst.cnt1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8125 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [4] -> \UI_inst.cnt1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8126 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [5] -> \UI_inst.cnt1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8127 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [6] -> \UI_inst.cnt1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8128 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [7] -> \UI_inst.cnt1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8129 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [8] -> \UI_inst.cnt1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8130 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [9] -> \UI_inst.cnt1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8131 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [10] -> \UI_inst.cnt1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8132 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [11] -> \UI_inst.cnt1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8133 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [12] -> \UI_inst.cnt1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8134 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [13] -> \UI_inst.cnt1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8135 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [14] -> \UI_inst.cnt1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8136 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [15] -> \UI_inst.cnt1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8137 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [16] -> \UI_inst.cnt1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8138 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [17] -> \UI_inst.cnt1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8139 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [18] -> \UI_inst.cnt1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8140 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [19] -> \UI_inst.cnt1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8141 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [20] -> \UI_inst.cnt1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8142 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [21] -> \UI_inst.cnt1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8143 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [22] -> \UI_inst.cnt1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8144 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [23] -> \UI_inst.cnt1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8145 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [0] -> \UI_inst.cnt0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8146 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [1] -> \UI_inst.cnt0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8147 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [2] -> \UI_inst.cnt0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8148 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [3] -> \UI_inst.cnt0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8149 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [4] -> \UI_inst.cnt0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8150 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [5] -> \UI_inst.cnt0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8151 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [6] -> \UI_inst.cnt0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8152 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [7] -> \UI_inst.cnt0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8153 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [8] -> \UI_inst.cnt0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8154 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [9] -> \UI_inst.cnt0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8155 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [10] -> \UI_inst.cnt0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8156 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [11] -> \UI_inst.cnt0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8157 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [12] -> \UI_inst.cnt0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8158 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [13] -> \UI_inst.cnt0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8159 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [14] -> \UI_inst.cnt0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8160 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [15] -> \UI_inst.cnt0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8161 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [16] -> \UI_inst.cnt0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8162 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [17] -> \UI_inst.cnt0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8163 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [18] -> \UI_inst.cnt0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8164 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [19] -> \UI_inst.cnt0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8165 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [20] -> \UI_inst.cnt0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8166 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [21] -> \UI_inst.cnt0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8167 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [22] -> \UI_inst.cnt0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8168 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [23] -> \UI_inst.cnt0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8181 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [0] -> \UI_inst.datS [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8182 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [1] -> \UI_inst.datS [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8183 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [2] -> \UI_inst.datS [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8184 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [3] -> \UI_inst.datS [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8185 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [4] -> \UI_inst.datS [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8186 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [5] -> \UI_inst.datS [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8187 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [6] -> \UI_inst.datS [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8188 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2898.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$8873_Y [7] -> \UI_inst.datS [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8189 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2763.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9316_Y [0] -> \UI_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8190 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2763.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9316_Y [1] -> \UI_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8191 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2763.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9316_Y [2] -> \UI_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8192 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2763.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9316_Y [3] -> \UI_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8194 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [0] -> \UI_inst.refampl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8195 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [1] -> \UI_inst.refampl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8196 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [0] -> \UI_inst.reffreq [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8197 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [1] -> \UI_inst.reffreq [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8198 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [2] -> \UI_inst.reffreq [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8222 to $_DFFE_PP_ for $techmap\UI_inst.$0\ismagphase[0:0] -> \UI_inst.ismagphase.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8223 to $_DFFE_PP_ for $techmap\UI_inst.$0\refIO[0:0] -> \UI_inst.refIO.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8224 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [0] -> \UI_inst.TC [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8225 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [1] -> \UI_inst.TC [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8226 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [2] -> \UI_inst.TC [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8227 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [3] -> \UI_inst.TC [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8228 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [0] -> \UI_inst.gain [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8229 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [1] -> \UI_inst.gain [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9858 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [0] -> \PLL.last_eP [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9859 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [1] -> \PLL.last_eP [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9860 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [2] -> \PLL.last_eP [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9861 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [3] -> \PLL.last_eP [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9862 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [4] -> \PLL.last_eP [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9863 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [5] -> \PLL.last_eP [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9864 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [6] -> \PLL.last_eP [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9865 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [7] -> \PLL.last_eP [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9866 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [8] -> \PLL.last_eP [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9867 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [9] -> \PLL.last_eP [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9868 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [10] -> \PLL.last_eP [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9869 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [11] -> \PLL.last_eP [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9870 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [12] -> \PLL.last_eP [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9871 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [13] -> \PLL.last_eP [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9872 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [14] -> \PLL.last_eP [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9873 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [15] -> \PLL.last_eP [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9885 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [11] -> \PLL.eD [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9886 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [12] -> \PLL.eD [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9887 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [13] -> \PLL.eD [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9888 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [14] -> \PLL.eD [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9889 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [15] -> \PLL.eD [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9893 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [0] -> \PLL.incr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9894 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [1] -> \PLL.incr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9895 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [2] -> \PLL.incr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9896 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [3] -> \PLL.incr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9897 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [4] -> \PLL.incr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9898 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [5] -> \PLL.incr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9899 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [6] -> \PLL.incr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9900 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [7] -> \PLL.incr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9901 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [8] -> \PLL.incr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9902 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [9] -> \PLL.incr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9903 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [10] -> \PLL.incr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9904 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [11] -> \PLL.incr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9905 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [12] -> \PLL.incr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9906 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [13] -> \PLL.incr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9907 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [14] -> \PLL.incr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9908 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [15] -> \PLL.incr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9909 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [16] -> \PLL.incr [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10427 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1501.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10923_Y [0] -> \UI_inst.LCD.display_state [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10428 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1501.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10923_Y [1] -> \UI_inst.LCD.display_state [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10429 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1501.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10923_Y [2] -> \UI_inst.LCD.display_state [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10430 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1501.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10923_Y [3] -> \UI_inst.LCD.display_state [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10431 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1501.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$10923_Y [4] -> \UI_inst.LCD.display_state [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10499 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1369.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11188_Y [0] -> \UI_inst.LCD.tx_state [0].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$10500 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$1369.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11188_Y [1] -> \UI_inst.LCD.tx_state [1].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$10501 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$1369.$ternary$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$11188_Y [2] -> \UI_inst.LCD.tx_state [2].

23.35. Executing TECHMAP pass (map to technology primitives).

23.35.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

23.35.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$__DFFE_PP1 for cells of type $__DFFE_PP1.
No more expansions possible.

23.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3626.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3626.slice[1].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3626.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3632.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3632.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3632.slice[7].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3632.slice[8].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3632.slice[9].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3644.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3650.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3662.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3665.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3680.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3683.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3698.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3701.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3716.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3722.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3728.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3731.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3734.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3737.slice[16].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3740.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3743.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3746.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3767.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3776.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3779.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3782.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3785.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3788.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3794.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3800.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3803.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3806.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3809.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3815.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3821.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3824.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3827.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3836.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3839.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3845.slice[3].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3851.slice[1].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3851.slice[2].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3851.slice[3].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3611.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3596.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3599.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3611.slice[1].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3611.slice[4].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3611.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3587.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3590.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3593.slice[0].carry ($lut).

23.38. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9942 (SB_DFF): \PLL.phase [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10075 (SB_DFF): \DAC1.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10076 (SB_DFF): \DAC1.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10077 (SB_DFF): \DAC1.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10078 (SB_DFF): \DAC1.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10079 (SB_DFF): \DAC1.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10080 (SB_DFF): \DAC1.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9911 (SB_DFF): \PLL.phase [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10081 (SB_DFF): \DAC1.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10083 (SB_DFF): \DAC1.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10084 (SB_DFF): \DAC1.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10085 (SB_DFF): \DAC1.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10086 (SB_DFF): \DAC1.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10087 (SB_DFF): \DAC1.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10088 (SB_DFF): \DAC1.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10089 (SB_DFF): \DAC1.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10090 (SB_DFF): \DAC1.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10091 (SB_DFF): \DAC1.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10095 (SB_DFF): \DAC2.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10096 (SB_DFF): \DAC2.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10097 (SB_DFF): \DAC2.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10098 (SB_DFF): \DAC2.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10099 (SB_DFF): \DAC2.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10100 (SB_DFF): \DAC2.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10082 (SB_DFF): \DAC1.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10101 (SB_DFF): \DAC2.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10103 (SB_DFF): \DAC2.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10104 (SB_DFF): \DAC2.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10105 (SB_DFF): \DAC2.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10106 (SB_DFF): \DAC2.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10107 (SB_DFF): \DAC2.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10108 (SB_DFF): \DAC2.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10109 (SB_DFF): \DAC2.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10110 (SB_DFF): \DAC2.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10111 (SB_DFF): \DAC2.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10112 (SB_DFF): \DAC3.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10113 (SB_DFF): \DAC3.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10114 (SB_DFF): \DAC3.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10115 (SB_DFF): \DAC3.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10116 (SB_DFF): \DAC3.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10117 (SB_DFF): \DAC3.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10102 (SB_DFF): \DAC2.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10118 (SB_DFF): \DAC3.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10120 (SB_DFF): \DAC3.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10121 (SB_DFF): \DAC3.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10122 (SB_DFF): \DAC3.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10123 (SB_DFF): \DAC3.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10124 (SB_DFF): \DAC3.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10125 (SB_DFF): \DAC3.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10126 (SB_DFF): \DAC3.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10127 (SB_DFF): \DAC3.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10128 (SB_DFF): \DAC3.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5220 (SB_DFFE): \X_IIR_1.z [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10119 (SB_DFF): \DAC3.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4421 (SB_DFFE): \F2SRAM.spi_addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10422 (SB_DFFE): \UI_inst.LCD.LCD_E1 = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10419 (SB_DFFR): \UI_inst.LCD.main_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10424 (SB_DFFE): \UI_inst.LCD.SF_D1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10425 (SB_DFFE): \UI_inst.LCD.SF_D1 [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10427 (SB_DFFER): \UI_inst.LCD.display_state [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10431 (SB_DFFER): \UI_inst.LCD.display_state [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10441 (SB_DFFE): \UI_inst.LCD.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10442 (SB_DFFE): \UI_inst.LCD.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10443 (SB_DFFE): \UI_inst.LCD.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10444 (SB_DFFE): \UI_inst.LCD.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10445 (SB_DFFE): \UI_inst.LCD.pos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10446 (SB_DFFE): \UI_inst.LCD.pos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10447 (SB_DFFE): \UI_inst.LCD.pos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10448 (SB_DFFE): \UI_inst.LCD.pos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10449 (SB_DFFE): \UI_inst.LCD.pos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10450 (SB_DFFE): \UI_inst.LCD.pos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10451 (SB_DFFE): \UI_inst.LCD.pos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10452 (SB_DFFE): \UI_inst.LCD.pos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10453 (SB_DFFE): \UI_inst.LCD.pos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10454 (SB_DFFE): \UI_inst.LCD.pos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10455 (SB_DFFE): \UI_inst.LCD.pos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10456 (SB_DFFE): \UI_inst.LCD.pos [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10457 (SB_DFFE): \UI_inst.LCD.pos [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10458 (SB_DFFE): \UI_inst.LCD.pos [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10459 (SB_DFFE): \UI_inst.LCD.pos [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10460 (SB_DFFE): \UI_inst.LCD.pos [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10461 (SB_DFFE): \UI_inst.LCD.pos [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10462 (SB_DFFE): \UI_inst.LCD.pos [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10463 (SB_DFFE): \UI_inst.LCD.pos [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10464 (SB_DFFE): \UI_inst.LCD.pos [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10465 (SB_DFFE): \UI_inst.LCD.pos [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10466 (SB_DFFE): \UI_inst.LCD.pos [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10467 (SB_DFFE): \UI_inst.LCD.pos [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10468 (SB_DFFE): \UI_inst.LCD.pos [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10469 (SB_DFFE): \UI_inst.LCD.pos [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10470 (SB_DFFE): \UI_inst.LCD.pos [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10440 (SB_DFFE): \UI_inst.LCD.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10472 (SB_DFFE): \UI_inst.LCD.tx_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10471 (SB_DFFE): \UI_inst.LCD.pos [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10474 (SB_DFFE): \UI_inst.LCD.tx_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10475 (SB_DFFE): \UI_inst.LCD.tx_delay_value [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10476 (SB_DFFE): \UI_inst.LCD.tx_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10477 (SB_DFFE): \UI_inst.LCD.tx_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10478 (SB_DFFE): \UI_inst.LCD.tx_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10479 (SB_DFFE): \UI_inst.LCD.tx_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10480 (SB_DFFE): \UI_inst.LCD.tx_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10481 (SB_DFFE): \UI_inst.LCD.tx_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10482 (SB_DFFE): \UI_inst.LCD.tx_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10483 (SB_DFFE): \UI_inst.LCD.tx_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10484 (SB_DFFE): \UI_inst.LCD.tx_delay_value [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10485 (SB_DFFE): \UI_inst.LCD.tx_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10486 (SB_DFFE): \UI_inst.LCD.tx_delay_value [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10487 (SB_DFFE): \UI_inst.LCD.tx_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10488 (SB_DFFE): \UI_inst.LCD.tx_delay_value [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10489 (SB_DFFE): \UI_inst.LCD.tx_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10490 (SB_DFFE): \UI_inst.LCD.tx_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10491 (SB_DFFE): \UI_inst.LCD.tx_delay_value [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10473 (SB_DFFE): \UI_inst.LCD.tx_delay_value [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10493 (SB_DFFE): \UI_inst.LCD.LCD_E0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10492 (SB_DFFE): \UI_inst.LCD.tx_delay_value [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10495 (SB_DFFE): \UI_inst.LCD.SF_D0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10496 (SB_DFFE): \UI_inst.LCD.SF_D0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10494 (SB_DFFE): \UI_inst.LCD.SF_D0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4458 (SB_DFF): \F2SRAM.poscount [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10501 (SB_DFFES): \UI_inst.LCD.tx_state [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11722 (SB_DFFE): \UI_inst.diplay_number.holdoff = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11739 (SB_DFFE): \UI_inst.diplay_number.difference [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11741 (SB_DFFE): \UI_inst.diplay_number.dec [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11742 (SB_DFFE): \UI_inst.diplay_number.dec [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11740 (SB_DFFE): \UI_inst.diplay_number.dec [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11743 (SB_DFFE): \UI_inst.diplay_number.dec [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11745 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11746 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11747 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11748 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11749 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11750 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11751 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11752 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11753 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11754 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11755 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11756 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11757 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11758 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11744 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11759 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11761 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11762 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11763 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11764 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11765 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11766 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11767 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11768 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11769 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11770 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11771 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11772 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11773 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11774 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11760 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11775 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11777 (SB_DFFE): \UI_inst.diplay_number.lastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11778 (SB_DFFE): \UI_inst.diplay_number.lastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11779 (SB_DFFE): \UI_inst.diplay_number.lastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11780 (SB_DFFE): \UI_inst.diplay_number.lastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11781 (SB_DFFE): \UI_inst.diplay_number.lastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11782 (SB_DFFE): \UI_inst.diplay_number.lastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11783 (SB_DFFE): \UI_inst.diplay_number.lastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11784 (SB_DFFE): \UI_inst.diplay_number.lastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11785 (SB_DFFE): \UI_inst.diplay_number.lastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11786 (SB_DFFE): \UI_inst.diplay_number.lastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11787 (SB_DFFE): \UI_inst.diplay_number.lastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11788 (SB_DFFE): \UI_inst.diplay_number.lastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11789 (SB_DFFE): \UI_inst.diplay_number.lastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11790 (SB_DFFE): \UI_inst.diplay_number.lastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11776 (SB_DFFE): \UI_inst.diplay_number.lastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11791 (SB_DFFE): \UI_inst.diplay_number.lastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11793 (SB_DFFE): \UI_inst.diplay_number.rest [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11794 (SB_DFFE): \UI_inst.diplay_number.rest [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11795 (SB_DFFE): \UI_inst.diplay_number.rest [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11796 (SB_DFFE): \UI_inst.diplay_number.rest [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11797 (SB_DFFE): \UI_inst.diplay_number.rest [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11798 (SB_DFFE): \UI_inst.diplay_number.rest [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11799 (SB_DFFE): \UI_inst.diplay_number.rest [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11800 (SB_DFFE): \UI_inst.diplay_number.rest [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11801 (SB_DFFE): \UI_inst.diplay_number.rest [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11802 (SB_DFFE): \UI_inst.diplay_number.rest [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11803 (SB_DFFE): \UI_inst.diplay_number.rest [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11804 (SB_DFFE): \UI_inst.diplay_number.rest [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11805 (SB_DFFE): \UI_inst.diplay_number.rest [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11806 (SB_DFFE): \UI_inst.diplay_number.rest [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11792 (SB_DFFE): \UI_inst.diplay_number.rest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11807 (SB_DFFE): \UI_inst.diplay_number.rest [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11809 (SB_DFFE): \UI_inst.diplay_number.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11810 (SB_DFFE): \UI_inst.diplay_number.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11811 (SB_DFFE): \UI_inst.diplay_number.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11812 (SB_DFFE): \UI_inst.diplay_number.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11813 (SB_DFFE): \UI_inst.diplay_number.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11814 (SB_DFFE): \UI_inst.diplay_number.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11815 (SB_DFFE): \UI_inst.diplay_number.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11816 (SB_DFFE): \UI_inst.diplay_number.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11817 (SB_DFFE): \UI_inst.diplay_number.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11818 (SB_DFFE): \UI_inst.diplay_number.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11819 (SB_DFFE): \UI_inst.diplay_number.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11820 (SB_DFFE): \UI_inst.diplay_number.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11821 (SB_DFFE): \UI_inst.diplay_number.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11822 (SB_DFFE): \UI_inst.diplay_number.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11823 (SB_DFFE): \UI_inst.diplay_number.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11808 (SB_DFFE): \UI_inst.diplay_number.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11824 (SB_DFFE): \UI_inst.diplay_number.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11826 (SB_DFFE): \UI_inst.diplay_number.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11827 (SB_DFFE): \UI_inst.diplay_number.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11828 (SB_DFFE): \UI_inst.diplay_number.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11825 (SB_DFFE): \UI_inst.diplay_number.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11830 (SB_DFFE): \UI_inst.diplay_number.leadz = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11831 (SB_DFFE): \UI_inst.diplay_number.updating = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11832 (SB_DFF): \UI_inst.diplay_number.lastupdate = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11829 (SB_DFFE): \UI_inst.diplay_number.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11834 (SB_DFFE): \UI_inst.diplay_number.dat [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11835 (SB_DFFE): \UI_inst.diplay_number.dat [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11836 (SB_DFFE): \UI_inst.diplay_number.dat [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11837 (SB_DFFE): \UI_inst.diplay_number.dat [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11838 (SB_DFFE): \UI_inst.diplay_number.dat [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11839 (SB_DFFE): \UI_inst.diplay_number.dat [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11833 (SB_DFFE): \UI_inst.diplay_number.dat [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11840 (SB_DFFE): \UI_inst.diplay_number.dat [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4879 (SB_DFFE): \DDS.cos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5207 (SB_DFF): \X_IIR_1.b_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4464 (SB_DFF): \F2SRAM.poscount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4236 (SB_DFF): \ADC.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4237 (SB_DFF): \ADC.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4234 (SB_DFF): \ADC.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4238 (SB_DFF): \ADC.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4239 (SB_DFF): \ADC.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4240 (SB_DFF): \ADC.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4243 (SB_DFFE): \ADC.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8152 (SB_DFFE): \UI_inst.cnt0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8074 (SB_DFFE): \UI_inst.cnt3 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4244 (SB_DFFE): \ADC.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4245 (SB_DFFE): \ADC.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4246 (SB_DFFE): \ADC.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4247 (SB_DFFE): \ADC.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4248 (SB_DFFE): \ADC.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4249 (SB_DFFE): \ADC.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4250 (SB_DFFE): \ADC.data [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4251 (SB_DFFE): \ADC.data [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4252 (SB_DFFE): \ADC.data [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4253 (SB_DFFE): \ADC.data [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4254 (SB_DFFE): \ADC.data [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4255 (SB_DFFE): \ADC.data [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4256 (SB_DFFE): \ADC.data [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4257 (SB_DFFE): \ADC.data [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4275 (SB_DFFN): \ADC.shiftdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4242 (SB_DFFE): \ADC.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4258 (SB_DFF): \ADC.newdata = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4259 (SB_DFFE): \ADC.CONVST = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4389 (SB_DFF): \cnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4261 (SB_DFFN): \ADC.shiftdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4262 (SB_DFFN): \ADC.shiftdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4263 (SB_DFFN): \ADC.shiftdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4264 (SB_DFFN): \ADC.shiftdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4265 (SB_DFFN): \ADC.shiftdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4266 (SB_DFFN): \ADC.shiftdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4267 (SB_DFFN): \ADC.shiftdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4268 (SB_DFFN): \ADC.shiftdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4269 (SB_DFFN): \ADC.shiftdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4270 (SB_DFFN): \ADC.shiftdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4271 (SB_DFFN): \ADC.shiftdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4272 (SB_DFFN): \ADC.shiftdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4273 (SB_DFFN): \ADC.shiftdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4274 (SB_DFFN): \ADC.shiftdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7401 (SB_DFF): \Y_IIR_1.inp_shift_reg [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4382 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4391 (SB_DFF): \cnt [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4845 (SB_DFF): \DDS.islast = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4384 (SB_DFF): \cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4386 (SB_DFF): \cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4387 (SB_DFF): \cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4388 (SB_DFF): \cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4260 (SB_DFFN): \ADC.shiftdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4392 (SB_DFF): \cnt [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4393 (SB_DFF): \cnt [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4394 (SB_DFF): \cnt [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4395 (SB_DFF): \cnt [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4396 (SB_DFF): \cnt [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4397 (SB_DFF): \cnt [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4398 (SB_DFF): \cnt [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4399 (SB_DFF): \cnt [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4400 (SB_DFF): \cnt [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4401 (SB_DFF): \cnt [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4402 (SB_DFF): \cnt [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4403 (SB_DFF): \cnt [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4404 (SB_DFF): \cnt [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4405 (SB_DFF): \cnt [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4406 (SB_DFF): \cnt [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4407 (SB_DFF): \cnt [24] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10499 (SB_DFFER): \UI_inst.LCD.tx_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4383 (SB_DFF): \cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5223 (SB_DFFE): \X_IIR_1.z [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4417 (SB_DFFE): \F2SRAM.busystop = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4418 (SB_DFF): \F2SRAM.spi_go = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5171 (SB_DFFE): \X_IIR_1.p_reg [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4422 (SB_DFFE): \F2SRAM.spi_addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4423 (SB_DFFE): \F2SRAM.spi_addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4424 (SB_DFFE): \F2SRAM.spi_addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4425 (SB_DFFE): \F2SRAM.spi_addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4426 (SB_DFFE): \F2SRAM.spi_addr [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10401 (SB_DFFR): \UI_inst.LCD.main_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4428 (SB_DFFE): \F2SRAM.spi_addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4429 (SB_DFFE): \F2SRAM.spi_addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4430 (SB_DFFE): \F2SRAM.spi_addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4431 (SB_DFFE): \F2SRAM.spi_addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4432 (SB_DFFE): \F2SRAM.spi_addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4433 (SB_DFFE): \F2SRAM.spi_addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4434 (SB_DFFE): \F2SRAM.spi_addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4435 (SB_DFFE): \F2SRAM.spi_addr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4436 (SB_DFFE): \F2SRAM.spi_addr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4437 (SB_DFFE): \F2SRAM.spi_addr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4438 (SB_DFFE): \F2SRAM.spi_addr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4439 (SB_DFFE): \F2SRAM.spi_addr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4440 (SB_DFFE): \F2SRAM.spi_addr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4441 (SB_DFFE): \F2SRAM.spi_addr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4442 (SB_DFFE): \F2SRAM.spi_addr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4419 (SB_DFFE): \F2SRAM.spi_addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4454 (SB_DFF): \F2SRAM.poscount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4451 (SB_DFFE): \F2SRAM.second = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4452 (SB_DFF): \F2SRAM.laststart = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4455 (SB_DFF): \F2SRAM.poscount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4456 (SB_DFF): \F2SRAM.poscount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4457 (SB_DFF): \F2SRAM.poscount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4235 (SB_DFF): \ADC.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4459 (SB_DFF): \F2SRAM.poscount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4460 (SB_DFF): \F2SRAM.poscount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4427 (SB_DFFE): \F2SRAM.spi_addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7402 (SB_DFF): \Y_IIR_1.inp_shift_reg [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4463 (SB_DFF): \F2SRAM.poscount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4461 (SB_DFF): \F2SRAM.poscount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5222 (SB_DFFE): \X_IIR_1.z [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4465 (SB_DFF): \F2SRAM.poscount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5148 (SB_DFF): \X_IIR_1.z_shift_reg [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5149 (SB_DFF): \X_IIR_1.z_shift_reg [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5150 (SB_DFF): \X_IIR_1.z_shift_reg [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4453 (SB_DFF): \F2SRAM.poscount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5151 (SB_DFF): \X_IIR_1.z_shift_reg [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5155 (SB_DFFE): \X_IIR_1.p_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5156 (SB_DFFE): \X_IIR_1.p_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5157 (SB_DFFE): \X_IIR_1.p_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5158 (SB_DFFE): \X_IIR_1.p_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11841 (SB_DFFE): \UI_inst.diplay_number.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4476 (SB_DFFE): \F2SRAM.wdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4477 (SB_DFFE): \F2SRAM.wdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4478 (SB_DFFE): \F2SRAM.wdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4479 (SB_DFFE): \F2SRAM.wdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4480 (SB_DFFE): \F2SRAM.wdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4481 (SB_DFFE): \F2SRAM.wdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4482 (SB_DFFE): \F2SRAM.wdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4483 (SB_DFFE): \F2SRAM.wdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4484 (SB_DFFE): \F2SRAM.wdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4470 (SB_DFFE): \F2SRAM.wdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4485 (SB_DFFE): \F2SRAM.wdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4487 (SB_DFF): \F2SRAM.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4488 (SB_DFF): \F2SRAM.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4489 (SB_DFF): \F2SRAM.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4490 (SB_DFF): \F2SRAM.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4491 (SB_DFF): \F2SRAM.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4492 (SB_DFF): \F2SRAM.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4493 (SB_DFF): \F2SRAM.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4494 (SB_DFF): \F2SRAM.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4495 (SB_DFF): \F2SRAM.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4496 (SB_DFF): \F2SRAM.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4497 (SB_DFF): \F2SRAM.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4498 (SB_DFF): \F2SRAM.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4499 (SB_DFF): \F2SRAM.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4500 (SB_DFF): \F2SRAM.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4486 (SB_DFF): \F2SRAM.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4502 (SB_DFF): \F2SRAM.busy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5190 (SB_DFFE): \X_IIR_1.p_reg [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4385 (SB_DFF): \cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4846 (SB_DFF): \DDS.lastgo = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4847 (SB_DFF): \DDS.iscos = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4501 (SB_DFF): \F2SRAM.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4849 (SB_DFFE): \DDS.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4850 (SB_DFFE): \DDS.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4851 (SB_DFFE): \DDS.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4852 (SB_DFFE): \DDS.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4853 (SB_DFFE): \DDS.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4854 (SB_DFFE): \DDS.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4855 (SB_DFFE): \DDS.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4856 (SB_DFFE): \DDS.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4857 (SB_DFFE): \DDS.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4858 (SB_DFFE): \DDS.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4859 (SB_DFFE): \DDS.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4860 (SB_DFFE): \DDS.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4861 (SB_DFFE): \DDS.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4862 (SB_DFFE): \DDS.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4848 (SB_DFFE): \DDS.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4895 (SB_DFFE): \DDS.sin [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4878 (SB_DFFE): \DDS.cos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4881 (SB_DFFE): \DDS.sin [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4882 (SB_DFFE): \DDS.sin [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4883 (SB_DFFE): \DDS.sin [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4884 (SB_DFFE): \DDS.sin [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4886 (SB_DFFE): \DDS.sin [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4887 (SB_DFFE): \DDS.sin [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4888 (SB_DFFE): \DDS.sin [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4890 (SB_DFFE): \DDS.sin [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4891 (SB_DFFE): \DDS.sin [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4892 (SB_DFFE): \DDS.sin [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4893 (SB_DFFE): \DDS.sin [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4865 (SB_DFFE): \DDS.cos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4866 (SB_DFFE): \DDS.cos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4864 (SB_DFFE): \DDS.cos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4863 (SB_DFFE): \DDS.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4867 (SB_DFFE): \DDS.cos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4868 (SB_DFFE): \DDS.cos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4869 (SB_DFFE): \DDS.cos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4870 (SB_DFFE): \DDS.cos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4885 (SB_DFFE): \DDS.sin [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4871 (SB_DFFE): \DDS.cos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4872 (SB_DFFE): \DDS.cos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4873 (SB_DFFE): \DDS.cos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4889 (SB_DFFE): \DDS.sin [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4874 (SB_DFFE): \DDS.cos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4875 (SB_DFFE): \DDS.cos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4876 (SB_DFFE): \DDS.cos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4877 (SB_DFFE): \DDS.cos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4894 (SB_DFFE): \DDS.sin [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5206 (SB_DFF): \X_IIR_1.b_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8228 (SB_DFFE): \UI_inst.gain [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5075 (SB_DFF): \X_IIR_1.inp_shift_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5076 (SB_DFF): \X_IIR_1.inp_shift_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5077 (SB_DFF): \X_IIR_1.inp_shift_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5078 (SB_DFF): \X_IIR_1.inp_shift_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5079 (SB_DFF): \X_IIR_1.inp_shift_reg [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5080 (SB_DFF): \X_IIR_1.inp_shift_reg [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5081 (SB_DFF): \X_IIR_1.inp_shift_reg [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5082 (SB_DFF): \X_IIR_1.inp_shift_reg [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5083 (SB_DFF): \X_IIR_1.inp_shift_reg [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5084 (SB_DFF): \X_IIR_1.inp_shift_reg [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5085 (SB_DFF): \X_IIR_1.inp_shift_reg [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5086 (SB_DFF): \X_IIR_1.inp_shift_reg [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5087 (SB_DFF): \X_IIR_1.inp_shift_reg [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5088 (SB_DFF): \X_IIR_1.inp_shift_reg [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5089 (SB_DFF): \X_IIR_1.inp_shift_reg [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5090 (SB_DFF): \X_IIR_1.inp_shift_reg [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5091 (SB_DFF): \X_IIR_1.inp_shift_reg [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5092 (SB_DFF): \X_IIR_1.inp_shift_reg [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5093 (SB_DFF): \X_IIR_1.inp_shift_reg [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5094 (SB_DFF): \X_IIR_1.inp_shift_reg [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5095 (SB_DFF): \X_IIR_1.inp_shift_reg [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5096 (SB_DFF): \X_IIR_1.inp_shift_reg [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5097 (SB_DFF): \X_IIR_1.inp_shift_reg [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5098 (SB_DFF): \X_IIR_1.inp_shift_reg [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5099 (SB_DFF): \X_IIR_1.inp_shift_reg [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5100 (SB_DFF): \X_IIR_1.inp_shift_reg [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5101 (SB_DFF): \X_IIR_1.inp_shift_reg [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5102 (SB_DFF): \X_IIR_1.inp_shift_reg [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5103 (SB_DFF): \X_IIR_1.inp_shift_reg [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5104 (SB_DFF): \X_IIR_1.inp_shift_reg [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5074 (SB_DFF): \X_IIR_1.inp_shift_reg [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5105 (SB_DFF): \X_IIR_1.inp_shift_reg [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5107 (SB_DFF): \X_IIR_1.z_shift_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5108 (SB_DFF): \X_IIR_1.z_shift_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5109 (SB_DFF): \X_IIR_1.z_shift_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5110 (SB_DFF): \X_IIR_1.z_shift_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5111 (SB_DFF): \X_IIR_1.z_shift_reg [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5112 (SB_DFF): \X_IIR_1.z_shift_reg [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5113 (SB_DFF): \X_IIR_1.z_shift_reg [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5114 (SB_DFF): \X_IIR_1.z_shift_reg [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5115 (SB_DFF): \X_IIR_1.z_shift_reg [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5116 (SB_DFF): \X_IIR_1.z_shift_reg [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5117 (SB_DFF): \X_IIR_1.z_shift_reg [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5118 (SB_DFF): \X_IIR_1.z_shift_reg [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5119 (SB_DFF): \X_IIR_1.z_shift_reg [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5120 (SB_DFF): \X_IIR_1.z_shift_reg [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5121 (SB_DFF): \X_IIR_1.z_shift_reg [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5122 (SB_DFF): \X_IIR_1.z_shift_reg [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5123 (SB_DFF): \X_IIR_1.z_shift_reg [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5124 (SB_DFF): \X_IIR_1.z_shift_reg [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5125 (SB_DFF): \X_IIR_1.z_shift_reg [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5126 (SB_DFF): \X_IIR_1.z_shift_reg [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5127 (SB_DFF): \X_IIR_1.z_shift_reg [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5128 (SB_DFF): \X_IIR_1.z_shift_reg [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5129 (SB_DFF): \X_IIR_1.z_shift_reg [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5130 (SB_DFF): \X_IIR_1.z_shift_reg [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5131 (SB_DFF): \X_IIR_1.z_shift_reg [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5132 (SB_DFF): \X_IIR_1.z_shift_reg [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5133 (SB_DFF): \X_IIR_1.z_shift_reg [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5134 (SB_DFF): \X_IIR_1.z_shift_reg [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5135 (SB_DFF): \X_IIR_1.z_shift_reg [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5136 (SB_DFF): \X_IIR_1.z_shift_reg [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5137 (SB_DFF): \X_IIR_1.z_shift_reg [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5138 (SB_DFF): \X_IIR_1.z_shift_reg [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5139 (SB_DFF): \X_IIR_1.z_shift_reg [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5140 (SB_DFF): \X_IIR_1.z_shift_reg [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5141 (SB_DFF): \X_IIR_1.z_shift_reg [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5142 (SB_DFF): \X_IIR_1.z_shift_reg [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5143 (SB_DFF): \X_IIR_1.z_shift_reg [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5144 (SB_DFF): \X_IIR_1.z_shift_reg [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5145 (SB_DFF): \X_IIR_1.z_shift_reg [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5146 (SB_DFF): \X_IIR_1.z_shift_reg [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5147 (SB_DFF): \X_IIR_1.z_shift_reg [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4467 (SB_DFF): \F2SRAM.poscount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4468 (SB_DFF): \F2SRAM.poscount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4469 (SB_DFF): \F2SRAM.poscount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4471 (SB_DFFE): \F2SRAM.wdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5255 (SB_DFFE): \X_IIR_1.z [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5106 (SB_DFF): \X_IIR_1.z_shift_reg [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5153 (SB_DFF): \X_IIR_1.z_shift_reg [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4472 (SB_DFFE): \F2SRAM.wdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4473 (SB_DFFE): \F2SRAM.wdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4474 (SB_DFFE): \F2SRAM.wdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4475 (SB_DFFE): \F2SRAM.wdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5159 (SB_DFFE): \X_IIR_1.p_reg [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5160 (SB_DFFE): \X_IIR_1.p_reg [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5161 (SB_DFFE): \X_IIR_1.p_reg [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5162 (SB_DFFE): \X_IIR_1.p_reg [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5163 (SB_DFFE): \X_IIR_1.p_reg [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5164 (SB_DFFE): \X_IIR_1.p_reg [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5165 (SB_DFFE): \X_IIR_1.p_reg [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5166 (SB_DFFE): \X_IIR_1.p_reg [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5167 (SB_DFFE): \X_IIR_1.p_reg [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5168 (SB_DFFE): \X_IIR_1.p_reg [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5169 (SB_DFFE): \X_IIR_1.p_reg [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5170 (SB_DFFE): \X_IIR_1.p_reg [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5184 (SB_DFFE): \X_IIR_1.p_reg [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4420 (SB_DFFE): \F2SRAM.spi_addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5173 (SB_DFFE): \X_IIR_1.p_reg [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5174 (SB_DFFE): \X_IIR_1.p_reg [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5175 (SB_DFFE): \X_IIR_1.p_reg [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5176 (SB_DFFE): \X_IIR_1.p_reg [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5177 (SB_DFFE): \X_IIR_1.p_reg [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5178 (SB_DFFE): \X_IIR_1.p_reg [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5179 (SB_DFFE): \X_IIR_1.p_reg [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5180 (SB_DFFE): \X_IIR_1.p_reg [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5181 (SB_DFFE): \X_IIR_1.p_reg [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5182 (SB_DFFE): \X_IIR_1.p_reg [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5183 (SB_DFFE): \X_IIR_1.p_reg [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4503 (SB_DFF): \F2SRAM.wen = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5185 (SB_DFFE): \X_IIR_1.p_reg [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5186 (SB_DFFE): \X_IIR_1.p_reg [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5187 (SB_DFFE): \X_IIR_1.p_reg [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5188 (SB_DFFE): \X_IIR_1.p_reg [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5189 (SB_DFFE): \X_IIR_1.p_reg [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5191 (SB_DFFE): \X_IIR_1.p_reg [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5192 (SB_DFFE): \X_IIR_1.p_reg [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5193 (SB_DFFE): \X_IIR_1.p_reg [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5194 (SB_DFFE): \X_IIR_1.p_reg [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5195 (SB_DFFE): \X_IIR_1.p_reg [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5196 (SB_DFFE): \X_IIR_1.p_reg [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5197 (SB_DFFE): \X_IIR_1.p_reg [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5198 (SB_DFFE): \X_IIR_1.p_reg [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5199 (SB_DFFE): \X_IIR_1.p_reg [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4880 (SB_DFFE): \DDS.sin [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5154 (SB_DFFE): \X_IIR_1.p_reg [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5201 (SB_DFFE): \X_IIR_1.p_reg [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5204 (SB_DFF): \X_IIR_1.b_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5205 (SB_DFF): \X_IIR_1.b_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5202 (SB_DFF): \X_IIR_1.p_step = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5212 (SB_DFFE): \X_IIR_1.z [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5218 (SB_DFFE): \X_IIR_1.z [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5217 (SB_DFFE): \X_IIR_1.z [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5210 (SB_DFFE): \X_IIR_1.z [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5213 (SB_DFFE): \X_IIR_1.z [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5214 (SB_DFFE): \X_IIR_1.z [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5215 (SB_DFFE): \X_IIR_1.z [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5211 (SB_DFFE): \X_IIR_1.z [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5209 (SB_DFFE): \X_IIR_1.z [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5224 (SB_DFFE): \X_IIR_1.z [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8069 (SB_DFF): \UI_inst.btnt3 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4408 (SB_DFFE): \loadlookup = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5225 (SB_DFFE): \X_IIR_1.z [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5226 (SB_DFFE): \X_IIR_1.z [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5227 (SB_DFFE): \X_IIR_1.z [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5228 (SB_DFFE): \X_IIR_1.z [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5229 (SB_DFFE): \X_IIR_1.z [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5230 (SB_DFFE): \X_IIR_1.z [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5231 (SB_DFFE): \X_IIR_1.z [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5232 (SB_DFFE): \X_IIR_1.z [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5233 (SB_DFFE): \X_IIR_1.z [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5234 (SB_DFFE): \X_IIR_1.z [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5235 (SB_DFFE): \X_IIR_1.z [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5236 (SB_DFFE): \X_IIR_1.z [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5237 (SB_DFFE): \X_IIR_1.z [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5238 (SB_DFFE): \X_IIR_1.z [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5239 (SB_DFFE): \X_IIR_1.z [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5240 (SB_DFFE): \X_IIR_1.z [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5241 (SB_DFFE): \X_IIR_1.z [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5242 (SB_DFFE): \X_IIR_1.z [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5243 (SB_DFFE): \X_IIR_1.z [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5245 (SB_DFFE): \X_IIR_1.z [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5246 (SB_DFFE): \X_IIR_1.z [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5247 (SB_DFFE): \X_IIR_1.z [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5248 (SB_DFFE): \X_IIR_1.z [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5249 (SB_DFFE): \X_IIR_1.z [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5250 (SB_DFFE): \X_IIR_1.z [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5251 (SB_DFFE): \X_IIR_1.z [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5252 (SB_DFFE): \X_IIR_1.z [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5253 (SB_DFFE): \X_IIR_1.z [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5254 (SB_DFFE): \X_IIR_1.z [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5152 (SB_DFF): \X_IIR_1.z_shift_reg [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5208 (SB_DFFE): \X_IIR_1.z [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5244 (SB_DFFE): \X_IIR_1.z [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7403 (SB_DFF): \Y_IIR_1.inp_shift_reg [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7395 (SB_DFF): \Y_IIR_1.inp_shift_reg [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7396 (SB_DFF): \Y_IIR_1.inp_shift_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7397 (SB_DFF): \Y_IIR_1.inp_shift_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7398 (SB_DFF): \Y_IIR_1.inp_shift_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7399 (SB_DFF): \Y_IIR_1.inp_shift_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7400 (SB_DFF): \Y_IIR_1.inp_shift_reg [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7404 (SB_DFF): \Y_IIR_1.inp_shift_reg [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7405 (SB_DFF): \Y_IIR_1.inp_shift_reg [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7406 (SB_DFF): \Y_IIR_1.inp_shift_reg [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7407 (SB_DFF): \Y_IIR_1.inp_shift_reg [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7408 (SB_DFF): \Y_IIR_1.inp_shift_reg [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7409 (SB_DFF): \Y_IIR_1.inp_shift_reg [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7410 (SB_DFF): \Y_IIR_1.inp_shift_reg [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7411 (SB_DFF): \Y_IIR_1.inp_shift_reg [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7412 (SB_DFF): \Y_IIR_1.inp_shift_reg [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7413 (SB_DFF): \Y_IIR_1.inp_shift_reg [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7414 (SB_DFF): \Y_IIR_1.inp_shift_reg [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7415 (SB_DFF): \Y_IIR_1.inp_shift_reg [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7416 (SB_DFF): \Y_IIR_1.inp_shift_reg [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7417 (SB_DFF): \Y_IIR_1.inp_shift_reg [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7418 (SB_DFF): \Y_IIR_1.inp_shift_reg [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7419 (SB_DFF): \Y_IIR_1.inp_shift_reg [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7420 (SB_DFF): \Y_IIR_1.inp_shift_reg [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7421 (SB_DFF): \Y_IIR_1.inp_shift_reg [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7422 (SB_DFF): \Y_IIR_1.inp_shift_reg [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7423 (SB_DFF): \Y_IIR_1.inp_shift_reg [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7424 (SB_DFF): \Y_IIR_1.inp_shift_reg [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7425 (SB_DFF): \Y_IIR_1.inp_shift_reg [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7426 (SB_DFF): \Y_IIR_1.inp_shift_reg [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7428 (SB_DFF): \Y_IIR_1.z_shift_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4462 (SB_DFF): \F2SRAM.poscount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7429 (SB_DFF): \Y_IIR_1.z_shift_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7430 (SB_DFF): \Y_IIR_1.z_shift_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7431 (SB_DFF): \Y_IIR_1.z_shift_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7432 (SB_DFF): \Y_IIR_1.z_shift_reg [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7433 (SB_DFF): \Y_IIR_1.z_shift_reg [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7434 (SB_DFF): \Y_IIR_1.z_shift_reg [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7435 (SB_DFF): \Y_IIR_1.z_shift_reg [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7436 (SB_DFF): \Y_IIR_1.z_shift_reg [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7437 (SB_DFF): \Y_IIR_1.z_shift_reg [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7438 (SB_DFF): \Y_IIR_1.z_shift_reg [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7439 (SB_DFF): \Y_IIR_1.z_shift_reg [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7440 (SB_DFF): \Y_IIR_1.z_shift_reg [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7441 (SB_DFF): \Y_IIR_1.z_shift_reg [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7442 (SB_DFF): \Y_IIR_1.z_shift_reg [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7443 (SB_DFF): \Y_IIR_1.z_shift_reg [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7444 (SB_DFF): \Y_IIR_1.z_shift_reg [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7445 (SB_DFF): \Y_IIR_1.z_shift_reg [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7446 (SB_DFF): \Y_IIR_1.z_shift_reg [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7447 (SB_DFF): \Y_IIR_1.z_shift_reg [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7448 (SB_DFF): \Y_IIR_1.z_shift_reg [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7449 (SB_DFF): \Y_IIR_1.z_shift_reg [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7450 (SB_DFF): \Y_IIR_1.z_shift_reg [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7451 (SB_DFF): \Y_IIR_1.z_shift_reg [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7452 (SB_DFF): \Y_IIR_1.z_shift_reg [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7453 (SB_DFF): \Y_IIR_1.z_shift_reg [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7454 (SB_DFF): \Y_IIR_1.z_shift_reg [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7455 (SB_DFF): \Y_IIR_1.z_shift_reg [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7456 (SB_DFF): \Y_IIR_1.z_shift_reg [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7457 (SB_DFF): \Y_IIR_1.z_shift_reg [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7458 (SB_DFF): \Y_IIR_1.z_shift_reg [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7459 (SB_DFF): \Y_IIR_1.z_shift_reg [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7460 (SB_DFF): \Y_IIR_1.z_shift_reg [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7463 (SB_DFF): \Y_IIR_1.z_shift_reg [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7466 (SB_DFF): \Y_IIR_1.z_shift_reg [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7469 (SB_DFF): \Y_IIR_1.z_shift_reg [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7472 (SB_DFF): \Y_IIR_1.z_shift_reg [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7474 (SB_DFF): \Y_IIR_1.z_shift_reg [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7476 (SB_DFFE): \Y_IIR_1.p_reg [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7427 (SB_DFF): \Y_IIR_1.z_shift_reg [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7477 (SB_DFFE): \Y_IIR_1.p_reg [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7478 (SB_DFFE): \Y_IIR_1.p_reg [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7479 (SB_DFFE): \Y_IIR_1.p_reg [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7480 (SB_DFFE): \Y_IIR_1.p_reg [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7481 (SB_DFFE): \Y_IIR_1.p_reg [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7482 (SB_DFFE): \Y_IIR_1.p_reg [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7483 (SB_DFFE): \Y_IIR_1.p_reg [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7484 (SB_DFFE): \Y_IIR_1.p_reg [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7485 (SB_DFFE): \Y_IIR_1.p_reg [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7486 (SB_DFFE): \Y_IIR_1.p_reg [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7487 (SB_DFFE): \Y_IIR_1.p_reg [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7488 (SB_DFFE): \Y_IIR_1.p_reg [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7489 (SB_DFFE): \Y_IIR_1.p_reg [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7490 (SB_DFFE): \Y_IIR_1.p_reg [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7491 (SB_DFFE): \Y_IIR_1.p_reg [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7492 (SB_DFFE): \Y_IIR_1.p_reg [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7493 (SB_DFFE): \Y_IIR_1.p_reg [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7494 (SB_DFFE): \Y_IIR_1.p_reg [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7495 (SB_DFFE): \Y_IIR_1.p_reg [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7496 (SB_DFFE): \Y_IIR_1.p_reg [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7497 (SB_DFFE): \Y_IIR_1.p_reg [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7498 (SB_DFFE): \Y_IIR_1.p_reg [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7499 (SB_DFFE): \Y_IIR_1.p_reg [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7500 (SB_DFFE): \Y_IIR_1.p_reg [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7501 (SB_DFFE): \Y_IIR_1.p_reg [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7502 (SB_DFFE): \Y_IIR_1.p_reg [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7503 (SB_DFFE): \Y_IIR_1.p_reg [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7504 (SB_DFFE): \Y_IIR_1.p_reg [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7505 (SB_DFFE): \Y_IIR_1.p_reg [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7506 (SB_DFFE): \Y_IIR_1.p_reg [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7507 (SB_DFFE): \Y_IIR_1.p_reg [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7508 (SB_DFFE): \Y_IIR_1.p_reg [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7509 (SB_DFFE): \Y_IIR_1.p_reg [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7510 (SB_DFFE): \Y_IIR_1.p_reg [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7511 (SB_DFFE): \Y_IIR_1.p_reg [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7512 (SB_DFFE): \Y_IIR_1.p_reg [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7513 (SB_DFFE): \Y_IIR_1.p_reg [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7514 (SB_DFFE): \Y_IIR_1.p_reg [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7515 (SB_DFFE): \Y_IIR_1.p_reg [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7516 (SB_DFFE): \Y_IIR_1.p_reg [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7517 (SB_DFFE): \Y_IIR_1.p_reg [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7518 (SB_DFFE): \Y_IIR_1.p_reg [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7519 (SB_DFFE): \Y_IIR_1.p_reg [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7520 (SB_DFFE): \Y_IIR_1.p_reg [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7521 (SB_DFFE): \Y_IIR_1.p_reg [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7522 (SB_DFFE): \Y_IIR_1.p_reg [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7525 (SB_DFFE): \Y_IIR_1.z [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7475 (SB_DFFE): \Y_IIR_1.p_reg [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7523 (SB_DFF): \Y_IIR_1.p_step = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7526 (SB_DFFE): \Y_IIR_1.z [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7527 (SB_DFFE): \Y_IIR_1.z [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7528 (SB_DFFE): \Y_IIR_1.z [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7529 (SB_DFFE): \Y_IIR_1.z [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7530 (SB_DFFE): \Y_IIR_1.z [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7531 (SB_DFFE): \Y_IIR_1.z [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7532 (SB_DFFE): \Y_IIR_1.z [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7533 (SB_DFFE): \Y_IIR_1.z [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7534 (SB_DFFE): \Y_IIR_1.z [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7535 (SB_DFFE): \Y_IIR_1.z [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7536 (SB_DFFE): \Y_IIR_1.z [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7537 (SB_DFFE): \Y_IIR_1.z [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7538 (SB_DFFE): \Y_IIR_1.z [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7539 (SB_DFFE): \Y_IIR_1.z [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7540 (SB_DFFE): \Y_IIR_1.z [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7541 (SB_DFFE): \Y_IIR_1.z [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7542 (SB_DFFE): \Y_IIR_1.z [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7543 (SB_DFFE): \Y_IIR_1.z [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7544 (SB_DFFE): \Y_IIR_1.z [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7545 (SB_DFFE): \Y_IIR_1.z [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7546 (SB_DFFE): \Y_IIR_1.z [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7547 (SB_DFFE): \Y_IIR_1.z [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7548 (SB_DFFE): \Y_IIR_1.z [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7549 (SB_DFFE): \Y_IIR_1.z [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7550 (SB_DFFE): \Y_IIR_1.z [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7551 (SB_DFFE): \Y_IIR_1.z [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7552 (SB_DFFE): \Y_IIR_1.z [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7553 (SB_DFFE): \Y_IIR_1.z [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7554 (SB_DFFE): \Y_IIR_1.z [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7555 (SB_DFFE): \Y_IIR_1.z [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7556 (SB_DFFE): \Y_IIR_1.z [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7557 (SB_DFFE): \Y_IIR_1.z [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7558 (SB_DFFE): \Y_IIR_1.z [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7559 (SB_DFFE): \Y_IIR_1.z [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7560 (SB_DFFE): \Y_IIR_1.z [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7561 (SB_DFFE): \Y_IIR_1.z [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7562 (SB_DFFE): \Y_IIR_1.z [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7563 (SB_DFFE): \Y_IIR_1.z [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7564 (SB_DFFE): \Y_IIR_1.z [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7565 (SB_DFFE): \Y_IIR_1.z [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7566 (SB_DFFE): \Y_IIR_1.z [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7567 (SB_DFFE): \Y_IIR_1.z [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7568 (SB_DFFE): \Y_IIR_1.z [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7569 (SB_DFFE): \Y_IIR_1.z [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7570 (SB_DFFE): \Y_IIR_1.z [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7571 (SB_DFFE): \Y_IIR_1.z [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7524 (SB_DFFE): \Y_IIR_1.z [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8153 (SB_DFFE): \UI_inst.cnt0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7461 (SB_DFF): \Y_IIR_1.z_shift_reg [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7462 (SB_DFF): \Y_IIR_1.z_shift_reg [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7464 (SB_DFF): \Y_IIR_1.z_shift_reg [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7465 (SB_DFF): \Y_IIR_1.z_shift_reg [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7467 (SB_DFF): \Y_IIR_1.z_shift_reg [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7468 (SB_DFF): \Y_IIR_1.z_shift_reg [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7470 (SB_DFF): \Y_IIR_1.z_shift_reg [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7471 (SB_DFF): \Y_IIR_1.z_shift_reg [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4466 (SB_DFF): \F2SRAM.poscount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$7473 (SB_DFF): \Y_IIR_1.z_shift_reg [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5216 (SB_DFFE): \X_IIR_1.z [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5221 (SB_DFFE): \X_IIR_1.z [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8070 (SB_DFF): \UI_inst.btnt2 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8071 (SB_DFF): \UI_inst.btnt1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8072 (SB_DFF): \UI_inst.btnt0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8075 (SB_DFFE): \UI_inst.cnt3 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8076 (SB_DFFE): \UI_inst.cnt3 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8077 (SB_DFFE): \UI_inst.cnt3 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8078 (SB_DFFE): \UI_inst.cnt3 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8079 (SB_DFFE): \UI_inst.cnt3 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8080 (SB_DFFE): \UI_inst.cnt3 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8081 (SB_DFFE): \UI_inst.cnt3 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8082 (SB_DFFE): \UI_inst.cnt3 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8083 (SB_DFFE): \UI_inst.cnt3 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8084 (SB_DFFE): \UI_inst.cnt3 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8085 (SB_DFFE): \UI_inst.cnt3 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8086 (SB_DFFE): \UI_inst.cnt3 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8087 (SB_DFFE): \UI_inst.cnt3 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8088 (SB_DFFE): \UI_inst.cnt3 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8089 (SB_DFFE): \UI_inst.cnt3 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8090 (SB_DFFE): \UI_inst.cnt3 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8091 (SB_DFFE): \UI_inst.cnt3 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8092 (SB_DFFE): \UI_inst.cnt3 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8093 (SB_DFFE): \UI_inst.cnt3 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8094 (SB_DFFE): \UI_inst.cnt3 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8095 (SB_DFFE): \UI_inst.cnt3 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8096 (SB_DFFE): \UI_inst.cnt3 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8098 (SB_DFFE): \UI_inst.cnt2 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8073 (SB_DFFE): \UI_inst.cnt3 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8099 (SB_DFFE): \UI_inst.cnt2 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8100 (SB_DFFE): \UI_inst.cnt2 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8101 (SB_DFFE): \UI_inst.cnt2 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8102 (SB_DFFE): \UI_inst.cnt2 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8103 (SB_DFFE): \UI_inst.cnt2 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8104 (SB_DFFE): \UI_inst.cnt2 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8105 (SB_DFFE): \UI_inst.cnt2 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8106 (SB_DFFE): \UI_inst.cnt2 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8107 (SB_DFFE): \UI_inst.cnt2 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8108 (SB_DFFE): \UI_inst.cnt2 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8109 (SB_DFFE): \UI_inst.cnt2 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8110 (SB_DFFE): \UI_inst.cnt2 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8111 (SB_DFFE): \UI_inst.cnt2 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8112 (SB_DFFE): \UI_inst.cnt2 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8113 (SB_DFFE): \UI_inst.cnt2 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8114 (SB_DFFE): \UI_inst.cnt2 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8115 (SB_DFFE): \UI_inst.cnt2 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8116 (SB_DFFE): \UI_inst.cnt2 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8117 (SB_DFFE): \UI_inst.cnt2 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8118 (SB_DFFE): \UI_inst.cnt2 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8119 (SB_DFFE): \UI_inst.cnt2 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8120 (SB_DFFE): \UI_inst.cnt2 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8122 (SB_DFFE): \UI_inst.cnt1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8097 (SB_DFFE): \UI_inst.cnt2 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8123 (SB_DFFE): \UI_inst.cnt1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8124 (SB_DFFE): \UI_inst.cnt1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8125 (SB_DFFE): \UI_inst.cnt1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8126 (SB_DFFE): \UI_inst.cnt1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8127 (SB_DFFE): \UI_inst.cnt1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8128 (SB_DFFE): \UI_inst.cnt1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8129 (SB_DFFE): \UI_inst.cnt1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8130 (SB_DFFE): \UI_inst.cnt1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8131 (SB_DFFE): \UI_inst.cnt1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8132 (SB_DFFE): \UI_inst.cnt1 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8133 (SB_DFFE): \UI_inst.cnt1 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8134 (SB_DFFE): \UI_inst.cnt1 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8135 (SB_DFFE): \UI_inst.cnt1 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8136 (SB_DFFE): \UI_inst.cnt1 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8137 (SB_DFFE): \UI_inst.cnt1 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8138 (SB_DFFE): \UI_inst.cnt1 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8139 (SB_DFFE): \UI_inst.cnt1 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8140 (SB_DFFE): \UI_inst.cnt1 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8141 (SB_DFFE): \UI_inst.cnt1 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8142 (SB_DFFE): \UI_inst.cnt1 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8143 (SB_DFFE): \UI_inst.cnt1 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8144 (SB_DFFE): \UI_inst.cnt1 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8146 (SB_DFFE): \UI_inst.cnt0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8121 (SB_DFFE): \UI_inst.cnt1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8147 (SB_DFFE): \UI_inst.cnt0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8148 (SB_DFFE): \UI_inst.cnt0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8149 (SB_DFFE): \UI_inst.cnt0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8150 (SB_DFFE): \UI_inst.cnt0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8151 (SB_DFFE): \UI_inst.cnt0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4241 (SB_DFFE): \ADC.acq = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4233 (SB_DFF): \ADC.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8154 (SB_DFFE): \UI_inst.cnt0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8155 (SB_DFFE): \UI_inst.cnt0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8156 (SB_DFFE): \UI_inst.cnt0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8157 (SB_DFFE): \UI_inst.cnt0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8158 (SB_DFFE): \UI_inst.cnt0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8159 (SB_DFFE): \UI_inst.cnt0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8160 (SB_DFFE): \UI_inst.cnt0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8161 (SB_DFFE): \UI_inst.cnt0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8162 (SB_DFFE): \UI_inst.cnt0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8163 (SB_DFFE): \UI_inst.cnt0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8164 (SB_DFFE): \UI_inst.cnt0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8165 (SB_DFFE): \UI_inst.cnt0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8166 (SB_DFFE): \UI_inst.cnt0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8167 (SB_DFFE): \UI_inst.cnt0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8168 (SB_DFFE): \UI_inst.cnt0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8170 (SB_DFF): \UI_inst.BP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8145 (SB_DFFE): \UI_inst.cnt0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8171 (SB_DFF): \UI_inst.BP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8172 (SB_DFF): \UI_inst.BP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8175 (SB_DFF): \UI_inst.disppos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8169 (SB_DFF): \UI_inst.BP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8173 (SB_DFF): \UI_inst.dispdone = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8176 (SB_DFF): \UI_inst.disppos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8177 (SB_DFF): \UI_inst.disppos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8178 (SB_DFF): \UI_inst.disppos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8182 (SB_DFFE): \UI_inst.datS [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8174 (SB_DFF): \UI_inst.disppos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8179 (SB_DFF): \UI_inst.repaintS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8180 (SB_DFF): \UI_inst.weS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8183 (SB_DFFE): \UI_inst.datS [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8184 (SB_DFFE): \UI_inst.datS [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8185 (SB_DFFE): \UI_inst.datS [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8186 (SB_DFFE): \UI_inst.datS [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8187 (SB_DFFE): \UI_inst.datS [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8188 (SB_DFFE): \UI_inst.datS [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8190 (SB_DFFE): \UI_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8181 (SB_DFFE): \UI_inst.datS [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8191 (SB_DFFE): \UI_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8192 (SB_DFFE): \UI_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8195 (SB_DFFE): \UI_inst.refampl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8189 (SB_DFFE): \UI_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8193 (SB_DFF): \UI_inst.update = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8197 (SB_DFFE): \UI_inst.reffreq [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8194 (SB_DFFE): \UI_inst.refampl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8198 (SB_DFFE): \UI_inst.reffreq [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8200 (SB_DFF): \UI_inst.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8196 (SB_DFFE): \UI_inst.reffreq [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8201 (SB_DFF): \UI_inst.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8202 (SB_DFF): \UI_inst.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8203 (SB_DFF): \UI_inst.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8204 (SB_DFF): \UI_inst.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8205 (SB_DFF): \UI_inst.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8206 (SB_DFF): \UI_inst.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8207 (SB_DFF): \UI_inst.count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8208 (SB_DFF): \UI_inst.count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8209 (SB_DFF): \UI_inst.count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8210 (SB_DFF): \UI_inst.count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8211 (SB_DFF): \UI_inst.count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8212 (SB_DFF): \UI_inst.count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8213 (SB_DFF): \UI_inst.count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8214 (SB_DFF): \UI_inst.count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8215 (SB_DFF): \UI_inst.count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8216 (SB_DFF): \UI_inst.count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8217 (SB_DFF): \UI_inst.count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8218 (SB_DFF): \UI_inst.count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8219 (SB_DFF): \UI_inst.count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8220 (SB_DFF): \UI_inst.count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8221 (SB_DFF): \UI_inst.count [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8225 (SB_DFFE): \UI_inst.TC [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8199 (SB_DFF): \UI_inst.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8222 (SB_DFFE): \UI_inst.ismagphase = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8223 (SB_DFFE): \UI_inst.refIO = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8226 (SB_DFFE): \UI_inst.TC [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8227 (SB_DFFE): \UI_inst.TC [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8229 (SB_DFFE): \UI_inst.gain [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8224 (SB_DFFE): \UI_inst.TC [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4390 (SB_DFF): \cnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5219 (SB_DFFE): \X_IIR_1.z [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9639 (SB_DFF): \OSC.phaseword [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9640 (SB_DFF): \OSC.phaseword [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9641 (SB_DFF): \OSC.phaseword [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9642 (SB_DFF): \OSC.phaseword [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9644 (SB_DFF): \OSC.phaseword [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5172 (SB_DFFE): \X_IIR_1.p_reg [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9645 (SB_DFF): \OSC.phaseword [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9647 (SB_DFF): \OSC.phaseword [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9648 (SB_DFF): \OSC.phaseword [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9649 (SB_DFF): \OSC.phaseword [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9650 (SB_DFF): \OSC.phaseword [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9651 (SB_DFF): \OSC.phaseword [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9652 (SB_DFF): \OSC.phaseword [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9653 (SB_DFF): \OSC.phaseword [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9654 (SB_DFF): \OSC.phaseword [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9655 (SB_DFF): \OSC.phaseword [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9656 (SB_DFF): \OSC.phaseword [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9658 (SB_DFF): \OSC.phaseword [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9659 (SB_DFF): \OSC.phaseword [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9660 (SB_DFF): \OSC.phaseword [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9661 (SB_DFF): \OSC.phaseword [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9646 (SB_DFF): \OSC.phaseword [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9662 (SB_DFF): \OSC.phaseword [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9665 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9666 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9667 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9668 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9669 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9670 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9671 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9672 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9673 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9674 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9675 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9676 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9677 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9678 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9679 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9680 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9681 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9682 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9683 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9684 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9685 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9686 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9687 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9688 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9689 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9690 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9691 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9692 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9693 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9694 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9695 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9858 (SB_DFFE): \PLL.last_eP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9859 (SB_DFFE): \PLL.last_eP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9860 (SB_DFFE): \PLL.last_eP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9861 (SB_DFFE): \PLL.last_eP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9862 (SB_DFFE): \PLL.last_eP [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9863 (SB_DFFE): \PLL.last_eP [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9664 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9864 (SB_DFFE): \PLL.last_eP [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9866 (SB_DFFE): \PLL.last_eP [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9867 (SB_DFFE): \PLL.last_eP [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9868 (SB_DFFE): \PLL.last_eP [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9869 (SB_DFFE): \PLL.last_eP [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9870 (SB_DFFE): \PLL.last_eP [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9871 (SB_DFFE): \PLL.last_eP [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9872 (SB_DFFE): \PLL.last_eP [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9873 (SB_DFFE): \PLL.last_eP [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9885 (SB_DFFE): \PLL.eD [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9886 (SB_DFFE): \PLL.eD [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9887 (SB_DFFE): \PLL.eD [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9888 (SB_DFFE): \PLL.eD [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9865 (SB_DFFE): \PLL.last_eP [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9892 (SB_DFF): \PLL.l_in = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9890 (SB_DFF): \PLL.pipestep = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9891 (SB_DFF): \PLL.l2_in = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9889 (SB_DFFE): \PLL.eD [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9894 (SB_DFFE): \PLL.incr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9895 (SB_DFFE): \PLL.incr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9896 (SB_DFFE): \PLL.incr [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9897 (SB_DFFE): \PLL.incr [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9898 (SB_DFFE): \PLL.incr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9899 (SB_DFFE): \PLL.incr [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9900 (SB_DFFE): \PLL.incr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9901 (SB_DFFE): \PLL.incr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9902 (SB_DFFE): \PLL.incr [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9903 (SB_DFFE): \PLL.incr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9904 (SB_DFFE): \PLL.incr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9905 (SB_DFFE): \PLL.incr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9906 (SB_DFFE): \PLL.incr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9907 (SB_DFFE): \PLL.incr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9908 (SB_DFFE): \PLL.incr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9893 (SB_DFFE): \PLL.incr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9910 (SB_DFF): \PLL.locked = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9909 (SB_DFFE): \PLL.incr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9912 (SB_DFF): \PLL.phase [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9913 (SB_DFF): \PLL.phase [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9914 (SB_DFF): \PLL.phase [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9915 (SB_DFF): \PLL.phase [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9916 (SB_DFF): \PLL.phase [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9917 (SB_DFF): \PLL.phase [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9918 (SB_DFF): \PLL.phase [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9919 (SB_DFF): \PLL.phase [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9920 (SB_DFF): \PLL.phase [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9921 (SB_DFF): \PLL.phase [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9922 (SB_DFF): \PLL.phase [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9923 (SB_DFF): \PLL.phase [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9924 (SB_DFF): \PLL.phase [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9925 (SB_DFF): \PLL.phase [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9926 (SB_DFF): \PLL.phase [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9927 (SB_DFF): \PLL.phase [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9928 (SB_DFF): \PLL.phase [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9929 (SB_DFF): \PLL.phase [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9930 (SB_DFF): \PLL.phase [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9931 (SB_DFF): \PLL.phase [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9932 (SB_DFF): \PLL.phase [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9933 (SB_DFF): \PLL.phase [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9934 (SB_DFF): \PLL.phase [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9935 (SB_DFF): \PLL.phase [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9936 (SB_DFF): \PLL.phase [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9937 (SB_DFF): \PLL.phase [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9938 (SB_DFF): \PLL.phase [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9939 (SB_DFF): \PLL.phase [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9940 (SB_DFF): \PLL.phase [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9941 (SB_DFF): \PLL.phase [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10408 (SB_DFFR): \UI_inst.LCD.main_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10403 (SB_DFFR): \UI_inst.LCD.main_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10405 (SB_DFFR): \UI_inst.LCD.main_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10406 (SB_DFFR): \UI_inst.LCD.main_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5200 (SB_DFFE): \X_IIR_1.p_reg [46] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10407 (SB_DFFR): \UI_inst.LCD.main_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10409 (SB_DFFR): \UI_inst.LCD.main_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10410 (SB_DFFR): \UI_inst.LCD.main_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10411 (SB_DFFR): \UI_inst.LCD.main_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10412 (SB_DFFR): \UI_inst.LCD.main_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10414 (SB_DFFR): \UI_inst.LCD.main_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10416 (SB_DFFR): \UI_inst.LCD.main_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10418 (SB_DFFR): \UI_inst.LCD.main_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10423 (SB_DFFE): \UI_inst.LCD.SF_D1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10426 (SB_DFFE): \UI_inst.LCD.SF_D1 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10428 (SB_DFFER): \UI_inst.LCD.display_state [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10429 (SB_DFFER): \UI_inst.LCD.display_state [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10430 (SB_DFFER): \UI_inst.LCD.display_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10498 (SB_DFFE): \UI_inst.LCD.tx_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10497 (SB_DFFE): \UI_inst.LCD.SF_D0 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10500 (SB_DFFES): \UI_inst.LCD.tx_state [1] = 1

23.39. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$10023 (A=$techmap\PLL.$add$../pll.v:51$569_Y [31], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9992 (A=$techmap\PLL.$add$../pll.v:51$569_Y [0], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9911 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10191 (A=\F2SRAM.SPI_READER.fsm_state_next [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10132 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10192 (A=\F2SRAM.SPI_READER.fsm_state_next [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10133 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10223 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10135 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10224 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10136 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10225 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10137 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10226 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10138 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10227 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10139 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10229 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10141 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10230 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10231 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10143 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10232 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10144 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10233 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10234 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10235 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10236 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10237 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10238 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10150 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10239 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10151 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10240 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10152 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10241 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10153 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10242 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10154 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10243 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10155 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10244 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10245 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10246 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [24], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10247 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [25], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10248 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10249 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [27], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10250 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10251 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [29], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10252 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10222 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10134 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10296 (A=$techmap\F2SRAM.SPI_READER.$eq$../spi_flash_reader.v:163$517_Y, B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10166 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10253 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [31], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10287 (A=$techmap\F2SRAM.SPI_READER.$procmux$1209_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10286 (A=$techmap\F2SRAM.SPI_READER.$procmux$1209_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10167 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10288 (A=$techmap\F2SRAM.SPI_READER.$procmux$1209_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10169 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10298 (A=$auto$alumacc.cc:485:replace_alu$3749.lcu.p [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10170 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10299 (A=$techmap$auto$alumacc.cc:485:replace_alu$3749.$xor$/home/norman/anaconda3/bin/../share/yosys/techmap.v:263$8451_Y [1], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10171 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10303 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [1], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10173 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10304 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [2], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10174 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10305 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [3], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10175 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10306 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [4], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10176 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10307 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [5], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10177 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10308 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [6], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10178 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10309 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [7], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10179 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10310 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [8], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10180 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10311 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [9], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10181 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10312 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [10], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10182 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10313 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [11], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10183 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10314 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [12], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10184 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10315 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [13], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10185 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10316 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [14], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10186 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10317 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [15], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10187 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10318 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [16], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10302 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10172 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13538 (A=$auto$rtlil.cc:1895:Xor$3586, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13430 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13537 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$904_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13432 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13503 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13435 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13504 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13436 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13505 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13437 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13506 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13438 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13507 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13439 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13508 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13440 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13509 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13441 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13510 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13442 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13511 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13443 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13512 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13444 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13513 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13445 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13514 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13446 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13515 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13447 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13516 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13448 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13517 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13449 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13502 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13434 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13518 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$910_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13450 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13469 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13452 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13470 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13453 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13471 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13454 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13472 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13455 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13473 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13456 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13474 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13457 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13475 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13458 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13476 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13459 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13477 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13460 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13478 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13461 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13479 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13462 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13480 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13463 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13481 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13464 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13482 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13465 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13483 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13466 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13484 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13467 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13670 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13671 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13674 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13675 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13676 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13677 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13678 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13679 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13680 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13681 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13673 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13682 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$934_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13633 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13634 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13635 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13567 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13636 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13568 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13637 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13569 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13638 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13639 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13571 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13640 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13572 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13641 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13573 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13642 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13574 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13643 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13575 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13644 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13576 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13645 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13577 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13646 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13578 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13647 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13579 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13632 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13648 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$940_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13580 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13599 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13582 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13600 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13583 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13601 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13584 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13602 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13585 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13603 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13586 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13604 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13587 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13605 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13588 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13606 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13589 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13607 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13590 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13608 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13591 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13609 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13592 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13610 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13593 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13611 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13594 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13612 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13595 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13613 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13596 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13614 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13597 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13818 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13699 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13819 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13700 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13821 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13702 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13822 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13703 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13823 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13704 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13598 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$946_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13581 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13824 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13705 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13826 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13707 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13827 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13708 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13828 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13709 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13829 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13710 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13830 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13711 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13831 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13712 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13832 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13713 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13833 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13714 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13825 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13706 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13834 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$964_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13715 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13785 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13717 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13786 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13718 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13787 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13719 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13788 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13720 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13789 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13721 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13790 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13722 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13791 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13723 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13792 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13724 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13793 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13725 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13794 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13726 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13795 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13727 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13796 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13728 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13797 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13729 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13798 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13730 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13799 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13731 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13784 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13716 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13800 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$970_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13732 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13751 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13734 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13752 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13735 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13753 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13736 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13754 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13737 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13755 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13738 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13756 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13739 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13757 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13740 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13758 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13741 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13759 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13742 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13760 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13743 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13761 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13744 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13762 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13745 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13763 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13746 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13764 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13747 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13765 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13748 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13766 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13749 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13977 (A=\CORDIC.cordicCORE.U2.z_1 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13858 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13978 (A=\CORDIC.cordicCORE.U2.z_1 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13859 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13980 (A=\CORDIC.cordicCORE.U2.z_1 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13861 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13981 (A=\CORDIC.cordicCORE.U2.z_1 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13862 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13982 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13863 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13750 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$976_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13733 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13983 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13864 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13985 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13866 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13986 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13867 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13987 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13868 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13988 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13869 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13989 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13870 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13990 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13871 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13991 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13872 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13992 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13873 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13984 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13865 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13993 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$994_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13874 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13944 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13876 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13945 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13877 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13946 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13878 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13947 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13879 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13948 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13880 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13949 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13881 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13950 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13882 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13951 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13883 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13952 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13884 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13953 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13885 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13954 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13886 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13955 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13887 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13956 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13888 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13957 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13889 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13958 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13890 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13943 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13875 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13959 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1000_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13891 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13910 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13893 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13911 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13894 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13912 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13895 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13913 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13896 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13914 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13897 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13915 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13898 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13916 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13899 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13917 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13900 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13918 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13901 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13919 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13902 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13920 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13903 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13921 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13904 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13922 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13905 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13923 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13906 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13924 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13907 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13925 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13908 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14134 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14015 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14135 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14016 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14136 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14017 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14137 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14018 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14138 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14019 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14139 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14020 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13909 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$1006_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13892 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14140 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14021 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14142 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14023 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14143 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14024 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14144 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14025 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14145 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14026 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14146 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14027 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14147 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14028 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14148 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14029 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14149 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14030 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14141 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14022 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14150 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1024_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14031 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14101 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14033 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14102 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14034 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14103 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14035 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14104 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14036 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14105 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14037 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14106 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14038 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14107 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14039 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14108 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14040 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14109 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14041 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14110 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14042 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14111 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14043 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14112 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14044 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14113 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14045 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14114 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14046 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14115 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14047 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14100 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14032 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14116 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1030_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14048 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14067 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14050 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14068 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14051 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14069 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14052 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14070 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14053 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14071 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14054 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14072 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14055 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14073 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14056 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14074 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14057 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14075 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14058 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14076 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14059 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14077 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14060 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14078 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14061 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14079 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14062 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14080 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14063 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14081 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14064 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14082 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14065 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14293 (A=\CORDIC.cordicCORE.U4.z_1 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14174 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14294 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14175 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14295 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14176 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14296 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14177 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14297 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14178 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14298 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14179 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14066 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$1036_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14049 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14299 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14180 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14301 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14182 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14302 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14183 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14303 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14304 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14305 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14306 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14307 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14188 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14308 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14189 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14300 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14181 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14309 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1054_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14190 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14260 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14192 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14261 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14193 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14262 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14194 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14263 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14195 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14264 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14196 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14265 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14197 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14266 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14198 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14267 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14199 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14268 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14200 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14269 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14201 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14270 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14271 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14203 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14272 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14204 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14273 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14205 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14274 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14206 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14259 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14191 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14275 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1060_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14207 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14226 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14209 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14227 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14210 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14228 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14211 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14229 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14212 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14230 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14213 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14231 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14214 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14232 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14215 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14233 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14216 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14234 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14217 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14235 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14218 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14236 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14219 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14237 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14220 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14238 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14221 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14239 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14222 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14240 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14223 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14241 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14224 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14451 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14332 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14452 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14333 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14453 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14334 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14454 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14335 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14455 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14336 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14456 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14337 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14225 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$1066_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14208 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14457 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14338 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14459 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14340 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14460 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14341 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14461 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14342 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14462 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14343 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14463 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14344 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14464 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14345 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14465 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14346 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14466 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14347 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14458 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14339 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14467 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1084_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14348 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14418 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14350 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14419 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14351 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14420 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14352 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14421 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14353 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14422 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14354 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14423 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14355 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14424 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14356 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14425 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14357 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14426 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14358 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14427 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14359 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14428 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14360 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14429 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14361 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14430 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14362 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14431 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14363 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14432 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14364 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14417 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14349 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14433 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1090_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14365 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14384 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14367 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14385 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14368 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14386 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14369 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14387 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14370 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14388 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14371 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14389 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14372 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14390 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14373 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14391 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14374 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14392 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14375 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14393 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14376 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14394 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14377 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14395 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14378 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14396 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14379 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14397 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14380 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14398 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14381 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14399 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14382 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14556 (A=\CORDIC.cordicCORE.U6.z_1 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14488 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14557 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14489 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14558 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14490 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14559 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14491 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14560 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14492 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14561 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14493 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14383 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$1096_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14366 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14562 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14494 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14564 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14496 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14565 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14497 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14566 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14498 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14567 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14499 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14568 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14500 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14569 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14501 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14570 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14502 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14571 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14503 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14572 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14504 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14523 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14506 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14524 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14507 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14525 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14508 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14526 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14509 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14527 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14510 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14528 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14511 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14529 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14512 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14530 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14513 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14531 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14514 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14532 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14515 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14533 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14516 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14534 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14517 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14535 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14518 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14536 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14519 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14537 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14520 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14538 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14521 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14522 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1126_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14505 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4299 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [3], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4236 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4300 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [4], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4237 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4297 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [1], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4234 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4301 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [5], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4238 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4302 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [6], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4239 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4303 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [7], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4240 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8237 (A=$auto$wreduce.cc:460:run$3468 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8152 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8375 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8074 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5038 (A=\DDS.iscos, B=1'0, S=\DDS.islast) into $auto$simplemap.cc:420:simplemap_dff$4845 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4298 (A=1'0, B=$auto$wreduce.cc:460:run$3460 [2], S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4235 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5037 (A=$techmap\DDS.$logic_and$../dds.v:25$548_Y, B=1'0, S=\DDS.iscos) into $auto$simplemap.cc:420:simplemap_dff$4847 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4733 (A=1'0, B=$techmap\F2SRAM.$procmux$1256_Y, S=\F2SRAM.busy) into $auto$simplemap.cc:420:simplemap_dff$4503 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13468 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$916_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13451 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5344 (A=$techmap\X_IIR_1.$and$../filter/RIIR.v:45$62_Y, B=1'0, S=\X_IIR_1.p_step) into $auto$simplemap.cc:420:simplemap_dff$5202 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10228 (A=$techmap\F2SRAM.SPI_READER.$procmux$1215_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10140 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8431 (A=$techmap\UI_inst.$procmux$3064_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8069 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14563 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1114_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14495 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7768 (A=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:30$106_Y, B=1'1, S=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:49$137_Y) into $auto$simplemap.cc:420:simplemap_dff$7766 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7652 (A=$techmap\Y_IIR_1.$and$../filter/RIIR.v:45$62_Y, B=1'0, S=\Y_IIR_1.p_step) into $auto$simplemap.cc:420:simplemap_dff$7523 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8238 (A=$auto$wreduce.cc:460:run$3468 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8153 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7767 (A=$techmap\CORDIC.$procmux$3104_Y [0], B=1'1, S=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:49$137_Y) into $auto$simplemap.cc:420:simplemap_dff$7765 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8428 (A=$techmap\UI_inst.$procmux$3070_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8070 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8425 (A=$techmap\UI_inst.$procmux$3076_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8071 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8422 (A=$techmap\UI_inst.$procmux$3082_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8072 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8376 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8075 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8377 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8076 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8378 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8077 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8379 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8078 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8380 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8079 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8381 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8080 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8382 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8081 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8383 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8082 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8384 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8083 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8385 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8084 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8386 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8085 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8387 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8086 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8388 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8087 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8389 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8088 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8390 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8089 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8391 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8090 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8392 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8091 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8393 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8092 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8394 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8093 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8395 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8094 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8396 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8095 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8397 (A=$techmap\UI_inst.$add$../UI/UI.v:112$169_Y [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8096 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8327 (A=$auto$wreduce.cc:460:run$3464 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8098 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8374 (A=$auto$simplemap.cc:309:simplemap_lut$32600, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8073 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8328 (A=$auto$wreduce.cc:460:run$3464 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8099 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8329 (A=$auto$wreduce.cc:460:run$3464 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8100 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8330 (A=$auto$wreduce.cc:460:run$3464 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8101 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8331 (A=$auto$wreduce.cc:460:run$3464 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8102 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8332 (A=$auto$wreduce.cc:460:run$3464 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8103 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8333 (A=$auto$wreduce.cc:460:run$3464 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8104 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8334 (A=$auto$wreduce.cc:460:run$3464 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8105 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8335 (A=$auto$wreduce.cc:460:run$3464 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8106 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8336 (A=$auto$wreduce.cc:460:run$3464 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8107 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8337 (A=$auto$wreduce.cc:460:run$3464 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8108 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8338 (A=$auto$wreduce.cc:460:run$3464 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8109 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8339 (A=$auto$wreduce.cc:460:run$3464 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8110 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8340 (A=$auto$wreduce.cc:460:run$3464 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8341 (A=$auto$wreduce.cc:460:run$3464 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8112 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8342 (A=$auto$wreduce.cc:460:run$3464 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8113 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8343 (A=$auto$wreduce.cc:460:run$3464 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8114 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8344 (A=$auto$wreduce.cc:460:run$3464 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8115 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8345 (A=$auto$wreduce.cc:460:run$3464 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8346 (A=$auto$wreduce.cc:460:run$3464 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8117 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8347 (A=$auto$wreduce.cc:460:run$3464 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8348 (A=$auto$wreduce.cc:460:run$3464 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8119 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8349 (A=$auto$wreduce.cc:460:run$3464 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8279 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8122 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8326 (A=$auto$simplemap.cc:309:simplemap_lut$32581, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8097 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8280 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8123 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8281 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8124 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8282 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8125 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8283 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8126 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8284 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8127 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8285 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8128 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8286 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8129 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8287 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8130 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8288 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8131 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8289 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8132 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8290 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8133 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8291 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8134 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8292 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8135 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8293 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8136 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8294 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8137 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8295 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8138 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8296 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8139 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8297 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8140 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8298 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8141 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8299 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8142 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8300 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8143 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8301 (A=$techmap\UI_inst.$add$../UI/UI.v:92$161_Y [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8144 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8231 (A=$auto$wreduce.cc:460:run$3468 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8146 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8278 (A=$auto$simplemap.cc:309:simplemap_lut$32714, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8121 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8232 (A=$auto$wreduce.cc:460:run$3468 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8147 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8233 (A=$auto$wreduce.cc:460:run$3468 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8148 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8234 (A=$auto$wreduce.cc:460:run$3468 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8149 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8235 (A=$auto$wreduce.cc:460:run$3468 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8150 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8236 (A=$auto$wreduce.cc:460:run$3468 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8151 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4296 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$33094, S=$auto$simplemap.cc:256:simplemap_eqne$4314) into $auto$simplemap.cc:420:simplemap_dff$4233 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8239 (A=$auto$wreduce.cc:460:run$3468 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8154 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8240 (A=$auto$wreduce.cc:460:run$3468 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8155 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8241 (A=$auto$wreduce.cc:460:run$3468 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8156 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8242 (A=$auto$wreduce.cc:460:run$3468 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8157 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8243 (A=$auto$wreduce.cc:460:run$3468 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8158 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8244 (A=$auto$wreduce.cc:460:run$3468 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8159 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8245 (A=$auto$wreduce.cc:460:run$3468 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8160 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8246 (A=$auto$wreduce.cc:460:run$3468 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8161 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8247 (A=$auto$wreduce.cc:460:run$3468 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8162 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8248 (A=$auto$wreduce.cc:460:run$3468 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8163 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8249 (A=$auto$wreduce.cc:460:run$3468 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8164 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8250 (A=$auto$wreduce.cc:460:run$3468 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8165 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8251 (A=$auto$wreduce.cc:460:run$3468 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8166 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8252 (A=$auto$wreduce.cc:460:run$3468 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8167 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8253 (A=$auto$wreduce.cc:460:run$3468 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8168 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8230 (A=$auto$simplemap.cc:309:simplemap_lut$32695, B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8145 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$16949 (A=1'0, B=$techmap$techmap\UI_inst.$procmux$2806.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9247_Y, S=$techmap$techmap\UI_inst.$procmux$2806.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9243_Y) into $auto$simplemap.cc:420:simplemap_dff$8179 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17893 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17595 [2], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17894 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9821_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17895 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$17622 [1], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17896 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9823_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17898 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9825_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17899 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17680 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17901 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$17559 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17902 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9829_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17897 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9824_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9649 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17903 (A=1'1, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9830_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9650 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17904 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9831_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17905 (A=1'1, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9832_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9652 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17906 (A=1'1, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9833_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9653 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17907 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$17608 [1], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9654 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17908 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9835_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9655 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17909 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9836_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9656 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17911 (A=1'0, B=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:441$9838_Y, S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9658 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17912 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17563 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9659 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17910 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17581 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9660 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17913 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17550 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17900 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17671 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$17914 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$17541 [0], S=$techmap$techmap\OSC.$procmux$3141.$reduce_or$/home/norman/anaconda3/bin/../share/yosys/techmap.v:445$9811_Y) into $auto$simplemap.cc:420:simplemap_dff$9662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10044 (A=$auto$simplemap.cc:309:simplemap_lut$32562, B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9858 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10045 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [1], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9859 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10046 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [2], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9860 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10047 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [3], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9861 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10048 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [4], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9862 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10049 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [5], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9863 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10050 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [6], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9864 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10052 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [8], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9866 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10053 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [9], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9867 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10054 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [10], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9868 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10055 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [11], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9869 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10056 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [12], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9870 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10057 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [13], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9871 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10058 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [14], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9872 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10059 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [15], B=1'0, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9873 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10051 (A=$techmap\PLL.$sub$../pll.v:44$562_Y [7], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$561_Y) into $auto$simplemap.cc:420:simplemap_dff$9865 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$9993 (A=$techmap\PLL.$add$../pll.v:51$569_Y [1], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9912 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9994 (A=$techmap\PLL.$add$../pll.v:51$569_Y [2], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9913 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9995 (A=$techmap\PLL.$add$../pll.v:51$569_Y [3], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9914 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9996 (A=$techmap\PLL.$add$../pll.v:51$569_Y [4], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9915 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9997 (A=$techmap\PLL.$add$../pll.v:51$569_Y [5], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9916 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9998 (A=$techmap\PLL.$add$../pll.v:51$569_Y [6], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9917 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$9999 (A=$techmap\PLL.$add$../pll.v:51$569_Y [7], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9918 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10000 (A=$techmap\PLL.$add$../pll.v:51$569_Y [8], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9919 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10001 (A=$techmap\PLL.$add$../pll.v:51$569_Y [9], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9920 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10002 (A=$techmap\PLL.$add$../pll.v:51$569_Y [10], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9921 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10003 (A=$techmap\PLL.$add$../pll.v:51$569_Y [11], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9922 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10004 (A=$techmap\PLL.$add$../pll.v:51$569_Y [12], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9923 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10005 (A=$techmap\PLL.$add$../pll.v:51$569_Y [13], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9924 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10006 (A=$techmap\PLL.$add$../pll.v:51$569_Y [14], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9925 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10007 (A=$techmap\PLL.$add$../pll.v:51$569_Y [15], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9926 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10008 (A=$techmap\PLL.$add$../pll.v:51$569_Y [16], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9927 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10009 (A=$techmap\PLL.$add$../pll.v:51$569_Y [17], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9928 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10010 (A=$techmap\PLL.$add$../pll.v:51$569_Y [18], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9929 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10011 (A=$techmap\PLL.$add$../pll.v:51$569_Y [19], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9930 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10012 (A=$techmap\PLL.$add$../pll.v:51$569_Y [20], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9931 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10013 (A=$techmap\PLL.$add$../pll.v:51$569_Y [21], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9932 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10014 (A=$techmap\PLL.$add$../pll.v:51$569_Y [22], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9933 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10015 (A=$techmap\PLL.$add$../pll.v:51$569_Y [23], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9934 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10016 (A=$techmap\PLL.$add$../pll.v:51$569_Y [24], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9935 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10017 (A=$techmap\PLL.$add$../pll.v:51$569_Y [25], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9936 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10018 (A=$techmap\PLL.$add$../pll.v:51$569_Y [26], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10019 (A=$techmap\PLL.$add$../pll.v:51$569_Y [27], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9938 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10020 (A=$techmap\PLL.$add$../pll.v:51$569_Y [28], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9939 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10021 (A=$techmap\PLL.$add$../pll.v:51$569_Y [29], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10022 (A=$techmap\PLL.$add$../pll.v:51$569_Y [30], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10319 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$525_Y [17], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10189 (SB_DFFE).

23.40. Executing ICE40_OPT pass (performing simple optimizations).

23.40.1. Running ICE40 specific optimizations.

23.40.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.40.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 516 cells.

23.40.4. Executing OPT_RMDFF pass (remove dff with constant values).

23.40.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 605 unused cells and 7910 unused wires.

23.40.6. Rerunning OPT passes. (Removed registers in this run.)

23.40.7. Running ICE40 specific optimizations.

23.40.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.40.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.40.10. Executing OPT_RMDFF pass (remove dff with constant values).

23.40.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.40.12. Rerunning OPT passes. (Removed registers in this run.)

23.40.13. Running ICE40 specific optimizations.

23.40.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

23.40.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

23.40.16. Executing OPT_RMDFF pass (remove dff with constant values).

23.40.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

23.40.18. Finished OPT passes. (There is nothing left to do.)

23.41. Executing TECHMAP pass (map to technology primitives).

23.41.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

23.41.2. Continuing TECHMAP pass.
No more expansions possible.

23.42. Executing ABC pass (technology mapping using ABC).

23.42.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 6150 gates and 8309 wires to a netlist network with 2157 inputs and 1600 outputs.

23.42.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2291.
ABC: Participating nodes from both networks       =    4963.
ABC: Participating nodes from the first network   =    2339. (  82.10 % of nodes)
ABC: Participating nodes from the second network  =    2624. (  92.10 % of nodes)
ABC: Node pairs (any polarity)                    =    2339. (  82.10 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1893. (  66.44 % of names can be moved)
ABC: Total runtime =     0.10 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

23.42.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2843
ABC RESULTS:        internal signals:     4552
ABC RESULTS:           input signals:     2157
ABC RESULTS:          output signals:     1600
Removing temp directory.

23.43. Executing ICE40_WRAPCARRY pass (wrap carries).

23.44. Executing TECHMAP pass (map to technology primitives).

23.44.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

23.44.2. Continuing TECHMAP pass.
No more expansions possible.
Removed 253 unused cells and 3308 unused wires.

23.45. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4222
  1-LUT              416
  2-LUT              362
  3-LUT             2665
  4-LUT              779
  with \SB_CARRY    1306

Eliminating LUTs.
Number of LUTs:     4221
  1-LUT              415
  2-LUT              362
  3-LUT             2665
  4-LUT              779
  with \SB_CARRY    1306

Combining LUTs.
Number of LUTs:     4170
  1-LUT              404
  2-LUT              335
  3-LUT             2624
  4-LUT              807
  with \SB_CARRY    1306

Eliminated 1 LUTs.
Combined 51 LUTs.

23.46. Executing TECHMAP pass (map to technology primitives).

23.46.1. Executing Verilog-2005 frontend: /home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/norman/anaconda3/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

23.46.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110100110010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010110101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110110000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010111000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000110000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010110100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011001101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101011010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001110101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101110111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110111001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101011111111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101000110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001111110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111111111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110001010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001011010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011011111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001011010011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0110011000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001100110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001100110011001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010010111001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
No more expansions possible.
Removed 0 unused cells and 8389 unused wires.

23.47. Executing AUTONAME pass.
Renamed 112093 objects in module top (49 iterations).

23.48. Executing HIERARCHY pass (managing design hierarchy).

23.48.1. Analyzing design hierarchy..
Top module:  \top

23.48.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

23.49. Printing statistics.

=== top ===

   Number of wires:               4140
   Number of wire bits:          11539
   Number of public wires:        4140
   Number of public wire bits:   11539
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7301
     SB_CARRY                     1469
     SB_DFF                        468
     SB_DFFE                       532
     SB_DFFER                        8
     SB_DFFESR                     107
     SB_DFFESS                      31
     SB_DFFN                        16
     SB_DFFR                        14
     SB_DFFSR                      458
     SB_DFFSS                       17
     SB_IO                           4
     SB_LUT4                      4170
     SB_MAC16                        2
     SB_RAM40_4K                     1
     SB_SPRAM256KA                   4

23.50. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

23.51. Executing JSON backend.

Warnings: 44 unique messages, 45 total
End of script. Logfile hash: fcaa8bc9cd, CPU: user 21.10s system 0.16s, MEM: 148.16 MB peak
Yosys 0.9+1706 (git sha1 81e6b040, x86_64-conda_cos6-linux-gnu-gcc 1.23.0.449-a04d0 -fvisibility-inlines-hidden -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -fdebug-prefix-map=/tmp/really-long-path/conda/conda-bld/yosys_1579927201458/work=/usr/local/src/conda/yosys-0.9_3096_g81e6b040 -fdebug-prefix-map=/home/norman/anaconda3=/usr/local/src/conda-prefix -fPIC -Os)
Time spent: 28% 34x opt_expr (6 sec), 20% 31x opt_clean (4 sec), 20% 27x opt_merge (4 sec), ...
