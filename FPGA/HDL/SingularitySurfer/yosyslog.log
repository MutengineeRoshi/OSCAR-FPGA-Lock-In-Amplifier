
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 4c89a4e6, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `TOP_V1.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: TOP_V1.v
Parsing Verilog input from `TOP_V1.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `../fibonacci7.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ../fibonacci7.v
Parsing Verilog input from `../fibonacci7.v' to AST representation.
Generating RTLIL representation for module `\fibonacci7'.
Warning: wire '\fib' is assigned in a block at ../fibonacci7.v:11.
Warning: wire '\fib' is assigned in a block at ../fibonacci7.v:12.
../fibonacci7.v:12: Warning: Range select out of bounds on signal `\fib': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Parsing `../fibonacci15.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: ../fibonacci15.v
Parsing Verilog input from `../fibonacci15.v' to AST representation.
Generating RTLIL representation for module `\fibonacci15'.
Warning: wire '\fib' is assigned in a block at ../fibonacci15.v:11.
Warning: wire '\fib' is assigned in a block at ../fibonacci15.v:12.
../fibonacci15.v:12: Warning: Range select out of bounds on signal `\fib': Setting result bit to undef.
Successfully finished Verilog frontend.

-- Parsing `../oscillator.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: ../oscillator.v
Parsing Verilog input from `../oscillator.v' to AST representation.
Generating RTLIL representation for module `\oscillator'.
Successfully finished Verilog frontend.

-- Parsing `../adc_host.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ../adc_host.v
Parsing Verilog input from `../adc_host.v' to AST representation.
Generating RTLIL representation for module `\adc_host'.
Successfully finished Verilog frontend.

-- Parsing `../filter/CIC.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: ../filter/CIC.v
Parsing Verilog input from `../filter/CIC.v' to AST representation.
Generating RTLIL representation for module `\CIC'.
Successfully finished Verilog frontend.

-- Parsing `../filter/dpram_64x8.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ../filter/dpram_64x8.v
Parsing Verilog input from `../filter/dpram_64x8.v' to AST representation.
Generating RTLIL representation for module `\dpram_64x8'.
Successfully finished Verilog frontend.

-- Parsing `../cordic/fullcordic.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: ../cordic/fullcordic.v
Parsing Verilog input from `../cordic/fullcordic.v' to AST representation.
Generating RTLIL representation for module `\fullcordic'.
Warning: Replacing memory \quadmem with list of registers. See ../cordic/fullcordic.v:46
Successfully finished Verilog frontend.

-- Parsing `../cordic/cordic.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: ../cordic/cordic.v
Parsing Verilog input from `../cordic/cordic.v' to AST representation.
Generating RTLIL representation for module `\signed_shifter'.
Generating RTLIL representation for module `\rotator'.
Generating RTLIL representation for module `\cordic'.
Successfully finished Verilog frontend.

-- Parsing `../UI/UI.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: ../UI/UI.v
Parsing Verilog input from `../UI/UI.v' to AST representation.
Generating RTLIL representation for module `\UI'.
Successfully finished Verilog frontend.

-- Parsing `../UI/BinToLCD.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: ../UI/BinToLCD.v
Parsing Verilog input from `../UI/BinToLCD.v' to AST representation.
Generating RTLIL representation for module `\BinToLCD'.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_defines.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: ../UI/lcd_defines.v
Parsing Verilog input from `../UI/lcd_defines.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_display.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: ../UI/lcd_display.v
Parsing Verilog input from `../UI/lcd_display.v' to AST representation.
Generating RTLIL representation for module `\lcd'.
Successfully finished Verilog frontend.

-- Parsing `../UI/delay_counter.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: ../UI/delay_counter.v
Parsing Verilog input from `../UI/delay_counter.v' to AST representation.
Generating RTLIL representation for module `\delay_counter'.
Successfully finished Verilog frontend.

-- Parsing `../sram16x16.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: ../sram16x16.v
Parsing Verilog input from `../sram16x16.v' to AST representation.
Generating RTLIL representation for module `\sram16x16'.
Successfully finished Verilog frontend.

-- Parsing `../Flash_to_SRAM.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: ../Flash_to_SRAM.v
Parsing Verilog input from `../Flash_to_SRAM.v' to AST representation.
Generating RTLIL representation for module `\Flash_to_SRAM'.
Successfully finished Verilog frontend.

-- Parsing `../spi_flash_reader.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: ../spi_flash_reader.v
Parsing Verilog input from `../spi_flash_reader.v' to AST representation.
Generating RTLIL representation for module `\spi_flash_reader'.
Successfully finished Verilog frontend.

-- Parsing `../sigma_delta.v' using frontend `verilog' --

18. Executing Verilog-2005 frontend: ../sigma_delta.v
Parsing Verilog input from `../sigma_delta.v' to AST representation.
Generating RTLIL representation for module `\sigma_delta'.
Successfully finished Verilog frontend.

-- Parsing `../dds.v' using frontend `verilog' --

19. Executing Verilog-2005 frontend: ../dds.v
Parsing Verilog input from `../dds.v' to AST representation.
Generating RTLIL representation for module `\dds'.
Successfully finished Verilog frontend.

-- Parsing `../mult16x16.v' using frontend `verilog' --

20. Executing Verilog-2005 frontend: ../mult16x16.v
Parsing Verilog input from `../mult16x16.v' to AST representation.
Generating RTLIL representation for module `\mult16x16'.
Successfully finished Verilog frontend.

-- Parsing `../pll.v' using frontend `verilog' --

21. Executing Verilog-2005 frontend: ../pll.v
Parsing Verilog input from `../pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json yosysout.json' --

22. Executing SYNTH_ICE40 pass.

22.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

22.2. Executing HIERARCHY pass (managing design hierarchy).

22.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             \rotator
Used module:                 \signed_shifter
Used module:     \CIC
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             \delay_counter
Used module:         \BinToLCD

22.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\CIC'.
Parameter \rate = 32
Parameter \log2rate = 5
Generating RTLIL representation for module `$paramod\CIC\rate=32\log2rate=5'.

22.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\CIC'.
Parameter \rate = 32
Parameter \log2rate = 5
Found cached RTLIL representation for module `$paramod\CIC\rate=32\log2rate=5'.

22.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 7
Parameter \tangle = 17'00000000001110010
Generating RTLIL representation for module `$paramod\rotator\iteration=7\tangle=17'00000000001110010'.

22.2.5. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 6
Parameter \tangle = 17'00000000011100101
Generating RTLIL representation for module `$paramod\rotator\iteration=6\tangle=17'00000000011100101'.

22.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 5
Parameter \tangle = 17'00000000111001010
Generating RTLIL representation for module `$paramod\rotator\iteration=5\tangle=17'00000000111001010'.

22.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 4
Parameter \tangle = 17'00000001110010011
Generating RTLIL representation for module `$paramod\rotator\iteration=4\tangle=17'00000001110010011'.

22.2.8. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 3
Parameter \tangle = 17'00000011100100000
Generating RTLIL representation for module `$paramod\rotator\iteration=3\tangle=17'00000011100100000'.

22.2.9. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 2
Parameter \tangle = 17'00000111000001001
Generating RTLIL representation for module `$paramod\rotator\iteration=2\tangle=17'00000111000001001'.

22.2.10. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 1
Parameter \tangle = 17'00001101010010000
Generating RTLIL representation for module `$paramod\rotator\iteration=1\tangle=17'00001101010010000'.

22.2.11. Executing AST frontend in derive mode using pre-parsed AST for module `\rotator'.
Parameter \iteration = 0
Parameter \tangle = 17'00010110100000000
Generating RTLIL representation for module `$paramod\rotator\iteration=0\tangle=17'00010110100000000'.

22.2.12. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 0
Generating RTLIL representation for module `$paramod\signed_shifter\i=0'.

22.2.13. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.

22.2.14. Executing AST frontend in derive mode using pre-parsed AST for module `\delay_counter'.
Parameter \counter_width = 20
Generating RTLIL representation for module `$paramod\delay_counter\counter_width=20'.

22.2.15. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 \signed_shifter
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:     $paramod\CIC\rate=32\log2rate=5
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

22.2.16. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 7
Generating RTLIL representation for module `$paramod\signed_shifter\i=7'.

22.2.17. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 7
Found cached RTLIL representation for module `$paramod\signed_shifter\i=7'.

22.2.18. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 6
Generating RTLIL representation for module `$paramod\signed_shifter\i=6'.

22.2.19. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 6
Found cached RTLIL representation for module `$paramod\signed_shifter\i=6'.

22.2.20. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 5
Generating RTLIL representation for module `$paramod\signed_shifter\i=5'.

22.2.21. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 5
Found cached RTLIL representation for module `$paramod\signed_shifter\i=5'.

22.2.22. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 4
Generating RTLIL representation for module `$paramod\signed_shifter\i=4'.

22.2.23. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 4
Found cached RTLIL representation for module `$paramod\signed_shifter\i=4'.

22.2.24. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 3
Generating RTLIL representation for module `$paramod\signed_shifter\i=3'.

22.2.25. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 3
Found cached RTLIL representation for module `$paramod\signed_shifter\i=3'.

22.2.26. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 2
Generating RTLIL representation for module `$paramod\signed_shifter\i=2'.

22.2.27. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 2
Found cached RTLIL representation for module `$paramod\signed_shifter\i=2'.

22.2.28. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 1
Generating RTLIL representation for module `$paramod\signed_shifter\i=1'.

22.2.29. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 1
Found cached RTLIL representation for module `$paramod\signed_shifter\i=1'.

22.2.30. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.

22.2.31. Executing AST frontend in derive mode using pre-parsed AST for module `\signed_shifter'.
Parameter \i = 0
Found cached RTLIL representation for module `$paramod\signed_shifter\i=0'.

22.2.32. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 $paramod\signed_shifter\i=7
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:                 $paramod\signed_shifter\i=6
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:                 $paramod\signed_shifter\i=5
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:                 $paramod\signed_shifter\i=4
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:                 $paramod\signed_shifter\i=3
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:                 $paramod\signed_shifter\i=2
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:                 $paramod\signed_shifter\i=1
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:                 $paramod\signed_shifter\i=0
Used module:     $paramod\CIC\rate=32\log2rate=5
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

22.2.33. Analyzing design hierarchy..
Top module:  \top
Used module:     \sram16x16
Used module:     \Flash_to_SRAM
Used module:         \spi_flash_reader
Used module:     \fullcordic
Used module:         \cordic
Used module:             $paramod\rotator\iteration=7\tangle=17'00000000001110010
Used module:                 $paramod\signed_shifter\i=7
Used module:             $paramod\rotator\iteration=6\tangle=17'00000000011100101
Used module:                 $paramod\signed_shifter\i=6
Used module:             $paramod\rotator\iteration=5\tangle=17'00000000111001010
Used module:                 $paramod\signed_shifter\i=5
Used module:             $paramod\rotator\iteration=4\tangle=17'00000001110010011
Used module:                 $paramod\signed_shifter\i=4
Used module:             $paramod\rotator\iteration=3\tangle=17'00000011100100000
Used module:                 $paramod\signed_shifter\i=3
Used module:             $paramod\rotator\iteration=2\tangle=17'00000111000001001
Used module:                 $paramod\signed_shifter\i=2
Used module:             $paramod\rotator\iteration=1\tangle=17'00001101010010000
Used module:                 $paramod\signed_shifter\i=1
Used module:             $paramod\rotator\iteration=0\tangle=17'00010110100000000
Used module:                 $paramod\signed_shifter\i=0
Used module:     $paramod\CIC\rate=32\log2rate=5
Used module:         \dpram_64x8
Used module:     \mult16x16
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \dds
Used module:     \pll
Used module:         \fibonacci7
Used module:     \oscillator
Used module:         \fibonacci15
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Removing unused module `\delay_counter'.
Removing unused module `\rotator'.
Removing unused module `\signed_shifter'.
Removing unused module `\CIC'.
Removed 4 unused modules.
Mapping positional arguments of cell $paramod\rotator\iteration=0\tangle=17'00010110100000000.y_shifter ($paramod\signed_shifter\i=0).
Mapping positional arguments of cell $paramod\rotator\iteration=0\tangle=17'00010110100000000.x_shifter ($paramod\signed_shifter\i=0).
Mapping positional arguments of cell $paramod\rotator\iteration=1\tangle=17'00001101010010000.y_shifter ($paramod\signed_shifter\i=1).
Mapping positional arguments of cell $paramod\rotator\iteration=1\tangle=17'00001101010010000.x_shifter ($paramod\signed_shifter\i=1).
Mapping positional arguments of cell $paramod\rotator\iteration=2\tangle=17'00000111000001001.y_shifter ($paramod\signed_shifter\i=2).
Mapping positional arguments of cell $paramod\rotator\iteration=2\tangle=17'00000111000001001.x_shifter ($paramod\signed_shifter\i=2).
Mapping positional arguments of cell $paramod\rotator\iteration=3\tangle=17'00000011100100000.y_shifter ($paramod\signed_shifter\i=3).
Mapping positional arguments of cell $paramod\rotator\iteration=3\tangle=17'00000011100100000.x_shifter ($paramod\signed_shifter\i=3).
Mapping positional arguments of cell $paramod\rotator\iteration=4\tangle=17'00000001110010011.y_shifter ($paramod\signed_shifter\i=4).
Mapping positional arguments of cell $paramod\rotator\iteration=4\tangle=17'00000001110010011.x_shifter ($paramod\signed_shifter\i=4).
Mapping positional arguments of cell $paramod\rotator\iteration=5\tangle=17'00000000111001010.y_shifter ($paramod\signed_shifter\i=5).
Mapping positional arguments of cell $paramod\rotator\iteration=5\tangle=17'00000000111001010.x_shifter ($paramod\signed_shifter\i=5).
Mapping positional arguments of cell $paramod\rotator\iteration=6\tangle=17'00000000011100101.y_shifter ($paramod\signed_shifter\i=6).
Mapping positional arguments of cell $paramod\rotator\iteration=6\tangle=17'00000000011100101.x_shifter ($paramod\signed_shifter\i=6).
Mapping positional arguments of cell $paramod\rotator\iteration=7\tangle=17'00000000001110010.y_shifter ($paramod\signed_shifter\i=7).
Mapping positional arguments of cell $paramod\rotator\iteration=7\tangle=17'00000000001110010.x_shifter ($paramod\signed_shifter\i=7).
Mapping positional arguments of cell $paramod\CIC\rate=32\log2rate=5.combram (dpram_64x8).
Mapping positional arguments of cell pll.randgen (fibonacci7).
Mapping positional arguments of cell UI.LCD (lcd).
Mapping positional arguments of cell UI.diplay_number (BinToLCD).
Mapping positional arguments of cell cordic.U7 ($paramod\rotator\iteration=7\tangle=17'00000000001110010).
Mapping positional arguments of cell cordic.U6 ($paramod\rotator\iteration=6\tangle=17'00000000011100101).
Mapping positional arguments of cell cordic.U5 ($paramod\rotator\iteration=5\tangle=17'00000000111001010).
Mapping positional arguments of cell cordic.U4 ($paramod\rotator\iteration=4\tangle=17'00000001110010011).
Mapping positional arguments of cell cordic.U3 ($paramod\rotator\iteration=3\tangle=17'00000011100100000).
Mapping positional arguments of cell cordic.U2 ($paramod\rotator\iteration=2\tangle=17'00000111000001001).
Mapping positional arguments of cell cordic.U1 ($paramod\rotator\iteration=1\tangle=17'00001101010010000).
Mapping positional arguments of cell cordic.U0 ($paramod\rotator\iteration=0\tangle=17'00010110100000000).
Mapping positional arguments of cell oscillator.randgen (fibonacci15).
Mapping positional arguments of cell top.SRAM (sram16x16).
Mapping positional arguments of cell top.F2SRAM (Flash_to_SRAM).
Mapping positional arguments of cell top.CORDIC (fullcordic).
Mapping positional arguments of cell top.Filter2 ($paramod\CIC\rate=32\log2rate=5).
Mapping positional arguments of cell top.Filter1 ($paramod\CIC\rate=32\log2rate=5).
Mapping positional arguments of cell top.Mult2 (mult16x16).
Mapping positional arguments of cell top.Mult1 (mult16x16).
Mapping positional arguments of cell top.ADC (adc_host).
Mapping positional arguments of cell top.DAC3 (sigma_delta).
Mapping positional arguments of cell top.DAC2 (sigma_delta).
Mapping positional arguments of cell top.DAC1 (sigma_delta).
Mapping positional arguments of cell top.DDS (dds).
Mapping positional arguments of cell top.PLL (pll).
Mapping positional arguments of cell top.OSC (oscillator).
Mapping positional arguments of cell top.UI_inst (UI).
Warning: Resizing cell port $paramod\CIC\rate=32\log2rate=5.combram.indat from 49 bits to 64 bits.
Warning: Resizing cell port $paramod\CIC\rate=32\log2rate=5.combram.outdat from 49 bits to 64 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WDATA from 8 bits to 16 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RADDR from 32 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RDATA from 8 bits to 16 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.RADDR from 8 bits to 11 bits.

22.3. Executing PROC pass (convert processes to netlists).

22.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

22.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../UI/delay_counter.v:62$646 in module $paramod\delay_counter\counter_width=20.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$637 in module $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$629 in module $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$621 in module $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$613 in module $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$605 in module $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$597 in module $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$589 in module $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Marked 2 switch rules as full_case in process $proc$../cordic/cordic.v:250$581 in module $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Removed 4 dead cases from process $proc$../dds.v:23$523 in module dds.
Marked 4 switch rules as full_case in process $proc$../dds.v:23$523 in module dds.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:187$503 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:174$499 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:166$495 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:155$490 in module spi_flash_reader.
Marked 2 switch rules as full_case in process $proc$../spi_flash_reader.v:141$488 in module spi_flash_reader.
Removed 1 dead cases from process $proc$../spi_flash_reader.v:112$485 in module spi_flash_reader.
Marked 5 switch rules as full_case in process $proc$../spi_flash_reader.v:112$485 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../spi_flash_reader.v:104$483 in module spi_flash_reader.
Marked 1 switch rules as full_case in process $proc$../UI/lcd_display.v:435$428 in module lcd.
Marked 4 switch rules as full_case in process $proc$../UI/lcd_display.v:219$420 in module lcd.
Removed 1 dead cases from process $proc$../UI/BinToLCD.v:36$222 in module BinToLCD.
Marked 24 switch rules as full_case in process $proc$../UI/BinToLCD.v:36$222 in module BinToLCD.
Marked 5 switch rules as full_case in process $proc$../UI/UI.v:129$153 in module UI.
Marked 1 switch rules as full_case in process $proc$../adc_host.v:29$37 in module adc_host.
Removed 1 dead cases from process $proc$../oscillator.v:34$29 in module oscillator.
Marked 1 switch rules as full_case in process $proc$../oscillator.v:34$29 in module oscillator.
Removed a total of 7 dead cases.

22.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:26$580'.
  Set init value: \we = 1'0
Found init rule in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:25$579'.
  Set init value: \inaddr = 8'00000000
Found init rule in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:23$578'.
  Set init value: \OUTpipe = 49'0000000000000000000000000000000000000000000000000
Found init rule in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:23$577'.
  Set init value: \I0 = 49'0000000000000000000000000000000000000000000000000
Found init rule in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:21$576'.
  Set init value: \tickcount = 11'00000000000
Found init rule in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:20$575'.
  Set init value: \lasttick = 1'0
Found init rule in `\pll.$proc$../pll.v:39$560'.
  Set init value: \last_eP = 16'0000000000000000
Found init rule in `\pll.$proc$../pll.v:38$559'.
  Set init value: \eD = 16'0000000000000000
Found init rule in `\pll.$proc$../pll.v:31$558'.
  Set init value: \pipestep = 1'0
Found init rule in `\pll.$proc$../pll.v:30$557'.
  Set init value: \l2_in = 1'0
Found init rule in `\pll.$proc$../pll.v:30$556'.
  Set init value: \l_in = 1'0
Found init rule in `\pll.$proc$../pll.v:28$555'.
  Set init value: \incr = 17'00000001001011000
Found init rule in `\pll.$proc$../pll.v:25$554'.
  Set init value: \phase = 0
Found init rule in `\pll.$proc$../pll.v:17$553'.
  Set init value: \locked = 1'0
Found init rule in `\dds.$proc$../dds.v:21$536'.
  Set init value: \islast = 1'0
Found init rule in `\dds.$proc$../dds.v:21$535'.
  Set init value: \lastgo = 1'0
Found init rule in `\dds.$proc$../dds.v:21$534'.
  Set init value: \iscos = 1'0
Found init rule in `\dds.$proc$../dds.v:17$533'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:14$532'.
  Set init value: \cos = 16'0000000000000000
Found init rule in `\dds.$proc$../dds.v:13$531'.
  Set init value: \sin = 16'0000000000000000
Found init rule in `\sigma_delta.$proc$../sigma_delta.v:16$522'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$482'.
  Set init value: \busystop = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$481'.
  Set init value: \spi_go = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$479'.
  Set init value: \spi_addr = 24'000000000000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$478'.
  Set init value: \second = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$477'.
  Set init value: \laststart = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$476'.
  Set init value: \poscount = 17'00000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$475'.
  Set init value: \wdata = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$474'.
  Set init value: \addr = 16'0000000000000000
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$473'.
  Set init value: \wen = 1'0
Found init rule in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$472'.
  Set init value: \busy = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:201$442'.
  Set init value: \tx_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:200$441'.
  Set init value: \main_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:196$440'.
  Set init value: \tx_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:195$439'.
  Set init value: \main_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:170$438'.
  Set init value: \LCD_E1 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:169$437'.
  Set init value: \LCD_E0 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:168$436'.
  Set init value: \SF_D1 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:167$435'.
  Set init value: \SF_D0 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:106$434'.
  Set init value: \pos = 0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:105$433'.
  Set init value: \display_state = 5'00000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:77$432'.
  Set init value: \tx_done = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:74$431'.
  Set init value: \tx_state = 3'110
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:32$396'.
  Set init value: \holdoff = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:31$395'.
  Set init value: \difference = 17'00000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:28$394'.
  Set init value: \dec = 4'0000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$393'.
  Set init value: \AngelaMerkel = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$392'.
  Set init value: \secondlastacc = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$391'.
  Set init value: \lastacc = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$390'.
  Set init value: \rest = 16'0000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:26$389'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:24$388'.
  Set init value: \pos = 5'00000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$387'.
  Set init value: \leadz = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$386'.
  Set init value: \updating = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$385'.
  Set init value: \lastupdate = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:20$384'.
  Set init value: \we = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:15$383'.
  Set init value: \dat = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:71$220'.
  Set init value: \dispdone = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:70$219'.
  Set init value: \disppos = 5'00000
Found init rule in `\UI.$proc$../UI/UI.v:69$218'.
  Set init value: \repaintS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:69$217'.
  Set init value: \weS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:68$216'.
  Set init value: \datS = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:67$215'.
  Set init value: \ismagphase = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:55$214'.
  Set init value: \state = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:52$213'.
  Set init value: \btnt3 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:52$212'.
  Set init value: \btnt2 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:52$211'.
  Set init value: \btnt1 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:52$210'.
  Set init value: \btnt0 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:51$209'.
  Set init value: \cnt3 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:51$208'.
  Set init value: \cnt2 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:51$207'.
  Set init value: \cnt1 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:51$206'.
  Set init value: \cnt0 = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:50$205'.
  Set init value: \BP = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:45$204'.
  Set init value: \update = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:43$203'.
  Set init value: \count = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:31$202'.
  Set init value: \refIO = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:28$201'.
  Set init value: \refampl = 2'00
Found init rule in `\UI.$proc$../UI/UI.v:27$200'.
  Set init value: \reffreq = 3'001
Found init rule in `\UI.$proc$../UI/UI.v:26$199'.
  Set init value: \TC = 4'0110
Found init rule in `\UI.$proc$../UI/UI.v:25$198'.
  Set init value: \gain = 2'00
Found init rule in `\adc_host.$proc$../adc_host.v:23$49'.
  Set init value: \shiftdata = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:22$48'.
  Set init value: \count = 8'00000000
Found init rule in `\adc_host.$proc$../adc_host.v:21$47'.
  Set init value: \acq = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:19$46'.
  Set init value: \newdata = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:17$45'.
  Set init value: \data = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:14$44'.
  Set init value: \CONVST = 1'0
Found init rule in `\oscillator.$proc$../oscillator.v:27$33'.
  Set init value: \phaseword = 25'0000000000000000000000000
Found init rule in `\oscillator.$proc$../oscillator.v:26$32'.
  Set init value: \PHASENAKKUMULATOOOOOR = 0
Found init rule in `\top.$proc$TOP_V1.v:92$24'.
  Set init value: \loadlookup = 1'0
Found init rule in `\top.$proc$TOP_V1.v:70$23'.
  Set init value: \cnt = 25'0000000000000000000000000
Found init rule in `\top.$proc$TOP_V1.v:69$22'.
  Set init value: \rst = 1'1

22.3.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:435$428'.
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:219$420'.

22.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$708'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$684'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$656'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$646'.
     1/1: $0\counter[19:0]
Creating decoders for process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$645'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
     1/7: $0\x_i_s_pipe[16:0]
     2/7: $0\z_1[16:0]
     3/7: $0\y_i_s_pipe[16:0]
     4/7: $0\y_1[16:0]
     5/7: $0\x_1[16:0]
     6/7: $0\y_i_pipe[16:0]
     7/7: $0\x_i_pipe[16:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:26$580'.
     1/1: $1\we[0:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:25$579'.
     1/1: $1\inaddr[7:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:23$578'.
     1/1: $1\OUTpipe[48:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:23$577'.
     1/1: $1\I0[48:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:21$576'.
     1/1: $1\tickcount[10:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:20$575'.
     1/1: $1\lasttick[0:0]
Creating decoders for process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
     1/8: $0\OUTpipe[48:0]
     2/8: $0\outaddr[7:0]
     3/8: $0\lasttick[0:0]
     4/8: $0\we[0:0]
     5/8: $0\inaddr[7:0]
     6/8: $0\I0[48:0]
     7/8: $0\tickcount[10:0]
     8/8: $0\OUT[31:0]
Creating decoders for process `\pll.$proc$../pll.v:39$560'.
     1/1: $1\last_eP[15:0]
Creating decoders for process `\pll.$proc$../pll.v:38$559'.
     1/1: $1\eD[15:0]
Creating decoders for process `\pll.$proc$../pll.v:31$558'.
     1/1: $1\pipestep[0:0]
Creating decoders for process `\pll.$proc$../pll.v:30$557'.
     1/1: $1\l2_in[0:0]
Creating decoders for process `\pll.$proc$../pll.v:30$556'.
     1/1: $1\l_in[0:0]
Creating decoders for process `\pll.$proc$../pll.v:28$555'.
     1/1: $1\incr[16:0]
Creating decoders for process `\pll.$proc$../pll.v:25$554'.
     1/1: $1\phase[31:0]
Creating decoders for process `\pll.$proc$../pll.v:17$553'.
     1/1: $1\locked[0:0]
Creating decoders for process `\pll.$proc$../pll.v:47$541'.
     1/8: $0\l2_in[0:0]
     2/8: $0\l_in[0:0]
     3/8: $0\phase[31:0]
     4/8: $0\locked[0:0]
     5/8: $0\pipestep[0:0]
     6/8: $0\last_eP[15:0]
     7/8: $0\eD[15:0]
     8/8: $0\incr[16:0]
Creating decoders for process `\dds.$proc$../dds.v:21$536'.
     1/1: $1\islast[0:0]
Creating decoders for process `\dds.$proc$../dds.v:21$535'.
     1/1: $1\lastgo[0:0]
Creating decoders for process `\dds.$proc$../dds.v:21$534'.
     1/1: $1\iscos[0:0]
Creating decoders for process `\dds.$proc$../dds.v:17$533'.
     1/1: $1\addr[15:0]
Creating decoders for process `\dds.$proc$../dds.v:14$532'.
     1/1: $1\cos[15:0]
Creating decoders for process `\dds.$proc$../dds.v:13$531'.
     1/1: $1\sin[15:0]
Creating decoders for process `\dds.$proc$../dds.v:23$523'.
     1/6: $0\lastgo[0:0]
     2/6: $0\islast[0:0]
     3/6: $0\iscos[0:0]
     4/6: $0\addr[15:0]
     5/6: $0\cos[15:0]
     6/6: $0\sin[15:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:16$522'.
     1/1: $1\acc[16:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:20$520'.
     1/1: $0\acc[16:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$509'.
     1/1: $0\valid_i[0:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$503'.
     1/1: $0\rdy_i[0:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$499'.
     1/1: $0\cnt_len[17:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$495'.
     1/1: $0\cnt_cmd[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$490'.
     1/2: $0\cnt_bit_last[0:0]
     2/2: $0\cnt_bit[2:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$488'.
     1/1: $0\shift_reg[31:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$485'.
     1/6: $5\fsm_state_next[1:0]
     2/6: $4\fsm_state_next[1:0]
     3/6: $3\fsm_state_next[1:0]
     4/6: $2\fsm_state_next[1:0]
     5/6: $1\fsm_state_next[1:0]
     6/6: $0\fsm_state_next[1:0]
Creating decoders for process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$483'.
     1/1: $0\fsm_state[1:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$482'.
     1/1: $1\busystop[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$481'.
     1/1: $1\spi_go[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$480'.
     1/1: $0\spi_len[16:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$479'.
     1/1: $1\spi_addr[23:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$478'.
     1/1: $1\second[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$477'.
     1/1: $1\laststart[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$476'.
     1/1: $1\poscount[16:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$475'.
     1/1: $1\wdata[15:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$474'.
     1/1: $1\addr[15:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$473'.
     1/1: $1\wen[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$472'.
     1/1: $1\busy[0:0]
Creating decoders for process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
     1/11: $0\wen[0:0]
     2/11: $0\spi_go[0:0]
     3/11: $0\laststart[0:0]
     4/11: $0\busystop[0:0]
     5/11: $0\spi_addr[23:0]
     6/11: $0\f_byte[7:0]
     7/11: $0\second[0:0]
     8/11: $0\poscount[16:0]
     9/11: $0\wdata[15:0]
    10/11: $0\addr[15:0]
    11/11: $0\busy[0:0]
Creating decoders for process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$764'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:201$442'.
     1/1: $1\tx_delay_load[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:200$441'.
     1/1: $1\main_delay_load[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:196$440'.
     1/1: $1\tx_delay_value[19:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:195$439'.
     1/1: $1\main_delay_value[19:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:170$438'.
     1/1: $1\LCD_E1[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:169$437'.
     1/1: $1\LCD_E0[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:168$436'.
     1/1: $1\SF_D1[3:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:167$435'.
     1/1: $1\SF_D0[3:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:106$434'.
     1/1: $1\pos[31:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:105$433'.
     1/1: $1\display_state[4:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:77$432'.
     1/1: $1\tx_done[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:74$431'.
     1/1: $1\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:435$428'.
     1/6: $0\tx_delay_load[0:0]
     2/6: $0\tx_delay_value[19:0]
     3/6: $0\LCD_E0[0:0]
     4/6: $0\SF_D0[3:0]
     5/6: $0\tx_done[0:0]
     6/6: $0\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:219$420'.
     1/7: $0\main_delay_load[0:0]
     2/7: $0\main_delay_value[19:0]
     3/7: $0\LCD_E1[0:0]
     4/7: $0\SF_D1[3:0]
     5/7: $0\display_state[4:0]
     6/7: $0\tx_byte[7:0]
     7/7: $0\pos[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:32$396'.
     1/1: $1\holdoff[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:31$395'.
     1/1: $1\difference[16:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:28$394'.
     1/1: $1\dec[3:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$393'.
     1/1: $1\AngelaMerkel[15:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$392'.
     1/1: $1\secondlastacc[15:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$391'.
     1/1: $1\lastacc[15:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$390'.
     1/1: $17\rest[15:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:26$389'.
     1/1: $1\acc[16:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:24$388'.
     1/1: $1\pos[4:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$387'.
     1/1: $1\leadz[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$386'.
     1/1: $1\updating[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$385'.
     1/1: $1\lastupdate[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:20$384'.
     1/1: $1\we[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:15$383'.
     1/1: $1\dat[7:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
     1/30: $16\rest[15:0]
     2/30: $15\rest[15:0]
     3/30: $14\rest[15:0]
     4/30: $13\rest[15:0]
     5/30: $12\rest[15:0]
     6/30: $11\rest[15:0]
     7/30: $10\rest[15:0]
     8/30: $9\rest[15:0]
     9/30: $8\rest[15:0]
    10/30: $7\rest[15:0]
    11/30: $6\rest[15:0]
    12/30: $5\rest[15:0]
    13/30: $4\rest[15:0]
    14/30: $3\rest[15:0]
    15/30: $2\rest[15:0]
    16/30: $1\rest[15:0]
    17/30: $0\rest[15:0]
    18/30: $0\lastupdate[0:0]
    19/30: $0\holdoff[0:0]
    20/30: $0\difference[16:0]
    21/30: $0\dec[3:0]
    22/30: $0\pos[4:0]
    23/30: $0\leadz[0:0]
    24/30: $0\updating[0:0]
    25/30: $0\AngelaMerkel[15:0]
    26/30: $0\secondlastacc[15:0]
    27/30: $0\lastacc[15:0]
    28/30: $0\acc[16:0]
    29/30: $0\dat[7:0]
    30/30: $0\we[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:71$220'.
     1/1: $1\dispdone[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:70$219'.
     1/1: $1\disppos[4:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:69$218'.
     1/1: $1\repaintS[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:69$217'.
     1/1: $1\weS[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:68$216'.
     1/1: $1\datS[7:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:67$215'.
     1/1: $1\ismagphase[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:55$214'.
     1/1: $1\state[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:52$213'.
     1/1: $1\btnt3[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:52$212'.
     1/1: $1\btnt2[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:52$211'.
     1/1: $1\btnt1[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:52$210'.
     1/1: $1\btnt0[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:51$209'.
     1/1: $1\cnt3[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:51$208'.
     1/1: $1\cnt2[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:51$207'.
     1/1: $1\cnt1[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:51$206'.
     1/1: $1\cnt0[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:50$205'.
     1/1: $1\BP[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:45$204'.
     1/1: $1\update[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:43$203'.
     1/1: $1\count[22:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:31$202'.
     1/1: $1\refIO[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:28$201'.
     1/1: $1\refampl[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:27$200'.
     1/1: $1\reffreq[2:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:26$199'.
     1/1: $1\TC[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:25$198'.
     1/1: $1\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:129$153'.
     1/14: $0\state[3:0]
     2/14: $0\update[0:0]
     3/14: $0\weS[0:0]
     4/14: $0\repaintS[0:0]
     5/14: $0\count[22:0]
     6/14: $0\dispdone[0:0]
     7/14: $0\disppos[4:0]
     8/14: $0\datS[7:0]
     9/14: $0\ismagphase[0:0]
    10/14: $0\refampl[1:0]
    11/14: $0\reffreq[2:0]
    12/14: $0\refIO[0:0]
    13/14: $0\TC[3:0]
    14/14: $0\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:76$133'.
     1/12: $0\BP[3:0] [3]
     2/12: $0\BP[3:0] [2]
     3/12: $0\BP[3:0] [1]
     4/12: $0\BP[3:0] [0]
     5/12: $0\btnt3[0:0]
     6/12: $0\btnt2[0:0]
     7/12: $0\btnt1[0:0]
     8/12: $0\btnt0[0:0]
     9/12: $0\cnt3[23:0]
    10/12: $0\cnt2[23:0]
    11/12: $0\cnt1[23:0]
    12/12: $0\cnt0[23:0]
Creating decoders for process `\cordic.$proc$../cordic/cordic.v:307$132'.
     1/3: $0\z[0][16:0]
     2/3: $0\y[0][16:0]
     3/3: $0\x[0][16:0]
Creating decoders for process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$756'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$744'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
     1/10: $0\i[31:0]
     2/10: $0\quadmem[8][1:0]
     3/10: $0\quadmem[7][1:0]
     4/10: $0\quadmem[6][1:0]
     5/10: $0\quadmem[5][1:0]
     6/10: $0\quadmem[4][1:0]
     7/10: $0\quadmem[3][1:0]
     8/10: $0\quadmem[2][1:0]
     9/10: $0\quadmem[1][1:0]
    10/10: $0\quadmem[0][1:0]
Creating decoders for process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$728'.
     1/2: $0\j[31:0]
     2/2: $0\Q[16:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:23$49'.
     1/1: $1\shiftdata[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:22$48'.
     1/1: $1\count[7:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:21$47'.
     1/1: $1\acq[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:19$46'.
     1/1: $1\newdata[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:17$45'.
     1/1: $1\data[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:14$44'.
     1/1: $1\CONVST[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:46$43'.
     1/1: $0\shiftdata[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:29$37'.
     1/5: $0\newdata[0:0]
     2/5: $0\count[7:0]
     3/5: $0\acq[0:0]
     4/5: $0\data[15:0]
     5/5: $0\CONVST[0:0]
Creating decoders for process `\oscillator.$proc$../oscillator.v:27$33'.
     1/1: $1\phaseword[24:0]
Creating decoders for process `\oscillator.$proc$../oscillator.v:26$32'.
     1/1: $1\PHASENAKKUMULATOOOOOR[31:0]
Creating decoders for process `\oscillator.$proc$../oscillator.v:34$29'.
     1/3: $0\phasereg[31:0]
     2/3: $0\PHASENAKKUMULATOOOOOR[31:0]
     3/3: $0\phaseword[24:0]
Creating decoders for process `\fibonacci15.$proc$../fibonacci15.v:10$27'.
     1/2: $0\fib[14:0] [0]
     2/2: $0\fib[14:0] [14:1]
Creating decoders for process `\fibonacci7.$proc$../fibonacci7.v:10$25'.
     1/2: $0\fib[6:0] [0]
     2/2: $0\fib[6:0] [6:1]
Creating decoders for process `\top.$proc$TOP_V1.v:92$24'.
     1/1: $1\loadlookup[0:0]
Creating decoders for process `\top.$proc$TOP_V1.v:70$23'.
     1/1: $1\cnt[24:0]
Creating decoders for process `\top.$proc$TOP_V1.v:69$22'.
     1/1: $1\rst[0:0]
Creating decoders for process `\top.$proc$TOP_V1.v:123$13'.
     1/3: $0\cnt[24:0]
     2/3: $0\loadlookup[0:0]
     3/3: $0\rst[0:0]

22.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `$paramod\signed_shifter\i=5.\Q' from process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$708'.
No latch inferred for signal `$paramod\signed_shifter\i=5.\j' from process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$708'.
No latch inferred for signal `$paramod\signed_shifter\i=6.\Q' from process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$684'.
No latch inferred for signal `$paramod\signed_shifter\i=6.\j' from process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$684'.
No latch inferred for signal `$paramod\signed_shifter\i=7.\Q' from process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$656'.
No latch inferred for signal `$paramod\signed_shifter\i=7.\j' from process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$656'.
No latch inferred for signal `$paramod\signed_shifter\i=0.\Q' from process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$645'.
No latch inferred for signal `$paramod\signed_shifter\i=0.\j' from process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$645'.
No latch inferred for signal `\spi_flash_reader.\fsm_state_next' from process `\spi_flash_reader.$proc$../spi_flash_reader.v:112$485'.
No latch inferred for signal `\Flash_to_SRAM.\spi_len' from process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$480'.
No latch inferred for signal `$paramod\signed_shifter\i=1.\Q' from process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$764'.
No latch inferred for signal `$paramod\signed_shifter\i=1.\j' from process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$764'.
No latch inferred for signal `\cordic.\x[0]' from process `\cordic.$proc$../cordic/cordic.v:307$132'.
No latch inferred for signal `\cordic.\y[0]' from process `\cordic.$proc$../cordic/cordic.v:307$132'.
No latch inferred for signal `\cordic.\z[0]' from process `\cordic.$proc$../cordic/cordic.v:307$132'.
No latch inferred for signal `$paramod\signed_shifter\i=2.\Q' from process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$756'.
No latch inferred for signal `$paramod\signed_shifter\i=2.\j' from process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$756'.
No latch inferred for signal `$paramod\signed_shifter\i=3.\Q' from process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$744'.
No latch inferred for signal `$paramod\signed_shifter\i=3.\j' from process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$744'.
No latch inferred for signal `$paramod\signed_shifter\i=4.\Q' from process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$728'.
No latch inferred for signal `$paramod\signed_shifter\i=4.\j' from process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$728'.

22.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\delay_counter\counter_width=20.\counter' using process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$646'.
  created $dff cell `$procdff$3026' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_i_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3027' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_i_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3028' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3029' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3030' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\y_i_s_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3031' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\z_1' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3032' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=0\tangle=17'00010110100000000.\x_i_s_pipe' using process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
  created $dff cell `$procdff$3033' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_i_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3034' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_i_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3035' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3036' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3037' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\y_i_s_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3038' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\z_1' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3039' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=1\tangle=17'00001101010010000.\x_i_s_pipe' using process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
  created $dff cell `$procdff$3040' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_i_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3041' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_i_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3042' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3043' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3044' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\y_i_s_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3045' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\z_1' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3046' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=2\tangle=17'00000111000001001.\x_i_s_pipe' using process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
  created $dff cell `$procdff$3047' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_i_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3048' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_i_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3049' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3050' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3051' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\y_i_s_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3052' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\z_1' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3053' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=3\tangle=17'00000011100100000.\x_i_s_pipe' using process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
  created $dff cell `$procdff$3054' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_i_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3055' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_i_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3056' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3057' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3058' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\y_i_s_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3059' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\z_1' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3060' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=4\tangle=17'00000001110010011.\x_i_s_pipe' using process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
  created $dff cell `$procdff$3061' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_i_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3062' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_i_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3063' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3064' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3065' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\y_i_s_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3066' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\z_1' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3067' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=5\tangle=17'00000000111001010.\x_i_s_pipe' using process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
  created $dff cell `$procdff$3068' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_i_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3069' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_i_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3070' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3071' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3072' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\y_i_s_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3073' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\z_1' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3074' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=6\tangle=17'00000000011100101.\x_i_s_pipe' using process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
  created $dff cell `$procdff$3075' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_i_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3076' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_i_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3077' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3078' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3079' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\y_i_s_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3080' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\z_1' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3081' with positive edge clock.
Creating register for signal `$paramod\rotator\iteration=7\tangle=17'00000000001110010.\x_i_s_pipe' using process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
  created $dff cell `$procdff$3082' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\OUT' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3083' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\lasttick' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3084' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\tickcount' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3085' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\I0' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3086' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\OUTpipe' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3087' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\inaddr' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3088' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\we' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3089' with positive edge clock.
Creating register for signal `$paramod\CIC\rate=32\log2rate=5.\outaddr' using process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
  created $dff cell `$procdff$3090' with positive edge clock.
Creating register for signal `\pll.\phase' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3091' with positive edge clock.
Creating register for signal `\pll.\locked' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3092' with positive edge clock.
Creating register for signal `\pll.\incr' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3093' with positive edge clock.
Creating register for signal `\pll.\l_in' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3094' with positive edge clock.
Creating register for signal `\pll.\l2_in' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3095' with positive edge clock.
Creating register for signal `\pll.\pipestep' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3096' with positive edge clock.
Creating register for signal `\pll.\eD' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3097' with positive edge clock.
Creating register for signal `\pll.\last_eP' using process `\pll.$proc$../pll.v:47$541'.
  created $dff cell `$procdff$3098' with positive edge clock.
Creating register for signal `\dds.\sin' using process `\dds.$proc$../dds.v:23$523'.
  created $dff cell `$procdff$3099' with positive edge clock.
Creating register for signal `\dds.\cos' using process `\dds.$proc$../dds.v:23$523'.
  created $dff cell `$procdff$3100' with positive edge clock.
Creating register for signal `\dds.\addr' using process `\dds.$proc$../dds.v:23$523'.
  created $dff cell `$procdff$3101' with positive edge clock.
Creating register for signal `\dds.\iscos' using process `\dds.$proc$../dds.v:23$523'.
  created $dff cell `$procdff$3102' with positive edge clock.
Creating register for signal `\dds.\lastgo' using process `\dds.$proc$../dds.v:23$523'.
  created $dff cell `$procdff$3103' with positive edge clock.
Creating register for signal `\dds.\islast' using process `\dds.$proc$../dds.v:23$523'.
  created $dff cell `$procdff$3104' with positive edge clock.
Creating register for signal `\sigma_delta.\acc' using process `\sigma_delta.$proc$../sigma_delta.v:20$520'.
  created $dff cell `$procdff$3105' with positive edge clock.
Creating register for signal `\spi_flash_reader.\valid_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:201$509'.
  created $dff cell `$procdff$3106' with positive edge clock.
Creating register for signal `\spi_flash_reader.\rdy_i' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:187$503'.
  created $dff cell `$procdff$3107' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_len' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:174$499'.
  created $dff cell `$procdff$3108' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_cmd' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:166$495'.
  created $dff cell `$procdff$3109' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$490'.
  created $dff cell `$procdff$3110' with positive edge clock.
Creating register for signal `\spi_flash_reader.\cnt_bit_last' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:155$490'.
  created $dff cell `$procdff$3111' with positive edge clock.
Creating register for signal `\spi_flash_reader.\shift_reg' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:141$488'.
  created $dff cell `$procdff$3112' with positive edge clock.
Creating register for signal `\spi_flash_reader.\fsm_state' using process `\spi_flash_reader.$proc$../spi_flash_reader.v:104$483'.
  created $dff cell `$procdff$3113' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wen' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3114' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busy' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3115' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3116' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\wdata' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3117' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\poscount' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3118' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\laststart' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3119' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\second' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3120' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\f_byte' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3121' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_addr' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3122' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\spi_go' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3123' with positive edge clock.
Creating register for signal `\Flash_to_SRAM.\busystop' using process `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
  created $dff cell `$procdff$3124' with positive edge clock.
Creating register for signal `\lcd.\tx_state' using process `\lcd.$proc$../UI/lcd_display.v:435$428'.
  created $adff cell `$procdff$3125' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\tx_done' using process `\lcd.$proc$../UI/lcd_display.v:435$428'.
  created $dff cell `$procdff$3126' with positive edge clock.
Creating register for signal `\lcd.\SF_D0' using process `\lcd.$proc$../UI/lcd_display.v:435$428'.
  created $dff cell `$procdff$3127' with positive edge clock.
Creating register for signal `\lcd.\LCD_E0' using process `\lcd.$proc$../UI/lcd_display.v:435$428'.
  created $dff cell `$procdff$3128' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:435$428'.
  created $dff cell `$procdff$3129' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:435$428'.
  created $dff cell `$procdff$3130' with positive edge clock.
Creating register for signal `\lcd.\pos' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $dff cell `$procdff$3131' with positive edge clock.
Creating register for signal `\lcd.\tx_byte' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $dff cell `$procdff$3132' with positive edge clock.
Creating register for signal `\lcd.\display_state' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $adff cell `$procdff$3133' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\SF_D1' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $dff cell `$procdff$3134' with positive edge clock.
Creating register for signal `\lcd.\LCD_E1' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $dff cell `$procdff$3135' with positive edge clock.
Creating register for signal `\lcd.\main_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $adff cell `$procdff$3136' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\main_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:219$420'.
  created $adff cell `$procdff$3137' with positive edge clock and positive level reset.
Creating register for signal `\BinToLCD.\we' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3138' with positive edge clock.
Creating register for signal `\BinToLCD.\dat' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3139' with positive edge clock.
Creating register for signal `\BinToLCD.\acc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3140' with positive edge clock.
Creating register for signal `\BinToLCD.\rest' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3141' with positive edge clock.
Creating register for signal `\BinToLCD.\lastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3142' with positive edge clock.
Creating register for signal `\BinToLCD.\secondlastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3143' with positive edge clock.
Creating register for signal `\BinToLCD.\AngelaMerkel' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3144' with positive edge clock.
Creating register for signal `\BinToLCD.\lastupdate' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3145' with positive edge clock.
Creating register for signal `\BinToLCD.\updating' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3146' with positive edge clock.
Creating register for signal `\BinToLCD.\leadz' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3147' with positive edge clock.
Creating register for signal `\BinToLCD.\pos' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3148' with positive edge clock.
Creating register for signal `\BinToLCD.\dec' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3149' with positive edge clock.
Creating register for signal `\BinToLCD.\difference' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3150' with positive edge clock.
Creating register for signal `\BinToLCD.\holdoff' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
  created $dff cell `$procdff$3151' with positive edge clock.
Creating register for signal `\UI.\gain' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3152' with positive edge clock.
Creating register for signal `\UI.\TC' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3153' with positive edge clock.
Creating register for signal `\UI.\refIO' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3154' with positive edge clock.
Creating register for signal `\UI.\count' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3155' with positive edge clock.
Creating register for signal `\UI.\reffreq' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3156' with positive edge clock.
Creating register for signal `\UI.\refampl' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3157' with positive edge clock.
Creating register for signal `\UI.\update' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3158' with positive edge clock.
Creating register for signal `\UI.\state' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3159' with positive edge clock.
Creating register for signal `\UI.\ismagphase' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3160' with positive edge clock.
Creating register for signal `\UI.\datS' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3161' with positive edge clock.
Creating register for signal `\UI.\weS' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3162' with positive edge clock.
Creating register for signal `\UI.\repaintS' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3163' with positive edge clock.
Creating register for signal `\UI.\disppos' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3164' with positive edge clock.
Creating register for signal `\UI.\dispdone' using process `\UI.$proc$../UI/UI.v:129$153'.
  created $dff cell `$procdff$3165' with positive edge clock.
Creating register for signal `\UI.\BP' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3166' with positive edge clock.
Creating register for signal `\UI.\cnt0' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3167' with positive edge clock.
Creating register for signal `\UI.\cnt1' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3168' with positive edge clock.
Creating register for signal `\UI.\cnt2' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3169' with positive edge clock.
Creating register for signal `\UI.\cnt3' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3170' with positive edge clock.
Creating register for signal `\UI.\btnt0' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3171' with positive edge clock.
Creating register for signal `\UI.\btnt1' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3172' with positive edge clock.
Creating register for signal `\UI.\btnt2' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3173' with positive edge clock.
Creating register for signal `\UI.\btnt3' using process `\UI.$proc$../UI/UI.v:76$133'.
  created $dff cell `$procdff$3174' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[4]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3175' with positive edge clock.
Creating register for signal `\fullcordic.\i' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3176' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[0]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3177' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[1]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3178' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[2]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3179' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[3]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3180' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[5]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3181' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[6]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3182' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[7]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3183' with positive edge clock.
Creating register for signal `\fullcordic.\quadmem[8]' using process `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
  created $dff cell `$procdff$3184' with positive edge clock.
Creating register for signal `\adc_host.\shiftdata' using process `\adc_host.$proc$../adc_host.v:46$43'.
  created $dff cell `$procdff$3185' with negative edge clock.
Creating register for signal `\adc_host.\CONVST' using process `\adc_host.$proc$../adc_host.v:29$37'.
  created $dff cell `$procdff$3186' with positive edge clock.
Creating register for signal `\adc_host.\newdata' using process `\adc_host.$proc$../adc_host.v:29$37'.
  created $dff cell `$procdff$3187' with positive edge clock.
Creating register for signal `\adc_host.\data' using process `\adc_host.$proc$../adc_host.v:29$37'.
  created $dff cell `$procdff$3188' with positive edge clock.
Creating register for signal `\adc_host.\acq' using process `\adc_host.$proc$../adc_host.v:29$37'.
  created $dff cell `$procdff$3189' with positive edge clock.
Creating register for signal `\adc_host.\count' using process `\adc_host.$proc$../adc_host.v:29$37'.
  created $dff cell `$procdff$3190' with positive edge clock.
Creating register for signal `\oscillator.\phasereg' using process `\oscillator.$proc$../oscillator.v:34$29'.
  created $dff cell `$procdff$3191' with positive edge clock.
Creating register for signal `\oscillator.\PHASENAKKUMULATOOOOOR' using process `\oscillator.$proc$../oscillator.v:34$29'.
  created $dff cell `$procdff$3192' with positive edge clock.
Creating register for signal `\oscillator.\phaseword' using process `\oscillator.$proc$../oscillator.v:34$29'.
  created $dff cell `$procdff$3193' with positive edge clock.
Creating register for signal `\fibonacci15.\fib' using process `\fibonacci15.$proc$../fibonacci15.v:10$27'.
  created $dff cell `$procdff$3194' with positive edge clock.
Creating register for signal `\fibonacci7.\fib' using process `\fibonacci7.$proc$../fibonacci7.v:10$25'.
  created $dff cell `$procdff$3195' with positive edge clock.
Creating register for signal `\top.\rst' using process `\top.$proc$TOP_V1.v:123$13'.
  created $dff cell `$procdff$3196' with positive edge clock.
Creating register for signal `\top.\cnt' using process `\top.$proc$TOP_V1.v:123$13'.
  created $dff cell `$procdff$3197' with positive edge clock.
Creating register for signal `\top.\loadlookup' using process `\top.$proc$TOP_V1.v:123$13'.
  created $dff cell `$procdff$3198' with positive edge clock.

22.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `$paramod\signed_shifter\i=5.$proc$../cordic/cordic.v:199$708'.
Removing empty process `$paramod\signed_shifter\i=6.$proc$../cordic/cordic.v:199$684'.
Removing empty process `$paramod\signed_shifter\i=7.$proc$../cordic/cordic.v:199$656'.
Found and cleaned up 1 empty switch in `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$646'.
Removing empty process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$646'.
Removing empty process `$paramod\signed_shifter\i=0.$proc$../cordic/cordic.v:199$645'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
Removing empty process `$paramod\rotator\iteration=0\tangle=17'00010110100000000.$proc$../cordic/cordic.v:250$637'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
Removing empty process `$paramod\rotator\iteration=1\tangle=17'00001101010010000.$proc$../cordic/cordic.v:250$629'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
Removing empty process `$paramod\rotator\iteration=2\tangle=17'00000111000001001.$proc$../cordic/cordic.v:250$621'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
Removing empty process `$paramod\rotator\iteration=3\tangle=17'00000011100100000.$proc$../cordic/cordic.v:250$613'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
Removing empty process `$paramod\rotator\iteration=4\tangle=17'00000001110010011.$proc$../cordic/cordic.v:250$605'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
Removing empty process `$paramod\rotator\iteration=5\tangle=17'00000000111001010.$proc$../cordic/cordic.v:250$597'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
Removing empty process `$paramod\rotator\iteration=6\tangle=17'00000000011100101.$proc$../cordic/cordic.v:250$589'.
Found and cleaned up 2 empty switches in `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
Removing empty process `$paramod\rotator\iteration=7\tangle=17'00000000001110010.$proc$../cordic/cordic.v:250$581'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:26$580'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:25$579'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:23$578'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:23$577'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:21$576'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:20$575'.
Found and cleaned up 3 empty switches in `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
Removing empty process `$paramod\CIC\rate=32\log2rate=5.$proc$../filter/CIC.v:33$561'.
Removing empty process `pll.$proc$../pll.v:39$560'.
Removing empty process `pll.$proc$../pll.v:38$559'.
Removing empty process `pll.$proc$../pll.v:31$558'.
Removing empty process `pll.$proc$../pll.v:30$557'.
Removing empty process `pll.$proc$../pll.v:30$556'.
Removing empty process `pll.$proc$../pll.v:28$555'.
Removing empty process `pll.$proc$../pll.v:25$554'.
Removing empty process `pll.$proc$../pll.v:17$553'.
Found and cleaned up 3 empty switches in `\pll.$proc$../pll.v:47$541'.
Removing empty process `pll.$proc$../pll.v:47$541'.
Removing empty process `dds.$proc$../dds.v:21$536'.
Removing empty process `dds.$proc$../dds.v:21$535'.
Removing empty process `dds.$proc$../dds.v:21$534'.
Removing empty process `dds.$proc$../dds.v:17$533'.
Removing empty process `dds.$proc$../dds.v:14$532'.
Removing empty process `dds.$proc$../dds.v:13$531'.
Found and cleaned up 7 empty switches in `\dds.$proc$../dds.v:23$523'.
Removing empty process `dds.$proc$../dds.v:23$523'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:16$522'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:20$520'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:201$509'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:187$503'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:187$503'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:174$499'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:174$499'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:166$495'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:166$495'.
Found and cleaned up 3 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:155$490'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:155$490'.
Found and cleaned up 2 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:141$488'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:141$488'.
Found and cleaned up 5 empty switches in `\spi_flash_reader.$proc$../spi_flash_reader.v:112$485'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:112$485'.
Found and cleaned up 1 empty switch in `\spi_flash_reader.$proc$../spi_flash_reader.v:104$483'.
Removing empty process `spi_flash_reader.$proc$../spi_flash_reader.v:104$483'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$482'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:38$481'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:37$480'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:36$479'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$478'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:32$477'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:31$476'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:25$475'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:21$474'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:20$473'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:11$472'.
Found and cleaned up 5 empty switches in `\Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
Removing empty process `Flash_to_SRAM.$proc$../Flash_to_SRAM.v:44$464'.
Removing empty process `$paramod\signed_shifter\i=1.$proc$../cordic/cordic.v:199$764'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:201$442'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:200$441'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:196$440'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:195$439'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:170$438'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:169$437'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:168$436'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:167$435'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:106$434'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:105$433'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:77$432'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:74$431'.
Found and cleaned up 8 empty switches in `\lcd.$proc$../UI/lcd_display.v:435$428'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:435$428'.
Found and cleaned up 22 empty switches in `\lcd.$proc$../UI/lcd_display.v:219$420'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:219$420'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:32$396'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:31$395'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:28$394'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$393'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$392'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$391'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$390'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:26$389'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:24$388'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$387'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$386'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$385'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:20$384'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:15$383'.
Found and cleaned up 80 empty switches in `\BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:36$222'.
Removing empty process `UI.$proc$../UI/UI.v:71$220'.
Removing empty process `UI.$proc$../UI/UI.v:70$219'.
Removing empty process `UI.$proc$../UI/UI.v:69$218'.
Removing empty process `UI.$proc$../UI/UI.v:69$217'.
Removing empty process `UI.$proc$../UI/UI.v:68$216'.
Removing empty process `UI.$proc$../UI/UI.v:67$215'.
Removing empty process `UI.$proc$../UI/UI.v:55$214'.
Removing empty process `UI.$proc$../UI/UI.v:52$213'.
Removing empty process `UI.$proc$../UI/UI.v:52$212'.
Removing empty process `UI.$proc$../UI/UI.v:52$211'.
Removing empty process `UI.$proc$../UI/UI.v:52$210'.
Removing empty process `UI.$proc$../UI/UI.v:51$209'.
Removing empty process `UI.$proc$../UI/UI.v:51$208'.
Removing empty process `UI.$proc$../UI/UI.v:51$207'.
Removing empty process `UI.$proc$../UI/UI.v:51$206'.
Removing empty process `UI.$proc$../UI/UI.v:50$205'.
Removing empty process `UI.$proc$../UI/UI.v:45$204'.
Removing empty process `UI.$proc$../UI/UI.v:43$203'.
Removing empty process `UI.$proc$../UI/UI.v:31$202'.
Removing empty process `UI.$proc$../UI/UI.v:28$201'.
Removing empty process `UI.$proc$../UI/UI.v:27$200'.
Removing empty process `UI.$proc$../UI/UI.v:26$199'.
Removing empty process `UI.$proc$../UI/UI.v:25$198'.
Found and cleaned up 42 empty switches in `\UI.$proc$../UI/UI.v:129$153'.
Removing empty process `UI.$proc$../UI/UI.v:129$153'.
Found and cleaned up 12 empty switches in `\UI.$proc$../UI/UI.v:76$133'.
Removing empty process `UI.$proc$../UI/UI.v:76$133'.
Removing empty process `cordic.$proc$../cordic/cordic.v:307$132'.
Removing empty process `$paramod\signed_shifter\i=2.$proc$../cordic/cordic.v:199$756'.
Removing empty process `$paramod\signed_shifter\i=3.$proc$../cordic/cordic.v:199$744'.
Found and cleaned up 3 empty switches in `\fullcordic.$proc$../cordic/fullcordic.v:45$109'.
Removing empty process `fullcordic.$proc$../cordic/fullcordic.v:45$109'.
Removing empty process `$paramod\signed_shifter\i=4.$proc$../cordic/cordic.v:199$728'.
Removing empty process `adc_host.$proc$../adc_host.v:23$49'.
Removing empty process `adc_host.$proc$../adc_host.v:22$48'.
Removing empty process `adc_host.$proc$../adc_host.v:21$47'.
Removing empty process `adc_host.$proc$../adc_host.v:19$46'.
Removing empty process `adc_host.$proc$../adc_host.v:17$45'.
Removing empty process `adc_host.$proc$../adc_host.v:14$44'.
Removing empty process `adc_host.$proc$../adc_host.v:46$43'.
Found and cleaned up 5 empty switches in `\adc_host.$proc$../adc_host.v:29$37'.
Removing empty process `adc_host.$proc$../adc_host.v:29$37'.
Removing empty process `oscillator.$proc$../oscillator.v:27$33'.
Removing empty process `oscillator.$proc$../oscillator.v:26$32'.
Found and cleaned up 1 empty switch in `\oscillator.$proc$../oscillator.v:34$29'.
Removing empty process `oscillator.$proc$../oscillator.v:34$29'.
Removing empty process `fibonacci15.$proc$../fibonacci15.v:10$27'.
Removing empty process `fibonacci7.$proc$../fibonacci7.v:10$25'.
Removing empty process `top.$proc$TOP_V1.v:92$24'.
Removing empty process `top.$proc$TOP_V1.v:70$23'.
Removing empty process `top.$proc$TOP_V1.v:69$22'.
Found and cleaned up 2 empty switches in `\top.$proc$TOP_V1.v:123$13'.
Removing empty process `top.$proc$TOP_V1.v:123$13'.
Cleaned up 226 empty switches.

22.4. Executing FLATTEN pass (flatten design).
Using template adc_host for cells of type adc_host.
Using template Flash_to_SRAM for cells of type Flash_to_SRAM.
Using template sram16x16 for cells of type sram16x16.
Using template dds for cells of type dds.
Using template mult16x16 for cells of type mult16x16.
Using template $paramod\CIC\rate=32\log2rate=5 for cells of type $paramod\CIC\rate=32\log2rate=5.
Using template fullcordic for cells of type fullcordic.
Using template UI for cells of type UI.
Using template oscillator for cells of type oscillator.
Using template pll for cells of type pll.
Using template sigma_delta for cells of type sigma_delta.
Using template spi_flash_reader for cells of type spi_flash_reader.
Using template dpram_64x8 for cells of type dpram_64x8.
Using template cordic for cells of type cordic.
Using template lcd for cells of type lcd.
Using template BinToLCD for cells of type BinToLCD.
Using template fibonacci15 for cells of type fibonacci15.
Using template fibonacci7 for cells of type fibonacci7.
Using template $paramod\rotator\iteration=0\tangle=17'00010110100000000 for cells of type $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Using template $paramod\rotator\iteration=1\tangle=17'00001101010010000 for cells of type $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Using template $paramod\rotator\iteration=2\tangle=17'00000111000001001 for cells of type $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Using template $paramod\rotator\iteration=3\tangle=17'00000011100100000 for cells of type $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Using template $paramod\rotator\iteration=4\tangle=17'00000001110010011 for cells of type $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Using template $paramod\rotator\iteration=5\tangle=17'00000000111001010 for cells of type $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Using template $paramod\rotator\iteration=6\tangle=17'00000000011100101 for cells of type $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Using template $paramod\rotator\iteration=7\tangle=17'00000000001110010 for cells of type $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Using template $paramod\delay_counter\counter_width=20 for cells of type $paramod\delay_counter\counter_width=20.
Using template $paramod\signed_shifter\i=0 for cells of type $paramod\signed_shifter\i=0.
Using template $paramod\signed_shifter\i=1 for cells of type $paramod\signed_shifter\i=1.
Using template $paramod\signed_shifter\i=2 for cells of type $paramod\signed_shifter\i=2.
Using template $paramod\signed_shifter\i=3 for cells of type $paramod\signed_shifter\i=3.
Using template $paramod\signed_shifter\i=4 for cells of type $paramod\signed_shifter\i=4.
Using template $paramod\signed_shifter\i=5 for cells of type $paramod\signed_shifter\i=5.
Using template $paramod\signed_shifter\i=6 for cells of type $paramod\signed_shifter\i=6.
Using template $paramod\signed_shifter\i=7 for cells of type $paramod\signed_shifter\i=7.
<suppressed ~48 debug messages>
No more expansions possible.
Deleting now unused module $paramod\signed_shifter\i=5.
Deleting now unused module $paramod\signed_shifter\i=6.
Deleting now unused module $paramod\signed_shifter\i=7.
Deleting now unused module $paramod\delay_counter\counter_width=20.
Deleting now unused module $paramod\signed_shifter\i=0.
Deleting now unused module $paramod\rotator\iteration=0\tangle=17'00010110100000000.
Deleting now unused module $paramod\rotator\iteration=1\tangle=17'00001101010010000.
Deleting now unused module $paramod\rotator\iteration=2\tangle=17'00000111000001001.
Deleting now unused module $paramod\rotator\iteration=3\tangle=17'00000011100100000.
Deleting now unused module $paramod\rotator\iteration=4\tangle=17'00000001110010011.
Deleting now unused module $paramod\rotator\iteration=5\tangle=17'00000000111001010.
Deleting now unused module $paramod\rotator\iteration=6\tangle=17'00000000011100101.
Deleting now unused module $paramod\rotator\iteration=7\tangle=17'00000000001110010.
Deleting now unused module $paramod\CIC\rate=32\log2rate=5.
Deleting now unused module pll.
Deleting now unused module mult16x16.
Deleting now unused module dds.
Deleting now unused module sigma_delta.
Deleting now unused module spi_flash_reader.
Deleting now unused module Flash_to_SRAM.
Deleting now unused module sram16x16.
Deleting now unused module $paramod\signed_shifter\i=1.
Deleting now unused module lcd.
Deleting now unused module BinToLCD.
Deleting now unused module UI.
Deleting now unused module cordic.
Deleting now unused module $paramod\signed_shifter\i=2.
Deleting now unused module $paramod\signed_shifter\i=3.
Deleting now unused module fullcordic.
Deleting now unused module dpram_64x8.
Deleting now unused module $paramod\signed_shifter\i=4.
Deleting now unused module adc_host.
Deleting now unused module oscillator.
Deleting now unused module fibonacci15.
Deleting now unused module fibonacci7.

22.5. Executing TRIBUF pass.

22.6. Executing DEMINOUT pass (demote inout ports to input or output).

22.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~195 debug messages>

22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Warning: Driver-driver conflict for \OSC.randgen.fib [14] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [13] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [12] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [11] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [10] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [9] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [8] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [7] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [6] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [5] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [4] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [3] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [2] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [1] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \OSC.randgen.fib [0] between cell $techmap\OSC.randgen.$procdff$3194.Q and constant 1'1 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [6] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [5] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [4] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [3] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [2] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [1] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'0 in top: Resolved using constant.
Warning: Driver-driver conflict for \PLL.randgen.fib [0] between cell $techmap\PLL.randgen.$procdff$3195.Q and constant 1'1 in top: Resolved using constant.
Removed 93 unused cells and 1159 unused wires.
<suppressed ~138 debug messages>

22.9. Executing CHECK pass (checking for obvious problems).
checking module top..
Warning: Wire top.\IO [8] is used but has no driver.
Warning: Wire top.\IO [7] is used but has no driver.
Warning: Wire top.\IO [6] is used but has no driver.
Warning: Wire top.\IO [5] is used but has no driver.
Warning: Wire top.\IO [4] is used but has no driver.
Warning: Wire top.\IO [3] is used but has no driver.
Warning: Wire top.\IO [2] is used but has no driver.
Warning: Wire top.\IO [1] is used but has no driver.
Warning: Wire top.\IO [0] is used but has no driver.
found and reported 9 problems.

22.10. Executing OPT pass (performing simple optimizations).

22.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1806 debug messages>
Removed a total of 602 cells.

22.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2950: \UI_inst.btnt3 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2948: \UI_inst.btnt3 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2956: \UI_inst.btnt2 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2954: \UI_inst.btnt2 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2962: \UI_inst.btnt1 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2960: \UI_inst.btnt1 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2968: \UI_inst.btnt0 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2966: \UI_inst.btnt0 -> 1'1
      Replacing known input bits on port A of cell $techmap\DDS.$procmux$1043: \DDS.islast -> 1'0
      Replacing known input bits on port A of cell $techmap\DDS.$procmux$1047: \DDS.iscos -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.diplay_number.$procmux$1845: \Filter2.OUT [31:16] -> { 1'0 \Filter2.OUT [30:16] }
      Replacing known input bits on port A of cell $techmap\UI_inst.diplay_number.$procmux$1873: \Filter1.OUT [31:16] -> { 1'0 \Filter1.OUT [30:16] }
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1493.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1495.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1506.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1508.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1520.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1522.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1537.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1539.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1555.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1557.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1574.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1576.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1594.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1596.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1622.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1624.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1651.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1653.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1681.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1683.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1714.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1716.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1748.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1750.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1783.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1785.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1819.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1821.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1881.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1111.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1117.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1124.
    dead port 2/2 on $mux $techmap\F2SRAM.SPI_READER.$procmux$1132.
Removed 33 multiplexer ports.
<suppressed ~141 debug messages>

22.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $techmap\PLL.$reduce_or$../pll.v:43$538: { \PLL.phase [25] \PLL.phase [26] \PLL.phase [27] \PLL.phase [28] \PLL.phase [29] \PLL.phase [30] \PLL.phase [31] }
    New input vector for $reduce_or cell $techmap\Filter2.$reduce_or$../filter/CIC.v:47$570: { \Filter2.tickcount [0] \Filter2.tickcount [1] \Filter2.tickcount [2] \Filter2.tickcount [3] \Filter2.tickcount [4] \Filter2.tickcount [5] \Filter2.tickcount [6] \Filter2.tickcount [7] \Filter2.tickcount [8] \Filter2.tickcount [9] \Filter2.tickcount [10] }
    New input vector for $reduce_or cell $techmap\Filter1.$reduce_or$../filter/CIC.v:47$570: { \Filter1.tickcount [0] \Filter1.tickcount [1] \Filter1.tickcount [2] \Filter1.tickcount [3] \Filter1.tickcount [4] \Filter1.tickcount [5] \Filter1.tickcount [6] \Filter1.tickcount [7] \Filter1.tickcount [8] \Filter1.tickcount [9] \Filter1.tickcount [10] }
    New input vector for $reduce_or cell $reduce_or$TOP_V1.v:114$11: { \ADC.data [0] \ADC.data [1] \ADC.data [2] \ADC.data [3] \ADC.data [4] \ADC.data [5] \ADC.data [6] \ADC.data [7] \ADC.data [8] \ADC.data [9] \ADC.data [10] \ADC.data [11] \ADC.data [12] \ADC.data [13] \ADC.data [14] \ADC.data [15] }
    New input vector for $reduce_or cell $techmap\UI_inst.$reduce_or$../UI/UI.v:209$164: { \UI_inst.BP [0] \UI_inst.BP [1] \UI_inst.BP [2] \UI_inst.BP [3] }
    New input vector for $reduce_and cell $techmap\PLL.$reduce_and$../pll.v:50$544: { \PLL.eP [12] \PLL.eP [13] \PLL.eP [14] \PLL.eP [15] }
    New input vector for $reduce_and cell $techmap\PLL.$reduce_and$../pll.v:50$543: { $techmap\PLL.$not$../pll.v:50$542_Y [0] $techmap\PLL.$not$../pll.v:50$542_Y [1] $techmap\PLL.$not$../pll.v:50$542_Y [2] $techmap\PLL.$not$../pll.v:50$542_Y [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:125$15: { \cnt [0] \cnt [1] \cnt [2] \cnt [3] \cnt [4] \cnt [5] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:110$8: { $not$TOP_V1.v:110$7_Y [0] $not$TOP_V1.v:110$7_Y [1] $not$TOP_V1.v:110$7_Y [2] $not$TOP_V1.v:110$7_Y [3] }
    New input vector for $reduce_and cell $reduce_and$TOP_V1.v:110$5: { \ADC.data [11] \ADC.data [12] \ADC.data [13] \ADC.data [14] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:93$139: { \UI_inst.cnt1 [0] \UI_inst.cnt1 [1] \UI_inst.cnt1 [2] \UI_inst.cnt1 [3] \UI_inst.cnt1 [4] \UI_inst.cnt1 [5] \UI_inst.cnt1 [6] \UI_inst.cnt1 [7] \UI_inst.cnt1 [8] \UI_inst.cnt1 [9] \UI_inst.cnt1 [10] \UI_inst.cnt1 [11] \UI_inst.cnt1 [12] \UI_inst.cnt1 [13] \UI_inst.cnt1 [14] \UI_inst.cnt1 [15] \UI_inst.cnt1 [16] \UI_inst.cnt1 [17] \UI_inst.cnt1 [18] \UI_inst.cnt1 [19] \UI_inst.cnt1 [20] \UI_inst.cnt1 [21] \UI_inst.cnt1 [22] \UI_inst.cnt1 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:83$135: { \UI_inst.cnt0 [0] \UI_inst.cnt0 [1] \UI_inst.cnt0 [2] \UI_inst.cnt0 [3] \UI_inst.cnt0 [4] \UI_inst.cnt0 [5] \UI_inst.cnt0 [6] \UI_inst.cnt0 [7] \UI_inst.cnt0 [8] \UI_inst.cnt0 [9] \UI_inst.cnt0 [10] \UI_inst.cnt0 [11] \UI_inst.cnt0 [12] \UI_inst.cnt0 [13] \UI_inst.cnt0 [14] \UI_inst.cnt0 [15] \UI_inst.cnt0 [16] \UI_inst.cnt0 [17] \UI_inst.cnt0 [18] \UI_inst.cnt0 [19] \UI_inst.cnt0 [20] \UI_inst.cnt0 [21] \UI_inst.cnt0 [22] \UI_inst.cnt0 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:136$156: { \UI_inst.disppos [0] \UI_inst.disppos [1] \UI_inst.disppos [2] \UI_inst.disppos [3] \UI_inst.disppos [4] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:134$155: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] \UI_inst.count [5] \UI_inst.count [6] \UI_inst.count [7] \UI_inst.count [8] \UI_inst.count [9] \UI_inst.count [10] \UI_inst.count [11] \UI_inst.count [12] \UI_inst.count [13] \UI_inst.count [14] \UI_inst.count [15] \UI_inst.count [16] \UI_inst.count [17] \UI_inst.count [18] \UI_inst.count [19] \UI_inst.count [20] \UI_inst.count [21] \UI_inst.count [22] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:113$147: { \UI_inst.cnt3 [0] \UI_inst.cnt3 [1] \UI_inst.cnt3 [2] \UI_inst.cnt3 [3] \UI_inst.cnt3 [4] \UI_inst.cnt3 [5] \UI_inst.cnt3 [6] \UI_inst.cnt3 [7] \UI_inst.cnt3 [8] \UI_inst.cnt3 [9] \UI_inst.cnt3 [10] \UI_inst.cnt3 [11] \UI_inst.cnt3 [12] \UI_inst.cnt3 [13] \UI_inst.cnt3 [14] \UI_inst.cnt3 [15] \UI_inst.cnt3 [16] \UI_inst.cnt3 [17] \UI_inst.cnt3 [18] \UI_inst.cnt3 [19] \UI_inst.cnt3 [20] \UI_inst.cnt3 [21] \UI_inst.cnt3 [22] \UI_inst.cnt3 [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:103$143: { \UI_inst.cnt2 [0] \UI_inst.cnt2 [1] \UI_inst.cnt2 [2] \UI_inst.cnt2 [3] \UI_inst.cnt2 [4] \UI_inst.cnt2 [5] \UI_inst.cnt2 [6] \UI_inst.cnt2 [7] \UI_inst.cnt2 [8] \UI_inst.cnt2 [9] \UI_inst.cnt2 [10] \UI_inst.cnt2 [11] \UI_inst.cnt2 [12] \UI_inst.cnt2 [13] \UI_inst.cnt2 [14] \UI_inst.cnt2 [15] \UI_inst.cnt2 [16] \UI_inst.cnt2 [17] \UI_inst.cnt2 [18] \UI_inst.cnt2 [19] \UI_inst.cnt2 [20] \UI_inst.cnt2 [21] \UI_inst.cnt2 [22] \UI_inst.cnt2 [23] }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2753: { $techmap\UI_inst.$procmux$2785_CMP $techmap\UI_inst.$procmux$2784_CMP $techmap\UI_inst.$procmux$2783_CMP $techmap\UI_inst.$procmux$2781_CMP $techmap\UI_inst.$procmux$2780_CMP $techmap\UI_inst.$procmux$2779_CMP $techmap\UI_inst.$procmux$2777_CMP $techmap\UI_inst.$procmux$2776_CMP $techmap\UI_inst.$procmux$2775_CMP $techmap\UI_inst.$procmux$2774_CMP $techmap\UI_inst.$procmux$2773_CMP $techmap\UI_inst.$procmux$2772_CMP $auto$opt_reduce.cc:132:opt_mux$3200 $techmap\UI_inst.$procmux$2766_CMP $techmap\UI_inst.$procmux$2757_CMP $techmap\UI_inst.$procmux$2754_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2789: { $techmap\UI_inst.$procmux$2785_CMP $techmap\UI_inst.$procmux$2784_CMP $techmap\UI_inst.$procmux$2783_CMP $techmap\UI_inst.$procmux$2781_CMP $techmap\UI_inst.$procmux$2779_CMP $auto$opt_reduce.cc:132:opt_mux$3206 $techmap\UI_inst.$procmux$2777_CMP $techmap\UI_inst.$procmux$2776_CMP $auto$opt_reduce.cc:132:opt_mux$3204 $techmap\UI_inst.$procmux$2774_CMP $techmap\UI_inst.$procmux$2773_CMP $techmap\UI_inst.$procmux$2817_CMP $techmap\UI_inst.$procmux$2814_CMP $techmap\UI_inst.$procmux$2805_CMP $techmap\UI_inst.$procmux$2772_CMP $auto$opt_reduce.cc:132:opt_mux$3202 $techmap\UI_inst.$procmux$2754_CMP $techmap\UI_inst.$procmux$2790_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2833: { $techmap\UI_inst.$procmux$2785_CMP $techmap\UI_inst.$procmux$2783_CMP $techmap\UI_inst.$procmux$2779_CMP $techmap\UI_inst.$procmux$2846_CMP $techmap\UI_inst.$procmux$2845_CMP $techmap\UI_inst.$procmux$2842_CMP $techmap\UI_inst.$procmux$2839_CMP $auto$opt_reduce.cc:132:opt_mux$3212 $auto$opt_reduce.cc:132:opt_mux$3210 $auto$opt_reduce.cc:132:opt_mux$3208 $techmap\UI_inst.$procmux$2814_CMP $techmap\UI_inst.$procmux$2805_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2878: { $techmap\UI_inst.$procmux$2785_CMP $techmap\UI_inst.$procmux$2784_CMP $techmap\UI_inst.$procmux$2782_CMP $techmap\UI_inst.$procmux$2781_CMP $techmap\UI_inst.$procmux$2780_CMP $techmap\UI_inst.$procmux$2777_CMP $auto$opt_reduce.cc:132:opt_mux$3220 $auto$opt_reduce.cc:132:opt_mux$3218 $techmap\UI_inst.$procmux$2774_CMP $techmap\UI_inst.$procmux$2839_CMP $auto$opt_reduce.cc:132:opt_mux$3216 $auto$opt_reduce.cc:132:opt_mux$3214 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2918: $auto$opt_reduce.cc:132:opt_mux$3222
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1235: { $auto$opt_reduce.cc:132:opt_mux$3226 $auto$opt_reduce.cc:132:opt_mux$3224 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1245: { $auto$opt_reduce.cc:132:opt_mux$3230 $auto$opt_reduce.cc:132:opt_mux$3228 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1360: { $auto$opt_reduce.cc:132:opt_mux$3234 $auto$opt_reduce.cc:132:opt_mux$3232 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1381: { $auto$opt_reduce.cc:132:opt_mux$3236 $techmap\UI_inst.LCD.$procmux$1290_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1453: { $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:186$406_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:187$407_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:188$408_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$409_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:190$410_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:191$411_Y $auto$opt_reduce.cc:132:opt_mux$3240 $auto$opt_reduce.cc:132:opt_mux$3238 }
    New ctrl vector for $pmux cell $techmap\DDS.$procmux$1061: { $auto$opt_reduce.cc:132:opt_mux$3244 $auto$opt_reduce.cc:132:opt_mux$3242 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1824: { $techmap\UI_inst.diplay_number.$procmux$1878_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1866_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1850_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1838_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $auto$opt_reduce.cc:132:opt_mux$3246 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1890: { $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $auto$opt_reduce.cc:132:opt_mux$3250 $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $auto$opt_reduce.cc:132:opt_mux$3248 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1968: { $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1856_CMP $auto$opt_reduce.cc:132:opt_mux$3252 $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1828_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2136: { $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $auto$opt_reduce.cc:132:opt_mux$3254 $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2236: { $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $auto$opt_reduce.cc:132:opt_mux$3258 $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $auto$opt_reduce.cc:132:opt_mux$3256 $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2368: { $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $auto$opt_reduce.cc:132:opt_mux$3262 $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $auto$opt_reduce.cc:132:opt_mux$3260 $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2429: { $techmap\UI_inst.diplay_number.$procmux$1880_CMP $techmap\UI_inst.diplay_number.$procmux$1878_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1856_CMP $techmap\UI_inst.diplay_number.$procmux$1852_CMP $auto$opt_reduce.cc:132:opt_mux$3268 $techmap\UI_inst.diplay_number.$procmux$1850_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $auto$opt_reduce.cc:132:opt_mux$3266 $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1828_CMP $techmap\UI_inst.diplay_number.$procmux$1827_CMP $auto$opt_reduce.cc:132:opt_mux$3264 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2565: { $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1856_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP $techmap\UI_inst.diplay_number.$procmux$1828_CMP $auto$opt_reduce.cc:132:opt_mux$3270 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3207: { $techmap\UI_inst.$procmux$2817_CMP $techmap\UI_inst.$procmux$2780_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3211: { $techmap\UI_inst.$procmux$2838_CMP $techmap\UI_inst.$procmux$2784_CMP $techmap\UI_inst.$procmux$2782_CMP $techmap\UI_inst.$procmux$2781_CMP $techmap\UI_inst.$procmux$2778_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3213: { $techmap\UI_inst.$procmux$2790_CMP $techmap\UI_inst.$procmux$2778_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3231: { $techmap\UI_inst.LCD.$procmux$1361_CMP $techmap\UI_inst.LCD.$procmux$1305_CMP $techmap\UI_inst.LCD.$procmux$1299_CMP $techmap\UI_inst.LCD.$procmux$1293_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3237: { $techmap\UI_inst.LCD.$procmux$1411_CMP $techmap\UI_inst.LCD.$procmux$1390_CMP $techmap\UI_inst.LCD.$procmux$1312_CMP }
  Optimizing cells in module \top.
Performed a total of 40 changes.

22.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~558 debug messages>
Removed a total of 186 cells.

22.10.6. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 824 unused wires.
<suppressed ~5 debug messages>

22.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.9. Rerunning OPT passes. (Maybe there is more to do..)

22.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~143 debug messages>

22.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2694: { $techmap\UI_inst.$eq$../UI/UI.v:124$151_Y $auto$opt_reduce.cc:132:opt_mux$3272 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2716: { $techmap\UI_inst.$eq$../UI/UI.v:124$151_Y $auto$opt_reduce.cc:132:opt_mux$3274 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2738: $auto$opt_reduce.cc:132:opt_mux$3276
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1198: { $auto$opt_reduce.cc:132:opt_mux$3278 $techmap\UI_inst.LCD.$procmux$1200_CMP $techmap\UI_inst.LCD.$procmux$1199_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1218: { $techmap\UI_inst.LCD.$procmux$1212_CMP $techmap\UI_inst.LCD.$procmux$1209_CMP $auto$opt_reduce.cc:132:opt_mux$3280 $techmap\UI_inst.LCD.$procmux$1203_CMP $techmap\UI_inst.LCD.$procmux$1199_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1286: { $techmap\UI_inst.LCD.$procmux$1312_CMP $auto$opt_reduce.cc:132:opt_mux$3282 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$409_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$1322: { $techmap\UI_inst.LCD.$procmux$1312_CMP $techmap\UI_inst.LCD.$procmux$1308_CMP $techmap\UI_inst.LCD.$procmux$1302_CMP $auto$opt_reduce.cc:132:opt_mux$3286 $auto$opt_reduce.cc:132:opt_mux$3284 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$409_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1824: { $techmap\UI_inst.diplay_number.$procmux$1878_CMP $techmap\UI_inst.diplay_number.$procmux$1866_CMP $techmap\UI_inst.diplay_number.$procmux$1850_CMP $techmap\UI_inst.diplay_number.$procmux$1838_CMP $auto$opt_reduce.cc:132:opt_mux$3288 $auto$opt_reduce.cc:132:opt_mux$3246 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1890: { $auto$opt_reduce.cc:132:opt_mux$3250 $auto$opt_reduce.cc:132:opt_mux$3290 $auto$opt_reduce.cc:132:opt_mux$3248 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1968: { $auto$opt_reduce.cc:132:opt_mux$3252 $auto$opt_reduce.cc:132:opt_mux$3292 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2136: { $auto$opt_reduce.cc:132:opt_mux$3250 $auto$opt_reduce.cc:132:opt_mux$3296 $auto$opt_reduce.cc:132:opt_mux$3294 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2236: { $auto$opt_reduce.cc:132:opt_mux$3250 $auto$opt_reduce.cc:132:opt_mux$3310 $auto$opt_reduce.cc:132:opt_mux$3308 $auto$opt_reduce.cc:132:opt_mux$3306 $auto$opt_reduce.cc:132:opt_mux$3304 $auto$opt_reduce.cc:132:opt_mux$3256 $auto$opt_reduce.cc:132:opt_mux$3302 $auto$opt_reduce.cc:132:opt_mux$3300 $auto$opt_reduce.cc:132:opt_mux$3298 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2302: $auto$opt_reduce.cc:132:opt_mux$3312
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2368: { $auto$opt_reduce.cc:132:opt_mux$3250 $auto$opt_reduce.cc:132:opt_mux$3326 $auto$opt_reduce.cc:132:opt_mux$3324 $auto$opt_reduce.cc:132:opt_mux$3322 $auto$opt_reduce.cc:132:opt_mux$3320 $auto$opt_reduce.cc:132:opt_mux$3256 $auto$opt_reduce.cc:132:opt_mux$3318 $auto$opt_reduce.cc:132:opt_mux$3316 $auto$opt_reduce.cc:132:opt_mux$3314 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2429: { $techmap\UI_inst.diplay_number.$procmux$1880_CMP $techmap\UI_inst.diplay_number.$procmux$1878_CMP $techmap\UI_inst.diplay_number.$procmux$1852_CMP $auto$opt_reduce.cc:132:opt_mux$3268 $techmap\UI_inst.diplay_number.$procmux$1850_CMP $auto$opt_reduce.cc:132:opt_mux$3256 $auto$opt_reduce.cc:132:opt_mux$3330 $auto$opt_reduce.cc:132:opt_mux$3328 $techmap\UI_inst.diplay_number.$procmux$1827_CMP $auto$opt_reduce.cc:132:opt_mux$3264 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2565: { $auto$opt_reduce.cc:132:opt_mux$3332 $auto$opt_reduce.cc:132:opt_mux$3270 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3289: { $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3291: { $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1856_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1828_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3293: { $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3311: { $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1856_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1828_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3329: { $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$3331: { $techmap\UI_inst.diplay_number.$procmux$1867_CMP $techmap\UI_inst.diplay_number.$procmux$1856_CMP $techmap\UI_inst.diplay_number.$procmux$1839_CMP $techmap\UI_inst.diplay_number.$procmux$1828_CMP $techmap\UI_inst.diplay_number.$procmux$1820_CMP $techmap\UI_inst.diplay_number.$procmux$1784_CMP $techmap\UI_inst.diplay_number.$procmux$1749_CMP $techmap\UI_inst.diplay_number.$procmux$1715_CMP $techmap\UI_inst.diplay_number.$procmux$1682_CMP $techmap\UI_inst.diplay_number.$procmux$1652_CMP $techmap\UI_inst.diplay_number.$procmux$1623_CMP $techmap\UI_inst.diplay_number.$procmux$1595_CMP $techmap\UI_inst.diplay_number.$procmux$1575_CMP $techmap\UI_inst.diplay_number.$procmux$1556_CMP $techmap\UI_inst.diplay_number.$procmux$1538_CMP $techmap\UI_inst.diplay_number.$procmux$1521_CMP $techmap\UI_inst.diplay_number.$procmux$1507_CMP $techmap\UI_inst.diplay_number.$procmux$1494_CMP }
  Optimizing cells in module \top.
Performed a total of 22 changes.

22.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

22.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

22.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.16. Rerunning OPT passes. (Maybe there is more to do..)

22.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~143 debug messages>

22.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

22.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

22.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.23. Rerunning OPT passes. (Maybe there is more to do..)

22.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~143 debug messages>

22.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

22.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.10.30. Finished OPT passes. (There is nothing left to do.)

22.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell top.$add$TOP_V1.v:124$14 ($add).
Removed top 7 bits (of 32) from port Y of cell top.$add$TOP_V1.v:124$14 ($add).
Removed top 2 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:35$41 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:34$40 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$techmap\ADC.$eq$../adc_host.v:33$39 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\ADC.$add$../adc_host.v:31$38 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\ADC.$add$../adc_host.v:31$38 ($add).
Removed top 31 bits (of 32) from mux cell top.$techmap\ADC.$ternary$../adc_host.v:25$36 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$471 ($add).
Removed top 15 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$471 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$470 ($add).
Removed top 16 bits (of 32) from port Y of cell top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$470 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\DDS.$procmux$1064_CMP0 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$572 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:47$572 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:44$569 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:44$569 ($add).
Removed top 27 bits (of 32) from port B of cell top.$techmap\Filter1.$ge$../filter/CIC.v:42$568 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter1.$add$../filter/CIC.v:41$567 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$techmap\Filter1.$add$../filter/CIC.v:41$567 ($add).
Removed top 7 bits (of 8) from port A of cell top.$techmap\Filter1.$shl$../filter/CIC.v:37$562 ($shl).
Removed top 27 bits (of 32) from port B of cell top.$techmap\Filter2.$shr$../filter/CIC.v:47$573 ($shr).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter2.$add$../filter/CIC.v:44$569 ($add).
Removed top 24 bits (of 32) from port Y of cell top.$techmap\Filter2.$add$../filter/CIC.v:44$569 ($add).
Removed top 27 bits (of 32) from port B of cell top.$techmap\Filter2.$ge$../filter/CIC.v:42$568 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$techmap\Filter2.$add$../filter/CIC.v:41$567 ($add).
Removed top 21 bits (of 32) from port Y of cell top.$techmap\Filter2.$add$../filter/CIC.v:41$567 ($add).
Removed top 1 bits (of 2) from mux cell top.$techmap\CORDIC.$procmux$2988 ($mux).
Removed top 1 bits (of 17) from port B of cell top.$techmap\CORDIC.$add$../cordic/fullcordic.v:42$104 ($add).
Removed top 2 bits (of 17) from port B of cell top.$techmap\CORDIC.$add$../cordic/fullcordic.v:41$102 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\CORDIC.$eq$../cordic/fullcordic.v:41$101 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2907_CMP0 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2878 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2862 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2851_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2846_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2843 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2840 ($mux).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2833 ($pmux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2815 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2806 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2797 ($mux).
Removed top 5 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2794 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2785_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2784_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2783_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2782_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2781_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2780_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2779_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2778_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2777_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2776_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2775_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2774_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.$procmux$2773_CMP0 ($eq).
Removed top 7 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2768 ($mux).
Removed top 6 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2758 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.$procmux$2755 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2676_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2670_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2664_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2658_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2652_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2650_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$techmap\UI_inst.$procmux$2649_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:416$196 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:416$196 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:415$195 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:415$195 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:390$188 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:358$186 ($sub).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:358$186 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:357$185 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:357$185 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:246$170 ($sub).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:246$170 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:245$169 ($add).
Removed top 30 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:245$169 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\UI_inst.$eq$../UI/UI.v:232$167 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:206$163 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:206$163 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:205$162 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:205$162 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:138$160 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:138$160 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:131$154 ($add).
Removed top 9 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:131$154 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$sub$../UI/UI.v:123$150 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.$sub$../UI/UI.v:123$150 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:112$146 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:112$146 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:102$142 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:102$142 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:92$138 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:92$138 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.$add$../UI/UI.v:82$134 ($add).
Removed top 8 bits (of 32) from port Y of cell top.$techmap\UI_inst.$add$../UI/UI.v:82$134 ($add).
Removed top 2 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3020_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3019_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\OSC.$procmux$3018_CMP0 ($eq).
Removed top 1 bits (of 25) from mux cell top.$techmap\OSC.$procmux$3013 ($pmux).
Removed top 14 bits (of 15) from port B of cell top.$techmap\OSC.$add$../oscillator.v:36$31 ($add).
Removed top 12 bits (of 17) from port B of cell top.$techmap\PLL.$add$../pll.v:65$552 ($add).
Removed top 10 bits (of 17) from port B of cell top.$techmap\PLL.$sub$../pll.v:65$551 ($sub).
Removed top 1 bits (of 16) from port B of cell top.$techmap\PLL.$sub$../pll.v:44$539 ($sub).
Removed top 6 bits (of 7) from port B of cell top.$techmap\PLL.$add$../pll.v:32$537 ($add).
Removed top 1 bits (of 25) from port Y of cell top.$techmap\PLL.$add$../pll.v:32$537 ($add).
Removed top 1 bits (of 2) from port B of cell top.$techmap\F2SRAM.SPI_READER.$eq$../spi_flash_reader.v:169$496 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$493 ($add).
Removed top 29 bits (of 32) from port Y of cell top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$493 ($add).
Removed top 1 bits (of 5) from mux cell top.$techmap\UI_inst.LCD.$procmux$1387 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1361_CMP0 ($eq).
Removed top 2 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1342 ($mux).
Removed top 7 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1336 ($mux).
Removed top 16 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1327 ($mux).
Removed top 9 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1324 ($mux).
Removed top 3 bits (of 20) from mux cell top.$techmap\UI_inst.LCD.$procmux$1320 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1311_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1308_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1305_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1302_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1299_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1296_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1293_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1290_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1212_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1209_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$techmap\UI_inst.LCD.$procmux$1206_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell top.$techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$424 ($add).
Removed top 3 bits (of 7) from port B of cell top.$techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:396$423 ($eq).
Removed top 1 bits (of 8) from mux cell top.$techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$397 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2559 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2552 ($mux).
Removed top 4 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2487 ($mux).
Removed top 3 bits (of 8) from mux cell top.$techmap\UI_inst.diplay_number.$procmux$2439 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1879_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1878_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1867_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1866_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1856_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1855_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1854_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1853_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1820_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1784_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1749_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1715_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1682_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1652_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$techmap\UI_inst.diplay_number.$procmux$1623_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$eq$../UI/BinToLCD.v:113$252 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$techmap\UI_inst.diplay_number.$ne$../UI/BinToLCD.v:112$251 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$247 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$247 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$221 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$221 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$638 ($gt).
Removed top 3 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$636 ($sub).
Removed top 3 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$633 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$630 ($gt).
Removed top 4 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$628 ($sub).
Removed top 4 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$625 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$622 ($gt).
Removed top 5 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$620 ($sub).
Removed top 5 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$617 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$614 ($gt).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$734 ($or).
Removed top 6 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$612 ($sub).
Removed top 6 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$609 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$606 ($gt).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$734 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$720 ($or).
Removed top 7 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$604 ($sub).
Removed top 7 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$601 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$598 ($gt).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$720 ($or).
Removed top 8 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$596 ($sub).
Removed top 8 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$593 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$590 ($gt).
Removed top 9 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$588 ($sub).
Removed top 9 bits (of 17) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$585 ($add).
Removed top 31 bits (of 32) from port B of cell top.$techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$582 ($gt).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U1.y_shifter.$or$../cordic/cordic.v:201$767 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U1.x_shifter.$or$../cordic/cordic.v:201$767 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.y_shifter.$or$../cordic/cordic.v:201$762 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.y_shifter.$or$../cordic/cordic.v:201$759 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.x_shifter.$or$../cordic/cordic.v:201$762 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U2.x_shifter.$or$../cordic/cordic.v:201$759 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$753 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$750 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.y_shifter.$or$../cordic/cordic.v:201$747 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$753 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$750 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U3.x_shifter.$or$../cordic/cordic.v:201$747 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$740 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$737 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.y_shifter.$or$../cordic/cordic.v:201$731 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$740 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$737 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U4.x_shifter.$or$../cordic/cordic.v:201$731 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$723 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$717 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$714 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.y_shifter.$or$../cordic/cordic.v:201$711 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$723 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$717 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$714 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U5.x_shifter.$or$../cordic/cordic.v:201$711 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$702 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$699 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$696 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$693 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$690 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.y_shifter.$or$../cordic/cordic.v:201$687 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$702 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$699 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$696 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$693 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$690 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U6.x_shifter.$or$../cordic/cordic.v:201$687 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$671 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$677 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$674 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$668 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$665 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$662 ($or).
Removed top 1 bits (of 17) from port A of cell top.$techmap\CORDIC.cordicCORE.U7.y_shifter.$or$../cordic/cordic.v:201$659 ($or).
Removed top 24 bits (of 32) from wire top.$techmap\ADC.$add$../adc_host.v:31$38_Y.
Removed top 1 bits (of 2) from wire top.$techmap\CORDIC.$procmux$2988_Y.
Removed top 16 bits (of 32) from wire top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$470_Y.
Removed top 15 bits (of 32) from wire top.$techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$471_Y.
Removed top 29 bits (of 32) from wire top.$techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$493_Y.
Removed top 21 bits (of 32) from wire top.$techmap\Filter1.$add$../filter/CIC.v:41$567_Y.
Removed top 24 bits (of 32) from wire top.$techmap\Filter1.$add$../filter/CIC.v:44$569_Y.
Removed top 21 bits (of 32) from wire top.$techmap\Filter2.$add$../filter/CIC.v:41$567_Y.
Removed top 30 bits (of 32) from wire top.$techmap\Filter2.$add$../filter/CIC.v:44$569_Y.
Removed top 1 bits (of 25) from wire top.$techmap\OSC.$0\phaseword[24:0].
Removed top 25 bits (of 32) from wire top.$techmap\PLL.$add$../pll.v:51$546_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:102$142_Y.
Removed top 29 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:112$146_Y.
Removed top 27 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:138$160_Y.
Removed top 28 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:205$162_Y.
Removed top 30 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:245$169_Y.
Removed top 29 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:357$185_Y.
Removed top 30 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:416$196_Y.
Removed top 8 bits (of 32) from wire top.$techmap\UI_inst.$add$../UI/UI.v:82$134_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2755_Y.
Removed top 6 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2758_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2760_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2762_Y.
Removed top 7 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2768_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2794_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2797_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2806_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2815_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2833_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2840_Y.
Removed top 4 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2843_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2862_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.$procmux$2878_Y.
Removed top 29 bits (of 32) from wire top.$techmap\UI_inst.$sub$../UI/UI.v:358$186_Y.
Removed top 3 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1320_Y.
Removed top 15 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1324_Y.
Removed top 7 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1336_Y.
Removed top 7 bits (of 20) from wire top.$techmap\UI_inst.LCD.$procmux$1342_Y.
Removed top 3 bits (of 5) from wire top.$techmap\UI_inst.LCD.$procmux$1387_Y.
Removed top 28 bits (of 32) from wire top.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$247_Y.
Removed top 3 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2439_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2441_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2487_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2490_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2494_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2552_Y.
Removed top 1 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2555_Y.
Removed top 5 bits (of 8) from wire top.$techmap\UI_inst.diplay_number.$procmux$2559_Y.
Removed top 1 bits (of 16) from wire top.DAC1.dac_val.
Removed top 1 bits (of 8) from wire top.UI_inst.LCD.ramaddr.
Removed top 1 bits (of 2) from wire top.refamplset.

22.12. Executing PEEPOPT pass (run peephole optimizers).

22.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

22.14. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $techmap\Filter2.$shr$../filter/CIC.v:47$573 ($shr):
    Found 1 activation_patterns using ctrl signal { $techmap\Filter2.$reduce_or$../filter/CIC.v:47$570_Y $techmap\Filter1.$logic_and$../filter/CIC.v:39$566_Y }.
    No candidates found.
  Analyzing resource sharing options for $techmap\Filter1.$shr$../filter/CIC.v:47$573 ($shr):
    Found 1 activation_patterns using ctrl signal { $techmap\Filter1.$logic_and$../filter/CIC.v:39$566_Y $techmap\Filter1.$reduce_or$../filter/CIC.v:47$570_Y }.
    No candidates found.

22.15. Executing TECHMAP pass (map to technology primitives).

22.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

22.15.2. Continuing TECHMAP pass.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$3fbee094385d1f2712c8f0e44e105767be1dc65d\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b052c427b9400c9842289fe5ffb1277ba3e47bb8\_90_lut_cmp_ for cells of type $ne.
No more expansions possible.
<suppressed ~1023 debug messages>

22.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 123 unused wires.
<suppressed ~1 debug messages>

22.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$TOP_V1.v:124$14 ($add).
  creating $macc model for $techmap\ADC.$add$../adc_host.v:31$38 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:41$102 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:42$104 ($add).
  creating $macc model for $techmap\CORDIC.$add$../cordic/fullcordic.v:43$105 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$639 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$640 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$642 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$631 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$633 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$635 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$632 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$634 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$636 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$623 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$625 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$627 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$624 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$626 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$628 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$615 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$617 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$619 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$616 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$618 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$620 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$607 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$609 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$611 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$608 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$610 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$612 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$599 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$601 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$603 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$600 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$602 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$604 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$591 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$593 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$595 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$592 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$594 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$596 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$583 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$585 ($add).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$586 ($sub).
  creating $macc model for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$588 ($sub).
  creating $macc model for $techmap\DAC1.$add$../sigma_delta.v:21$521 ($add).
  creating $macc model for $techmap\DAC2.$add$../sigma_delta.v:21$521 ($add).
  creating $macc model for $techmap\DAC3.$add$../sigma_delta.v:21$521 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$470 ($add).
  creating $macc model for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$471 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$493 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$497 ($add).
  creating $macc model for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502 ($sub).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:41$567 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:44$569 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:47$572 ($add).
  creating $macc model for $techmap\Filter1.$add$../filter/CIC.v:48$574 ($add).
  creating $macc model for $techmap\Filter1.$sub$../filter/CIC.v:37$563 ($sub).
  creating $macc model for $techmap\Filter1.$sub$../filter/CIC.v:38$564 ($sub).
  creating $macc model for $techmap\Filter2.$add$../filter/CIC.v:41$567 ($add).
  creating $macc model for $techmap\Filter2.$add$../filter/CIC.v:44$569 ($add).
  creating $macc model for $techmap\Filter2.$add$../filter/CIC.v:48$574 ($add).
  creating $macc model for $techmap\Filter2.$sub$../filter/CIC.v:37$563 ($sub).
  creating $macc model for $techmap\Filter2.$sub$../filter/CIC.v:38$564 ($sub).
  creating $macc model for $techmap\OSC.$add$../oscillator.v:35$30 ($add).
  creating $macc model for $techmap\OSC.$add$../oscillator.v:36$31 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:32$537 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:51$546 ($add).
  creating $macc model for $techmap\PLL.$add$../pll.v:65$552 ($add).
  creating $macc model for $techmap\PLL.$sub$../pll.v:44$539 ($sub).
  creating $macc model for $techmap\PLL.$sub$../pll.v:61$549 ($sub).
  creating $macc model for $techmap\PLL.$sub$../pll.v:65$551 ($sub).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:102$142 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:112$146 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:131$154 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:138$160 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:205$162 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:245$169 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:357$185 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:416$196 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:82$134 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:92$138 ($add).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:123$150 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:206$163 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:246$170 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:358$186 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:415$195 ($sub).
  creating $macc model for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$424 ($add).
  creating $macc model for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$647 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$247 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$226 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$246 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$250 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$221 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$225 ($sub).
  merging $macc model for $techmap\PLL.$sub$../pll.v:65$551 into $techmap\PLL.$add$../pll.v:65$552.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$221.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$250.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$246.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$226.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$247.
  creating $alu model for $macc $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$647.
  creating $alu model for $macc $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$424.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:415$195.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:358$186.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:246$170.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:206$163.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:123$150.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:92$138.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:82$134.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:416$196.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:357$185.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:245$169.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:205$162.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:138$160.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:131$154.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:112$146.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:102$142.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$225.
  creating $alu model for $macc $techmap\PLL.$sub$../pll.v:61$549.
  creating $alu model for $macc $techmap\PLL.$sub$../pll.v:44$539.
  creating $alu model for $macc $techmap\PLL.$add$../pll.v:51$546.
  creating $alu model for $macc $techmap\PLL.$add$../pll.v:32$537.
  creating $alu model for $macc $techmap\OSC.$add$../oscillator.v:36$31.
  creating $alu model for $macc $techmap\OSC.$add$../oscillator.v:35$30.
  creating $alu model for $macc $techmap\Filter2.$sub$../filter/CIC.v:38$564.
  creating $alu model for $macc $techmap\Filter2.$sub$../filter/CIC.v:37$563.
  creating $alu model for $macc $techmap\Filter2.$add$../filter/CIC.v:48$574.
  creating $alu model for $macc $techmap\Filter2.$add$../filter/CIC.v:44$569.
  creating $alu model for $macc $techmap\Filter2.$add$../filter/CIC.v:41$567.
  creating $alu model for $macc $techmap\Filter1.$sub$../filter/CIC.v:38$564.
  creating $alu model for $macc $techmap\Filter1.$sub$../filter/CIC.v:37$563.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:48$574.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:47$572.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:44$569.
  creating $alu model for $macc $techmap\Filter1.$add$../filter/CIC.v:41$567.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$497.
  creating $alu model for $macc $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$493.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$471.
  creating $alu model for $macc $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$470.
  creating $alu model for $macc $techmap\DAC3.$add$../sigma_delta.v:21$521.
  creating $alu model for $macc $techmap\DAC2.$add$../sigma_delta.v:21$521.
  creating $alu model for $macc $techmap\DAC1.$add$../sigma_delta.v:21$521.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$588.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$586.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$585.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$583.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$596.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$594.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$592.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$595.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$593.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$591.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$604.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$602.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$600.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$603.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$601.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$599.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$612.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$610.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$608.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$611.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$609.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$607.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$620.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$618.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$616.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$619.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$617.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$615.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$628.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$626.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$624.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$627.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$625.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$623.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$636.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$634.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$632.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$635.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$633.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$631.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$642.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$640.
  creating $alu model for $macc $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$639.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:43$105.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:42$104.
  creating $alu model for $macc $techmap\CORDIC.$add$../cordic/fullcordic.v:41$102.
  creating $alu model for $macc $techmap\ADC.$add$../adc_host.v:31$38.
  creating $alu model for $macc $add$TOP_V1.v:124$14.
  creating $macc cell for $techmap\PLL.$add$../pll.v:65$552: $auto$alumacc.cc:354:replace_macc$3443
  creating $alu model for $techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$638 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$630 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$622 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$614 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$606 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$598 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$590 ($gt): new $alu
  creating $alu model for $techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$582 ($gt): new $alu
  creating $alu model for $techmap\Filter1.$ge$../filter/CIC.v:42$568 ($ge): new $alu
  creating $alu model for $techmap\Filter2.$ge$../filter/CIC.v:42$568 ($ge): new $alu
  creating $alu cell for $techmap\Filter2.$ge$../filter/CIC.v:42$568: $auto$alumacc.cc:474:replace_alu$3454
  creating $alu cell for $techmap\Filter1.$ge$../filter/CIC.v:42$568: $auto$alumacc.cc:474:replace_alu$3463
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$gt$../cordic/cordic.v:283$582: $auto$alumacc.cc:474:replace_alu$3472
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$gt$../cordic/cordic.v:283$590: $auto$alumacc.cc:474:replace_alu$3479
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$gt$../cordic/cordic.v:283$598: $auto$alumacc.cc:474:replace_alu$3486
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$gt$../cordic/cordic.v:283$606: $auto$alumacc.cc:474:replace_alu$3493
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$gt$../cordic/cordic.v:283$614: $auto$alumacc.cc:474:replace_alu$3500
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$gt$../cordic/cordic.v:283$622: $auto$alumacc.cc:474:replace_alu$3507
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$gt$../cordic/cordic.v:283$630: $auto$alumacc.cc:474:replace_alu$3514
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$gt$../cordic/cordic.v:283$638: $auto$alumacc.cc:474:replace_alu$3521
  creating $alu cell for $add$TOP_V1.v:124$14: $auto$alumacc.cc:474:replace_alu$3528
  creating $alu cell for $techmap\ADC.$add$../adc_host.v:31$38: $auto$alumacc.cc:474:replace_alu$3531
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:41$102: $auto$alumacc.cc:474:replace_alu$3534
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:42$104: $auto$alumacc.cc:474:replace_alu$3537
  creating $alu cell for $techmap\CORDIC.$add$../cordic/fullcordic.v:43$105: $auto$alumacc.cc:474:replace_alu$3540
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$add$../cordic/cordic.v:288$639: $auto$alumacc.cc:474:replace_alu$3543
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:289$640: $auto$alumacc.cc:474:replace_alu$3546
  creating $alu cell for $techmap\CORDIC.cordicCORE.U0.$sub$../cordic/cordic.v:292$642: $auto$alumacc.cc:474:replace_alu$3549
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:288$631: $auto$alumacc.cc:474:replace_alu$3552
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:290$633: $auto$alumacc.cc:474:replace_alu$3555
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$add$../cordic/cordic.v:293$635: $auto$alumacc.cc:474:replace_alu$3558
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:289$632: $auto$alumacc.cc:474:replace_alu$3561
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:292$634: $auto$alumacc.cc:474:replace_alu$3564
  creating $alu cell for $techmap\CORDIC.cordicCORE.U1.$sub$../cordic/cordic.v:296$636: $auto$alumacc.cc:474:replace_alu$3567
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:288$623: $auto$alumacc.cc:474:replace_alu$3570
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:290$625: $auto$alumacc.cc:474:replace_alu$3573
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$add$../cordic/cordic.v:293$627: $auto$alumacc.cc:474:replace_alu$3576
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:289$624: $auto$alumacc.cc:474:replace_alu$3579
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:292$626: $auto$alumacc.cc:474:replace_alu$3582
  creating $alu cell for $techmap\CORDIC.cordicCORE.U2.$sub$../cordic/cordic.v:296$628: $auto$alumacc.cc:474:replace_alu$3585
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:290$617: $auto$alumacc.cc:474:replace_alu$3588
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:293$619: $auto$alumacc.cc:474:replace_alu$3591
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:289$616: $auto$alumacc.cc:474:replace_alu$3594
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$add$../cordic/cordic.v:288$615: $auto$alumacc.cc:474:replace_alu$3597
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:292$618: $auto$alumacc.cc:474:replace_alu$3600
  creating $alu cell for $techmap\CORDIC.cordicCORE.U3.$sub$../cordic/cordic.v:296$620: $auto$alumacc.cc:474:replace_alu$3603
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:288$607: $auto$alumacc.cc:474:replace_alu$3606
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:290$609: $auto$alumacc.cc:474:replace_alu$3609
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$add$../cordic/cordic.v:293$611: $auto$alumacc.cc:474:replace_alu$3612
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:289$608: $auto$alumacc.cc:474:replace_alu$3615
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:292$610: $auto$alumacc.cc:474:replace_alu$3618
  creating $alu cell for $techmap\CORDIC.cordicCORE.U4.$sub$../cordic/cordic.v:296$612: $auto$alumacc.cc:474:replace_alu$3621
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:290$601: $auto$alumacc.cc:474:replace_alu$3624
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:293$603: $auto$alumacc.cc:474:replace_alu$3627
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:289$600: $auto$alumacc.cc:474:replace_alu$3630
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$add$../cordic/cordic.v:288$599: $auto$alumacc.cc:474:replace_alu$3633
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:292$602: $auto$alumacc.cc:474:replace_alu$3636
  creating $alu cell for $techmap\CORDIC.cordicCORE.U5.$sub$../cordic/cordic.v:296$604: $auto$alumacc.cc:474:replace_alu$3639
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:290$593: $auto$alumacc.cc:474:replace_alu$3642
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:293$595: $auto$alumacc.cc:474:replace_alu$3645
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:289$592: $auto$alumacc.cc:474:replace_alu$3648
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$add$../cordic/cordic.v:288$591: $auto$alumacc.cc:474:replace_alu$3651
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:292$594: $auto$alumacc.cc:474:replace_alu$3654
  creating $alu cell for $techmap\CORDIC.cordicCORE.U6.$sub$../cordic/cordic.v:296$596: $auto$alumacc.cc:474:replace_alu$3657
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:290$585: $auto$alumacc.cc:474:replace_alu$3660
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$add$../cordic/cordic.v:288$583: $auto$alumacc.cc:474:replace_alu$3663
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:292$586: $auto$alumacc.cc:474:replace_alu$3666
  creating $alu cell for $techmap\CORDIC.cordicCORE.U7.$sub$../cordic/cordic.v:296$588: $auto$alumacc.cc:474:replace_alu$3669
  creating $alu cell for $techmap\DAC1.$add$../sigma_delta.v:21$521: $auto$alumacc.cc:474:replace_alu$3672
  creating $alu cell for $techmap\DAC2.$add$../sigma_delta.v:21$521: $auto$alumacc.cc:474:replace_alu$3675
  creating $alu cell for $techmap\DAC3.$add$../sigma_delta.v:21$521: $auto$alumacc.cc:474:replace_alu$3678
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:70$470: $auto$alumacc.cc:474:replace_alu$3681
  creating $alu cell for $techmap\F2SRAM.$add$../Flash_to_SRAM.v:72$471: $auto$alumacc.cc:474:replace_alu$3684
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:162$493: $auto$alumacc.cc:474:replace_alu$3687
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$add$../spi_flash_reader.v:170$497: $auto$alumacc.cc:474:replace_alu$3690
  creating $alu cell for $techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502: $auto$alumacc.cc:474:replace_alu$3693
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:41$567: $auto$alumacc.cc:474:replace_alu$3696
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:44$569: $auto$alumacc.cc:474:replace_alu$3699
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:47$572: $auto$alumacc.cc:474:replace_alu$3702
  creating $alu cell for $techmap\Filter1.$add$../filter/CIC.v:48$574: $auto$alumacc.cc:474:replace_alu$3705
  creating $alu cell for $techmap\Filter1.$sub$../filter/CIC.v:37$563: $auto$alumacc.cc:474:replace_alu$3708
  creating $alu cell for $techmap\Filter1.$sub$../filter/CIC.v:38$564: $auto$alumacc.cc:474:replace_alu$3711
  creating $alu cell for $techmap\Filter2.$add$../filter/CIC.v:41$567: $auto$alumacc.cc:474:replace_alu$3714
  creating $alu cell for $techmap\Filter2.$add$../filter/CIC.v:44$569: $auto$alumacc.cc:474:replace_alu$3717
  creating $alu cell for $techmap\Filter2.$add$../filter/CIC.v:48$574: $auto$alumacc.cc:474:replace_alu$3720
  creating $alu cell for $techmap\Filter2.$sub$../filter/CIC.v:37$563: $auto$alumacc.cc:474:replace_alu$3723
  creating $alu cell for $techmap\Filter2.$sub$../filter/CIC.v:38$564: $auto$alumacc.cc:474:replace_alu$3726
  creating $alu cell for $techmap\OSC.$add$../oscillator.v:35$30: $auto$alumacc.cc:474:replace_alu$3729
  creating $alu cell for $techmap\OSC.$add$../oscillator.v:36$31: $auto$alumacc.cc:474:replace_alu$3732
  creating $alu cell for $techmap\PLL.$add$../pll.v:32$537: $auto$alumacc.cc:474:replace_alu$3735
  creating $alu cell for $techmap\PLL.$add$../pll.v:51$546: $auto$alumacc.cc:474:replace_alu$3738
  creating $alu cell for $techmap\PLL.$sub$../pll.v:44$539: $auto$alumacc.cc:474:replace_alu$3741
  creating $alu cell for $techmap\PLL.$sub$../pll.v:61$549: $auto$alumacc.cc:474:replace_alu$3744
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$225: $auto$alumacc.cc:474:replace_alu$3747
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:102$142: $auto$alumacc.cc:474:replace_alu$3750
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:112$146: $auto$alumacc.cc:474:replace_alu$3753
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:131$154: $auto$alumacc.cc:474:replace_alu$3756
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:138$160: $auto$alumacc.cc:474:replace_alu$3759
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:205$162: $auto$alumacc.cc:474:replace_alu$3762
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:245$169: $auto$alumacc.cc:474:replace_alu$3765
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:357$185: $auto$alumacc.cc:474:replace_alu$3768
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:416$196: $auto$alumacc.cc:474:replace_alu$3771
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:82$134: $auto$alumacc.cc:474:replace_alu$3774
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:92$138: $auto$alumacc.cc:474:replace_alu$3777
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:123$150: $auto$alumacc.cc:474:replace_alu$3780
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:206$163: $auto$alumacc.cc:474:replace_alu$3783
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:246$170: $auto$alumacc.cc:474:replace_alu$3786
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:358$186: $auto$alumacc.cc:474:replace_alu$3789
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:415$195: $auto$alumacc.cc:474:replace_alu$3792
  creating $alu cell for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$424: $auto$alumacc.cc:474:replace_alu$3795
  creating $alu cell for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$647: $auto$alumacc.cc:474:replace_alu$3798
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:109$247: $auto$alumacc.cc:474:replace_alu$3801
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$226: $auto$alumacc.cc:474:replace_alu$3804
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:100$246: $auto$alumacc.cc:474:replace_alu$3807
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:111$250: $auto$alumacc.cc:474:replace_alu$3810
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$221: $auto$alumacc.cc:474:replace_alu$3813
  created 106 $alu and 1 $macc cells.

22.19. Executing OPT pass (performing simple optimizations).

22.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~143 debug messages>

22.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3459: { $auto$alumacc.cc:490:replace_alu$3455 [0] $auto$alumacc.cc:490:replace_alu$3455 [1] $auto$alumacc.cc:490:replace_alu$3455 [2] $auto$alumacc.cc:490:replace_alu$3455 [3] $auto$alumacc.cc:490:replace_alu$3455 [4] $auto$alumacc.cc:490:replace_alu$3455 [5] $auto$alumacc.cc:490:replace_alu$3455 [6] $auto$alumacc.cc:490:replace_alu$3455 [7] $auto$alumacc.cc:490:replace_alu$3455 [8] $auto$alumacc.cc:490:replace_alu$3455 [9] $auto$alumacc.cc:490:replace_alu$3455 [10] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$3468: { $auto$alumacc.cc:490:replace_alu$3464 [0] $auto$alumacc.cc:490:replace_alu$3464 [1] $auto$alumacc.cc:490:replace_alu$3464 [2] $auto$alumacc.cc:490:replace_alu$3464 [3] $auto$alumacc.cc:490:replace_alu$3464 [4] $auto$alumacc.cc:490:replace_alu$3464 [5] $auto$alumacc.cc:490:replace_alu$3464 [6] $auto$alumacc.cc:490:replace_alu$3464 [7] $auto$alumacc.cc:490:replace_alu$3464 [8] $auto$alumacc.cc:490:replace_alu$3464 [9] $auto$alumacc.cc:490:replace_alu$3464 [10] }
  Optimizing cells in module \top.
Performed a total of 2 changes.

22.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

22.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 11 unused wires.
<suppressed ~2 debug messages>

22.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.19.9. Rerunning OPT passes. (Maybe there is more to do..)

22.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~143 debug messages>

22.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

22.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.19.16. Finished OPT passes. (There is nothing left to do.)

22.20. Executing FSM pass (extract and optimize FSM).

22.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.CORDIC.cordicCORE.U0.z_1 as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.CORDIC.quadmem[0] as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.SPI_READER.fsm_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.F2SRAM.spi_addr as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.OSC.phaseword as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.BP as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.SF_D1 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.display_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.main_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.LCD.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.AngelaMerkel as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.diplay_number.pos as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking top.UI_inst.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

22.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

22.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

22.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

22.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

22.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

22.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

22.21. Executing OPT pass (performing simple optimizations).

22.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

22.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.21.5. Finished fast OPT passes.

22.22. Executing MEMORY pass.

22.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

22.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

22.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).

22.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

22.25. Executing TECHMAP pass (map to technology primitives).

22.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

22.25.2. Continuing TECHMAP pass.
No more expansions possible.

22.26. Executing ICE40_BRAMINIT pass.

22.27. Executing OPT pass (performing simple optimizations).

22.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~132 debug messages>

22.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

22.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 112 unused wires.
<suppressed ~6 debug messages>

22.27.5. Finished fast OPT passes.

22.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

22.29. Executing OPT pass (performing simple optimizations).

22.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

22.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U0.$procmux$777:
      Old ports: A=17'11101001100000000, B=17'00010110100000000, Y=$techmap\CORDIC.cordicCORE.U0.$procmux$777_Y
      New ports: A=2'01, B=2'10, Y=$techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [10:9]
      New connections: { $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [16:11] $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [8:0] } = { $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [9] $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [10:9] $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [10] 9'100000000 }
    Consolidated identical input bits for $pmux cell $techmap\OSC.$procmux$3013:
      Old ports: A=24'000000001110100100000100, B=168'000000011101001000001000000000111010010000010001000010010001101000101011000100100011010001010110001001000110100010101100010110110000010110110000101101100000101101100000, Y=$auto$wreduce.cc:455:run$3342 [23:0]
      New ports: A=22'0000000111010100000100, B=154'0000001110101000001000000001110100000001000100010010001110001010110010010001100001010110000010001101001010110001110110000001101100001010110000011101100000, Y={ $auto$wreduce.cc:455:run$3342 [23:22] $auto$wreduce.cc:455:run$3342 [20:11] $auto$wreduce.cc:455:run$3342 [9:0] }
      New connections: { $auto$wreduce.cc:455:run$3342 [21] $auto$wreduce.cc:455:run$3342 [10] } = { $auto$wreduce.cc:455:run$3342 [18] $auto$wreduce.cc:455:run$3342 [4] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2755:
      Old ports: A=5'00000, B=5'10101, Y=$auto$wreduce.cc:455:run$3352 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3352 [0]
      New connections: $auto$wreduce.cc:455:run$3352 [4:1] = { $auto$wreduce.cc:455:run$3352 [0] 1'0 $auto$wreduce.cc:455:run$3352 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2758:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:455:run$3353 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3353 [0]
      New connections: $auto$wreduce.cc:455:run$3353 [1] = $auto$wreduce.cc:455:run$3353 [0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2760:
      Old ports: A={ 6'001100 $auto$wreduce.cc:455:run$3353 [1:0] }, B=8'00110110, Y=$auto$wreduce.cc:455:run$3354
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$3353 [1:0] }, B=3'110, Y=$auto$wreduce.cc:455:run$3354 [2:0]
      New connections: $auto$wreduce.cc:455:run$3354 [7:3] = 5'00110
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2770:
      Old ports: A={ 7'0011000 $auto$wreduce.cc:455:run$3356 [0] }, B=8'00110011, Y=$techmap\UI_inst.$procmux$2770_Y
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$3356 [0] }, B=2'11, Y=$techmap\UI_inst.$procmux$2770_Y [1:0]
      New connections: $techmap\UI_inst.$procmux$2770_Y [7:2] = 6'001100
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2794:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:455:run$3357 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3357 [0]
      New connections: $auto$wreduce.cc:455:run$3357 [2:1] = { $auto$wreduce.cc:455:run$3357 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2797:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:455:run$3358 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$3358 [4]
      New connections: $auto$wreduce.cc:455:run$3358 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2799:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$3358 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2799_Y
      New ports: A=$auto$wreduce.cc:455:run$3358 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2799_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2799_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2806:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:455:run$3359 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$3359 [4]
      New connections: $auto$wreduce.cc:455:run$3359 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2808:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$3359 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2808_Y
      New ports: A=$auto$wreduce.cc:455:run$3359 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2808_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2808_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2815:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:455:run$3360 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3360 [0]
      New connections: $auto$wreduce.cc:455:run$3360 [4:1] = { $auto$wreduce.cc:455:run$3360 [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2840:
      Old ports: A=5'01110, B=5'11000, Y=$auto$wreduce.cc:455:run$3362 [4:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$3362 [4] $auto$wreduce.cc:455:run$3362 [1] }
      New connections: { $auto$wreduce.cc:455:run$3362 [3:2] $auto$wreduce.cc:455:run$3362 [0] } = { 1'1 $auto$wreduce.cc:455:run$3362 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2843:
      Old ports: A=4'1001, B=4'0101, Y=$auto$wreduce.cc:455:run$3363 [3:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:455:run$3363 [3:2]
      New connections: $auto$wreduce.cc:455:run$3363 [1:0] = 2'01
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2862:
      Old ports: A=5'00000, B=5'10110, Y=$auto$wreduce.cc:455:run$3364 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3364 [1]
      New connections: { $auto$wreduce.cc:455:run$3364 [4:2] $auto$wreduce.cc:455:run$3364 [0] } = { $auto$wreduce.cc:455:run$3364 [1] 1'0 $auto$wreduce.cc:455:run$3364 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2864:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$3364 [4:0] }, B=8'00110100, Y=$techmap\UI_inst.$procmux$2864_Y
      New ports: A=$auto$wreduce.cc:455:run$3364 [4:0], B=5'10100, Y=$techmap\UI_inst.$procmux$2864_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2864_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1320:
      Old ports: A=17'00000000000000000, B=17'10100000001010000, Y=$auto$wreduce.cc:455:run$3367 [16:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3367 [4]
      New connections: { $auto$wreduce.cc:455:run$3367 [16:5] $auto$wreduce.cc:455:run$3367 [3:0] } = { $auto$wreduce.cc:455:run$3367 [4] 1'0 $auto$wreduce.cc:455:run$3367 [4] 7'0000000 $auto$wreduce.cc:455:run$3367 [4] 5'00000 }
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$1322:
      Old ports: A=20'00000000000000000000, B={ 22'1011011100011011000000 $auto$wreduce.cc:455:run$3370 [17:0] 7'0000000 $auto$wreduce.cc:455:run$3369 [12:0] 16'0000000000000000 $techmap\UI_inst.LCD.$procmux$1327_Y [3:0] 9'000000000 $auto$wreduce.cc:455:run$3368 [10:0] 3'000 $auto$wreduce.cc:455:run$3367 [16:0] }, Y=$techmap\UI_inst.LCD.$0\main_delay_value[19:0]
      New ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$3370 [17:0] 6'000000 $auto$wreduce.cc:455:run$3369 [12:0] 15'000000000000000 $techmap\UI_inst.LCD.$procmux$1327_Y [3:0] 8'00000000 $auto$wreduce.cc:455:run$3368 [10:0] 2'00 $auto$wreduce.cc:455:run$3367 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New connections: $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [18] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1324:
      Old ports: A=11'00000000000, B=11'11111010000, Y=$auto$wreduce.cc:455:run$3368 [10:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3368 [4]
      New connections: { $auto$wreduce.cc:455:run$3368 [10:5] $auto$wreduce.cc:455:run$3368 [3:0] } = { $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1327:
      Old ports: A=4'0000, B=4'1011, Y=$techmap\UI_inst.LCD.$procmux$1327_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.LCD.$procmux$1327_Y [0]
      New connections: $techmap\UI_inst.LCD.$procmux$1327_Y [3:1] = { $techmap\UI_inst.LCD.$procmux$1327_Y [0] 1'0 $techmap\UI_inst.LCD.$procmux$1327_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1336:
      Old ports: A=13'0000000000000, B=13'1001110001000, Y=$auto$wreduce.cc:455:run$3369 [12:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3369 [3]
      New connections: { $auto$wreduce.cc:455:run$3369 [12:4] $auto$wreduce.cc:455:run$3369 [2:0] } = { $auto$wreduce.cc:455:run$3369 [3] 2'00 $auto$wreduce.cc:455:run$3369 [3] $auto$wreduce.cc:455:run$3369 [3] $auto$wreduce.cc:455:run$3369 [3] 6'000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1342:
      Old ports: A=18'000000000000000000, B=18'110010000011001000, Y=$auto$wreduce.cc:455:run$3370 [17:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3370 [3]
      New connections: { $auto$wreduce.cc:455:run$3370 [17:4] $auto$wreduce.cc:455:run$3370 [2:0] } = { $auto$wreduce.cc:455:run$3370 [3] $auto$wreduce.cc:455:run$3370 [3] 2'00 $auto$wreduce.cc:455:run$3370 [3] 5'00000 $auto$wreduce.cc:455:run$3370 [3] $auto$wreduce.cc:455:run$3370 [3] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$1387:
      Old ports: A=4'0010, B=4'1000, Y=$auto$wreduce.cc:455:run$3371 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$3371 [3] $auto$wreduce.cc:455:run$3371 [1] }
      New connections: { $auto$wreduce.cc:455:run$3371 [2] $auto$wreduce.cc:455:run$3371 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$397:
      Old ports: A={ 3'000 \UI_inst.LCD.addr [3:0] }, B={ 3'100 \UI_inst.LCD.addr [3:0] }, Y=\UI_inst.LCD.ramaddr
      New ports: A=1'0, B=1'1, Y=\UI_inst.LCD.ramaddr [6]
      New connections: \UI_inst.LCD.ramaddr [5:0] = { 2'00 \UI_inst.LCD.addr [3:0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2432:
      Old ports: A=8'00100000, B=8'11011111, Y=$techmap\UI_inst.diplay_number.$procmux$2432_Y
      New ports: A=2'10, B=2'01, Y={ $techmap\UI_inst.diplay_number.$procmux$2432_Y [5] $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] }
      New connections: { $techmap\UI_inst.diplay_number.$procmux$2432_Y [7:6] $techmap\UI_inst.diplay_number.$procmux$2432_Y [4:1] } = { $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] $techmap\UI_inst.diplay_number.$procmux$2432_Y [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2487:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:455:run$3375 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3375 [0]
      New connections: $auto$wreduce.cc:455:run$3375 [3:1] = { $auto$wreduce.cc:455:run$3375 [0] $auto$wreduce.cc:455:run$3375 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2490:
      Old ports: A={ 4'0010 $auto$wreduce.cc:455:run$3375 [3:0] }, B=8'00100000, Y=$auto$wreduce.cc:455:run$3376
      New ports: A=$auto$wreduce.cc:455:run$3375 [3:0], B=4'0000, Y=$auto$wreduce.cc:455:run$3376 [3:0]
      New connections: $auto$wreduce.cc:455:run$3376 [7:4] = 4'0010
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2494:
      Old ports: A=8'01011001, B=8'11110010, Y=$auto$wreduce.cc:455:run$3377
      New ports: A=2'01, B=2'10, Y=$auto$wreduce.cc:455:run$3377 [1:0]
      New connections: $auto$wreduce.cc:455:run$3377 [7:2] = { $auto$wreduce.cc:455:run$3377 [1] 1'1 $auto$wreduce.cc:455:run$3377 [1] 1'1 $auto$wreduce.cc:455:run$3377 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2552:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:455:run$3378 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$3378 [0]
      New connections: $auto$wreduce.cc:455:run$3378 [3:1] = { $auto$wreduce.cc:455:run$3378 [0] $auto$wreduce.cc:455:run$3378 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2555:
      Old ports: A={ 4'0010 $auto$wreduce.cc:455:run$3378 [3:0] }, B=8'00100000, Y=$auto$wreduce.cc:455:run$3379
      New ports: A=$auto$wreduce.cc:455:run$3378 [3:0], B=4'0000, Y=$auto$wreduce.cc:455:run$3379 [3:0]
      New connections: $auto$wreduce.cc:455:run$3379 [7:4] = 4'0010
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2559:
      Old ports: A=4'1000, B=4'0010, Y=$auto$wreduce.cc:455:run$3380 [3:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:455:run$3380 [3] $auto$wreduce.cc:455:run$3380 [1] }
      New connections: { $auto$wreduce.cc:455:run$3380 [2] $auto$wreduce.cc:455:run$3380 [0] } = 2'00
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\CORDIC.cordicCORE.U0.$procmux$780:
      Old ports: A=$techmap\CORDIC.cordicCORE.U0.$procmux$777_Y, B=17'00000000000000000, Y=$techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0]
      New ports: A={ $techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [10:9] 1'1 }, B=3'000, Y=$techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10:8]
      New connections: { $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [16:11] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [7:0] } = { $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10:9] $techmap\CORDIC.cordicCORE.U0.$0\z_1[16:0] [10] 8'00000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2762:
      Old ports: A=$auto$wreduce.cc:455:run$3354, B=8'00111001, Y=$auto$wreduce.cc:455:run$3355
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$3354 [2:0] }, B=4'1001, Y=$auto$wreduce.cc:455:run$3355 [3:0]
      New connections: $auto$wreduce.cc:455:run$3355 [7:4] = 4'0011
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2799:
      Old ports: A=$auto$wreduce.cc:455:run$3358 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2799_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3358 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2799_Y [4] $techmap\UI_inst.$procmux$2799_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2799_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2801:
      Old ports: A=$techmap\UI_inst.$procmux$2799_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2801_Y
      New ports: A=$techmap\UI_inst.$procmux$2799_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2801_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2801_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2808:
      Old ports: A=$auto$wreduce.cc:455:run$3359 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2808_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3359 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2808_Y [4] $techmap\UI_inst.$procmux$2808_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2808_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2810:
      Old ports: A=$techmap\UI_inst.$procmux$2808_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2810_Y
      New ports: A=$techmap\UI_inst.$procmux$2808_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2810_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2810_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2864:
      Old ports: A=$auto$wreduce.cc:455:run$3364 [4:0], B=5'10100, Y=$techmap\UI_inst.$procmux$2864_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$3364 [1] $auto$wreduce.cc:455:run$3364 [1] }, B=2'10, Y=$techmap\UI_inst.$procmux$2864_Y [2:1]
      New connections: { $techmap\UI_inst.$procmux$2864_Y [4:3] $techmap\UI_inst.$procmux$2864_Y [0] } = { $techmap\UI_inst.$procmux$2864_Y [2] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2866:
      Old ports: A=$techmap\UI_inst.$procmux$2864_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2866_Y
      New ports: A=$techmap\UI_inst.$procmux$2864_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2866_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2866_Y [7:5] = 3'001
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$1322:
      Old ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$3370 [17:0] 6'000000 $auto$wreduce.cc:455:run$3369 [12:0] 15'000000000000000 $techmap\UI_inst.LCD.$procmux$1327_Y [3:0] 8'00000000 $auto$wreduce.cc:455:run$3368 [10:0] 2'00 $auto$wreduce.cc:455:run$3367 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New ports: A=13'0000000000000, B={ 13'1111001101100 $auto$wreduce.cc:455:run$3370 [3] 1'0 $auto$wreduce.cc:455:run$3370 [3] 4'0000 $auto$wreduce.cc:455:run$3370 [3] $auto$wreduce.cc:455:run$3370 [3] 2'00 $auto$wreduce.cc:455:run$3370 [3] 4'0000 $auto$wreduce.cc:455:run$3369 [3] 1'0 $auto$wreduce.cc:455:run$3369 [3] $auto$wreduce.cc:455:run$3369 [3] $auto$wreduce.cc:455:run$3369 [3] 3'000 $auto$wreduce.cc:455:run$3369 [3] 12'000000000000 $techmap\UI_inst.LCD.$procmux$1327_Y [0] $techmap\UI_inst.LCD.$procmux$1327_Y [0] 4'0000 $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] $auto$wreduce.cc:455:run$3368 [4] 1'0 $auto$wreduce.cc:455:run$3368 [4] 2'00 $auto$wreduce.cc:455:run$3367 [4] $auto$wreduce.cc:455:run$3367 [4] 6'000000 $auto$wreduce.cc:455:run$3367 [4] 1'0 $auto$wreduce.cc:455:run$3367 [4] 2'00 }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [16] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [14:12] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [10:3] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
      New connections: { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [15] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [11] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [2:1] } = { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [5] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [13] 3'000 $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2490:
      Old ports: A=$auto$wreduce.cc:455:run$3375 [3:0], B=4'0000, Y=$auto$wreduce.cc:455:run$3376 [3:0]
      New ports: A=$auto$wreduce.cc:455:run$3375 [0], B=1'0, Y=$auto$wreduce.cc:455:run$3376 [0]
      New connections: $auto$wreduce.cc:455:run$3376 [3:1] = { $auto$wreduce.cc:455:run$3376 [0] $auto$wreduce.cc:455:run$3376 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2555:
      Old ports: A=$auto$wreduce.cc:455:run$3378 [3:0], B=4'0000, Y=$auto$wreduce.cc:455:run$3379 [3:0]
      New ports: A=$auto$wreduce.cc:455:run$3378 [0], B=1'0, Y=$auto$wreduce.cc:455:run$3379 [0]
      New connections: $auto$wreduce.cc:455:run$3379 [3:1] = { $auto$wreduce.cc:455:run$3379 [0] $auto$wreduce.cc:455:run$3379 [0] 1'0 }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2764:
      Old ports: A=$auto$wreduce.cc:455:run$3355, B=8'00110100, Y=$techmap\UI_inst.$procmux$2764_Y
      New ports: A=$auto$wreduce.cc:455:run$3355 [3:0], B=4'0100, Y=$techmap\UI_inst.$procmux$2764_Y [3:0]
      New connections: $techmap\UI_inst.$procmux$2764_Y [7:4] = 4'0011
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2801:
      Old ports: A=$techmap\UI_inst.$procmux$2799_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2801_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2799_Y [4] 1'0 $techmap\UI_inst.$procmux$2799_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2801_Y [4] $techmap\UI_inst.$procmux$2801_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2801_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2803:
      Old ports: A=$techmap\UI_inst.$procmux$2801_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2803_Y
      New ports: A=$techmap\UI_inst.$procmux$2801_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2803_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2803_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2810:
      Old ports: A=$techmap\UI_inst.$procmux$2808_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2810_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2808_Y [4] 1'0 $techmap\UI_inst.$procmux$2808_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2810_Y [4] $techmap\UI_inst.$procmux$2810_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2810_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2812:
      Old ports: A=$techmap\UI_inst.$procmux$2810_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2812_Y
      New ports: A=$techmap\UI_inst.$procmux$2810_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2812_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2812_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2866:
      Old ports: A=$techmap\UI_inst.$procmux$2864_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2866_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2864_Y [2] $techmap\UI_inst.$procmux$2864_Y [2:1] }, B=3'101, Y={ $techmap\UI_inst.$procmux$2866_Y [4] $techmap\UI_inst.$procmux$2866_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2866_Y [3] $techmap\UI_inst.$procmux$2866_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2868:
      Old ports: A=$techmap\UI_inst.$procmux$2866_Y, B=8'00100000, Y=$techmap\UI_inst.$procmux$2868_Y
      New ports: A=$techmap\UI_inst.$procmux$2866_Y [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2868_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2868_Y [7:5] = 3'001
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2753:
      Old ports: A=8'00100000, B={ 94'0110100101101110011101000101001001100101011001100100000101101101011100000110110000111010001100 $techmap\UI_inst.$procmux$2770_Y [1:0] 8'00101110 $techmap\UI_inst.$procmux$2764_Y 3'001 $auto$wreduce.cc:455:run$3352 [0] 1'0 $auto$wreduce.cc:455:run$3352 [0] 1'0 $auto$wreduce.cc:455:run$3352 [0] 8'01010110 }, Y=$techmap\UI_inst.$procmux$2753_Y
      New ports: A=7'0100000, B={ 82'1101001110111011101001010010110010111001101000001110110111100001101100011101001100 $techmap\UI_inst.$procmux$2770_Y [1:0] 10'0101110011 $techmap\UI_inst.$procmux$2764_Y [3:0] 2'01 $auto$wreduce.cc:455:run$3352 [0] 1'0 $auto$wreduce.cc:455:run$3352 [0] 1'0 $auto$wreduce.cc:455:run$3352 [0] 7'1010110 }, Y=$techmap\UI_inst.$procmux$2753_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2753_Y [7] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2789:
      Old ports: A=8'00100000, B={ 91'0110100101101110011101000101001001100110001011100100011001110010011001010111000100111010001 $auto$wreduce.cc:455:run$3360 [0] 3'000 $auto$wreduce.cc:455:run$3360 [0] $techmap\UI_inst.$procmux$2812_Y $techmap\UI_inst.$procmux$2803_Y 5'00110 $auto$wreduce.cc:455:run$3357 [0] 1'0 $auto$wreduce.cc:455:run$3357 [0] 24'001100000100100001111010 }, Y=$techmap\UI_inst.$procmux$2789_Y
      New ports: A=7'0100000, B={ 79'1101001110111011101001010010110011001011101000110111001011001011110001011101001 $auto$wreduce.cc:455:run$3360 [0] 3'000 $auto$wreduce.cc:455:run$3360 [0] 2'01 $techmap\UI_inst.$procmux$2812_Y [4:0] 2'01 $techmap\UI_inst.$procmux$2803_Y [4:0] 4'0110 $auto$wreduce.cc:455:run$3357 [0] 1'0 $auto$wreduce.cc:455:run$3357 [0] 21'011000010010001111010 }, Y=$techmap\UI_inst.$procmux$2789_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2789_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2803:
      Old ports: A=$techmap\UI_inst.$procmux$2801_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2803_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2801_Y [4] 1'0 $techmap\UI_inst.$procmux$2801_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2803_Y [4] $techmap\UI_inst.$procmux$2803_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2803_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2812:
      Old ports: A=$techmap\UI_inst.$procmux$2810_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2812_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2810_Y [4] 1'0 $techmap\UI_inst.$procmux$2810_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2812_Y [4] $techmap\UI_inst.$procmux$2812_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2812_Y [3] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2858:
      Old ports: A=8'00100000, B={ 40'0100011101100001011010010110111000111010 $techmap\UI_inst.$procmux$2868_Y 24'001100000110010001000010 }, Y=$techmap\UI_inst.$procmux$2858_Y
      New ports: A=7'0100000, B={ 37'1000111110000111010011101110011101001 $techmap\UI_inst.$procmux$2868_Y [4:0] 21'011000011001001000010 }, Y=$techmap\UI_inst.$procmux$2858_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2858_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2868:
      Old ports: A=$techmap\UI_inst.$procmux$2866_Y [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2868_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2866_Y [4] $techmap\UI_inst.$procmux$2866_Y [2:1] }, B=3'000, Y={ $techmap\UI_inst.$procmux$2868_Y [4] $techmap\UI_inst.$procmux$2868_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2868_Y [3] $techmap\UI_inst.$procmux$2868_Y [0] } = 2'00
  Optimizing cells in module \top.
Performed a total of 55 changes.

22.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

22.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

22.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

22.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.29.9. Rerunning OPT passes. (Maybe there is more to do..)

22.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~132 debug messages>

22.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

22.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

22.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.29.16. Finished OPT passes. (There is nothing left to do.)

22.30. Executing TECHMAP pass (map to technology primitives).

22.30.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

22.30.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

22.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod$constmap:9e4fdcb0a66bbfb989de4b540b6b7d1348ed8ef7$paramod$e539e867bbd00acf95b24e0a8f666d25bedd41e6\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=10\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=4\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:d0521459f0fb86cc32cc9b1590b67862dc67dbbd$paramod$93c08705e9f7437b3330e07efac558fa4bdbfcf5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using template $paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$a68bb28b088c405e0a0932831a6b331eb440b1a1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:e4cd6846b17672de58ad7294d07780760fcee900$paramod$1b4c14a1e593d52cbb6fd5b4be9702208802265c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=25\Y_WIDTH=25 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=12\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=12\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=11\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=14\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=11\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=18 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=16 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=13\Y_WIDTH=17 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_pmux\WIDTH=22\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=18\B_WIDTH=1\Y_WIDTH=18 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=8\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=13\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=8\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=9\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=9\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=14\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=17\B_WIDTH=10\Y_WIDTH=17 for cells of type $alu.
Using extmapper maccmap for cells of type $macc.
  add \PLL.incr (17 bits, signed)
  add \PLL.eD [15:11] (5 bits, signed)
  sub \PLL.last_eP [15:9] (7 bits, signed)
  packed 1 (1) bits / 1 words into adder tree
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=21 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=13\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=20\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=15\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=17\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=49\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=25\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=32 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=5 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=17 for cells of type $fa.
No more expansions possible.
<suppressed ~5165 debug messages>

22.31. Executing ICE40_OPT pass (performing simple optimizations).

22.31.1. Running ICE40 specific optimizations.

22.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~5037 debug messages>

22.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5283 debug messages>
Removed a total of 1761 cells.

22.31.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$13513 ($_DFF_P_) from module top.
Removing $auto$simplemap.cc:496:simplemap_adff$10573 ($_DFF_PP0_) from module top.
Removing $auto$simplemap.cc:420:simplemap_dff$9781 ($_DFF_P_) from module top.
Replaced 3 DFF cells.

22.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2061 unused cells and 3550 unused wires.
<suppressed ~2062 debug messages>

22.31.6. Rerunning OPT passes. (Removed registers in this run.)

22.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3454.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3463.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3472.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3472.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3479.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3479.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3486.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3486.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3493.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3493.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3500.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3500.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3507.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3507.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3514.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3514.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3521.slice[0].carry: CO=$auto$alumacc.cc:474:replace_alu$3521.BB [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3528.slice[0].carry: CO=\cnt [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3531.slice[0].carry: CO=\ADC.count [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[4].carry: CO=$auto$alumacc.cc:474:replace_alu$3555.C [4]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[7].carry: CO=$auto$alumacc.cc:474:replace_alu$3555.C [7]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[1].carry: CO=$auto$alumacc.cc:474:replace_alu$3567.C [1]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$3567.C [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[3].carry: CO=$auto$alumacc.cc:474:replace_alu$3567.C [3]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[5].carry: CO=$auto$alumacc.cc:474:replace_alu$3567.C [5]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[6].carry: CO=$auto$alumacc.cc:474:replace_alu$3567.C [6]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[0].carry: CO=\CORDIC.cordicCORE.U1.z_1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[0].carry: CO=\CORDIC.cordicCORE.U1.z_1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3609.slice[0].carry: CO=\CORDIC.cordicCORE.U3.z_1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3621.slice[0].carry: CO=\CORDIC.cordicCORE.U3.z_1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3624.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3639.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3642.slice[0].carry: CO=\CORDIC.cordicCORE.U5.z_1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3657.slice[0].carry: CO=\CORDIC.cordicCORE.U5.z_1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3660.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3669.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3681.slice[0].carry: CO=\F2SRAM.addr [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3684.slice[0].carry: CO=\F2SRAM.poscount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3687.slice[0].carry: CO=\F2SRAM.SPI_READER.cnt_bit [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3696.slice[0].carry: CO=\Filter1.tickcount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3699.slice[0].carry: CO=\Filter1.inaddr [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3702.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3714.slice[0].carry: CO=\Filter2.tickcount [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3717.slice[0].carry: CO=\Filter2.inaddr [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3732.slice[0].carry: CO=\OSC.PHASENAKKUMULATOOOOOR [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3735.slice[0].carry: CO=\PLL.phase [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3741.slice[0].carry: CO=\PLL.phase [9]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3750.slice[0].carry: CO=\UI_inst.cnt2 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3753.slice[0].carry: CO=\UI_inst.cnt3 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3756.slice[0].carry: CO=\UI_inst.count [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3759.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3762.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3768.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3774.slice[0].carry: CO=\UI_inst.cnt0 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3777.slice[0].carry: CO=\UI_inst.cnt1 [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3780.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3783.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3789.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3795.slice[0].carry: CO=\UI_inst.LCD.pos [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3798.slice[0].carry: CO=\UI_inst.LCD.delay_counter.counter [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3801.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3810.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3813.slice[0].carry: CO=\UI_inst.diplay_number.pos [0]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3528.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3531.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[0].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[0].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3609.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3621.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3624.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3639.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3642.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3657.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3660.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3669.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3681.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3684.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3687.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3696.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3699.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3702.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3714.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3717.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3741.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3750.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3753.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3756.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3759.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3762.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3768.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3774.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3777.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3780.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3783.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3789.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3795.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3798.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3801.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3810.slice[1].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3813.slice[1].adder back to logic.

22.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~875 debug messages>

22.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~120 debug messages>
Removed a total of 40 cells.

22.31.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$13630 ($_DFF_P_) from module top.
Replaced 1 DFF cells.

22.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 185 unused wires.
<suppressed ~3 debug messages>

22.31.12. Rerunning OPT passes. (Removed registers in this run.)

22.31.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3454.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3463.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[8].carry: CO=\CORDIC.cordicCORE.U0.z_1 [8]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[3].carry: CO=$auto$alumacc.cc:474:replace_alu$3573.C [3]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[2].carry: CO=$auto$alumacc.cc:474:replace_alu$3585.C [2]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3624.slice[1].carry: CO=\CORDIC.cordicCORE.U4.z_1 [1]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3639.slice[1].carry: CO=\CORDIC.cordicCORE.U4.z_1 [1]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3660.slice[1].carry: CO=\CORDIC.cordicCORE.U6.z_1 [1]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3669.slice[1].carry: CO=\CORDIC.cordicCORE.U6.z_1 [1]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[9].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3567.slice[9].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[0].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[0].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3624.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3639.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3660.slice[2].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3669.slice[2].adder back to logic.

22.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~272 debug messages>

22.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~63 debug messages>
Removed a total of 21 cells.

22.31.16. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 71 unused wires.
<suppressed ~3 debug messages>

22.31.18. Rerunning OPT passes. (Removed registers in this run.)

22.31.19. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3454.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3463.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[9].carry: CO=\CORDIC.cordicCORE.U0.z_1 [15]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[4].carry: CO=\CORDIC.cordicCORE.U0.z_1 [8]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[2].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[2].carry: CO=1'1
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3555.slice[10].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3585.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[3].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[3].adder back to logic.

22.31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~111 debug messages>

22.31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~21 debug messages>
Removed a total of 7 cells.

22.31.22. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 28 unused wires.
<suppressed ~3 debug messages>

22.31.24. Rerunning OPT passes. (Removed registers in this run.)

22.31.25. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3454.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3463.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[3].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[3].carry: CO=1'1
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[4].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[4].adder back to logic.

22.31.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~86 debug messages>

22.31.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

22.31.28. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 24 unused wires.
<suppressed ~3 debug messages>

22.31.30. Rerunning OPT passes. (Removed registers in this run.)

22.31.31. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3454.slice[4].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3463.slice[4].carry: CO=1'1
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[4].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[4].carry: CO=1'1
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[5].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[5].adder back to logic.

22.31.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~85 debug messages>

22.31.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

22.31.34. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 23 unused wires.
<suppressed ~3 debug messages>

22.31.36. Rerunning OPT passes. (Removed registers in this run.)

22.31.37. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3454.slice[5].carry: CO=$auto$alumacc.cc:474:replace_alu$3454.BB [5]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3463.slice[5].carry: CO=$auto$alumacc.cc:474:replace_alu$3463.BB [5]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[5].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[5].carry: CO=\CORDIC.cordicCORE.U2.z_1 [5]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[5].carry: CO=\CORDIC.cordicCORE.U2.z_1 [5]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3588.slice[6].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3603.slice[6].adder back to logic.

22.31.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~84 debug messages>

22.31.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

22.31.40. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 21 unused wires.
<suppressed ~3 debug messages>

22.31.42. Rerunning OPT passes. (Removed registers in this run.)

22.31.43. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[6].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[8].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[7].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[9].adder back to logic.

22.31.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~58 debug messages>

22.31.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

22.31.46. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 15 unused wires.
<suppressed ~2 debug messages>

22.31.48. Rerunning OPT passes. (Removed registers in this run.)

22.31.49. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[7].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[9].carry: CO=\CORDIC.cordicCORE.U1.z_1 [9]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[8].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3573.slice[10].adder back to logic.

22.31.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~57 debug messages>

22.31.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

22.31.52. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 14 unused wires.
<suppressed ~2 debug messages>

22.31.54. Rerunning OPT passes. (Removed registers in this run.)

22.31.55. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[8].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[8].carry: CO=1'0
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[9].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[9].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[9].adder back to logic.

22.31.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~41 debug messages>

22.31.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

22.31.58. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 11 unused wires.
<suppressed ~1 debug messages>

22.31.60. Rerunning OPT passes. (Removed registers in this run.)

22.31.61. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[9].carry: CO=\CORDIC.cordicCORE.U7.z_1 [9]
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[9].carry: CO=1'0
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[9].carry: CO=\CORDIC.cordicCORE.U7.z_1 [9]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3534.slice[10].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[10].adder back to logic.
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3540.slice[10].adder back to logic.

22.31.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~39 debug messages>

22.31.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

22.31.64. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

22.31.66. Rerunning OPT passes. (Removed registers in this run.)

22.31.67. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[10].carry: CO=\CORDIC.cordicCORE.U7.z_1 [10]
Mapping SB_LUT4 cell top.$auto$alumacc.cc:474:replace_alu$3537.slice[11].adder back to logic.

22.31.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~13 debug messages>

22.31.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.31.70. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

22.31.72. Rerunning OPT passes. (Removed registers in this run.)

22.31.73. Running ICE40 specific optimizations.

22.31.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.31.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.31.76. Executing OPT_RMDFF pass (remove dff with constant values).

22.31.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.31.78. Finished OPT passes. (There is nothing left to do.)

22.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

22.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module top:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10154 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [0] -> \F2SRAM.SPI_READER.fsm_state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10155 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\fsm_state[1:0] [1] -> \F2SRAM.SPI_READER.fsm_state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10188 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit_last[0:0] -> \F2SRAM.SPI_READER.cnt_bit_last.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10189 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [0] -> \F2SRAM.SPI_READER.cnt_bit [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10190 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [1] -> \F2SRAM.SPI_READER.cnt_bit [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10191 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_bit[2:0] [2] -> \F2SRAM.SPI_READER.cnt_bit [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10192 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [0] -> \F2SRAM.SPI_READER.cnt_cmd [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10193 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_cmd[1:0] [1] -> \F2SRAM.SPI_READER.cnt_cmd [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10194 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [0] -> \F2SRAM.SPI_READER.cnt_len [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10195 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [1] -> \F2SRAM.SPI_READER.cnt_len [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10196 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [2] -> \F2SRAM.SPI_READER.cnt_len [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10197 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [3] -> \F2SRAM.SPI_READER.cnt_len [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10198 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [4] -> \F2SRAM.SPI_READER.cnt_len [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10199 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [5] -> \F2SRAM.SPI_READER.cnt_len [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10200 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [6] -> \F2SRAM.SPI_READER.cnt_len [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10201 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [7] -> \F2SRAM.SPI_READER.cnt_len [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10202 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [8] -> \F2SRAM.SPI_READER.cnt_len [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10203 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [9] -> \F2SRAM.SPI_READER.cnt_len [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10204 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [10] -> \F2SRAM.SPI_READER.cnt_len [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10205 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [11] -> \F2SRAM.SPI_READER.cnt_len [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10206 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [12] -> \F2SRAM.SPI_READER.cnt_len [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10207 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [13] -> \F2SRAM.SPI_READER.cnt_len [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10208 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [14] -> \F2SRAM.SPI_READER.cnt_len [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10209 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [15] -> \F2SRAM.SPI_READER.cnt_len [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10210 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [16] -> \F2SRAM.SPI_READER.cnt_len [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10211 to $_DFFE_PP_ for $techmap\F2SRAM.SPI_READER.$0\cnt_len[17:0] [17] -> \F2SRAM.SPI_READER.cnt_len [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10522 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [0] -> \UI_inst.LCD.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10523 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [1] -> \UI_inst.LCD.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10524 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [2] -> \UI_inst.LCD.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10525 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [3] -> \UI_inst.LCD.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10526 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [4] -> \UI_inst.LCD.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10527 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [5] -> \UI_inst.LCD.pos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10528 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [6] -> \UI_inst.LCD.pos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10529 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [7] -> \UI_inst.LCD.pos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10530 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [8] -> \UI_inst.LCD.pos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10531 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [9] -> \UI_inst.LCD.pos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10532 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [10] -> \UI_inst.LCD.pos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10533 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [11] -> \UI_inst.LCD.pos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10534 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [12] -> \UI_inst.LCD.pos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10535 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [13] -> \UI_inst.LCD.pos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10536 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [14] -> \UI_inst.LCD.pos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10537 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [15] -> \UI_inst.LCD.pos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10538 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [16] -> \UI_inst.LCD.pos [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10539 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [17] -> \UI_inst.LCD.pos [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10540 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [18] -> \UI_inst.LCD.pos [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10541 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [19] -> \UI_inst.LCD.pos [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10542 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [20] -> \UI_inst.LCD.pos [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10543 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [21] -> \UI_inst.LCD.pos [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10544 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [22] -> \UI_inst.LCD.pos [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10545 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [23] -> \UI_inst.LCD.pos [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10546 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [24] -> \UI_inst.LCD.pos [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10547 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [25] -> \UI_inst.LCD.pos [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10548 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [26] -> \UI_inst.LCD.pos [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10549 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [27] -> \UI_inst.LCD.pos [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10550 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [28] -> \UI_inst.LCD.pos [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10551 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [29] -> \UI_inst.LCD.pos [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10552 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [30] -> \UI_inst.LCD.pos [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10553 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1471.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10752_Y [31] -> \UI_inst.LCD.pos [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10575 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1360.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9501_Y -> \UI_inst.LCD.LCD_E1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10576 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1381.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [0] -> \UI_inst.LCD.SF_D1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10577 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1381.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [1] -> \UI_inst.LCD.SF_D1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10578 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1381.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [2] -> \UI_inst.LCD.SF_D1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10579 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1381.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [3] -> \UI_inst.LCD.SF_D1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10585 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [0] -> \UI_inst.LCD.tx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10586 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [1] -> \UI_inst.LCD.tx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10587 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [2] -> \UI_inst.LCD.tx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10588 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [3] -> \UI_inst.LCD.tx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10589 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [4] -> \UI_inst.LCD.tx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10590 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [5] -> \UI_inst.LCD.tx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10591 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [6] -> \UI_inst.LCD.tx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10592 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1453.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$10854_Y [7] -> \UI_inst.LCD.tx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10593 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1198.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11285_Y -> \UI_inst.LCD.tx_delay_load.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10594 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [0] -> \UI_inst.LCD.tx_delay_value [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10595 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [1] -> \UI_inst.LCD.tx_delay_value [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10596 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [2] -> \UI_inst.LCD.tx_delay_value [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10597 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [3] -> \UI_inst.LCD.tx_delay_value [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10598 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [4] -> \UI_inst.LCD.tx_delay_value [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10599 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [5] -> \UI_inst.LCD.tx_delay_value [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10600 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [6] -> \UI_inst.LCD.tx_delay_value [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10601 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [7] -> \UI_inst.LCD.tx_delay_value [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10602 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [8] -> \UI_inst.LCD.tx_delay_value [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10603 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [9] -> \UI_inst.LCD.tx_delay_value [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10604 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [10] -> \UI_inst.LCD.tx_delay_value [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10605 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [11] -> \UI_inst.LCD.tx_delay_value [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10606 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [12] -> \UI_inst.LCD.tx_delay_value [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10607 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [13] -> \UI_inst.LCD.tx_delay_value [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10608 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [14] -> \UI_inst.LCD.tx_delay_value [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10609 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [15] -> \UI_inst.LCD.tx_delay_value [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10610 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [16] -> \UI_inst.LCD.tx_delay_value [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10611 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [17] -> \UI_inst.LCD.tx_delay_value [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10612 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [18] -> \UI_inst.LCD.tx_delay_value [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10613 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1218.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11405_Y [19] -> \UI_inst.LCD.tx_delay_value [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10614 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1235.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9501_Y -> \UI_inst.LCD.LCD_E0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10615 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1245.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [0] -> \UI_inst.LCD.SF_D0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10616 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1245.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [1] -> \UI_inst.LCD.SF_D0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10617 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1245.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [2] -> \UI_inst.LCD.SF_D0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10618 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1245.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$8776_Y [3] -> \UI_inst.LCD.SF_D0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10619 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$1250.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9501_Y -> \UI_inst.LCD.tx_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11834 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [0] -> \UI_inst.diplay_number.secondlastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11835 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [1] -> \UI_inst.diplay_number.secondlastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11836 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [2] -> \UI_inst.diplay_number.secondlastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11837 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [3] -> \UI_inst.diplay_number.secondlastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11838 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [4] -> \UI_inst.diplay_number.secondlastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11839 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [5] -> \UI_inst.diplay_number.secondlastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11840 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [6] -> \UI_inst.diplay_number.secondlastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11841 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [7] -> \UI_inst.diplay_number.secondlastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11842 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [8] -> \UI_inst.diplay_number.secondlastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11843 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [9] -> \UI_inst.diplay_number.secondlastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11844 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [10] -> \UI_inst.diplay_number.secondlastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11845 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [11] -> \UI_inst.diplay_number.secondlastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11846 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [12] -> \UI_inst.diplay_number.secondlastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11847 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [13] -> \UI_inst.diplay_number.secondlastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11848 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [14] -> \UI_inst.diplay_number.secondlastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11849 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[15:0] [15] -> \UI_inst.diplay_number.secondlastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11850 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\holdoff[0:0] -> \UI_inst.diplay_number.holdoff.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11867 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\difference[16:0] [16] -> \UI_inst.diplay_number.difference [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11868 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [0] -> \UI_inst.diplay_number.dec [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11869 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [1] -> \UI_inst.diplay_number.dec [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11870 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [2] -> \UI_inst.diplay_number.dec [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11871 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [3] -> \UI_inst.diplay_number.dec [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11872 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [0] -> \UI_inst.diplay_number.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11873 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [1] -> \UI_inst.diplay_number.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11874 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [2] -> \UI_inst.diplay_number.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11875 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [3] -> \UI_inst.diplay_number.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11876 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [4] -> \UI_inst.diplay_number.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11877 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\leadz[0:0] -> \UI_inst.diplay_number.leadz.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11878 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\updating[0:0] -> \UI_inst.diplay_number.updating.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11880 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [0] -> \UI_inst.diplay_number.AngelaMerkel [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11881 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [1] -> \UI_inst.diplay_number.AngelaMerkel [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11882 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [2] -> \UI_inst.diplay_number.AngelaMerkel [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11883 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [3] -> \UI_inst.diplay_number.AngelaMerkel [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11884 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [4] -> \UI_inst.diplay_number.AngelaMerkel [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11885 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [5] -> \UI_inst.diplay_number.AngelaMerkel [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11886 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [6] -> \UI_inst.diplay_number.AngelaMerkel [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11887 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [7] -> \UI_inst.diplay_number.AngelaMerkel [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11888 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [8] -> \UI_inst.diplay_number.AngelaMerkel [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11889 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [9] -> \UI_inst.diplay_number.AngelaMerkel [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11890 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [10] -> \UI_inst.diplay_number.AngelaMerkel [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11891 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [11] -> \UI_inst.diplay_number.AngelaMerkel [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11892 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [12] -> \UI_inst.diplay_number.AngelaMerkel [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11893 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [13] -> \UI_inst.diplay_number.AngelaMerkel [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11894 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [14] -> \UI_inst.diplay_number.AngelaMerkel [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11895 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\AngelaMerkel[15:0] [15] -> \UI_inst.diplay_number.AngelaMerkel [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11896 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [0] -> \UI_inst.diplay_number.lastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11897 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [1] -> \UI_inst.diplay_number.lastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11898 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [2] -> \UI_inst.diplay_number.lastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11899 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [3] -> \UI_inst.diplay_number.lastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11900 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [4] -> \UI_inst.diplay_number.lastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11901 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [5] -> \UI_inst.diplay_number.lastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11902 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [6] -> \UI_inst.diplay_number.lastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11903 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [7] -> \UI_inst.diplay_number.lastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11904 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [8] -> \UI_inst.diplay_number.lastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11905 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [9] -> \UI_inst.diplay_number.lastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11906 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [10] -> \UI_inst.diplay_number.lastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11907 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [11] -> \UI_inst.diplay_number.lastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11908 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [12] -> \UI_inst.diplay_number.lastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11909 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [13] -> \UI_inst.diplay_number.lastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11910 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [14] -> \UI_inst.diplay_number.lastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11911 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[15:0] [15] -> \UI_inst.diplay_number.lastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11912 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [0] -> \UI_inst.diplay_number.rest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11913 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [1] -> \UI_inst.diplay_number.rest [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11914 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [2] -> \UI_inst.diplay_number.rest [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11915 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [3] -> \UI_inst.diplay_number.rest [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11916 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [4] -> \UI_inst.diplay_number.rest [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11917 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [5] -> \UI_inst.diplay_number.rest [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11918 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [6] -> \UI_inst.diplay_number.rest [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11919 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [7] -> \UI_inst.diplay_number.rest [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11920 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [8] -> \UI_inst.diplay_number.rest [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11921 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [9] -> \UI_inst.diplay_number.rest [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11922 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [10] -> \UI_inst.diplay_number.rest [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11923 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [11] -> \UI_inst.diplay_number.rest [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11924 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [12] -> \UI_inst.diplay_number.rest [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11925 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [13] -> \UI_inst.diplay_number.rest [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11926 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [14] -> \UI_inst.diplay_number.rest [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11927 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[15:0] [15] -> \UI_inst.diplay_number.rest [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11928 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [0] -> \UI_inst.diplay_number.acc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11929 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [1] -> \UI_inst.diplay_number.acc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11930 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [2] -> \UI_inst.diplay_number.acc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11931 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [3] -> \UI_inst.diplay_number.acc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11932 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [4] -> \UI_inst.diplay_number.acc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11933 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [5] -> \UI_inst.diplay_number.acc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11934 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [6] -> \UI_inst.diplay_number.acc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11935 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [7] -> \UI_inst.diplay_number.acc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11936 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [8] -> \UI_inst.diplay_number.acc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11937 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [9] -> \UI_inst.diplay_number.acc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11938 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [10] -> \UI_inst.diplay_number.acc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11939 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [11] -> \UI_inst.diplay_number.acc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11940 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [12] -> \UI_inst.diplay_number.acc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11941 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [13] -> \UI_inst.diplay_number.acc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11942 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [14] -> \UI_inst.diplay_number.acc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11943 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [15] -> \UI_inst.diplay_number.acc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11944 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[16:0] [16] -> \UI_inst.diplay_number.acc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11945 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [0] -> \UI_inst.diplay_number.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11946 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [1] -> \UI_inst.diplay_number.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11947 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [2] -> \UI_inst.diplay_number.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11948 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [3] -> \UI_inst.diplay_number.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11949 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [4] -> \UI_inst.diplay_number.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11950 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [5] -> \UI_inst.diplay_number.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11951 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [6] -> \UI_inst.diplay_number.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11952 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [7] -> \UI_inst.diplay_number.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$11953 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\we[0:0] -> \UI_inst.diplay_number.we.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$14676 to $_DFFE_PP_ for $techmap\UI_inst.LCD.delay_counter.$0\counter[19:0] [1] -> \UI_inst.LCD.delay_counter.counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4143 to $_DFFE_PP_ for $techmap\ADC.$0\count[7:0] [1] -> \ADC.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4150 to $_DFFE_PP_ for $techmap\ADC.$0\acq[0:0] -> \ADC.acq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4152 to $_DFFE_PP_ for $techmap\ADC.$0\CONVST[0:0] -> \ADC.CONVST.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4189 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [0] -> \ADC.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4190 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [1] -> \ADC.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4191 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [2] -> \ADC.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4192 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [3] -> \ADC.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4193 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [4] -> \ADC.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4194 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [5] -> \ADC.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4195 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [6] -> \ADC.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4196 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [7] -> \ADC.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4197 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [8] -> \ADC.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4198 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [9] -> \ADC.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4199 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [10] -> \ADC.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4200 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [11] -> \ADC.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4201 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [12] -> \ADC.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4202 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [13] -> \ADC.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4203 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [14] -> \ADC.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4204 to $_DFFE_PP_ for $techmap\ADC.$0\data[15:0] [15] -> \ADC.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4288 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4290 to $_DFFE_PP_ for $0\cnt[24:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4314 to $_DFFE_PP_ for $0\loadlookup[0:0] -> \loadlookup.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4321 to $_DFFE_PP_ for $techmap\F2SRAM.$0\poscount[16:0] [1] -> \F2SRAM.poscount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4341 to $_DFFE_PP_ for $techmap\F2SRAM.$0\busystop[0:0] -> \F2SRAM.busystop.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4343 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [0] -> \F2SRAM.spi_addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4344 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [1] -> \F2SRAM.spi_addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4345 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [2] -> \F2SRAM.spi_addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4346 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [3] -> \F2SRAM.spi_addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4347 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [4] -> \F2SRAM.spi_addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4348 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [5] -> \F2SRAM.spi_addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4349 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [6] -> \F2SRAM.spi_addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4350 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [7] -> \F2SRAM.spi_addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4351 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [8] -> \F2SRAM.spi_addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4352 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [9] -> \F2SRAM.spi_addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4353 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [10] -> \F2SRAM.spi_addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4354 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [11] -> \F2SRAM.spi_addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4355 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [12] -> \F2SRAM.spi_addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4356 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [13] -> \F2SRAM.spi_addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4357 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [14] -> \F2SRAM.spi_addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4358 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [15] -> \F2SRAM.spi_addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4359 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [16] -> \F2SRAM.spi_addr [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4360 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [17] -> \F2SRAM.spi_addr [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4361 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [18] -> \F2SRAM.spi_addr [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4362 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [19] -> \F2SRAM.spi_addr [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4363 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [20] -> \F2SRAM.spi_addr [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4364 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [21] -> \F2SRAM.spi_addr [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4365 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [22] -> \F2SRAM.spi_addr [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4366 to $_DFFE_PP_ for $techmap\F2SRAM.$0\spi_addr[23:0] [23] -> \F2SRAM.spi_addr [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4367 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [0] -> \F2SRAM.f_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4368 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [1] -> \F2SRAM.f_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4369 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [2] -> \F2SRAM.f_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4370 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [3] -> \F2SRAM.f_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4371 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [4] -> \F2SRAM.f_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4372 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [5] -> \F2SRAM.f_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4373 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [6] -> \F2SRAM.f_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4374 to $_DFFE_PP_ for $techmap\F2SRAM.$0\f_byte[7:0] [7] -> \F2SRAM.f_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4375 to $_DFFE_PP_ for $techmap\F2SRAM.$0\second[0:0] -> \F2SRAM.second.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4377 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [0] -> \F2SRAM.wdata [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4378 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [1] -> \F2SRAM.wdata [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4379 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [2] -> \F2SRAM.wdata [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4380 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [3] -> \F2SRAM.wdata [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4381 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [4] -> \F2SRAM.wdata [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4382 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [5] -> \F2SRAM.wdata [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4383 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [6] -> \F2SRAM.wdata [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4384 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [7] -> \F2SRAM.wdata [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4385 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [8] -> \F2SRAM.wdata [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4386 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [9] -> \F2SRAM.wdata [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4387 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [10] -> \F2SRAM.wdata [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4388 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [11] -> \F2SRAM.wdata [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4389 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [12] -> \F2SRAM.wdata [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4390 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [13] -> \F2SRAM.wdata [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4391 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [14] -> \F2SRAM.wdata [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4392 to $_DFFE_PP_ for $techmap\F2SRAM.$0\wdata[15:0] [15] -> \F2SRAM.wdata [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4394 to $_DFFE_PP_ for $techmap\F2SRAM.$0\addr[15:0] [1] -> \F2SRAM.addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4773 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [0] -> \DDS.addr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4774 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [1] -> \DDS.addr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4775 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [2] -> \DDS.addr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4776 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [3] -> \DDS.addr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4777 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [4] -> \DDS.addr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4778 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [5] -> \DDS.addr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4779 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [6] -> \DDS.addr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4780 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [7] -> \DDS.addr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4781 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [8] -> \DDS.addr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4782 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [9] -> \DDS.addr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4783 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [10] -> \DDS.addr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4784 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [11] -> \DDS.addr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4785 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [12] -> \DDS.addr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4786 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [13] -> \DDS.addr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4787 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [14] -> \DDS.addr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4788 to $_DFFE_PP_ for $techmap\DDS.$0\addr[15:0] [15] -> \DDS.addr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4789 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [0] -> \DDS.cos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4790 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [1] -> \DDS.cos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4791 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [2] -> \DDS.cos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4792 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [3] -> \DDS.cos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4793 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [4] -> \DDS.cos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4794 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [5] -> \DDS.cos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4795 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [6] -> \DDS.cos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4796 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [7] -> \DDS.cos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4797 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [8] -> \DDS.cos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4798 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [9] -> \DDS.cos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4799 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [10] -> \DDS.cos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4800 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [11] -> \DDS.cos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4801 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [12] -> \DDS.cos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4802 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [13] -> \DDS.cos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4803 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [14] -> \DDS.cos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4804 to $_DFFE_PP_ for $techmap\DDS.$0\cos[15:0] [15] -> \DDS.cos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4805 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [0] -> \DDS.sin [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4806 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [1] -> \DDS.sin [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4807 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [2] -> \DDS.sin [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4808 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [3] -> \DDS.sin [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4809 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [4] -> \DDS.sin [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4810 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [5] -> \DDS.sin [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4811 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [6] -> \DDS.sin [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4812 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [7] -> \DDS.sin [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4813 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [8] -> \DDS.sin [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4814 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [9] -> \DDS.sin [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4815 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [10] -> \DDS.sin [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4816 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [11] -> \DDS.sin [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4817 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [12] -> \DDS.sin [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4818 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [13] -> \DDS.sin [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4819 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [14] -> \DDS.sin [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4820 to $_DFFE_PP_ for $techmap\DDS.$0\sin[15:0] [15] -> \DDS.sin [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4996 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [0] -> \Filter1.inaddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4997 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [1] -> \Filter1.inaddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4998 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [2] -> \Filter1.inaddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$4999 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [3] -> \Filter1.inaddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5000 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [4] -> \Filter1.inaddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5001 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [5] -> \Filter1.inaddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5002 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [6] -> \Filter1.inaddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5003 to $_DFFE_PP_ for $techmap\Filter1.$0\inaddr[7:0] [7] -> \Filter1.inaddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5062 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [0] -> \Filter1.I0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5063 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [1] -> \Filter1.I0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5064 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [2] -> \Filter1.I0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5065 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [3] -> \Filter1.I0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5066 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [4] -> \Filter1.I0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5067 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [5] -> \Filter1.I0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5068 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [6] -> \Filter1.I0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5069 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [7] -> \Filter1.I0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5070 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [8] -> \Filter1.I0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5071 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [9] -> \Filter1.I0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5072 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [10] -> \Filter1.I0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5073 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [11] -> \Filter1.I0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5074 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [12] -> \Filter1.I0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5075 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [13] -> \Filter1.I0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5076 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [14] -> \Filter1.I0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5077 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [15] -> \Filter1.I0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5078 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [16] -> \Filter1.I0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5079 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [17] -> \Filter1.I0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5080 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [18] -> \Filter1.I0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5081 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [19] -> \Filter1.I0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5082 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [20] -> \Filter1.I0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5083 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [21] -> \Filter1.I0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5084 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [22] -> \Filter1.I0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5085 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [23] -> \Filter1.I0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5086 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [24] -> \Filter1.I0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5087 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [25] -> \Filter1.I0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5088 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [26] -> \Filter1.I0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5089 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [27] -> \Filter1.I0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5090 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [28] -> \Filter1.I0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5091 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [29] -> \Filter1.I0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5092 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [30] -> \Filter1.I0 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5093 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [31] -> \Filter1.I0 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5094 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [32] -> \Filter1.I0 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5095 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [33] -> \Filter1.I0 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5096 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [34] -> \Filter1.I0 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5097 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [35] -> \Filter1.I0 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5098 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [36] -> \Filter1.I0 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5099 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [37] -> \Filter1.I0 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5100 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [38] -> \Filter1.I0 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5101 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [39] -> \Filter1.I0 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5102 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [40] -> \Filter1.I0 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5103 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [41] -> \Filter1.I0 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5104 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [42] -> \Filter1.I0 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5105 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [43] -> \Filter1.I0 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5106 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [44] -> \Filter1.I0 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5107 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [45] -> \Filter1.I0 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5108 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [46] -> \Filter1.I0 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5109 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [47] -> \Filter1.I0 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5110 to $_DFFE_PP_ for $techmap\Filter1.$0\I0[48:0] [48] -> \Filter1.I0 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5111 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [0] -> \Filter1.tickcount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5112 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [1] -> \Filter1.tickcount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5113 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [2] -> \Filter1.tickcount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5114 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [3] -> \Filter1.tickcount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5115 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [4] -> \Filter1.tickcount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5116 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [5] -> \Filter1.tickcount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5117 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [6] -> \Filter1.tickcount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5118 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [7] -> \Filter1.tickcount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5119 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [8] -> \Filter1.tickcount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5120 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [9] -> \Filter1.tickcount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5121 to $_DFFE_PP_ for $techmap\Filter1.$0\tickcount[10:0] [10] -> \Filter1.tickcount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5123 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [0] -> \Filter1.OUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5124 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [1] -> \Filter1.OUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5125 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [2] -> \Filter1.OUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5126 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [3] -> \Filter1.OUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5127 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [4] -> \Filter1.OUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5128 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [5] -> \Filter1.OUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5129 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [6] -> \Filter1.OUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5130 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [7] -> \Filter1.OUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5131 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [8] -> \Filter1.OUT [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5132 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [9] -> \Filter1.OUT [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5133 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [10] -> \Filter1.OUT [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5134 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [11] -> \Filter1.OUT [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5135 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [12] -> \Filter1.OUT [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5136 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [13] -> \Filter1.OUT [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5137 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [14] -> \Filter1.OUT [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5138 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [15] -> \Filter1.OUT [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5139 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [16] -> \Filter1.OUT [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5140 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [17] -> \Filter1.OUT [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5141 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [18] -> \Filter1.OUT [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5142 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [19] -> \Filter1.OUT [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5143 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [20] -> \Filter1.OUT [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5144 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [21] -> \Filter1.OUT [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5145 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [22] -> \Filter1.OUT [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5146 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [23] -> \Filter1.OUT [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5147 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [24] -> \Filter1.OUT [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5148 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [25] -> \Filter1.OUT [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5149 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [26] -> \Filter1.OUT [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5150 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [27] -> \Filter1.OUT [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5151 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [28] -> \Filter1.OUT [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5152 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [29] -> \Filter1.OUT [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5153 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [30] -> \Filter1.OUT [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5154 to $_DFFE_PP_ for $techmap\Filter1.$0\OUT[31:0] [31] -> \Filter1.OUT [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6620 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [0] -> \Filter2.inaddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6621 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [1] -> \Filter2.inaddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6622 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [2] -> \Filter2.inaddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6623 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [3] -> \Filter2.inaddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6624 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [4] -> \Filter2.inaddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6625 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [5] -> \Filter2.inaddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6626 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [6] -> \Filter2.inaddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6627 to $_DFFE_PP_ for $techmap\Filter2.$0\inaddr[7:0] [7] -> \Filter2.inaddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6688 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [0] -> \Filter2.I0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6689 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [1] -> \Filter2.I0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6690 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [2] -> \Filter2.I0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6691 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [3] -> \Filter2.I0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6692 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [4] -> \Filter2.I0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6693 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [5] -> \Filter2.I0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6694 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [6] -> \Filter2.I0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6695 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [7] -> \Filter2.I0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6696 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [8] -> \Filter2.I0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6697 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [9] -> \Filter2.I0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6698 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [10] -> \Filter2.I0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6699 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [11] -> \Filter2.I0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6700 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [12] -> \Filter2.I0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6701 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [13] -> \Filter2.I0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6702 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [14] -> \Filter2.I0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6703 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [15] -> \Filter2.I0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6704 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [16] -> \Filter2.I0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6705 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [17] -> \Filter2.I0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6706 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [18] -> \Filter2.I0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6707 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [19] -> \Filter2.I0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6708 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [20] -> \Filter2.I0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6709 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [21] -> \Filter2.I0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6710 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [22] -> \Filter2.I0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6711 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [23] -> \Filter2.I0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6712 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [24] -> \Filter2.I0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6713 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [25] -> \Filter2.I0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6714 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [26] -> \Filter2.I0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6715 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [27] -> \Filter2.I0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6716 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [28] -> \Filter2.I0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6717 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [29] -> \Filter2.I0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6718 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [30] -> \Filter2.I0 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6719 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [31] -> \Filter2.I0 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6720 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [32] -> \Filter2.I0 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6721 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [33] -> \Filter2.I0 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6722 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [34] -> \Filter2.I0 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6723 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [35] -> \Filter2.I0 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6724 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [36] -> \Filter2.I0 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6725 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [37] -> \Filter2.I0 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6726 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [38] -> \Filter2.I0 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6727 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [39] -> \Filter2.I0 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6728 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [40] -> \Filter2.I0 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6729 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [41] -> \Filter2.I0 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6730 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [42] -> \Filter2.I0 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6731 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [43] -> \Filter2.I0 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6732 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [44] -> \Filter2.I0 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6733 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [45] -> \Filter2.I0 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6734 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [46] -> \Filter2.I0 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6735 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [47] -> \Filter2.I0 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6736 to $_DFFE_PP_ for $techmap\Filter2.$0\I0[48:0] [48] -> \Filter2.I0 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6737 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [0] -> \Filter2.tickcount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6738 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [1] -> \Filter2.tickcount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6739 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [2] -> \Filter2.tickcount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6740 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [3] -> \Filter2.tickcount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6741 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [4] -> \Filter2.tickcount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6742 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [5] -> \Filter2.tickcount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6743 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [6] -> \Filter2.tickcount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6744 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [7] -> \Filter2.tickcount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6745 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [8] -> \Filter2.tickcount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6746 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [9] -> \Filter2.tickcount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6747 to $_DFFE_PP_ for $techmap\Filter2.$0\tickcount[10:0] [10] -> \Filter2.tickcount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6748 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [0] -> \Filter2.OUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6749 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [1] -> \Filter2.OUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6750 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [2] -> \Filter2.OUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6751 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [3] -> \Filter2.OUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6752 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [4] -> \Filter2.OUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6753 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [5] -> \Filter2.OUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6754 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [6] -> \Filter2.OUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6755 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [7] -> \Filter2.OUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6756 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [8] -> \Filter2.OUT [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6757 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [9] -> \Filter2.OUT [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6758 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [10] -> \Filter2.OUT [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6759 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [11] -> \Filter2.OUT [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6760 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [12] -> \Filter2.OUT [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6761 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [13] -> \Filter2.OUT [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6762 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [14] -> \Filter2.OUT [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6763 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [15] -> \Filter2.OUT [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6764 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [16] -> \Filter2.OUT [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6765 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [17] -> \Filter2.OUT [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6766 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [18] -> \Filter2.OUT [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6767 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [19] -> \Filter2.OUT [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6768 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [20] -> \Filter2.OUT [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6769 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [21] -> \Filter2.OUT [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6770 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [22] -> \Filter2.OUT [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6771 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [23] -> \Filter2.OUT [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6772 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [24] -> \Filter2.OUT [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6773 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [25] -> \Filter2.OUT [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6774 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [26] -> \Filter2.OUT [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6775 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [27] -> \Filter2.OUT [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6776 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [28] -> \Filter2.OUT [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6777 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [29] -> \Filter2.OUT [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6778 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [30] -> \Filter2.OUT [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6779 to $_DFFE_PP_ for $techmap\Filter2.$0\OUT[31:0] [31] -> \Filter2.OUT [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8376 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [0] -> \UI_inst.cnt3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8377 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [1] -> \UI_inst.cnt3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8378 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [2] -> \UI_inst.cnt3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8379 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [3] -> \UI_inst.cnt3 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8380 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [4] -> \UI_inst.cnt3 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8381 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [5] -> \UI_inst.cnt3 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8382 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [6] -> \UI_inst.cnt3 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8383 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [7] -> \UI_inst.cnt3 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8384 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [8] -> \UI_inst.cnt3 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8385 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [9] -> \UI_inst.cnt3 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8386 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [10] -> \UI_inst.cnt3 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8387 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [11] -> \UI_inst.cnt3 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8388 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [12] -> \UI_inst.cnt3 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8389 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [13] -> \UI_inst.cnt3 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8390 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [14] -> \UI_inst.cnt3 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8391 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [15] -> \UI_inst.cnt3 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8392 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [16] -> \UI_inst.cnt3 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8393 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [17] -> \UI_inst.cnt3 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8394 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [18] -> \UI_inst.cnt3 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8395 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [19] -> \UI_inst.cnt3 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8396 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [20] -> \UI_inst.cnt3 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8397 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [21] -> \UI_inst.cnt3 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8398 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [22] -> \UI_inst.cnt3 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8399 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[23:0] [23] -> \UI_inst.cnt3 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8404 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [0] -> \UI_inst.cnt2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8405 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [1] -> \UI_inst.cnt2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8406 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [2] -> \UI_inst.cnt2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8407 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [3] -> \UI_inst.cnt2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8408 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [4] -> \UI_inst.cnt2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8409 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [5] -> \UI_inst.cnt2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8410 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [6] -> \UI_inst.cnt2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8411 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [7] -> \UI_inst.cnt2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8412 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [8] -> \UI_inst.cnt2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8413 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [9] -> \UI_inst.cnt2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8414 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [10] -> \UI_inst.cnt2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8415 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [11] -> \UI_inst.cnt2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8416 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [12] -> \UI_inst.cnt2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8417 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [13] -> \UI_inst.cnt2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8418 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [14] -> \UI_inst.cnt2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8419 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [15] -> \UI_inst.cnt2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8420 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [16] -> \UI_inst.cnt2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8421 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [17] -> \UI_inst.cnt2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8422 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [18] -> \UI_inst.cnt2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8423 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [19] -> \UI_inst.cnt2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8424 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [20] -> \UI_inst.cnt2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8425 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [21] -> \UI_inst.cnt2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8426 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [22] -> \UI_inst.cnt2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8427 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[23:0] [23] -> \UI_inst.cnt2 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8428 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [0] -> \UI_inst.cnt1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8429 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [1] -> \UI_inst.cnt1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8430 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [2] -> \UI_inst.cnt1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8431 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [3] -> \UI_inst.cnt1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8432 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [4] -> \UI_inst.cnt1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8433 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [5] -> \UI_inst.cnt1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8434 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [6] -> \UI_inst.cnt1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8435 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [7] -> \UI_inst.cnt1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8436 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [8] -> \UI_inst.cnt1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8437 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [9] -> \UI_inst.cnt1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8438 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [10] -> \UI_inst.cnt1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8439 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [11] -> \UI_inst.cnt1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8440 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [12] -> \UI_inst.cnt1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8441 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [13] -> \UI_inst.cnt1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8442 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [14] -> \UI_inst.cnt1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8443 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [15] -> \UI_inst.cnt1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8444 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [16] -> \UI_inst.cnt1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8445 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [17] -> \UI_inst.cnt1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8446 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [18] -> \UI_inst.cnt1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8447 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [19] -> \UI_inst.cnt1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8448 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [20] -> \UI_inst.cnt1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8449 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [21] -> \UI_inst.cnt1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8450 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [22] -> \UI_inst.cnt1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8451 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[23:0] [23] -> \UI_inst.cnt1 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8452 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [0] -> \UI_inst.cnt0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8453 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [1] -> \UI_inst.cnt0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8454 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [2] -> \UI_inst.cnt0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8455 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [3] -> \UI_inst.cnt0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8456 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [4] -> \UI_inst.cnt0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8457 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [5] -> \UI_inst.cnt0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8458 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [6] -> \UI_inst.cnt0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8459 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [7] -> \UI_inst.cnt0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8460 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [8] -> \UI_inst.cnt0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8461 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [9] -> \UI_inst.cnt0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8462 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [10] -> \UI_inst.cnt0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8463 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [11] -> \UI_inst.cnt0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8464 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [12] -> \UI_inst.cnt0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8465 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [13] -> \UI_inst.cnt0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8466 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [14] -> \UI_inst.cnt0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8467 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [15] -> \UI_inst.cnt0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8468 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [16] -> \UI_inst.cnt0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8469 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [17] -> \UI_inst.cnt0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8470 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [18] -> \UI_inst.cnt0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8471 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [19] -> \UI_inst.cnt0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8472 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [20] -> \UI_inst.cnt0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8473 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [21] -> \UI_inst.cnt0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8474 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [22] -> \UI_inst.cnt0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8475 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[23:0] [23] -> \UI_inst.cnt0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8488 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [0] -> \UI_inst.datS [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8489 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [1] -> \UI_inst.datS [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8490 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [2] -> \UI_inst.datS [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8491 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [3] -> \UI_inst.datS [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8492 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [4] -> \UI_inst.datS [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8493 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [5] -> \UI_inst.datS [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8494 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [6] -> \UI_inst.datS [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8495 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2786.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9130_Y [7] -> \UI_inst.datS [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8496 to $_DFFE_PP_ for $techmap\UI_inst.$0\ismagphase[0:0] -> \UI_inst.ismagphase.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8497 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2651.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9522_Y [0] -> \UI_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8498 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2651.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9522_Y [1] -> \UI_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8499 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2651.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9522_Y [2] -> \UI_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8500 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2651.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$9522_Y [3] -> \UI_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8502 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [0] -> \UI_inst.refampl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8503 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [1] -> \UI_inst.refampl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8504 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [0] -> \UI_inst.reffreq [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8505 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [1] -> \UI_inst.reffreq [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8506 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [2] -> \UI_inst.reffreq [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8508 to $_DFFE_PP_ for $auto$simplemap.cc:309:simplemap_lut$25986 -> \UI_inst.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8530 to $_DFFE_PP_ for $techmap\UI_inst.$0\refIO[0:0] -> \UI_inst.refIO.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8531 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [0] -> \UI_inst.TC [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8532 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [1] -> \UI_inst.TC [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8533 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [2] -> \UI_inst.TC [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8534 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [3] -> \UI_inst.TC [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8535 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [0] -> \UI_inst.gain [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8536 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [1] -> \UI_inst.gain [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9894 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [0] -> \PLL.last_eP [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9895 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [1] -> \PLL.last_eP [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9896 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [2] -> \PLL.last_eP [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9897 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [3] -> \PLL.last_eP [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9898 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [4] -> \PLL.last_eP [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9899 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [5] -> \PLL.last_eP [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9900 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [6] -> \PLL.last_eP [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9901 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [7] -> \PLL.last_eP [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9902 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [8] -> \PLL.last_eP [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9903 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [9] -> \PLL.last_eP [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9904 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [10] -> \PLL.last_eP [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9905 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [11] -> \PLL.last_eP [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9906 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [12] -> \PLL.last_eP [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9907 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [13] -> \PLL.last_eP [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9908 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [14] -> \PLL.last_eP [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9909 to $_DFFE_PP_ for $techmap\PLL.$0\last_eP[15:0] [15] -> \PLL.last_eP [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9921 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [11] -> \PLL.eD [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9922 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [12] -> \PLL.eD [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9923 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [13] -> \PLL.eD [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9924 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [14] -> \PLL.eD [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9925 to $_DFFE_PP_ for $techmap\PLL.$0\eD[15:0] [15] -> \PLL.eD [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9928 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [0] -> \PLL.incr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9929 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [1] -> \PLL.incr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9930 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [2] -> \PLL.incr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9931 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [3] -> \PLL.incr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9932 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [4] -> \PLL.incr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9933 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [5] -> \PLL.incr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9934 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [6] -> \PLL.incr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9935 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [7] -> \PLL.incr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9936 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [8] -> \PLL.incr [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9937 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [9] -> \PLL.incr [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9938 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [10] -> \PLL.incr [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9939 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [11] -> \PLL.incr [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9940 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [12] -> \PLL.incr [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9941 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [13] -> \PLL.incr [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9942 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [14] -> \PLL.incr [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9943 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [15] -> \PLL.incr [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$9944 to $_DFFE_PP_ for $techmap\PLL.$0\incr[16:0] [16] -> \PLL.incr [16].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10580 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1389.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11044_Y [0] -> \UI_inst.LCD.display_state [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10581 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1389.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11044_Y [1] -> \UI_inst.LCD.display_state [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10582 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1389.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11044_Y [2] -> \UI_inst.LCD.display_state [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10583 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1389.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11044_Y [3] -> \UI_inst.LCD.display_state [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10584 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1389.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11044_Y [4] -> \UI_inst.LCD.display_state [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$10620 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$1257.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11309_Y [0] -> \UI_inst.LCD.tx_state [0].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$10621 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$1257.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11309_Y [1] -> \UI_inst.LCD.tx_state [1].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$10622 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$1257.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$11309_Y [2] -> \UI_inst.LCD.tx_state [2].

22.34. Executing TECHMAP pass (map to technology primitives).

22.34.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

22.34.2. Continuing TECHMAP pass.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$__DFFE_PP1 for cells of type $__DFFE_PP1.
No more expansions possible.
<suppressed ~1543 debug messages>

22.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1814 debug messages>

22.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

22.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in top.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9977 (SB_DFF): \PLL.phase [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10101 (SB_DFF): \DAC1.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10102 (SB_DFF): \DAC1.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10103 (SB_DFF): \DAC1.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10104 (SB_DFF): \DAC1.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10105 (SB_DFF): \DAC1.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10106 (SB_DFF): \DAC1.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10107 (SB_DFF): \DAC1.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9946 (SB_DFF): \PLL.phase [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10108 (SB_DFF): \DAC1.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10110 (SB_DFF): \DAC1.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10111 (SB_DFF): \DAC1.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10112 (SB_DFF): \DAC1.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10113 (SB_DFF): \DAC1.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10114 (SB_DFF): \DAC1.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10115 (SB_DFF): \DAC1.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10116 (SB_DFF): \DAC1.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10117 (SB_DFF): \DAC1.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10118 (SB_DFF): \DAC2.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10119 (SB_DFF): \DAC2.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10120 (SB_DFF): \DAC2.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10121 (SB_DFF): \DAC2.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10122 (SB_DFF): \DAC2.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10123 (SB_DFF): \DAC2.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10124 (SB_DFF): \DAC2.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10109 (SB_DFF): \DAC1.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10125 (SB_DFF): \DAC2.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10127 (SB_DFF): \DAC2.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10128 (SB_DFF): \DAC2.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10129 (SB_DFF): \DAC2.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10130 (SB_DFF): \DAC2.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10131 (SB_DFF): \DAC2.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10132 (SB_DFF): \DAC2.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10133 (SB_DFF): \DAC2.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10143 (SB_DFF): \DAC3.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10134 (SB_DFF): \DAC2.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10138 (SB_DFF): \DAC3.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10139 (SB_DFF): \DAC3.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10140 (SB_DFF): \DAC3.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10141 (SB_DFF): \DAC3.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10126 (SB_DFF): \DAC2.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10142 (SB_DFF): \DAC3.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10144 (SB_DFF): \DAC3.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10145 (SB_DFF): \DAC3.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10146 (SB_DFF): \DAC3.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10147 (SB_DFF): \DAC3.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10148 (SB_DFF): \DAC3.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10149 (SB_DFF): \DAC3.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10150 (SB_DFF): \DAC3.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10151 (SB_DFF): \DAC3.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10152 (SB_DFF): \DAC3.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10153 (SB_DFF): \DAC3.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5052 (SB_DFF): \Filter1.OUTpipe [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10137 (SB_DFF): \DAC3.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10528 (SB_DFFE): \UI_inst.LCD.pos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10527 (SB_DFFE): \UI_inst.LCD.pos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10523 (SB_DFFE): \UI_inst.LCD.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10524 (SB_DFFE): \UI_inst.LCD.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10525 (SB_DFFE): \UI_inst.LCD.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5033 (SB_DFF): \Filter1.OUTpipe [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10526 (SB_DFFE): \UI_inst.LCD.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10529 (SB_DFFE): \UI_inst.LCD.pos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10530 (SB_DFFE): \UI_inst.LCD.pos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10531 (SB_DFFE): \UI_inst.LCD.pos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10532 (SB_DFFE): \UI_inst.LCD.pos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10533 (SB_DFFE): \UI_inst.LCD.pos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10534 (SB_DFFE): \UI_inst.LCD.pos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10535 (SB_DFFE): \UI_inst.LCD.pos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10536 (SB_DFFE): \UI_inst.LCD.pos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10537 (SB_DFFE): \UI_inst.LCD.pos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10538 (SB_DFFE): \UI_inst.LCD.pos [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10539 (SB_DFFE): \UI_inst.LCD.pos [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10540 (SB_DFFE): \UI_inst.LCD.pos [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10541 (SB_DFFE): \UI_inst.LCD.pos [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10542 (SB_DFFE): \UI_inst.LCD.pos [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10543 (SB_DFFE): \UI_inst.LCD.pos [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10544 (SB_DFFE): \UI_inst.LCD.pos [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10545 (SB_DFFE): \UI_inst.LCD.pos [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10546 (SB_DFFE): \UI_inst.LCD.pos [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10547 (SB_DFFE): \UI_inst.LCD.pos [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10548 (SB_DFFE): \UI_inst.LCD.pos [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10549 (SB_DFFE): \UI_inst.LCD.pos [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10550 (SB_DFFE): \UI_inst.LCD.pos [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10551 (SB_DFFE): \UI_inst.LCD.pos [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10552 (SB_DFFE): \UI_inst.LCD.pos [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10572 (SB_DFFR): \UI_inst.LCD.main_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10583 (SB_DFFER): \UI_inst.LCD.display_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10575 (SB_DFFE): \UI_inst.LCD.LCD_E1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10577 (SB_DFFE): \UI_inst.LCD.SF_D1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10578 (SB_DFFE): \UI_inst.LCD.SF_D1 [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10584 (SB_DFFER): \UI_inst.LCD.display_state [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10580 (SB_DFFER): \UI_inst.LCD.display_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10601 (SB_DFFE): \UI_inst.LCD.tx_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10595 (SB_DFFE): \UI_inst.LCD.tx_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10596 (SB_DFFE): \UI_inst.LCD.tx_delay_value [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10597 (SB_DFFE): \UI_inst.LCD.tx_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10598 (SB_DFFE): \UI_inst.LCD.tx_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10599 (SB_DFFE): \UI_inst.LCD.tx_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10593 (SB_DFFE): \UI_inst.LCD.tx_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10600 (SB_DFFE): \UI_inst.LCD.tx_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10602 (SB_DFFE): \UI_inst.LCD.tx_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10603 (SB_DFFE): \UI_inst.LCD.tx_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10604 (SB_DFFE): \UI_inst.LCD.tx_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10605 (SB_DFFE): \UI_inst.LCD.tx_delay_value [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10606 (SB_DFFE): \UI_inst.LCD.tx_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10607 (SB_DFFE): \UI_inst.LCD.tx_delay_value [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10608 (SB_DFFE): \UI_inst.LCD.tx_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10609 (SB_DFFE): \UI_inst.LCD.tx_delay_value [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10610 (SB_DFFE): \UI_inst.LCD.tx_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10611 (SB_DFFE): \UI_inst.LCD.tx_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10612 (SB_DFFE): \UI_inst.LCD.tx_delay_value [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10613 (SB_DFFE): \UI_inst.LCD.tx_delay_value [19] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10622 (SB_DFFES): \UI_inst.LCD.tx_state [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10614 (SB_DFFE): \UI_inst.LCD.LCD_E0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10616 (SB_DFFE): \UI_inst.LCD.SF_D0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10617 (SB_DFFE): \UI_inst.LCD.SF_D0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10615 (SB_DFFE): \UI_inst.LCD.SF_D0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11842 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11834 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11835 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11836 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11837 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11838 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4143 (SB_DFFE): \ADC.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11839 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [5] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10621 (SB_DFFES): \UI_inst.LCD.tx_state [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11841 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11843 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11844 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11845 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11846 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11847 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11848 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11849 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11850 (SB_DFFE): \UI_inst.diplay_number.holdoff = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11867 (SB_DFFE): \UI_inst.diplay_number.difference [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11868 (SB_DFFE): \UI_inst.diplay_number.dec [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11869 (SB_DFFE): \UI_inst.diplay_number.dec [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11870 (SB_DFFE): \UI_inst.diplay_number.dec [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11876 (SB_DFFE): \UI_inst.diplay_number.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11871 (SB_DFFE): \UI_inst.diplay_number.dec [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11873 (SB_DFFE): \UI_inst.diplay_number.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11874 (SB_DFFE): \UI_inst.diplay_number.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5049 (SB_DFF): \Filter1.OUTpipe [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11875 (SB_DFFE): \UI_inst.diplay_number.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11885 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11878 (SB_DFFE): \UI_inst.diplay_number.updating = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11879 (SB_DFF): \UI_inst.diplay_number.lastupdate = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11877 (SB_DFFE): \UI_inst.diplay_number.leadz = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11881 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11882 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11883 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11872 (SB_DFFE): \UI_inst.diplay_number.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11884 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11886 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11887 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11888 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11889 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11890 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11891 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11892 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11893 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11894 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11895 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11896 (SB_DFFE): \UI_inst.diplay_number.lastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11897 (SB_DFFE): \UI_inst.diplay_number.lastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11898 (SB_DFFE): \UI_inst.diplay_number.lastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11899 (SB_DFFE): \UI_inst.diplay_number.lastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11900 (SB_DFFE): \UI_inst.diplay_number.lastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11901 (SB_DFFE): \UI_inst.diplay_number.lastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11902 (SB_DFFE): \UI_inst.diplay_number.lastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11880 (SB_DFFE): \UI_inst.diplay_number.AngelaMerkel [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11903 (SB_DFFE): \UI_inst.diplay_number.lastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11905 (SB_DFFE): \UI_inst.diplay_number.lastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11906 (SB_DFFE): \UI_inst.diplay_number.lastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11907 (SB_DFFE): \UI_inst.diplay_number.lastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11908 (SB_DFFE): \UI_inst.diplay_number.lastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11909 (SB_DFFE): \UI_inst.diplay_number.lastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11910 (SB_DFFE): \UI_inst.diplay_number.lastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11911 (SB_DFFE): \UI_inst.diplay_number.lastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11912 (SB_DFFE): \UI_inst.diplay_number.rest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11913 (SB_DFFE): \UI_inst.diplay_number.rest [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11914 (SB_DFFE): \UI_inst.diplay_number.rest [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11915 (SB_DFFE): \UI_inst.diplay_number.rest [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11916 (SB_DFFE): \UI_inst.diplay_number.rest [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11917 (SB_DFFE): \UI_inst.diplay_number.rest [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11918 (SB_DFFE): \UI_inst.diplay_number.rest [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11904 (SB_DFFE): \UI_inst.diplay_number.lastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11919 (SB_DFFE): \UI_inst.diplay_number.rest [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11921 (SB_DFFE): \UI_inst.diplay_number.rest [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11922 (SB_DFFE): \UI_inst.diplay_number.rest [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11923 (SB_DFFE): \UI_inst.diplay_number.rest [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11924 (SB_DFFE): \UI_inst.diplay_number.rest [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11925 (SB_DFFE): \UI_inst.diplay_number.rest [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11926 (SB_DFFE): \UI_inst.diplay_number.rest [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11927 (SB_DFFE): \UI_inst.diplay_number.rest [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11928 (SB_DFFE): \UI_inst.diplay_number.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11929 (SB_DFFE): \UI_inst.diplay_number.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11930 (SB_DFFE): \UI_inst.diplay_number.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11931 (SB_DFFE): \UI_inst.diplay_number.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11932 (SB_DFFE): \UI_inst.diplay_number.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11933 (SB_DFFE): \UI_inst.diplay_number.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11934 (SB_DFFE): \UI_inst.diplay_number.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11920 (SB_DFFE): \UI_inst.diplay_number.rest [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11935 (SB_DFFE): \UI_inst.diplay_number.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11937 (SB_DFFE): \UI_inst.diplay_number.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11938 (SB_DFFE): \UI_inst.diplay_number.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11939 (SB_DFFE): \UI_inst.diplay_number.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11940 (SB_DFFE): \UI_inst.diplay_number.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11941 (SB_DFFE): \UI_inst.diplay_number.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11942 (SB_DFFE): \UI_inst.diplay_number.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11943 (SB_DFFE): \UI_inst.diplay_number.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11944 (SB_DFFE): \UI_inst.diplay_number.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11945 (SB_DFFE): \UI_inst.diplay_number.dat [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11946 (SB_DFFE): \UI_inst.diplay_number.dat [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11947 (SB_DFFE): \UI_inst.diplay_number.dat [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11948 (SB_DFFE): \UI_inst.diplay_number.dat [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11949 (SB_DFFE): \UI_inst.diplay_number.dat [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11950 (SB_DFFE): \UI_inst.diplay_number.dat [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11951 (SB_DFFE): \UI_inst.diplay_number.dat [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11936 (SB_DFFE): \UI_inst.diplay_number.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5050 (SB_DFF): \Filter1.OUTpipe [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11952 (SB_DFFE): \UI_inst.diplay_number.dat [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5038 (SB_DFF): \Filter1.OUTpipe [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5054 (SB_DFF): \Filter1.OUTpipe [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5051 (SB_DFF): \Filter1.OUTpipe [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4144 (SB_DFF): \ADC.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4149 (SB_DFF): \ADC.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4146 (SB_DFF): \ADC.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4147 (SB_DFF): \ADC.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4148 (SB_DFF): \ADC.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4150 (SB_DFFE): \ADC.acq = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4145 (SB_DFF): \ADC.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4168 (SB_DFFN): \ADC.shiftdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4158 (SB_DFFN): \ADC.shiftdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4151 (SB_DFF): \ADC.newdata = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4142 (SB_DFF): \ADC.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4153 (SB_DFFN): \ADC.shiftdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4154 (SB_DFFN): \ADC.shiftdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4155 (SB_DFFN): \ADC.shiftdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4156 (SB_DFFN): \ADC.shiftdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4157 (SB_DFFN): \ADC.shiftdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4190 (SB_DFFE): \ADC.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4159 (SB_DFFN): \ADC.shiftdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4160 (SB_DFFN): \ADC.shiftdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4161 (SB_DFFN): \ADC.shiftdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4162 (SB_DFFN): \ADC.shiftdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4163 (SB_DFFN): \ADC.shiftdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4164 (SB_DFFN): \ADC.shiftdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4165 (SB_DFFN): \ADC.shiftdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4166 (SB_DFFN): \ADC.shiftdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4167 (SB_DFFN): \ADC.shiftdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4195 (SB_DFFE): \ADC.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4191 (SB_DFFE): \ADC.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4192 (SB_DFFE): \ADC.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4193 (SB_DFFE): \ADC.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4194 (SB_DFFE): \ADC.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4196 (SB_DFFE): \ADC.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4152 (SB_DFFE): \ADC.CONVST = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4197 (SB_DFFE): \ADC.data [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4198 (SB_DFFE): \ADC.data [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4199 (SB_DFFE): \ADC.data [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4200 (SB_DFFE): \ADC.data [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4201 (SB_DFFE): \ADC.data [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4202 (SB_DFFE): \ADC.data [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4203 (SB_DFFE): \ADC.data [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4204 (SB_DFFE): \ADC.data [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4290 (SB_DFFE): \cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6624 (SB_DFFE): \Filter2.inaddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8383 (SB_DFFE): \UI_inst.cnt3 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4292 (SB_DFF): \cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4778 (SB_DFFE): \DDS.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4294 (SB_DFF): \cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4189 (SB_DFFE): \ADC.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4295 (SB_DFF): \cnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4296 (SB_DFF): \cnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4297 (SB_DFF): \cnt [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4298 (SB_DFF): \cnt [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4299 (SB_DFF): \cnt [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4300 (SB_DFF): \cnt [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4301 (SB_DFF): \cnt [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4302 (SB_DFF): \cnt [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4303 (SB_DFF): \cnt [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4304 (SB_DFF): \cnt [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4305 (SB_DFF): \cnt [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4306 (SB_DFF): \cnt [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4307 (SB_DFF): \cnt [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4308 (SB_DFF): \cnt [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4309 (SB_DFF): \cnt [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4310 (SB_DFF): \cnt [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4311 (SB_DFF): \cnt [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4324 (SB_DFF): \F2SRAM.poscount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4383 (SB_DFFE): \F2SRAM.wdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5055 (SB_DFF): \Filter1.OUTpipe [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4326 (SB_DFF): \F2SRAM.poscount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4321 (SB_DFFE): \F2SRAM.poscount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4322 (SB_DFF): \F2SRAM.poscount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4323 (SB_DFF): \F2SRAM.poscount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4289 (SB_DFF): \cnt [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10620 (SB_DFFER): \UI_inst.LCD.tx_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11953 (SB_DFFE): \UI_inst.diplay_number.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4327 (SB_DFF): \F2SRAM.poscount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4328 (SB_DFF): \F2SRAM.poscount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4329 (SB_DFF): \F2SRAM.poscount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4330 (SB_DFF): \F2SRAM.poscount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4331 (SB_DFF): \F2SRAM.poscount [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4332 (SB_DFF): \F2SRAM.poscount [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4333 (SB_DFF): \F2SRAM.poscount [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4334 (SB_DFF): \F2SRAM.poscount [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4335 (SB_DFF): \F2SRAM.poscount [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4345 (SB_DFFE): \F2SRAM.spi_addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4341 (SB_DFFE): \F2SRAM.busystop = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4342 (SB_DFF): \F2SRAM.spi_go = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4336 (SB_DFF): \F2SRAM.poscount [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4320 (SB_DFF): \F2SRAM.poscount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4344 (SB_DFFE): \F2SRAM.spi_addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4346 (SB_DFFE): \F2SRAM.spi_addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4347 (SB_DFFE): \F2SRAM.spi_addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4348 (SB_DFFE): \F2SRAM.spi_addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4349 (SB_DFFE): \F2SRAM.spi_addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4350 (SB_DFFE): \F2SRAM.spi_addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4351 (SB_DFFE): \F2SRAM.spi_addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4352 (SB_DFFE): \F2SRAM.spi_addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4353 (SB_DFFE): \F2SRAM.spi_addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4354 (SB_DFFE): \F2SRAM.spi_addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4355 (SB_DFFE): \F2SRAM.spi_addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4356 (SB_DFFE): \F2SRAM.spi_addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4357 (SB_DFFE): \F2SRAM.spi_addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4358 (SB_DFFE): \F2SRAM.spi_addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4359 (SB_DFFE): \F2SRAM.spi_addr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4360 (SB_DFFE): \F2SRAM.spi_addr [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4361 (SB_DFFE): \F2SRAM.spi_addr [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4362 (SB_DFFE): \F2SRAM.spi_addr [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4363 (SB_DFFE): \F2SRAM.spi_addr [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4364 (SB_DFFE): \F2SRAM.spi_addr [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4365 (SB_DFFE): \F2SRAM.spi_addr [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4366 (SB_DFFE): \F2SRAM.spi_addr [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4343 (SB_DFFE): \F2SRAM.spi_addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4314 (SB_DFFE): \loadlookup = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4376 (SB_DFF): \F2SRAM.laststart = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4378 (SB_DFFE): \F2SRAM.wdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4379 (SB_DFFE): \F2SRAM.wdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4380 (SB_DFFE): \F2SRAM.wdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4381 (SB_DFFE): \F2SRAM.wdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4375 (SB_DFFE): \F2SRAM.second = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4382 (SB_DFFE): \F2SRAM.wdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4384 (SB_DFFE): \F2SRAM.wdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4385 (SB_DFFE): \F2SRAM.wdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4386 (SB_DFFE): \F2SRAM.wdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4387 (SB_DFFE): \F2SRAM.wdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4388 (SB_DFFE): \F2SRAM.wdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4389 (SB_DFFE): \F2SRAM.wdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4390 (SB_DFFE): \F2SRAM.wdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4391 (SB_DFFE): \F2SRAM.wdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4392 (SB_DFFE): \F2SRAM.wdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4393 (SB_DFF): \F2SRAM.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4394 (SB_DFFE): \F2SRAM.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4395 (SB_DFF): \F2SRAM.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4396 (SB_DFF): \F2SRAM.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4397 (SB_DFF): \F2SRAM.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4398 (SB_DFF): \F2SRAM.addr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4399 (SB_DFF): \F2SRAM.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4377 (SB_DFFE): \F2SRAM.wdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4400 (SB_DFF): \F2SRAM.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4402 (SB_DFF): \F2SRAM.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4403 (SB_DFF): \F2SRAM.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4404 (SB_DFF): \F2SRAM.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4405 (SB_DFF): \F2SRAM.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4406 (SB_DFF): \F2SRAM.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4407 (SB_DFF): \F2SRAM.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4408 (SB_DFF): \F2SRAM.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4401 (SB_DFF): \F2SRAM.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4409 (SB_DFF): \F2SRAM.busy = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4291 (SB_DFF): \cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4771 (SB_DFF): \DDS.lastgo = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4772 (SB_DFF): \DDS.iscos = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4770 (SB_DFF): \DDS.islast = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4774 (SB_DFFE): \DDS.addr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4775 (SB_DFFE): \DDS.addr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4776 (SB_DFFE): \DDS.addr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5019 (SB_DFF): \Filter1.OUTpipe [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4777 (SB_DFFE): \DDS.addr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4779 (SB_DFFE): \DDS.addr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4780 (SB_DFFE): \DDS.addr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4781 (SB_DFFE): \DDS.addr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4782 (SB_DFFE): \DDS.addr [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4783 (SB_DFFE): \DDS.addr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4784 (SB_DFFE): \DDS.addr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4785 (SB_DFFE): \DDS.addr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4786 (SB_DFFE): \DDS.addr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4787 (SB_DFFE): \DDS.addr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4788 (SB_DFFE): \DDS.addr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4789 (SB_DFFE): \DDS.cos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4790 (SB_DFFE): \DDS.cos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4791 (SB_DFFE): \DDS.cos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4792 (SB_DFFE): \DDS.cos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4793 (SB_DFFE): \DDS.cos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4794 (SB_DFFE): \DDS.cos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4795 (SB_DFFE): \DDS.cos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4773 (SB_DFFE): \DDS.addr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4796 (SB_DFFE): \DDS.cos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4798 (SB_DFFE): \DDS.cos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4799 (SB_DFFE): \DDS.cos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4800 (SB_DFFE): \DDS.cos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4801 (SB_DFFE): \DDS.cos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4802 (SB_DFFE): \DDS.cos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4803 (SB_DFFE): \DDS.cos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4804 (SB_DFFE): \DDS.cos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4805 (SB_DFFE): \DDS.sin [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4806 (SB_DFFE): \DDS.sin [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4820 (SB_DFFE): \DDS.sin [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4808 (SB_DFFE): \DDS.sin [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4807 (SB_DFFE): \DDS.sin [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4810 (SB_DFFE): \DDS.sin [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4811 (SB_DFFE): \DDS.sin [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4797 (SB_DFFE): \DDS.cos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4812 (SB_DFFE): \DDS.sin [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4814 (SB_DFFE): \DDS.sin [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4815 (SB_DFFE): \DDS.sin [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4816 (SB_DFFE): \DDS.sin [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4817 (SB_DFFE): \DDS.sin [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4818 (SB_DFFE): \DDS.sin [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4819 (SB_DFFE): \DDS.sin [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8535 (SB_DFFE): \UI_inst.gain [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4996 (SB_DFFE): \Filter1.inaddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4997 (SB_DFFE): \Filter1.inaddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4999 (SB_DFFE): \Filter1.inaddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5000 (SB_DFFE): \Filter1.inaddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5001 (SB_DFFE): \Filter1.inaddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5002 (SB_DFFE): \Filter1.inaddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5037 (SB_DFF): \Filter1.OUTpipe [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5003 (SB_DFFE): \Filter1.inaddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5020 (SB_DFF): \Filter1.OUTpipe [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4410 (SB_DFF): \F2SRAM.wen = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5014 (SB_DFF): \Filter1.OUTpipe [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5015 (SB_DFF): \Filter1.OUTpipe [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5016 (SB_DFF): \Filter1.OUTpipe [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5017 (SB_DFF): \Filter1.OUTpipe [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5018 (SB_DFF): \Filter1.OUTpipe [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5012 (SB_DFF): \Filter1.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5023 (SB_DFF): \Filter1.OUTpipe [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5022 (SB_DFF): \Filter1.OUTpipe [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5024 (SB_DFF): \Filter1.OUTpipe [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5025 (SB_DFF): \Filter1.OUTpipe [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5026 (SB_DFF): \Filter1.OUTpipe [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5027 (SB_DFF): \Filter1.OUTpipe [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5028 (SB_DFF): \Filter1.OUTpipe [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5029 (SB_DFF): \Filter1.OUTpipe [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5030 (SB_DFF): \Filter1.OUTpipe [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5031 (SB_DFF): \Filter1.OUTpipe [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5032 (SB_DFF): \Filter1.OUTpipe [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4813 (SB_DFFE): \DDS.sin [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5034 (SB_DFF): \Filter1.OUTpipe [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5035 (SB_DFF): \Filter1.OUTpipe [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5036 (SB_DFF): \Filter1.OUTpipe [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5042 (SB_DFF): \Filter1.OUTpipe [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5048 (SB_DFF): \Filter1.OUTpipe [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5047 (SB_DFF): \Filter1.OUTpipe [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5040 (SB_DFF): \Filter1.OUTpipe [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5043 (SB_DFF): \Filter1.OUTpipe [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5044 (SB_DFF): \Filter1.OUTpipe [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5045 (SB_DFF): \Filter1.OUTpipe [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5041 (SB_DFF): \Filter1.OUTpipe [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5039 (SB_DFF): \Filter1.OUTpipe [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$11840 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4809 (SB_DFFE): \DDS.sin [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8382 (SB_DFFE): \UI_inst.cnt3 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4325 (SB_DFF): \F2SRAM.poscount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5057 (SB_DFF): \Filter1.OUTpipe [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5058 (SB_DFF): \Filter1.OUTpipe [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5059 (SB_DFF): \Filter1.OUTpipe [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5060 (SB_DFF): \Filter1.OUTpipe [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5061 (SB_DFF): \Filter1.OUTpipe [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5062 (SB_DFFE): \Filter1.I0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5063 (SB_DFFE): \Filter1.I0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5064 (SB_DFFE): \Filter1.I0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5065 (SB_DFFE): \Filter1.I0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5066 (SB_DFFE): \Filter1.I0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5067 (SB_DFFE): \Filter1.I0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5068 (SB_DFFE): \Filter1.I0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5069 (SB_DFFE): \Filter1.I0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5071 (SB_DFFE): \Filter1.I0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5013 (SB_DFF): \Filter1.OUTpipe [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5073 (SB_DFFE): \Filter1.I0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5080 (SB_DFFE): \Filter1.I0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5074 (SB_DFFE): \Filter1.I0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5075 (SB_DFFE): \Filter1.I0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5076 (SB_DFFE): \Filter1.I0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5077 (SB_DFFE): \Filter1.I0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5078 (SB_DFFE): \Filter1.I0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5079 (SB_DFFE): \Filter1.I0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5072 (SB_DFFE): \Filter1.I0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5081 (SB_DFFE): \Filter1.I0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5082 (SB_DFFE): \Filter1.I0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5083 (SB_DFFE): \Filter1.I0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5084 (SB_DFFE): \Filter1.I0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5085 (SB_DFFE): \Filter1.I0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5086 (SB_DFFE): \Filter1.I0 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5087 (SB_DFFE): \Filter1.I0 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5088 (SB_DFFE): \Filter1.I0 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5089 (SB_DFFE): \Filter1.I0 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5090 (SB_DFFE): \Filter1.I0 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5092 (SB_DFFE): \Filter1.I0 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5097 (SB_DFFE): \Filter1.I0 [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5093 (SB_DFFE): \Filter1.I0 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5094 (SB_DFFE): \Filter1.I0 [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5095 (SB_DFFE): \Filter1.I0 [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5096 (SB_DFFE): \Filter1.I0 [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5091 (SB_DFFE): \Filter1.I0 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5098 (SB_DFFE): \Filter1.I0 [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5099 (SB_DFFE): \Filter1.I0 [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5100 (SB_DFFE): \Filter1.I0 [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5101 (SB_DFFE): \Filter1.I0 [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5102 (SB_DFFE): \Filter1.I0 [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5103 (SB_DFFE): \Filter1.I0 [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5104 (SB_DFFE): \Filter1.I0 [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5105 (SB_DFFE): \Filter1.I0 [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5107 (SB_DFFE): \Filter1.I0 [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5112 (SB_DFFE): \Filter1.tickcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5108 (SB_DFFE): \Filter1.I0 [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5109 (SB_DFFE): \Filter1.I0 [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5110 (SB_DFFE): \Filter1.I0 [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5111 (SB_DFFE): \Filter1.tickcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5106 (SB_DFFE): \Filter1.I0 [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5113 (SB_DFFE): \Filter1.tickcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5114 (SB_DFFE): \Filter1.tickcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5115 (SB_DFFE): \Filter1.tickcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5116 (SB_DFFE): \Filter1.tickcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5117 (SB_DFFE): \Filter1.tickcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5118 (SB_DFFE): \Filter1.tickcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5120 (SB_DFFE): \Filter1.tickcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5070 (SB_DFFE): \Filter1.I0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5121 (SB_DFFE): \Filter1.tickcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5122 (SB_DFF): \Filter1.lasttick = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5119 (SB_DFFE): \Filter1.tickcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6622 (SB_DFFE): \Filter2.inaddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6623 (SB_DFFE): \Filter2.inaddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6625 (SB_DFFE): \Filter2.inaddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6621 (SB_DFFE): \Filter2.inaddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6626 (SB_DFFE): \Filter2.inaddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6627 (SB_DFFE): \Filter2.inaddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6643 (SB_DFF): \Filter2.OUTpipe [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6620 (SB_DFFE): \Filter2.inaddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6638 (SB_DFF): \Filter2.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6640 (SB_DFF): \Filter2.OUTpipe [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6646 (SB_DFF): \Filter2.OUTpipe [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6641 (SB_DFF): \Filter2.OUTpipe [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6649 (SB_DFF): \Filter2.OUTpipe [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6644 (SB_DFF): \Filter2.OUTpipe [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6645 (SB_DFF): \Filter2.OUTpipe [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6647 (SB_DFF): \Filter2.OUTpipe [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6642 (SB_DFF): \Filter2.OUTpipe [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6654 (SB_DFF): \Filter2.OUTpipe [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6650 (SB_DFF): \Filter2.OUTpipe [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6651 (SB_DFF): \Filter2.OUTpipe [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6652 (SB_DFF): \Filter2.OUTpipe [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6648 (SB_DFF): \Filter2.OUTpipe [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6659 (SB_DFF): \Filter2.OUTpipe [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6655 (SB_DFF): \Filter2.OUTpipe [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6656 (SB_DFF): \Filter2.OUTpipe [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6657 (SB_DFF): \Filter2.OUTpipe [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6653 (SB_DFF): \Filter2.OUTpipe [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6667 (SB_DFF): \Filter2.OUTpipe [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6660 (SB_DFF): \Filter2.OUTpipe [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6661 (SB_DFF): \Filter2.OUTpipe [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6662 (SB_DFF): \Filter2.OUTpipe [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6663 (SB_DFF): \Filter2.OUTpipe [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6664 (SB_DFF): \Filter2.OUTpipe [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6665 (SB_DFF): \Filter2.OUTpipe [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6666 (SB_DFF): \Filter2.OUTpipe [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6658 (SB_DFF): \Filter2.OUTpipe [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6668 (SB_DFF): \Filter2.OUTpipe [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6669 (SB_DFF): \Filter2.OUTpipe [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6670 (SB_DFF): \Filter2.OUTpipe [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6671 (SB_DFF): \Filter2.OUTpipe [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6672 (SB_DFF): \Filter2.OUTpipe [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6673 (SB_DFF): \Filter2.OUTpipe [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6674 (SB_DFF): \Filter2.OUTpipe [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6675 (SB_DFF): \Filter2.OUTpipe [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6676 (SB_DFF): \Filter2.OUTpipe [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6677 (SB_DFF): \Filter2.OUTpipe [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6678 (SB_DFF): \Filter2.OUTpipe [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6679 (SB_DFF): \Filter2.OUTpipe [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6681 (SB_DFF): \Filter2.OUTpipe [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6685 (SB_DFF): \Filter2.OUTpipe [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6682 (SB_DFF): \Filter2.OUTpipe [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6683 (SB_DFF): \Filter2.OUTpipe [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6684 (SB_DFF): \Filter2.OUTpipe [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6680 (SB_DFF): \Filter2.OUTpipe [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6686 (SB_DFF): \Filter2.OUTpipe [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6687 (SB_DFF): \Filter2.OUTpipe [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6688 (SB_DFFE): \Filter2.I0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6689 (SB_DFFE): \Filter2.I0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6690 (SB_DFFE): \Filter2.I0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6691 (SB_DFFE): \Filter2.I0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6692 (SB_DFFE): \Filter2.I0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6693 (SB_DFFE): \Filter2.I0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6694 (SB_DFFE): \Filter2.I0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6695 (SB_DFFE): \Filter2.I0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6697 (SB_DFFE): \Filter2.I0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6639 (SB_DFF): \Filter2.OUTpipe [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6698 (SB_DFFE): \Filter2.I0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6699 (SB_DFFE): \Filter2.I0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6700 (SB_DFFE): \Filter2.I0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6701 (SB_DFFE): \Filter2.I0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6702 (SB_DFFE): \Filter2.I0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6703 (SB_DFFE): \Filter2.I0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6704 (SB_DFFE): \Filter2.I0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6705 (SB_DFFE): \Filter2.I0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6706 (SB_DFFE): \Filter2.I0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6707 (SB_DFFE): \Filter2.I0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6708 (SB_DFFE): \Filter2.I0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6709 (SB_DFFE): \Filter2.I0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6710 (SB_DFFE): \Filter2.I0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6711 (SB_DFFE): \Filter2.I0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6712 (SB_DFFE): \Filter2.I0 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6713 (SB_DFFE): \Filter2.I0 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6714 (SB_DFFE): \Filter2.I0 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6715 (SB_DFFE): \Filter2.I0 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6717 (SB_DFFE): \Filter2.I0 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6722 (SB_DFFE): \Filter2.I0 [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6718 (SB_DFFE): \Filter2.I0 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6719 (SB_DFFE): \Filter2.I0 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6720 (SB_DFFE): \Filter2.I0 [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6721 (SB_DFFE): \Filter2.I0 [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6716 (SB_DFFE): \Filter2.I0 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6723 (SB_DFFE): \Filter2.I0 [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6725 (SB_DFFE): \Filter2.I0 [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6729 (SB_DFFE): \Filter2.I0 [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6726 (SB_DFFE): \Filter2.I0 [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6727 (SB_DFFE): \Filter2.I0 [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6728 (SB_DFFE): \Filter2.I0 [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6724 (SB_DFFE): \Filter2.I0 [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6730 (SB_DFFE): \Filter2.I0 [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6731 (SB_DFFE): \Filter2.I0 [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6732 (SB_DFFE): \Filter2.I0 [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6733 (SB_DFFE): \Filter2.I0 [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6734 (SB_DFFE): \Filter2.I0 [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6735 (SB_DFFE): \Filter2.I0 [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6736 (SB_DFFE): \Filter2.I0 [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFFE): \Filter2.tickcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6738 (SB_DFFE): \Filter2.tickcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6739 (SB_DFFE): \Filter2.tickcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6740 (SB_DFFE): \Filter2.tickcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6741 (SB_DFFE): \Filter2.tickcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6742 (SB_DFFE): \Filter2.tickcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6744 (SB_DFFE): \Filter2.tickcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6746 (SB_DFFE): \Filter2.tickcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6696 (SB_DFFE): \Filter2.I0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6747 (SB_DFFE): \Filter2.tickcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6743 (SB_DFFE): \Filter2.tickcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6745 (SB_DFFE): \Filter2.tickcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5021 (SB_DFF): \Filter1.OUTpipe [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8389 (SB_DFFE): \UI_inst.cnt3 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8450 (SB_DFFE): \UI_inst.cnt1 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8376 (SB_DFFE): \UI_inst.cnt3 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8445 (SB_DFFE): \UI_inst.cnt1 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8444 (SB_DFFE): \UI_inst.cnt1 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8440 (SB_DFFE): \UI_inst.cnt1 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8439 (SB_DFFE): \UI_inst.cnt1 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5046 (SB_DFF): \Filter1.OUTpipe [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8385 (SB_DFFE): \UI_inst.cnt3 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8448 (SB_DFFE): \UI_inst.cnt1 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8386 (SB_DFFE): \UI_inst.cnt3 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8387 (SB_DFFE): \UI_inst.cnt3 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8388 (SB_DFFE): \UI_inst.cnt3 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8464 (SB_DFFE): \UI_inst.cnt0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8390 (SB_DFFE): \UI_inst.cnt3 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8391 (SB_DFFE): \UI_inst.cnt3 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8392 (SB_DFFE): \UI_inst.cnt3 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8393 (SB_DFFE): \UI_inst.cnt3 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8395 (SB_DFFE): \UI_inst.cnt3 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8398 (SB_DFFE): \UI_inst.cnt3 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8396 (SB_DFFE): \UI_inst.cnt3 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8397 (SB_DFFE): \UI_inst.cnt3 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8394 (SB_DFFE): \UI_inst.cnt3 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8399 (SB_DFFE): \UI_inst.cnt3 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8400 (SB_DFF): \UI_inst.btnt3 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8405 (SB_DFFE): \UI_inst.cnt2 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8408 (SB_DFFE): \UI_inst.cnt2 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8401 (SB_DFF): \UI_inst.btnt2 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8402 (SB_DFF): \UI_inst.btnt1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8403 (SB_DFF): \UI_inst.btnt0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8406 (SB_DFFE): \UI_inst.cnt2 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8407 (SB_DFFE): \UI_inst.cnt2 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8409 (SB_DFFE): \UI_inst.cnt2 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5053 (SB_DFF): \Filter1.OUTpipe [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8410 (SB_DFFE): \UI_inst.cnt2 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8412 (SB_DFFE): \UI_inst.cnt2 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8415 (SB_DFFE): \UI_inst.cnt2 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8413 (SB_DFFE): \UI_inst.cnt2 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8411 (SB_DFFE): \UI_inst.cnt2 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8417 (SB_DFFE): \UI_inst.cnt2 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8416 (SB_DFFE): \UI_inst.cnt2 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8414 (SB_DFFE): \UI_inst.cnt2 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8418 (SB_DFFE): \UI_inst.cnt2 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8420 (SB_DFFE): \UI_inst.cnt2 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8423 (SB_DFFE): \UI_inst.cnt2 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8421 (SB_DFFE): \UI_inst.cnt2 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8419 (SB_DFFE): \UI_inst.cnt2 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8472 (SB_DFFE): \UI_inst.cnt0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8424 (SB_DFFE): \UI_inst.cnt2 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8467 (SB_DFFE): \UI_inst.cnt0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8427 (SB_DFFE): \UI_inst.cnt2 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8428 (SB_DFFE): \UI_inst.cnt1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8426 (SB_DFFE): \UI_inst.cnt2 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8429 (SB_DFFE): \UI_inst.cnt1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFFE): \UI_inst.cnt1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFFE): \UI_inst.cnt1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8432 (SB_DFFE): \UI_inst.cnt1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8433 (SB_DFFE): \UI_inst.cnt1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8434 (SB_DFFE): \UI_inst.cnt1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8437 (SB_DFFE): \UI_inst.cnt1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8443 (SB_DFFE): \UI_inst.cnt1 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8404 (SB_DFFE): \UI_inst.cnt2 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8381 (SB_DFFE): \UI_inst.cnt3 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8380 (SB_DFFE): \UI_inst.cnt3 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8438 (SB_DFFE): \UI_inst.cnt1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8442 (SB_DFFE): \UI_inst.cnt1 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8378 (SB_DFFE): \UI_inst.cnt3 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8379 (SB_DFFE): \UI_inst.cnt3 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8377 (SB_DFFE): \UI_inst.cnt3 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8441 (SB_DFFE): \UI_inst.cnt1 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8446 (SB_DFFE): \UI_inst.cnt1 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8435 (SB_DFFE): \UI_inst.cnt1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8452 (SB_DFFE): \UI_inst.cnt0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8447 (SB_DFFE): \UI_inst.cnt1 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8455 (SB_DFFE): \UI_inst.cnt0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8384 (SB_DFFE): \UI_inst.cnt3 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8456 (SB_DFFE): \UI_inst.cnt0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8453 (SB_DFFE): \UI_inst.cnt0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8454 (SB_DFFE): \UI_inst.cnt0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8449 (SB_DFFE): \UI_inst.cnt1 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8451 (SB_DFFE): \UI_inst.cnt1 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8458 (SB_DFFE): \UI_inst.cnt0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8459 (SB_DFFE): \UI_inst.cnt0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8457 (SB_DFFE): \UI_inst.cnt0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4293 (SB_DFF): \cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8436 (SB_DFFE): \UI_inst.cnt1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8523 (SB_DFF): \UI_inst.count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8463 (SB_DFFE): \UI_inst.cnt0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8465 (SB_DFFE): \UI_inst.cnt0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8529 (SB_DFF): \UI_inst.count [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8517 (SB_DFF): \UI_inst.count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8462 (SB_DFFE): \UI_inst.cnt0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8468 (SB_DFFE): \UI_inst.cnt0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8469 (SB_DFFE): \UI_inst.cnt0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8470 (SB_DFFE): \UI_inst.cnt0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8471 (SB_DFFE): \UI_inst.cnt0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8422 (SB_DFFE): \UI_inst.cnt2 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8473 (SB_DFFE): \UI_inst.cnt0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8475 (SB_DFFE): \UI_inst.cnt0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8489 (SB_DFFE): \UI_inst.datS [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8476 (SB_DFF): \UI_inst.BP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8477 (SB_DFF): \UI_inst.BP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8478 (SB_DFF): \UI_inst.BP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8479 (SB_DFF): \UI_inst.BP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8482 (SB_DFF): \UI_inst.disppos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8484 (SB_DFF): \UI_inst.disppos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8480 (SB_DFF): \UI_inst.dispdone = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8483 (SB_DFF): \UI_inst.disppos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8485 (SB_DFF): \UI_inst.disppos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8460 (SB_DFFE): \UI_inst.cnt0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8486 (SB_DFF): \UI_inst.repaintS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8474 (SB_DFFE): \UI_inst.cnt0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8494 (SB_DFFE): \UI_inst.datS [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8487 (SB_DFF): \UI_inst.weS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8490 (SB_DFFE): \UI_inst.datS [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8491 (SB_DFFE): \UI_inst.datS [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8492 (SB_DFFE): \UI_inst.datS [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8493 (SB_DFFE): \UI_inst.datS [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8495 (SB_DFFE): \UI_inst.datS [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8481 (SB_DFF): \UI_inst.disppos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8496 (SB_DFFE): \UI_inst.ismagphase = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8498 (SB_DFFE): \UI_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8504 (SB_DFFE): \UI_inst.reffreq [0] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8499 (SB_DFFE): \UI_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8500 (SB_DFFE): \UI_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8503 (SB_DFFE): \UI_inst.refampl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8497 (SB_DFFE): \UI_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8501 (SB_DFF): \UI_inst.update = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8505 (SB_DFFE): \UI_inst.reffreq [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8488 (SB_DFFE): \UI_inst.datS [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8506 (SB_DFFE): \UI_inst.reffreq [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8508 (SB_DFFE): \UI_inst.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8512 (SB_DFF): \UI_inst.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8509 (SB_DFF): \UI_inst.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8511 (SB_DFF): \UI_inst.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8515 (SB_DFF): \UI_inst.count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8513 (SB_DFF): \UI_inst.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8502 (SB_DFFE): \UI_inst.refampl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8510 (SB_DFF): \UI_inst.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8518 (SB_DFF): \UI_inst.count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8516 (SB_DFF): \UI_inst.count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8519 (SB_DFF): \UI_inst.count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8525 (SB_DFF): \UI_inst.count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8521 (SB_DFF): \UI_inst.count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8520 (SB_DFF): \UI_inst.count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8514 (SB_DFF): \UI_inst.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8526 (SB_DFF): \UI_inst.count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8461 (SB_DFFE): \UI_inst.cnt0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8466 (SB_DFFE): \UI_inst.cnt0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8425 (SB_DFFE): \UI_inst.cnt2 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8524 (SB_DFF): \UI_inst.count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8527 (SB_DFF): \UI_inst.count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8528 (SB_DFF): \UI_inst.count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8522 (SB_DFF): \UI_inst.count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8530 (SB_DFFE): \UI_inst.refIO = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8532 (SB_DFFE): \UI_inst.TC [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8507 (SB_DFF): \UI_inst.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8533 (SB_DFFE): \UI_inst.TC [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8534 (SB_DFFE): \UI_inst.TC [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8536 (SB_DFFE): \UI_inst.gain [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8531 (SB_DFFE): \UI_inst.TC [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4288 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9934 (SB_DFFE): \PLL.incr [6] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9764 (SB_DFF): \OSC.phaseword [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5056 (SB_DFF): \Filter1.OUTpipe [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9758 (SB_DFF): \OSC.phaseword [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9759 (SB_DFF): \OSC.phaseword [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9760 (SB_DFF): \OSC.phaseword [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9762 (SB_DFF): \OSC.phaseword [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$4998 (SB_DFFE): \Filter1.inaddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9763 (SB_DFF): \OSC.phaseword [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9765 (SB_DFF): \OSC.phaseword [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9766 (SB_DFF): \OSC.phaseword [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9767 (SB_DFF): \OSC.phaseword [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9768 (SB_DFF): \OSC.phaseword [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9769 (SB_DFF): \OSC.phaseword [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9770 (SB_DFF): \OSC.phaseword [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9771 (SB_DFF): \OSC.phaseword [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9772 (SB_DFF): \OSC.phaseword [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9773 (SB_DFF): \OSC.phaseword [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9774 (SB_DFF): \OSC.phaseword [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9776 (SB_DFF): \OSC.phaseword [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9777 (SB_DFF): \OSC.phaseword [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9778 (SB_DFF): \OSC.phaseword [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9779 (SB_DFF): \OSC.phaseword [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9780 (SB_DFF): \OSC.phaseword [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9782 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9783 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9784 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9785 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9786 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9787 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9788 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9757 (SB_DFF): \OSC.phaseword [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9789 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9791 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9792 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9793 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9794 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9795 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9796 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9797 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9798 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9799 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9800 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9801 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9802 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9803 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9804 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9805 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9806 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9807 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9808 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9809 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9810 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9811 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9812 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9813 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9894 (SB_DFFE): \PLL.last_eP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9895 (SB_DFFE): \PLL.last_eP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9896 (SB_DFFE): \PLL.last_eP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9897 (SB_DFFE): \PLL.last_eP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9898 (SB_DFFE): \PLL.last_eP [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9899 (SB_DFFE): \PLL.last_eP [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9900 (SB_DFFE): \PLL.last_eP [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9790 (SB_DFF): \OSC.PHASENAKKUMULATOOOOOR [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9901 (SB_DFFE): \PLL.last_eP [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9903 (SB_DFFE): \PLL.last_eP [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9904 (SB_DFFE): \PLL.last_eP [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9905 (SB_DFFE): \PLL.last_eP [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9906 (SB_DFFE): \PLL.last_eP [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9907 (SB_DFFE): \PLL.last_eP [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9908 (SB_DFFE): \PLL.last_eP [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9909 (SB_DFFE): \PLL.last_eP [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9921 (SB_DFFE): \PLL.eD [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9922 (SB_DFFE): \PLL.eD [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9923 (SB_DFFE): \PLL.eD [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9924 (SB_DFFE): \PLL.eD [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9925 (SB_DFFE): \PLL.eD [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9756 (SB_DFF): \PLL.l_in = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9927 (SB_DFF): \PLL.l2_in = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9926 (SB_DFF): \PLL.pipestep = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9929 (SB_DFFE): \PLL.incr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9930 (SB_DFFE): \PLL.incr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9931 (SB_DFFE): \PLL.incr [3] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9932 (SB_DFFE): \PLL.incr [4] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9902 (SB_DFFE): \PLL.last_eP [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9933 (SB_DFFE): \PLL.incr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9935 (SB_DFFE): \PLL.incr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9936 (SB_DFFE): \PLL.incr [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9937 (SB_DFFE): \PLL.incr [9] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9938 (SB_DFFE): \PLL.incr [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9939 (SB_DFFE): \PLL.incr [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9940 (SB_DFFE): \PLL.incr [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9941 (SB_DFFE): \PLL.incr [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9942 (SB_DFFE): \PLL.incr [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9943 (SB_DFFE): \PLL.incr [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9944 (SB_DFFE): \PLL.incr [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9953 (SB_DFF): \PLL.phase [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9945 (SB_DFF): \PLL.locked = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9947 (SB_DFF): \PLL.phase [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9948 (SB_DFF): \PLL.phase [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9949 (SB_DFF): \PLL.phase [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9950 (SB_DFF): \PLL.phase [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9951 (SB_DFF): \PLL.phase [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9928 (SB_DFFE): \PLL.incr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9952 (SB_DFF): \PLL.phase [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9954 (SB_DFF): \PLL.phase [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9955 (SB_DFF): \PLL.phase [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9956 (SB_DFF): \PLL.phase [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9957 (SB_DFF): \PLL.phase [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9958 (SB_DFF): \PLL.phase [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9959 (SB_DFF): \PLL.phase [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9960 (SB_DFF): \PLL.phase [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9961 (SB_DFF): \PLL.phase [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9962 (SB_DFF): \PLL.phase [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9963 (SB_DFF): \PLL.phase [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9964 (SB_DFF): \PLL.phase [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9965 (SB_DFF): \PLL.phase [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9966 (SB_DFF): \PLL.phase [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9967 (SB_DFF): \PLL.phase [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9968 (SB_DFF): \PLL.phase [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9969 (SB_DFF): \PLL.phase [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9970 (SB_DFF): \PLL.phase [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9971 (SB_DFF): \PLL.phase [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9972 (SB_DFF): \PLL.phase [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9973 (SB_DFF): \PLL.phase [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9974 (SB_DFF): \PLL.phase [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9975 (SB_DFF): \PLL.phase [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$9976 (SB_DFF): \PLL.phase [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10553 (SB_DFFE): \UI_inst.LCD.pos [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10554 (SB_DFFR): \UI_inst.LCD.main_delay_load = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10556 (SB_DFFR): \UI_inst.LCD.main_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10558 (SB_DFFR): \UI_inst.LCD.main_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10559 (SB_DFFR): \UI_inst.LCD.main_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10560 (SB_DFFR): \UI_inst.LCD.main_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10522 (SB_DFFE): \UI_inst.LCD.pos [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10561 (SB_DFFR): \UI_inst.LCD.main_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10563 (SB_DFFR): \UI_inst.LCD.main_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10564 (SB_DFFR): \UI_inst.LCD.main_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10565 (SB_DFFR): \UI_inst.LCD.main_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10567 (SB_DFFR): \UI_inst.LCD.main_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10569 (SB_DFFR): \UI_inst.LCD.main_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10571 (SB_DFFR): \UI_inst.LCD.main_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10576 (SB_DFFE): \UI_inst.LCD.SF_D1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10579 (SB_DFFE): \UI_inst.LCD.SF_D1 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10581 (SB_DFFER): \UI_inst.LCD.display_state [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10562 (SB_DFFR): \UI_inst.LCD.main_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$10582 (SB_DFFER): \UI_inst.LCD.display_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10619 (SB_DFFE): \UI_inst.LCD.tx_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10618 (SB_DFFE): \UI_inst.LCD.SF_D0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$10594 (SB_DFFE): \UI_inst.LCD.tx_delay_value [0] = 0

22.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in top.
  Merging $auto$simplemap.cc:277:simplemap_mux$10058 (A=$auto$wreduce.cc:455:run$3343 [31], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9977 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10027 (A=$auto$wreduce.cc:455:run$3343 [0], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10135 (A=\F2SRAM.SPI_READER.fsm_state_next [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10154 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10136 (A=\F2SRAM.SPI_READER.fsm_state_next [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10155 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10240 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10157 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10241 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10158 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10242 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10159 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10245 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10162 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10243 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10160 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10246 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10163 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10247 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10164 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10248 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10165 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10249 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10166 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10250 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10167 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10251 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10168 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10252 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10169 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10253 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10170 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10254 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10171 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10255 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10172 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10256 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [17], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10173 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10257 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [18], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10174 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10258 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [19], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10175 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10259 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [20], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10176 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10260 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [21], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10177 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10261 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [22], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10178 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10262 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [23], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10179 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10263 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [24], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10180 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10264 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [25], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10181 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10265 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [26], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10182 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10266 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [27], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10183 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10267 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [28], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10184 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10268 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [29], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10269 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [30], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10270 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [31], B=1'1, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10321 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [2], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10313 (A=$auto$simplemap.cc:309:simplemap_lut$10371, B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10188 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10304 (A=$techmap\F2SRAM.SPI_READER.$procmux$1097_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10303 (A=$techmap\F2SRAM.SPI_READER.$procmux$1097_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10305 (A=$techmap\F2SRAM.SPI_READER.$procmux$1097_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10315 (A=$auto$alumacc.cc:474:replace_alu$3690.lcu.p [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10316 (A=$techmap$auto$alumacc.cc:474:replace_alu$3690.$xor$/usr/local/bin/../share/yosys/techmap.v:263$8750_Y [1], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10239 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10156 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10320 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [1], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10322 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [3], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10323 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [4], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10324 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [5], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10325 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [6], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10326 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [7], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10327 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [8], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10328 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [9], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10329 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [10], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10330 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [11], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10331 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [12], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10332 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [13], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10333 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [14], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10334 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [15], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10335 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [16], B=1'1, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10336 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [17], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4206 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$25128 [1], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4143 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13627 (A=$auto$rtlil.cc:1864:Xor$3527, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13519 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13626 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$777_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13521 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13591 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13523 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13592 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13524 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13593 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13525 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13594 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13526 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13595 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13527 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13596 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13528 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13597 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13529 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13598 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13530 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13600 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13532 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13601 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13533 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13602 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13534 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13603 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13535 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13604 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13536 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13605 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13537 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13606 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13538 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13607 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13539 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13557 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13540 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13558 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13541 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13559 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13542 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13560 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13543 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13561 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13544 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13562 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13545 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13563 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13546 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13599 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$786_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13531 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13564 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13547 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13566 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13567 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13568 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13569 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13570 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13571 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13572 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13573 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13754 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13635 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13756 (A=$auto$rtlil.cc:1864:Xor$3520, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13637 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13757 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13758 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13639 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13759 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13640 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13760 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13641 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13761 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13642 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13762 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13643 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13763 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13644 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13764 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13645 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13765 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$807_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13646 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13715 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13647 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13716 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13648 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13717 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13649 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13718 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13650 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13719 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13651 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13720 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13652 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13721 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13653 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13722 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13654 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13724 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13656 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13725 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13657 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13726 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13658 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13727 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13659 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13728 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13660 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13729 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13661 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13730 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13662 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13731 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13663 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13681 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13664 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13682 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13665 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13683 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13666 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13684 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13667 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13685 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13668 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13686 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13669 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13687 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13670 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13723 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$816_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13655 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13688 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13671 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13690 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13673 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13691 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13674 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13692 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13675 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13693 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13676 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13694 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13677 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13695 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13678 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13696 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13679 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13697 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13680 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13903 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13784 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13905 (A=$auto$rtlil.cc:1864:Xor$3513, B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13786 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13906 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13787 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13907 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13788 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13908 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13789 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13689 (A=$techmap\CORDIC.cordicCORE.U1.$procmux$822_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13672 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13909 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13790 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13911 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13792 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13912 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13793 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13913 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13794 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13914 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13795 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13915 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13796 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13916 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13797 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13917 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13798 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13918 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13799 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13868 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13800 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13869 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13801 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13870 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13802 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13871 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13803 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13872 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13804 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13873 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13805 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13874 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13806 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13910 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$837_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13791 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13875 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13807 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13877 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13809 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13878 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13810 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13879 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13811 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13880 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13812 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13881 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13813 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13882 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13814 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13883 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13815 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13884 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13816 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13834 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13817 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13835 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13818 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13836 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13819 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13837 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13820 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13838 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13821 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13839 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13822 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13840 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13823 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13876 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$846_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13808 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13841 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13824 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13843 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13826 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13844 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13827 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13845 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13828 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13846 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13829 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13847 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13830 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13848 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13831 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13849 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13832 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13850 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13833 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14055 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13936 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14056 (A=\CORDIC.cordicCORE.U2.z_1 [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13937 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14058 (A=\CORDIC.cordicCORE.U2.z_1 [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13939 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14059 (A=\CORDIC.cordicCORE.U2.z_1 [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13940 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14060 (A=$auto$simplemap.cc:309:simplemap_lut$26952 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13941 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14061 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13942 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13842 (A=$techmap\CORDIC.cordicCORE.U2.$procmux$852_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13825 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14062 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13943 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14064 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13945 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14065 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13946 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14066 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14067 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14068 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14069 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13950 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14070 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14071 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14021 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14022 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13954 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14023 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13955 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14024 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13956 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14025 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13957 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14026 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13958 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14027 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13959 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14063 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$867_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13944 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14028 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13960 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14030 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13962 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14031 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13963 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14032 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13964 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14033 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13965 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14034 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13966 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14035 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13967 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14036 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13968 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14037 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13969 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13987 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13970 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13988 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13971 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13989 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13972 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13990 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13973 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13991 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13974 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13992 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13975 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13993 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13976 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14029 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$876_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13961 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13994 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13977 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13996 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13979 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13997 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13980 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13998 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13981 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13999 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13982 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14000 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13983 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14001 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13984 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14002 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13985 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14003 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13986 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14208 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14089 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14209 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14090 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14210 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14091 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14211 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14092 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14212 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14093 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14213 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14094 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14214 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14095 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$13995 (A=$techmap\CORDIC.cordicCORE.U3.$procmux$882_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13978 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14215 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14096 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14217 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14098 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14218 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14099 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14219 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14100 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14220 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14101 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14221 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14102 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14222 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14103 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14223 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14104 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14224 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14105 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14174 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14106 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14175 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14107 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14176 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14108 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14177 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14109 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14178 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14110 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14179 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14111 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14180 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14112 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14216 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$897_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14097 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14181 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14113 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14183 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14115 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14184 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14116 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14185 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14117 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14186 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14118 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14187 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14119 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14188 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14120 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14189 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14121 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14190 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14122 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14140 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14123 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14141 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14124 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14142 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14125 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14143 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14126 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14144 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14127 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14145 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14128 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14146 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14129 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14182 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$906_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14114 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14147 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14130 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14149 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14132 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14150 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14133 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14151 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14134 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14152 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14135 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14153 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14136 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14154 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14137 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14155 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14138 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14156 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14139 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14361 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14242 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14362 (A=$auto$simplemap.cc:309:simplemap_lut$25660 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14243 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14363 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14244 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14364 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14245 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14365 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14246 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14366 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14247 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14367 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14248 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14148 (A=$techmap\CORDIC.cordicCORE.U4.$procmux$912_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14131 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14368 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14249 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14370 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14251 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14371 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14252 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14372 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14253 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14373 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14254 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14374 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14255 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14375 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14256 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14376 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14257 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14377 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14258 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14327 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14259 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14328 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14260 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14329 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14261 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14330 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14262 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14331 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14263 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14332 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14264 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14333 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14265 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14369 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$927_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14250 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14334 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14266 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14336 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14268 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14337 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14269 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14338 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14270 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14339 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14271 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14340 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14272 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14341 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14273 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14342 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14274 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14343 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14275 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14293 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14276 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14294 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14277 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14295 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14278 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14296 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14279 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14297 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14280 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14298 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14281 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14299 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14282 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14335 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$936_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14267 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14300 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14283 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14302 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14285 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14303 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14286 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14304 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14287 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14305 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14288 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14306 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14289 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14307 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14290 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14308 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14291 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14309 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14292 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14514 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14395 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14515 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14396 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14516 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14397 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14517 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14398 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14518 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14399 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14519 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14400 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14520 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14401 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14301 (A=$techmap\CORDIC.cordicCORE.U5.$procmux$942_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14284 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14521 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14402 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14523 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14404 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14524 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14405 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14525 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14406 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14526 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14407 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14527 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14408 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14528 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14409 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14529 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14410 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14530 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14411 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14480 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14412 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14481 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14413 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14482 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14414 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14483 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14415 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14484 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14416 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14485 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14417 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14486 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14418 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14522 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$957_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14403 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14487 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14419 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14489 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14421 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14490 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14422 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14491 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14423 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14492 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14424 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14493 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14425 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14494 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14426 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14495 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14427 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14496 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14428 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14446 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14429 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14447 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14430 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14448 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14431 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14449 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14432 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14450 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14433 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14451 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14434 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14452 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14435 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14488 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$966_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14420 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14453 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14436 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14455 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14438 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14456 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14439 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14457 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14440 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14458 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14441 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14459 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14442 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14460 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14443 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14461 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14444 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14462 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14445 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14616 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14617 (A=$auto$simplemap.cc:309:simplemap_lut$25736 [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14549 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14618 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14550 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14619 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14551 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14620 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [4], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14552 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14621 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14553 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14622 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14554 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14454 (A=$techmap\CORDIC.cordicCORE.U6.$procmux$972_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14437 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14623 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14555 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14625 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14557 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14626 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14558 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14627 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14559 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14628 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14560 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14629 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14561 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14630 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14562 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14631 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14563 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14632 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14564 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14582 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [0], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14565 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14583 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [1], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14566 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14584 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [2], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14567 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14585 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [3], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14568 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14587 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14570 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14588 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [6], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14571 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14589 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [7], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14572 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14591 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [9], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14574 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14592 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [10], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14575 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14593 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [11], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14576 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14594 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [12], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14577 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14595 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [13], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14578 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14596 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [14], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14579 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14597 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [15], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14580 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14598 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [16], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14581 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4207 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [2], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4144 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4212 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [7], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4149 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4209 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [4], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4146 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4210 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [5], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4147 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4211 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [6], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4148 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4208 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [3], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4145 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4205 (A=1'0, B=$auto$wreduce.cc:455:run$3333 [0], S=$auto$simplemap.cc:256:simplemap_eqne$4223) into $auto$simplemap.cc:420:simplemap_dff$4142 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8688 (A=$auto$wreduce.cc:455:run$3345 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8383 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$4941 (A=$techmap\DDS.$logic_and$../dds.v:25$525_Y, B=1'0, S=\DDS.iscos) into $auto$simplemap.cc:420:simplemap_dff$4772 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4942 (A=\DDS.iscos, B=1'0, S=\DDS.islast) into $auto$simplemap.cc:420:simplemap_dff$4770 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$4640 (A=1'0, B=$techmap\F2SRAM.$procmux$1144_Y, S=\F2SRAM.busy) into $auto$simplemap.cc:420:simplemap_dff$4410 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5306 (A=1'0, B=$auto$rtlil.cc:1836:ReduceOr$3471, S=$techmap\Filter1.$logic_and$../filter/CIC.v:39$566_Y) into $auto$simplemap.cc:420:simplemap_dff$5012 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10319 (A=$techmap\F2SRAM.SPI_READER.$sub$../spi_flash_reader.v:178$502_Y [0], B=1'0, S=\F2SRAM.spi_go) into $auto$simplemap.cc:420:simplemap_dff$10194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$13565 (A=$techmap\CORDIC.cordicCORE.U0.$procmux$792_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$13548 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$14590 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$1002_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14573 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10244 (A=$techmap\F2SRAM.SPI_READER.$procmux$1103_Y [5], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$10161 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8687 (A=$auto$wreduce.cc:455:run$3345 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8382 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$14624 (A=$techmap\CORDIC.cordicCORE.U7.$procmux$987_Y [8], B=1'0, S=\rst) into $auto$simplemap.cc:420:simplemap_dff$14556 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5231 (A=$auto$alumacc.cc:474:replace_alu$3463.BB [1], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5112 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5230 (A=$auto$wreduce.cc:455:run$3338 [0], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5111 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5232 (A=$auto$wreduce.cc:455:run$3338 [2], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5113 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5233 (A=$auto$wreduce.cc:455:run$3338 [3], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5114 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5234 (A=$auto$wreduce.cc:455:run$3338 [4], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5115 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5235 (A=$auto$wreduce.cc:455:run$3338 [5], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5116 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5236 (A=$auto$wreduce.cc:455:run$3338 [6], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5117 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5237 (A=$auto$wreduce.cc:455:run$3338 [7], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5118 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5239 (A=$auto$wreduce.cc:455:run$3338 [9], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5120 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5240 (A=$auto$wreduce.cc:455:run$3338 [10], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5121 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5238 (A=$auto$wreduce.cc:455:run$3338 [8], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3471) into $auto$simplemap.cc:420:simplemap_dff$5119 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6931 (A=1'0, B=$auto$rtlil.cc:1836:ReduceOr$3462, S=$techmap\Filter1.$logic_and$../filter/CIC.v:39$566_Y) into $auto$simplemap.cc:420:simplemap_dff$6638 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$6855 (A=$auto$wreduce.cc:455:run$3340 [0], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6737 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6856 (A=$auto$alumacc.cc:474:replace_alu$3454.BB [1], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6738 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6857 (A=$auto$wreduce.cc:455:run$3340 [2], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6739 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6858 (A=$auto$wreduce.cc:455:run$3340 [3], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6740 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6859 (A=$auto$wreduce.cc:455:run$3340 [4], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6741 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6860 (A=$auto$wreduce.cc:455:run$3340 [5], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6742 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6862 (A=$auto$wreduce.cc:455:run$3340 [7], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6744 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6864 (A=$auto$wreduce.cc:455:run$3340 [9], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6746 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6865 (A=$auto$wreduce.cc:455:run$3340 [10], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6747 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6861 (A=$auto$wreduce.cc:455:run$3340 [6], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6743 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$6863 (A=$auto$wreduce.cc:455:run$3340 [8], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$3462) into $auto$simplemap.cc:420:simplemap_dff$6745 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$7860 (A=$techmap\CORDIC.$procmux$2990_Y [0], B=1'1, S=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:49$114_Y) into $auto$simplemap.cc:420:simplemap_dff$7856 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$7861 (A=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:30$83_Y, B=1'1, S=$techmap\CORDIC.$logic_and$../cordic/fullcordic.v:49$114_Y) into $auto$simplemap.cc:420:simplemap_dff$7857 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8694 (A=$auto$wreduce.cc:455:run$3345 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8389 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8607 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8450 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8681 (A=$auto$wreduce.cc:455:run$3345 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8376 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8602 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8445 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8601 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8444 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8597 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8440 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8596 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8439 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8690 (A=$auto$wreduce.cc:455:run$3345 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8385 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8605 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8448 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8691 (A=$auto$wreduce.cc:455:run$3345 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8386 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8692 (A=$auto$wreduce.cc:455:run$3345 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8387 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8693 (A=$auto$wreduce.cc:455:run$3345 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8388 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8549 (A=$auto$wreduce.cc:455:run$3351 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8464 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8695 (A=$auto$wreduce.cc:455:run$3345 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8390 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8696 (A=$auto$wreduce.cc:455:run$3345 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8391 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8697 (A=$auto$wreduce.cc:455:run$3345 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8392 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8698 (A=$auto$wreduce.cc:455:run$3345 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8393 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8700 (A=$auto$wreduce.cc:455:run$3345 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8395 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8703 (A=$auto$wreduce.cc:455:run$3345 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8398 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8701 (A=$auto$wreduce.cc:455:run$3345 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8396 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8702 (A=$auto$wreduce.cc:455:run$3345 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8397 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8699 (A=$auto$wreduce.cc:455:run$3345 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8394 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8704 (A=$auto$wreduce.cc:455:run$3345 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8399 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8738 (A=$techmap\UI_inst.$procmux$2950_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8400 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8634 (A=$auto$simplemap.cc:309:simplemap_lut$25945 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8405 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8637 (A=$auto$wreduce.cc:455:run$3344 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8408 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8735 (A=$techmap\UI_inst.$procmux$2956_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8401 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8732 (A=$techmap\UI_inst.$procmux$2962_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8402 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8729 (A=$techmap\UI_inst.$procmux$2968_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8403 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8635 (A=$auto$wreduce.cc:455:run$3344 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8406 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8636 (A=$auto$wreduce.cc:455:run$3344 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8407 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8638 (A=$auto$wreduce.cc:455:run$3344 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8409 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8639 (A=$auto$wreduce.cc:455:run$3344 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8410 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8641 (A=$auto$wreduce.cc:455:run$3344 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8412 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8644 (A=$auto$wreduce.cc:455:run$3344 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8415 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8642 (A=$auto$wreduce.cc:455:run$3344 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8413 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8640 (A=$auto$wreduce.cc:455:run$3344 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8411 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8646 (A=$auto$wreduce.cc:455:run$3344 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8417 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8645 (A=$auto$wreduce.cc:455:run$3344 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8416 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8643 (A=$auto$wreduce.cc:455:run$3344 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8414 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8647 (A=$auto$wreduce.cc:455:run$3344 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8418 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8649 (A=$auto$wreduce.cc:455:run$3344 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8420 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8652 (A=$auto$wreduce.cc:455:run$3344 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8423 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8650 (A=$auto$wreduce.cc:455:run$3344 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8421 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8648 (A=$auto$wreduce.cc:455:run$3344 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8419 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8557 (A=$auto$wreduce.cc:455:run$3351 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8472 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8653 (A=$auto$wreduce.cc:455:run$3344 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8424 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8552 (A=$auto$wreduce.cc:455:run$3351 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8467 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8656 (A=$auto$wreduce.cc:455:run$3344 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8427 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8585 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8428 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8655 (A=$auto$wreduce.cc:455:run$3344 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8426 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8586 (A=$auto$simplemap.cc:309:simplemap_lut$26078 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8429 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8587 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8430 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8588 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8431 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8589 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8432 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8590 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8433 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8591 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8434 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8594 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8437 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8600 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8443 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8633 (A=$auto$wreduce.cc:455:run$3344 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8404 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8686 (A=$auto$wreduce.cc:455:run$3345 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8381 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8685 (A=$auto$wreduce.cc:455:run$3345 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8380 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8595 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8438 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8599 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8442 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8683 (A=$auto$wreduce.cc:455:run$3345 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8378 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8684 (A=$auto$wreduce.cc:455:run$3345 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8379 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8682 (A=$auto$simplemap.cc:309:simplemap_lut$25964 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8377 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8598 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8441 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8603 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8446 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8592 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8435 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8537 (A=$auto$wreduce.cc:455:run$3351 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8452 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8604 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8447 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8540 (A=$auto$wreduce.cc:455:run$3351 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8455 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8689 (A=$auto$wreduce.cc:455:run$3345 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$8384 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8541 (A=$auto$wreduce.cc:455:run$3351 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8456 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8538 (A=$auto$simplemap.cc:309:simplemap_lut$26059 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8453 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8539 (A=$auto$wreduce.cc:455:run$3351 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8454 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8606 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8449 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8608 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8451 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8543 (A=$auto$wreduce.cc:455:run$3351 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8458 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8544 (A=$auto$wreduce.cc:455:run$3351 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8459 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8542 (A=$auto$wreduce.cc:455:run$3351 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8457 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8593 (A=$techmap\UI_inst.$add$../UI/UI.v:92$138_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$8436 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8548 (A=$auto$wreduce.cc:455:run$3351 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8463 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8550 (A=$auto$wreduce.cc:455:run$3351 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8465 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8547 (A=$auto$wreduce.cc:455:run$3351 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8462 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8553 (A=$auto$wreduce.cc:455:run$3351 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8468 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8554 (A=$auto$wreduce.cc:455:run$3351 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8469 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8555 (A=$auto$wreduce.cc:455:run$3351 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8470 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8556 (A=$auto$wreduce.cc:455:run$3351 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8471 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8651 (A=$auto$wreduce.cc:455:run$3344 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8422 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8558 (A=$auto$wreduce.cc:455:run$3351 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8473 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8560 (A=$auto$wreduce.cc:455:run$3351 [23], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8475 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8545 (A=$auto$wreduce.cc:455:run$3351 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8460 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$17716 (A=1'0, B=$techmap$techmap\UI_inst.$procmux$2694.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9504_Y, S=$techmap$techmap\UI_inst.$procmux$2694.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9500_Y) into $auto$simplemap.cc:420:simplemap_dff$8486 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$8559 (A=$auto$wreduce.cc:455:run$3351 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8474 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8546 (A=$auto$wreduce.cc:455:run$3351 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8461 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8551 (A=$auto$wreduce.cc:455:run$3351 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$8466 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$8654 (A=$auto$wreduce.cc:455:run$3344 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$8425 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$18484 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18255 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9764 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18478 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9863_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9758 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18479 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$18206 [1], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9759 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18480 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9865_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9760 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18482 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9867_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9762 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18483 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18264 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9763 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18485 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$18143 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9765 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18486 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9871_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9766 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18481 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9866_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9767 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18487 (A=1'1, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9872_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9768 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18488 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9873_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9769 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18489 (A=1'1, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9874_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9770 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18490 (A=1'1, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9875_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9771 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18491 (A=1'1, B=$auto$simplemap.cc:127:simplemap_reduce$18192 [1], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9772 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18492 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9877_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9773 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18493 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9878_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9774 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18495 (A=1'0, B=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$9880_Y, S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9776 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18496 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18147 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9777 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18494 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18165 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9778 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18497 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18134 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9779 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18498 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18125 [0], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9780 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$18477 (A=1'0, B=$auto$simplemap.cc:127:simplemap_reduce$18179 [2], S=$techmap$techmap\OSC.$procmux$3013.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$9853_Y) into $auto$simplemap.cc:420:simplemap_dff$9757 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10076 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [0], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9894 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10077 (A=$auto$simplemap.cc:309:simplemap_lut$25929, B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9895 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10078 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [2], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9896 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10079 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [3], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9897 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10080 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [4], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9898 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10081 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [5], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9899 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10082 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [6], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9900 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10083 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [7], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9901 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10085 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [9], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9903 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10086 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [10], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9904 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10087 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [11], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9905 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10088 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [12], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9906 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10089 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [13], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9907 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10090 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [14], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9908 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10091 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [15], B=1'0, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9909 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10084 (A=$techmap\PLL.$sub$../pll.v:44$539_Y [8], B=1'1, S=$techmap\PLL.$reduce_or$../pll.v:43$538_Y) into $auto$simplemap.cc:420:simplemap_dff$9902 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10034 (A=$auto$wreduce.cc:455:run$3343 [7], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9953 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10028 (A=$auto$wreduce.cc:455:run$3343 [1], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9947 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10029 (A=$auto$wreduce.cc:455:run$3343 [2], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9948 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10030 (A=$auto$wreduce.cc:455:run$3343 [3], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9949 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10031 (A=$auto$wreduce.cc:455:run$3343 [4], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9950 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10032 (A=$auto$wreduce.cc:455:run$3343 [5], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9951 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10033 (A=$auto$wreduce.cc:455:run$3343 [6], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9952 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10035 (A=$auto$wreduce.cc:455:run$3343 [8], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9954 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10036 (A=$auto$wreduce.cc:455:run$3343 [9], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9955 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10037 (A=$auto$wreduce.cc:455:run$3343 [10], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9956 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10038 (A=$auto$wreduce.cc:455:run$3343 [11], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9957 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10039 (A=$auto$wreduce.cc:455:run$3343 [12], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9958 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10040 (A=$auto$wreduce.cc:455:run$3343 [13], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9959 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10041 (A=$auto$wreduce.cc:455:run$3343 [14], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9960 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10042 (A=$auto$wreduce.cc:455:run$3343 [15], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9961 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10043 (A=$auto$wreduce.cc:455:run$3343 [16], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9962 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10044 (A=$auto$wreduce.cc:455:run$3343 [17], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9963 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10045 (A=$auto$wreduce.cc:455:run$3343 [18], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9964 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10046 (A=$auto$wreduce.cc:455:run$3343 [19], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9965 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10047 (A=$auto$wreduce.cc:455:run$3343 [20], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9966 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10048 (A=$auto$wreduce.cc:455:run$3343 [21], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9967 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10049 (A=$auto$wreduce.cc:455:run$3343 [22], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9968 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10050 (A=$auto$wreduce.cc:455:run$3343 [23], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9969 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10051 (A=$auto$wreduce.cc:455:run$3343 [24], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9970 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10052 (A=$auto$wreduce.cc:455:run$3343 [25], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9971 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10053 (A=$auto$wreduce.cc:455:run$3343 [26], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9972 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10054 (A=$auto$wreduce.cc:455:run$3343 [27], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9973 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10055 (A=$auto$wreduce.cc:455:run$3343 [28], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9974 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10056 (A=$auto$wreduce.cc:455:run$3343 [29], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9975 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$10057 (A=$auto$wreduce.cc:455:run$3343 [30], B=1'0, S=$techmap\PLL.$0\pipestep[0:0]) into $auto$simplemap.cc:420:simplemap_dff$9976 (SB_DFF).

22.39. Executing ICE40_OPT pass (performing simple optimizations).

22.39.1. Running ICE40 specific optimizations.

22.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1107 debug messages>

22.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2241 debug messages>
Removed a total of 747 cells.

22.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

22.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 616 unused cells and 7859 unused wires.
<suppressed ~617 debug messages>

22.39.6. Rerunning OPT passes. (Removed registers in this run.)

22.39.7. Running ICE40 specific optimizations.

22.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

22.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

22.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.39.12. Rerunning OPT passes. (Removed registers in this run.)

22.39.13. Running ICE40 specific optimizations.

22.39.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

22.39.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

22.39.16. Executing OPT_RMDFF pass (remove dff with constant values).

22.39.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

22.39.18. Finished OPT passes. (There is nothing left to do.)

22.40. Executing TECHMAP pass (map to technology primitives).

22.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

22.40.2. Continuing TECHMAP pass.
No more expansions possible.

22.41. Executing ABC pass (technology mapping using ABC).

22.41.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 5805 gates and 7943 wires to a netlist network with 2136 inputs and 1461 outputs.

22.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2029.
ABC: Participating nodes from both networks       =    4440.
ABC: Participating nodes from the first network   =    2078. (  82.69 % of nodes)
ABC: Participating nodes from the second network  =    2362. (  93.99 % of nodes)
ABC: Node pairs (any polarity)                    =    2078. (  82.69 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1643. (  65.38 % of names can be moved)
ABC: Total runtime =     0.11 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

22.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     5014
ABC RESULTS:        internal signals:     4346
ABC RESULTS:           input signals:     2136
ABC RESULTS:          output signals:     1461
Removing temp directory.
Removed 0 unused cells and 3263 unused wires.

22.42. Executing TECHMAP pass (map to technology primitives).

22.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

22.42.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101000111100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101010111000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001101010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001110101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010110000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101010101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110101111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000011110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110010101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011001100110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111001100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100010000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010101011000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111101010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011101110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100100010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010110100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001110101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110001010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011110001011010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001111110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000000010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100001000 for cells of type $lut.
No more expansions possible.
<suppressed ~4875 debug messages>
Removed 0 unused cells and 4998 unused wires.

22.43. Executing HIERARCHY pass (managing design hierarchy).

22.43.1. Analyzing design hierarchy..
Top module:  \top

22.43.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

22.44. Printing statistics.

=== top ===

   Number of wires:               3896
   Number of wire bits:          11824
   Number of public wires:         503
   Number of public wire bits:    6030
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7028
     SB_CARRY                     1528
     SB_DFF                        350
     SB_DFFE                       523
     SB_DFFER                        8
     SB_DFFESR                     130
     SB_DFFESS                      31
     SB_DFFN                        16
     SB_DFFR                        14
     SB_DFFSR                      454
     SB_DFFSS                       17
     SB_IO                           4
     SB_LUT4                      3938
     SB_MAC16                        2
     SB_RAM40_4K                     9
     SB_SPRAM256KA                   4

22.45. Executing CHECK pass (checking for obvious problems).
checking module top..
found and reported 0 problems.

22.46. Executing JSON backend.

Warnings: 51 unique messages, 52 total
End of script. Logfile hash: 2a630a0674
CPU: user 21.75s system 0.08s, MEM: 124.05 MB total, 89.48 MB resident
Yosys 0.9 (git sha1 4c89a4e6, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 27% 34x opt_clean (6 sec), 22% 37x opt_expr (4 sec), 21% 30x opt_merge (4 sec), ...
