
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 4c89a4e6, clang 6.0.0-1ubuntu2 -fPIC -Os)


-- Parsing `filterdemo.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: filterdemo.v
Parsing Verilog input from `filterdemo.v' to AST representation.
Generating RTLIL representation for module `\filterdemo'.
Successfully finished Verilog frontend.

-- Parsing `../adc_host.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ../adc_host.v
Parsing Verilog input from `../adc_host.v' to AST representation.
Generating RTLIL representation for module `\adc_host'.
Successfully finished Verilog frontend.

-- Parsing `../filter/CIC.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: ../filter/CIC.v
Parsing Verilog input from `../filter/CIC.v' to AST representation.
Generating RTLIL representation for module `\CIC'.
Successfully finished Verilog frontend.

-- Parsing `../filter/dpram_64x8.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: ../filter/dpram_64x8.v
Parsing Verilog input from `../filter/dpram_64x8.v' to AST representation.
Generating RTLIL representation for module `\dpram_64x8'.
Successfully finished Verilog frontend.

-- Parsing `../cordic/cordic.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: ../cordic/cordic.v
Parsing Verilog input from `../cordic/cordic.v' to AST representation.
Generating RTLIL representation for module `\signed_shifter'.
Generating RTLIL representation for module `\rotator'.
Generating RTLIL representation for module `\cordic'.
Successfully finished Verilog frontend.

-- Parsing `../UI/UI.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: ../UI/UI.v
Parsing Verilog input from `../UI/UI.v' to AST representation.
Generating RTLIL representation for module `\UI'.
Successfully finished Verilog frontend.

-- Parsing `../UI/BinToLCD.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: ../UI/BinToLCD.v
Parsing Verilog input from `../UI/BinToLCD.v' to AST representation.
Generating RTLIL representation for module `\BinToLCD'.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_defines.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: ../UI/lcd_defines.v
Parsing Verilog input from `../UI/lcd_defines.v' to AST representation.
Successfully finished Verilog frontend.

-- Parsing `../UI/lcd_display.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: ../UI/lcd_display.v
Parsing Verilog input from `../UI/lcd_display.v' to AST representation.
Generating RTLIL representation for module `\lcd'.
Successfully finished Verilog frontend.

-- Parsing `../UI/delay_counter.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: ../UI/delay_counter.v
Parsing Verilog input from `../UI/delay_counter.v' to AST representation.
Generating RTLIL representation for module `\delay_counter'.
Successfully finished Verilog frontend.

-- Parsing `../sram16x16.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: ../sram16x16.v
Parsing Verilog input from `../sram16x16.v' to AST representation.
Generating RTLIL representation for module `\sram16x16'.
Successfully finished Verilog frontend.

-- Parsing `../Flash_to_SRAM.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: ../Flash_to_SRAM.v
Parsing Verilog input from `../Flash_to_SRAM.v' to AST representation.
Generating RTLIL representation for module `\Flash_to_SRAM'.
Successfully finished Verilog frontend.

-- Parsing `../spi_flash_reader.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: ../spi_flash_reader.v
Parsing Verilog input from `../spi_flash_reader.v' to AST representation.
Generating RTLIL representation for module `\spi_flash_reader'.
Successfully finished Verilog frontend.

-- Parsing `../sigma_delta.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: ../sigma_delta.v
Parsing Verilog input from `../sigma_delta.v' to AST representation.
Generating RTLIL representation for module `\sigma_delta'.
Successfully finished Verilog frontend.

-- Parsing `../dds.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: ../dds.v
Parsing Verilog input from `../dds.v' to AST representation.
Generating RTLIL representation for module `\dds'.
Successfully finished Verilog frontend.

-- Parsing `../mult16x16.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: ../mult16x16.v
Parsing Verilog input from `../mult16x16.v' to AST representation.
Generating RTLIL representation for module `\mult16x16'.
Successfully finished Verilog frontend.

-- Parsing `../pll.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: ../pll.v
Parsing Verilog input from `../pll.v' to AST representation.
Generating RTLIL representation for module `\pll'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top filterdemo -json yosysout.json' --

18. Executing SYNTH_ICE40 pass.

18.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Successfully finished Verilog frontend.

18.2. Executing HIERARCHY pass (managing design hierarchy).

18.2.1. Analyzing design hierarchy..
Top module:  \filterdemo
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \CIC
Used module:         \dpram_64x8
Used module:     \UI
Used module:         \lcd
Used module:             \delay_counter
Used module:         \BinToLCD

18.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\delay_counter'.
Parameter \counter_width = 20
Generating RTLIL representation for module `$paramod\delay_counter\counter_width=20'.

18.2.3. Analyzing design hierarchy..
Top module:  \filterdemo
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \CIC
Used module:         \dpram_64x8
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD

18.2.4. Analyzing design hierarchy..
Top module:  \filterdemo
Used module:     \adc_host
Used module:     \sigma_delta
Used module:     \CIC
Used module:         \dpram_64x8
Used module:     \UI
Used module:         \lcd
Used module:             $paramod\delay_counter\counter_width=20
Used module:         \BinToLCD
Removing unused module `\pll'.
Removing unused module `\mult16x16'.
Removing unused module `\dds'.
Removing unused module `\spi_flash_reader'.
Removing unused module `\Flash_to_SRAM'.
Removing unused module `\sram16x16'.
Removing unused module `\delay_counter'.
Removing unused module `\cordic'.
Removing unused module `\rotator'.
Removing unused module `\signed_shifter'.
Removed 10 unused modules.
Mapping positional arguments of cell UI.LCD (lcd).
Mapping positional arguments of cell UI.diplay_number (BinToLCD).
Mapping positional arguments of cell CIC.combram (dpram_64x8).
Mapping positional arguments of cell filterdemo.adc_host_hi (adc_host).
Mapping positional arguments of cell filterdemo.DAC2 (sigma_delta).
Mapping positional arguments of cell filterdemo.DAC1 (sigma_delta).
Mapping positional arguments of cell filterdemo.Filter (CIC).
Mapping positional arguments of cell filterdemo.UI_inst (UI).
Warning: Resizing cell port lcd.ram40_4kinst_physical.WDATA from 8 bits to 16 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RADDR from 32 bits to 11 bits.
Warning: Resizing cell port lcd.ram40_4kinst_physical.RDATA from 8 bits to 16 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k3.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k2.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k1.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.WADDR from 8 bits to 11 bits.
Warning: Resizing cell port dpram_64x8.ram40_4k0.RADDR from 8 bits to 11 bits.
Warning: Resizing cell port CIC.combram.indat from 49 bits to 64 bits.
Warning: Resizing cell port CIC.combram.outdat from 49 bits to 64 bits.
Warning: Resizing cell port filterdemo.UI_inst.Ang from 32 bits to 17 bits.

18.3. Executing PROC pass (convert processes to netlists).

18.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

18.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$../UI/delay_counter.v:62$515 in module $paramod\delay_counter\counter_width=20.
Marked 1 switch rules as full_case in process $proc$../UI/lcd_display.v:435$387 in module lcd.
Marked 4 switch rules as full_case in process $proc$../UI/lcd_display.v:219$379 in module lcd.
Removed 1 dead cases from process $proc$../UI/BinToLCD.v:36$167 in module BinToLCD.
Marked 20 switch rules as full_case in process $proc$../UI/BinToLCD.v:36$167 in module BinToLCD.
Marked 5 switch rules as full_case in process $proc$../UI/UI.v:125$96 in module UI.
Marked 1 switch rules as full_case in process $proc$../adc_host.v:29$18 in module adc_host.
Removed a total of 1 dead cases.

18.3.3. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\sigma_delta.$proc$../sigma_delta.v:13$481'.
  Set init value: \acc = 17'00000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:201$401'.
  Set init value: \tx_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:200$400'.
  Set init value: \main_delay_load = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:196$399'.
  Set init value: \tx_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:195$398'.
  Set init value: \main_delay_value = 20'00000000000000000000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:170$397'.
  Set init value: \LCD_E1 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:169$396'.
  Set init value: \LCD_E0 = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:168$395'.
  Set init value: \SF_D1 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:167$394'.
  Set init value: \SF_D0 = 4'0000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:106$393'.
  Set init value: \pos = 0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:105$392'.
  Set init value: \display_state = 5'00000
Found init rule in `\lcd.$proc$../UI/lcd_display.v:77$391'.
  Set init value: \tx_done = 1'0
Found init rule in `\lcd.$proc$../UI/lcd_display.v:74$390'.
  Set init value: \tx_state = 3'110
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:32$355'.
  Set init value: \holdoff = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:31$354'.
  Set init value: \difference = 33'000000000000000000000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:28$353'.
  Set init value: \dec = 4'0000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$352'.
  Set init value: \summand = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$351'.
  Set init value: \secondlastacc = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$350'.
  Set init value: \lastacc = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:27$349'.
  Set init value: \rest = 0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:26$348'.
  Set init value: \acc = 33'000000000000000000000000000000000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:24$347'.
  Set init value: \pos = 5'00000
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$346'.
  Set init value: \leadz = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$345'.
  Set init value: \updating = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:22$344'.
  Set init value: \lastupdate = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:20$343'.
  Set init value: \we = 1'0
Found init rule in `\BinToLCD.$proc$../UI/BinToLCD.v:15$342'.
  Set init value: \dat = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:67$165'.
  Set init value: \dispdone = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:66$164'.
  Set init value: \disppos = 5'00000
Found init rule in `\UI.$proc$../UI/UI.v:65$163'.
  Set init value: \repaintS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:65$162'.
  Set init value: \weS = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:64$161'.
  Set init value: \datS = 8'00000000
Found init rule in `\UI.$proc$../UI/UI.v:63$160'.
  Set init value: \ismagphase = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:51$159'.
  Set init value: \state = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:48$158'.
  Set init value: \btnt3 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:48$157'.
  Set init value: \btnt2 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:48$156'.
  Set init value: \btnt1 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:48$155'.
  Set init value: \btnt0 = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:47$154'.
  Set init value: \cnt3 = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:47$153'.
  Set init value: \cnt2 = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:47$152'.
  Set init value: \cnt1 = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:47$151'.
  Set init value: \cnt0 = 23'00000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:46$150'.
  Set init value: \BP = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:41$149'.
  Set init value: \update = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:39$148'.
  Set init value: \count = 24'000000000000000000000000
Found init rule in `\UI.$proc$../UI/UI.v:27$147'.
  Set init value: \refIO = 1'0
Found init rule in `\UI.$proc$../UI/UI.v:24$146'.
  Set init value: \refampl = 2'00
Found init rule in `\UI.$proc$../UI/UI.v:23$145'.
  Set init value: \reffreq = 3'000
Found init rule in `\UI.$proc$../UI/UI.v:22$144'.
  Set init value: \TC = 4'0000
Found init rule in `\UI.$proc$../UI/UI.v:21$143'.
  Set init value: \gain = 2'00
Found init rule in `\CIC.$proc$../filter/CIC.v:26$50'.
  Set init value: \we = 1'0
Found init rule in `\CIC.$proc$../filter/CIC.v:25$49'.
  Set init value: \inaddr = 8'00000000
Found init rule in `\CIC.$proc$../filter/CIC.v:23$48'.
  Set init value: \OUTpipe = 49'0000000000000000000000000000000000000000000000000
Found init rule in `\CIC.$proc$../filter/CIC.v:23$47'.
  Set init value: \I0 = 49'0000000000000000000000000000000000000000000000000
Found init rule in `\CIC.$proc$../filter/CIC.v:21$46'.
  Set init value: \tickcount = 11'00000000000
Found init rule in `\CIC.$proc$../filter/CIC.v:20$45'.
  Set init value: \lasttick = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:23$30'.
  Set init value: \shiftdata = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:22$29'.
  Set init value: \count = 8'00000000
Found init rule in `\adc_host.$proc$../adc_host.v:21$28'.
  Set init value: \acq = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:19$27'.
  Set init value: \newdata = 1'0
Found init rule in `\adc_host.$proc$../adc_host.v:17$26'.
  Set init value: \data = 16'0000000000000000
Found init rule in `\adc_host.$proc$../adc_host.v:14$25'.
  Set init value: \CONVST = 1'0
Found init rule in `\filterdemo.$proc$filterdemo.v:90$14'.
  Set init value: \loadlookup = 1'0
Found init rule in `\filterdemo.$proc$filterdemo.v:70$13'.
  Set init value: \cnt = 0
Found init rule in `\filterdemo.$proc$filterdemo.v:69$12'.
  Set init value: \rst = 1'1
Found init rule in `\filterdemo.$proc$filterdemo.v:64$11'.
  Set init value: \outstuff = 16'0000000000000000

18.3.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:435$387'.
Found async reset \reset in `\lcd.$proc$../UI/lcd_display.v:219$379'.

18.3.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$515'.
     1/1: $0\counter[19:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:13$481'.
     1/1: $1\acc[16:0]
Creating decoders for process `\sigma_delta.$proc$../sigma_delta.v:17$479'.
     1/1: $0\acc[16:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:201$401'.
     1/1: $1\tx_delay_load[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:200$400'.
     1/1: $1\main_delay_load[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:196$399'.
     1/1: $1\tx_delay_value[19:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:195$398'.
     1/1: $1\main_delay_value[19:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:170$397'.
     1/1: $1\LCD_E1[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:169$396'.
     1/1: $1\LCD_E0[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:168$395'.
     1/1: $1\SF_D1[3:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:167$394'.
     1/1: $1\SF_D0[3:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:106$393'.
     1/1: $1\pos[31:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:105$392'.
     1/1: $1\display_state[4:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:77$391'.
     1/1: $1\tx_done[0:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:74$390'.
     1/1: $1\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:435$387'.
     1/6: $0\tx_delay_load[0:0]
     2/6: $0\tx_delay_value[19:0]
     3/6: $0\LCD_E0[0:0]
     4/6: $0\SF_D0[3:0]
     5/6: $0\tx_done[0:0]
     6/6: $0\tx_state[2:0]
Creating decoders for process `\lcd.$proc$../UI/lcd_display.v:219$379'.
     1/7: $0\main_delay_load[0:0]
     2/7: $0\main_delay_value[19:0]
     3/7: $0\LCD_E1[0:0]
     4/7: $0\SF_D1[3:0]
     5/7: $0\display_state[4:0]
     6/7: $0\tx_byte[7:0]
     7/7: $0\pos[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:32$355'.
     1/1: $1\holdoff[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:31$354'.
     1/1: $1\difference[32:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:28$353'.
     1/1: $1\dec[3:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$352'.
     1/1: $1\summand[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$351'.
     1/1: $1\secondlastacc[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$350'.
     1/1: $1\lastacc[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:27$349'.
     1/1: $21\rest[31:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:26$348'.
     1/1: $1\acc[32:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:24$347'.
     1/1: $1\pos[4:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$346'.
     1/1: $1\leadz[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$345'.
     1/1: $1\updating[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:22$344'.
     1/1: $1\lastupdate[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:20$343'.
     1/1: $1\we[0:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:15$342'.
     1/1: $1\dat[7:0]
Creating decoders for process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
     1/34: $20\rest[31:0]
     2/34: $19\rest[31:0]
     3/34: $18\rest[31:0]
     4/34: $17\rest[31:0]
     5/34: $16\rest[31:0]
     6/34: $15\rest[31:0]
     7/34: $14\rest[31:0]
     8/34: $13\rest[31:0]
     9/34: $12\rest[31:0]
    10/34: $11\rest[31:0]
    11/34: $10\rest[31:0]
    12/34: $9\rest[31:0]
    13/34: $8\rest[31:0]
    14/34: $7\rest[31:0]
    15/34: $6\rest[31:0]
    16/34: $5\rest[31:0]
    17/34: $4\rest[31:0]
    18/34: $3\rest[31:0]
    19/34: $2\rest[31:0]
    20/34: $1\rest[31:0]
    21/34: $0\rest[31:0]
    22/34: $0\lastupdate[0:0]
    23/34: $0\holdoff[0:0]
    24/34: $0\difference[32:0]
    25/34: $0\dec[3:0]
    26/34: $0\pos[4:0]
    27/34: $0\leadz[0:0]
    28/34: $0\updating[0:0]
    29/34: $0\summand[31:0]
    30/34: $0\secondlastacc[31:0]
    31/34: $0\lastacc[31:0]
    32/34: $0\acc[32:0]
    33/34: $0\dat[7:0]
    34/34: $0\we[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:67$165'.
     1/1: $1\dispdone[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:66$164'.
     1/1: $1\disppos[4:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:65$163'.
     1/1: $1\repaintS[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:65$162'.
     1/1: $1\weS[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:64$161'.
     1/1: $1\datS[7:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:63$160'.
     1/1: $1\ismagphase[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:51$159'.
     1/1: $1\state[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$158'.
     1/1: $1\btnt3[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$157'.
     1/1: $1\btnt2[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$156'.
     1/1: $1\btnt1[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:48$155'.
     1/1: $1\btnt0[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$154'.
     1/1: $1\cnt3[22:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$153'.
     1/1: $1\cnt2[22:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$152'.
     1/1: $1\cnt1[22:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:47$151'.
     1/1: $1\cnt0[22:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:46$150'.
     1/1: $1\BP[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:41$149'.
     1/1: $1\update[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:39$148'.
     1/1: $1\count[23:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:27$147'.
     1/1: $1\refIO[0:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:24$146'.
     1/1: $1\refampl[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:23$145'.
     1/1: $1\reffreq[2:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:22$144'.
     1/1: $1\TC[3:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:21$143'.
     1/1: $1\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:125$96'.
     1/14: $0\state[3:0]
     2/14: $0\update[0:0]
     3/14: $0\weS[0:0]
     4/14: $0\repaintS[0:0]
     5/14: $0\count[23:0]
     6/14: $0\dispdone[0:0]
     7/14: $0\disppos[4:0]
     8/14: $0\datS[7:0]
     9/14: $0\ismagphase[0:0]
    10/14: $0\refIO[0:0]
    11/14: $0\refampl[1:0]
    12/14: $0\reffreq[2:0]
    13/14: $0\TC[3:0]
    14/14: $0\gain[1:0]
Creating decoders for process `\UI.$proc$../UI/UI.v:72$76'.
     1/12: $0\BP[3:0] [3]
     2/12: $0\BP[3:0] [2]
     3/12: $0\BP[3:0] [1]
     4/12: $0\BP[3:0] [0]
     5/12: $0\btnt3[0:0]
     6/12: $0\btnt2[0:0]
     7/12: $0\btnt1[0:0]
     8/12: $0\btnt0[0:0]
     9/12: $0\cnt3[22:0]
    10/12: $0\cnt2[22:0]
    11/12: $0\cnt1[22:0]
    12/12: $0\cnt0[22:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:26$50'.
     1/1: $1\we[0:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:25$49'.
     1/1: $1\inaddr[7:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:23$48'.
     1/1: $1\OUTpipe[48:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:23$47'.
     1/1: $1\I0[48:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:21$46'.
     1/1: $1\tickcount[10:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:20$45'.
     1/1: $1\lasttick[0:0]
Creating decoders for process `\CIC.$proc$../filter/CIC.v:33$31'.
     1/8: $0\OUTpipe[48:0]
     2/8: $0\outaddr[7:0]
     3/8: $0\lasttick[0:0]
     4/8: $0\we[0:0]
     5/8: $0\inaddr[7:0]
     6/8: $0\I0[48:0]
     7/8: $0\tickcount[10:0]
     8/8: $0\OUT[31:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:23$30'.
     1/1: $1\shiftdata[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:22$29'.
     1/1: $1\count[7:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:21$28'.
     1/1: $1\acq[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:19$27'.
     1/1: $1\newdata[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:17$26'.
     1/1: $1\data[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:14$25'.
     1/1: $1\CONVST[0:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:46$24'.
     1/1: $0\shiftdata[15:0]
Creating decoders for process `\adc_host.$proc$../adc_host.v:29$18'.
     1/5: $0\newdata[0:0]
     2/5: $0\acq[0:0]
     3/5: $0\data[15:0]
     4/5: $0\count[7:0]
     5/5: $0\CONVST[0:0]
Creating decoders for process `\filterdemo.$proc$filterdemo.v:90$14'.
     1/1: $1\loadlookup[0:0]
Creating decoders for process `\filterdemo.$proc$filterdemo.v:70$13'.
     1/1: $1\cnt[31:0]
Creating decoders for process `\filterdemo.$proc$filterdemo.v:69$12'.
     1/1: $1\rst[0:0]
Creating decoders for process `\filterdemo.$proc$filterdemo.v:64$11'.
     1/1: $1\outstuff[15:0]
Creating decoders for process `\filterdemo.$proc$filterdemo.v:112$4'.
     1/4: $0\outstuff[15:0]
     2/4: $0\cnt[31:0]
     3/4: $0\loadlookup[0:0]
     4/4: $0\rst[0:0]

18.3.6. Executing PROC_DLATCH pass (convert process syncs to latches).

18.3.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\delay_counter\counter_width=20.\counter' using process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$515'.
  created $dff cell `$procdff$2526' with positive edge clock.
Creating register for signal `\sigma_delta.\acc' using process `\sigma_delta.$proc$../sigma_delta.v:17$479'.
  created $dff cell `$procdff$2527' with positive edge clock.
Creating register for signal `\lcd.\tx_state' using process `\lcd.$proc$../UI/lcd_display.v:435$387'.
  created $adff cell `$procdff$2528' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\tx_done' using process `\lcd.$proc$../UI/lcd_display.v:435$387'.
  created $dff cell `$procdff$2529' with positive edge clock.
Creating register for signal `\lcd.\SF_D0' using process `\lcd.$proc$../UI/lcd_display.v:435$387'.
  created $dff cell `$procdff$2530' with positive edge clock.
Creating register for signal `\lcd.\LCD_E0' using process `\lcd.$proc$../UI/lcd_display.v:435$387'.
  created $dff cell `$procdff$2531' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:435$387'.
  created $dff cell `$procdff$2532' with positive edge clock.
Creating register for signal `\lcd.\tx_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:435$387'.
  created $dff cell `$procdff$2533' with positive edge clock.
Creating register for signal `\lcd.\pos' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $dff cell `$procdff$2534' with positive edge clock.
Creating register for signal `\lcd.\tx_byte' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $dff cell `$procdff$2535' with positive edge clock.
Creating register for signal `\lcd.\display_state' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $adff cell `$procdff$2536' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\SF_D1' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $dff cell `$procdff$2537' with positive edge clock.
Creating register for signal `\lcd.\LCD_E1' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $dff cell `$procdff$2538' with positive edge clock.
Creating register for signal `\lcd.\main_delay_value' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $adff cell `$procdff$2539' with positive edge clock and positive level reset.
Creating register for signal `\lcd.\main_delay_load' using process `\lcd.$proc$../UI/lcd_display.v:219$379'.
  created $adff cell `$procdff$2540' with positive edge clock and positive level reset.
Creating register for signal `\BinToLCD.\we' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2541' with positive edge clock.
Creating register for signal `\BinToLCD.\dat' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2542' with positive edge clock.
Creating register for signal `\BinToLCD.\rest' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2543' with positive edge clock.
Creating register for signal `\BinToLCD.\acc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2544' with positive edge clock.
Creating register for signal `\BinToLCD.\lastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2545' with positive edge clock.
Creating register for signal `\BinToLCD.\secondlastacc' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2546' with positive edge clock.
Creating register for signal `\BinToLCD.\summand' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2547' with positive edge clock.
Creating register for signal `\BinToLCD.\lastupdate' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2548' with positive edge clock.
Creating register for signal `\BinToLCD.\updating' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2549' with positive edge clock.
Creating register for signal `\BinToLCD.\leadz' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2550' with positive edge clock.
Creating register for signal `\BinToLCD.\pos' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2551' with positive edge clock.
Creating register for signal `\BinToLCD.\dec' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2552' with positive edge clock.
Creating register for signal `\BinToLCD.\difference' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2553' with positive edge clock.
Creating register for signal `\BinToLCD.\holdoff' using process `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
  created $dff cell `$procdff$2554' with positive edge clock.
Creating register for signal `\UI.\gain' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2555' with positive edge clock.
Creating register for signal `\UI.\TC' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2556' with positive edge clock.
Creating register for signal `\UI.\reffreq' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2557' with positive edge clock.
Creating register for signal `\UI.\refampl' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2558' with positive edge clock.
Creating register for signal `\UI.\refIO' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2559' with positive edge clock.
Creating register for signal `\UI.\count' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2560' with positive edge clock.
Creating register for signal `\UI.\update' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2561' with positive edge clock.
Creating register for signal `\UI.\state' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2562' with positive edge clock.
Creating register for signal `\UI.\ismagphase' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2563' with positive edge clock.
Creating register for signal `\UI.\datS' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2564' with positive edge clock.
Creating register for signal `\UI.\weS' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2565' with positive edge clock.
Creating register for signal `\UI.\repaintS' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2566' with positive edge clock.
Creating register for signal `\UI.\disppos' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2567' with positive edge clock.
Creating register for signal `\UI.\dispdone' using process `\UI.$proc$../UI/UI.v:125$96'.
  created $dff cell `$procdff$2568' with positive edge clock.
Creating register for signal `\UI.\BP' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2569' with positive edge clock.
Creating register for signal `\UI.\cnt0' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2570' with positive edge clock.
Creating register for signal `\UI.\cnt1' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2571' with positive edge clock.
Creating register for signal `\UI.\cnt2' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2572' with positive edge clock.
Creating register for signal `\UI.\cnt3' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2573' with positive edge clock.
Creating register for signal `\UI.\btnt0' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2574' with positive edge clock.
Creating register for signal `\UI.\btnt1' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2575' with positive edge clock.
Creating register for signal `\UI.\btnt2' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2576' with positive edge clock.
Creating register for signal `\UI.\btnt3' using process `\UI.$proc$../UI/UI.v:72$76'.
  created $dff cell `$procdff$2577' with positive edge clock.
Creating register for signal `\CIC.\OUT' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2578' with positive edge clock.
Creating register for signal `\CIC.\lasttick' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2579' with positive edge clock.
Creating register for signal `\CIC.\tickcount' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2580' with positive edge clock.
Creating register for signal `\CIC.\I0' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2581' with positive edge clock.
Creating register for signal `\CIC.\OUTpipe' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2582' with positive edge clock.
Creating register for signal `\CIC.\inaddr' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2583' with positive edge clock.
Creating register for signal `\CIC.\we' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2584' with positive edge clock.
Creating register for signal `\CIC.\outaddr' using process `\CIC.$proc$../filter/CIC.v:33$31'.
  created $dff cell `$procdff$2585' with positive edge clock.
Creating register for signal `\adc_host.\shiftdata' using process `\adc_host.$proc$../adc_host.v:46$24'.
  created $dff cell `$procdff$2586' with negative edge clock.
Creating register for signal `\adc_host.\CONVST' using process `\adc_host.$proc$../adc_host.v:29$18'.
  created $dff cell `$procdff$2587' with positive edge clock.
Creating register for signal `\adc_host.\newdata' using process `\adc_host.$proc$../adc_host.v:29$18'.
  created $dff cell `$procdff$2588' with positive edge clock.
Creating register for signal `\adc_host.\count' using process `\adc_host.$proc$../adc_host.v:29$18'.
  created $dff cell `$procdff$2589' with positive edge clock.
Creating register for signal `\adc_host.\data' using process `\adc_host.$proc$../adc_host.v:29$18'.
  created $dff cell `$procdff$2590' with positive edge clock.
Creating register for signal `\adc_host.\acq' using process `\adc_host.$proc$../adc_host.v:29$18'.
  created $dff cell `$procdff$2591' with positive edge clock.
Creating register for signal `\filterdemo.\outstuff' using process `\filterdemo.$proc$filterdemo.v:112$4'.
  created $dff cell `$procdff$2592' with positive edge clock.
Creating register for signal `\filterdemo.\rst' using process `\filterdemo.$proc$filterdemo.v:112$4'.
  created $dff cell `$procdff$2593' with positive edge clock.
Creating register for signal `\filterdemo.\cnt' using process `\filterdemo.$proc$filterdemo.v:112$4'.
  created $dff cell `$procdff$2594' with positive edge clock.
Creating register for signal `\filterdemo.\loadlookup' using process `\filterdemo.$proc$filterdemo.v:112$4'.
  created $dff cell `$procdff$2595' with positive edge clock.

18.3.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$515'.
Removing empty process `$paramod\delay_counter\counter_width=20.$proc$../UI/delay_counter.v:62$515'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:13$481'.
Removing empty process `sigma_delta.$proc$../sigma_delta.v:17$479'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:201$401'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:200$400'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:196$399'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:195$398'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:170$397'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:169$396'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:168$395'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:167$394'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:106$393'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:105$392'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:77$391'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:74$390'.
Found and cleaned up 8 empty switches in `\lcd.$proc$../UI/lcd_display.v:435$387'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:435$387'.
Found and cleaned up 22 empty switches in `\lcd.$proc$../UI/lcd_display.v:219$379'.
Removing empty process `lcd.$proc$../UI/lcd_display.v:219$379'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:32$355'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:31$354'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:28$353'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$352'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$351'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$350'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:27$349'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:26$348'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:24$347'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$346'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$345'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:22$344'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:20$343'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:15$342'.
Found and cleaned up 83 empty switches in `\BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
Removing empty process `BinToLCD.$proc$../UI/BinToLCD.v:36$167'.
Removing empty process `UI.$proc$../UI/UI.v:67$165'.
Removing empty process `UI.$proc$../UI/UI.v:66$164'.
Removing empty process `UI.$proc$../UI/UI.v:65$163'.
Removing empty process `UI.$proc$../UI/UI.v:65$162'.
Removing empty process `UI.$proc$../UI/UI.v:64$161'.
Removing empty process `UI.$proc$../UI/UI.v:63$160'.
Removing empty process `UI.$proc$../UI/UI.v:51$159'.
Removing empty process `UI.$proc$../UI/UI.v:48$158'.
Removing empty process `UI.$proc$../UI/UI.v:48$157'.
Removing empty process `UI.$proc$../UI/UI.v:48$156'.
Removing empty process `UI.$proc$../UI/UI.v:48$155'.
Removing empty process `UI.$proc$../UI/UI.v:47$154'.
Removing empty process `UI.$proc$../UI/UI.v:47$153'.
Removing empty process `UI.$proc$../UI/UI.v:47$152'.
Removing empty process `UI.$proc$../UI/UI.v:47$151'.
Removing empty process `UI.$proc$../UI/UI.v:46$150'.
Removing empty process `UI.$proc$../UI/UI.v:41$149'.
Removing empty process `UI.$proc$../UI/UI.v:39$148'.
Removing empty process `UI.$proc$../UI/UI.v:27$147'.
Removing empty process `UI.$proc$../UI/UI.v:24$146'.
Removing empty process `UI.$proc$../UI/UI.v:23$145'.
Removing empty process `UI.$proc$../UI/UI.v:22$144'.
Removing empty process `UI.$proc$../UI/UI.v:21$143'.
Found and cleaned up 44 empty switches in `\UI.$proc$../UI/UI.v:125$96'.
Removing empty process `UI.$proc$../UI/UI.v:125$96'.
Found and cleaned up 12 empty switches in `\UI.$proc$../UI/UI.v:72$76'.
Removing empty process `UI.$proc$../UI/UI.v:72$76'.
Removing empty process `CIC.$proc$../filter/CIC.v:26$50'.
Removing empty process `CIC.$proc$../filter/CIC.v:25$49'.
Removing empty process `CIC.$proc$../filter/CIC.v:23$48'.
Removing empty process `CIC.$proc$../filter/CIC.v:23$47'.
Removing empty process `CIC.$proc$../filter/CIC.v:21$46'.
Removing empty process `CIC.$proc$../filter/CIC.v:20$45'.
Found and cleaned up 3 empty switches in `\CIC.$proc$../filter/CIC.v:33$31'.
Removing empty process `CIC.$proc$../filter/CIC.v:33$31'.
Removing empty process `adc_host.$proc$../adc_host.v:23$30'.
Removing empty process `adc_host.$proc$../adc_host.v:22$29'.
Removing empty process `adc_host.$proc$../adc_host.v:21$28'.
Removing empty process `adc_host.$proc$../adc_host.v:19$27'.
Removing empty process `adc_host.$proc$../adc_host.v:17$26'.
Removing empty process `adc_host.$proc$../adc_host.v:14$25'.
Removing empty process `adc_host.$proc$../adc_host.v:46$24'.
Found and cleaned up 5 empty switches in `\adc_host.$proc$../adc_host.v:29$18'.
Removing empty process `adc_host.$proc$../adc_host.v:29$18'.
Removing empty process `filterdemo.$proc$filterdemo.v:90$14'.
Removing empty process `filterdemo.$proc$filterdemo.v:70$13'.
Removing empty process `filterdemo.$proc$filterdemo.v:69$12'.
Removing empty process `filterdemo.$proc$filterdemo.v:64$11'.
Found and cleaned up 2 empty switches in `\filterdemo.$proc$filterdemo.v:112$4'.
Removing empty process `filterdemo.$proc$filterdemo.v:112$4'.
Cleaned up 180 empty switches.

18.4. Executing FLATTEN pass (flatten design).
Using template adc_host for cells of type adc_host.
Using template CIC for cells of type CIC.
Using template UI for cells of type UI.
Using template sigma_delta for cells of type sigma_delta.
Using template dpram_64x8 for cells of type dpram_64x8.
Using template lcd for cells of type lcd.
Using template BinToLCD for cells of type BinToLCD.
Using template $paramod\delay_counter\counter_width=20 for cells of type $paramod\delay_counter\counter_width=20.
<suppressed ~9 debug messages>
No more expansions possible.
Deleting now unused module $paramod\delay_counter\counter_width=20.
Deleting now unused module sigma_delta.
Deleting now unused module lcd.
Deleting now unused module BinToLCD.
Deleting now unused module UI.
Deleting now unused module dpram_64x8.
Deleting now unused module CIC.
Deleting now unused module adc_host.

18.5. Executing TRIBUF pass.

18.6. Executing DEMINOUT pass (demote inout ports to input or output).

18.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~52 debug messages>

18.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 8 unused cells and 621 unused wires.
<suppressed ~25 debug messages>

18.9. Executing CHECK pass (checking for obvious problems).
checking module filterdemo..
Warning: Wire filterdemo.\SS is used but has no driver.
Warning: Wire filterdemo.\SO is used but has no driver.
Warning: Wire filterdemo.\SCK is used but has no driver.
Warning: Wire filterdemo.\REFOUT is used but has no driver.
Warning: Wire filterdemo.\L0 is used but has no driver.
Warning: Wire filterdemo.\IO [8] is used but has no driver.
Warning: Wire filterdemo.\IO [7] is used but has no driver.
Warning: Wire filterdemo.\IO [6] is used but has no driver.
Warning: Wire filterdemo.\IO [5] is used but has no driver.
Warning: Wire filterdemo.\IO [4] is used but has no driver.
Warning: Wire filterdemo.\IO [3] is used but has no driver.
Warning: Wire filterdemo.\IO [2] is used but has no driver.
Warning: Wire filterdemo.\IO [1] is used but has no driver.
Warning: Wire filterdemo.\IO [0] is used but has no driver.
Warning: Wire filterdemo.\A1 is used but has no driver.
Warning: Wire filterdemo.\A0 is used but has no driver.
found and reported 16 problems.

18.10. Executing OPT pass (performing simple optimizations).

18.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~1776 debug messages>
Removed a total of 592 cells.

18.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2447: \UI_inst.btnt3 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2445: \UI_inst.btnt3 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2453: \UI_inst.btnt2 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2451: \UI_inst.btnt2 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2459: \UI_inst.btnt1 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2457: \UI_inst.btnt1 -> 1'1
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2465: \UI_inst.btnt0 -> 1'0
      Replacing known input bits on port A of cell $techmap\UI_inst.$procmux$2463: \UI_inst.btnt0 -> 1'1
  Analyzing evaluation results.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1009.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1011.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1039.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1041.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1070.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1072.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1102.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1104.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1135.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1137.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1169.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1171.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1204.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1206.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1240.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1242.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$1282.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$820.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$822.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$833.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$835.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$847.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$849.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$862.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$864.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$878.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$880.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$895.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$897.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$913.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$915.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$932.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$934.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$952.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$954.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$980.
    dead port 2/2 on $mux $techmap\UI_inst.diplay_number.$procmux$982.
Removed 37 multiplexer ports.
<suppressed ~72 debug messages>

18.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
    New input vector for $reduce_or cell $techmap\Filter.$reduce_or$../filter/CIC.v:47$40: { \Filter.tickcount [0] \Filter.tickcount [1] \Filter.tickcount [2] \Filter.tickcount [3] \Filter.tickcount [4] \Filter.tickcount [5] \Filter.tickcount [6] \Filter.tickcount [7] \Filter.tickcount [8] \Filter.tickcount [9] \Filter.tickcount [10] }
    New input vector for $reduce_or cell $reduce_or$filterdemo.v:101$2: { \adc_host_hi.data [0] \adc_host_hi.data [1] \adc_host_hi.data [2] \adc_host_hi.data [3] \adc_host_hi.data [4] \adc_host_hi.data [5] \adc_host_hi.data [6] \adc_host_hi.data [7] \adc_host_hi.data [8] \adc_host_hi.data [9] \adc_host_hi.data [10] \adc_host_hi.data [11] \adc_host_hi.data [12] \adc_host_hi.data [13] \adc_host_hi.data [14] \adc_host_hi.data [15] }
    New input vector for $reduce_or cell $techmap\UI_inst.$reduce_or$../UI/UI.v:204$112: { \UI_inst.BP [0] \UI_inst.BP [1] \UI_inst.BP [2] \UI_inst.BP [3] }
    New input vector for $reduce_and cell $reduce_and$filterdemo.v:114$6: { \cnt [0] \cnt [1] \cnt [2] \cnt [3] \cnt [4] \cnt [5] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:99$86: { \UI_inst.cnt2 [0] \UI_inst.cnt2 [1] \UI_inst.cnt2 [2] \UI_inst.cnt2 [3] \UI_inst.cnt2 [4] \UI_inst.cnt2 [5] \UI_inst.cnt2 [6] \UI_inst.cnt2 [7] \UI_inst.cnt2 [8] \UI_inst.cnt2 [9] \UI_inst.cnt2 [10] \UI_inst.cnt2 [11] \UI_inst.cnt2 [12] \UI_inst.cnt2 [13] \UI_inst.cnt2 [14] \UI_inst.cnt2 [15] \UI_inst.cnt2 [16] \UI_inst.cnt2 [17] \UI_inst.cnt2 [18] \UI_inst.cnt2 [19] \UI_inst.cnt2 [20] \UI_inst.cnt2 [21] \UI_inst.cnt2 [22] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:89$82: { \UI_inst.cnt1 [0] \UI_inst.cnt1 [1] \UI_inst.cnt1 [2] \UI_inst.cnt1 [3] \UI_inst.cnt1 [4] \UI_inst.cnt1 [5] \UI_inst.cnt1 [6] \UI_inst.cnt1 [7] \UI_inst.cnt1 [8] \UI_inst.cnt1 [9] \UI_inst.cnt1 [10] \UI_inst.cnt1 [11] \UI_inst.cnt1 [12] \UI_inst.cnt1 [13] \UI_inst.cnt1 [14] \UI_inst.cnt1 [15] \UI_inst.cnt1 [16] \UI_inst.cnt1 [17] \UI_inst.cnt1 [18] \UI_inst.cnt1 [19] \UI_inst.cnt1 [20] \UI_inst.cnt1 [21] \UI_inst.cnt1 [22] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:79$78: { \UI_inst.cnt0 [0] \UI_inst.cnt0 [1] \UI_inst.cnt0 [2] \UI_inst.cnt0 [3] \UI_inst.cnt0 [4] \UI_inst.cnt0 [5] \UI_inst.cnt0 [6] \UI_inst.cnt0 [7] \UI_inst.cnt0 [8] \UI_inst.cnt0 [9] \UI_inst.cnt0 [10] \UI_inst.cnt0 [11] \UI_inst.cnt0 [12] \UI_inst.cnt0 [13] \UI_inst.cnt0 [14] \UI_inst.cnt0 [15] \UI_inst.cnt0 [16] \UI_inst.cnt0 [17] \UI_inst.cnt0 [18] \UI_inst.cnt0 [19] \UI_inst.cnt0 [20] \UI_inst.cnt0 [21] \UI_inst.cnt0 [22] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:132$99: { \UI_inst.disppos [0] \UI_inst.disppos [1] \UI_inst.disppos [2] \UI_inst.disppos [3] \UI_inst.disppos [4] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:130$98: { \UI_inst.count [0] \UI_inst.count [1] \UI_inst.count [2] \UI_inst.count [3] \UI_inst.count [4] \UI_inst.count [5] \UI_inst.count [6] \UI_inst.count [7] \UI_inst.count [8] \UI_inst.count [9] \UI_inst.count [10] \UI_inst.count [11] \UI_inst.count [12] \UI_inst.count [13] \UI_inst.count [14] \UI_inst.count [15] \UI_inst.count [16] \UI_inst.count [17] \UI_inst.count [18] \UI_inst.count [19] \UI_inst.count [20] \UI_inst.count [21] \UI_inst.count [22] \UI_inst.count [23] }
    New input vector for $reduce_and cell $techmap\UI_inst.$reduce_and$../UI/UI.v:109$90: { \UI_inst.cnt3 [0] \UI_inst.cnt3 [1] \UI_inst.cnt3 [2] \UI_inst.cnt3 [3] \UI_inst.cnt3 [4] \UI_inst.cnt3 [5] \UI_inst.cnt3 [6] \UI_inst.cnt3 [7] \UI_inst.cnt3 [8] \UI_inst.cnt3 [9] \UI_inst.cnt3 [10] \UI_inst.cnt3 [11] \UI_inst.cnt3 [12] \UI_inst.cnt3 [13] \UI_inst.cnt3 [14] \UI_inst.cnt3 [15] \UI_inst.cnt3 [16] \UI_inst.cnt3 [17] \UI_inst.cnt3 [18] \UI_inst.cnt3 [19] \UI_inst.cnt3 [20] \UI_inst.cnt3 [21] \UI_inst.cnt3 [22] }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2318: { $techmap\UI_inst.$procmux$2270_CMP $techmap\UI_inst.$procmux$2268_CMP $techmap\UI_inst.$procmux$2264_CMP $techmap\UI_inst.$procmux$2331_CMP $techmap\UI_inst.$procmux$2330_CMP $techmap\UI_inst.$procmux$2327_CMP $techmap\UI_inst.$procmux$2324_CMP $auto$opt_reduce.cc:132:opt_mux$2601 $auto$opt_reduce.cc:132:opt_mux$2599 $auto$opt_reduce.cc:132:opt_mux$2597 $techmap\UI_inst.$procmux$2299_CMP $techmap\UI_inst.$procmux$2290_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2363: { $techmap\UI_inst.$procmux$2270_CMP $techmap\UI_inst.$procmux$2269_CMP $techmap\UI_inst.$procmux$2267_CMP $techmap\UI_inst.$procmux$2266_CMP $techmap\UI_inst.$procmux$2265_CMP $techmap\UI_inst.$procmux$2262_CMP $auto$opt_reduce.cc:132:opt_mux$2609 $auto$opt_reduce.cc:132:opt_mux$2607 $techmap\UI_inst.$procmux$2259_CMP $techmap\UI_inst.$procmux$2330_CMP $techmap\UI_inst.$procmux$2327_CMP $techmap\UI_inst.$procmux$2324_CMP $auto$opt_reduce.cc:132:opt_mux$2605 $auto$opt_reduce.cc:132:opt_mux$2603 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2274: { $techmap\UI_inst.$procmux$2270_CMP $techmap\UI_inst.$procmux$2269_CMP $techmap\UI_inst.$procmux$2268_CMP $techmap\UI_inst.$procmux$2266_CMP $techmap\UI_inst.$procmux$2264_CMP $auto$opt_reduce.cc:132:opt_mux$2615 $techmap\UI_inst.$procmux$2262_CMP $techmap\UI_inst.$procmux$2261_CMP $auto$opt_reduce.cc:132:opt_mux$2613 $techmap\UI_inst.$procmux$2259_CMP $techmap\UI_inst.$procmux$2258_CMP $techmap\UI_inst.$procmux$2302_CMP $techmap\UI_inst.$procmux$2299_CMP $techmap\UI_inst.$procmux$2290_CMP $techmap\UI_inst.$procmux$2257_CMP $auto$opt_reduce.cc:132:opt_mux$2611 $techmap\UI_inst.$procmux$2246_CMP $techmap\UI_inst.$procmux$2275_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1245: { $techmap\UI_inst.diplay_number.$procmux$1279_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1261_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $auto$opt_reduce.cc:132:opt_mux$2617 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2404: $auto$opt_reduce.cc:132:opt_mux$2619
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1291: { $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $auto$opt_reduce.cc:132:opt_mux$2623 $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $auto$opt_reduce.cc:132:opt_mux$2621 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1379: { $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1267_CMP $auto$opt_reduce.cc:132:opt_mux$2625 $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1249_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1565: { $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $auto$opt_reduce.cc:132:opt_mux$2627 $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1688: { $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $auto$opt_reduce.cc:132:opt_mux$2629 $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$562: { $auto$opt_reduce.cc:132:opt_mux$2633 $auto$opt_reduce.cc:132:opt_mux$2631 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$572: { $auto$opt_reduce.cc:132:opt_mux$2637 $auto$opt_reduce.cc:132:opt_mux$2635 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1840: { $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $auto$opt_reduce.cc:132:opt_mux$2639 $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1915: { $techmap\UI_inst.diplay_number.$procmux$1281_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1267_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $auto$opt_reduce.cc:132:opt_mux$2643 $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1249_CMP $auto$opt_reduce.cc:132:opt_mux$2641 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2049: { $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1267_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1249_CMP $auto$opt_reduce.cc:132:opt_mux$2645 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$687: { $auto$opt_reduce.cc:132:opt_mux$2649 $auto$opt_reduce.cc:132:opt_mux$2647 }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$708: { $auto$opt_reduce.cc:132:opt_mux$2651 $techmap\UI_inst.LCD.$procmux$617_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$780: { $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:186$365_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:187$366_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:188$367_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$368_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:190$369_Y $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:191$370_Y $auto$opt_reduce.cc:132:opt_mux$2655 $auto$opt_reduce.cc:132:opt_mux$2653 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2245: { $techmap\UI_inst.$procmux$2270_CMP $techmap\UI_inst.$procmux$2269_CMP $techmap\UI_inst.$procmux$2268_CMP $techmap\UI_inst.$procmux$2266_CMP $techmap\UI_inst.$procmux$2265_CMP $techmap\UI_inst.$procmux$2264_CMP $auto$opt_reduce.cc:132:opt_mux$2657 $techmap\UI_inst.$procmux$2262_CMP $techmap\UI_inst.$procmux$2261_CMP $techmap\UI_inst.$procmux$2260_CMP $techmap\UI_inst.$procmux$2259_CMP $techmap\UI_inst.$procmux$2258_CMP $techmap\UI_inst.$procmux$2257_CMP $techmap\UI_inst.$procmux$2254_CMP $techmap\UI_inst.$procmux$2251_CMP $techmap\UI_inst.$procmux$2246_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2596: { $techmap\UI_inst.$procmux$2302_CMP $techmap\UI_inst.$procmux$2265_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2600: { $techmap\UI_inst.$procmux$2323_CMP $techmap\UI_inst.$procmux$2269_CMP $techmap\UI_inst.$procmux$2267_CMP $techmap\UI_inst.$procmux$2266_CMP $techmap\UI_inst.$procmux$2263_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2602: { $techmap\UI_inst.$procmux$2275_CMP $techmap\UI_inst.$procmux$2263_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2646: { $techmap\UI_inst.LCD.$procmux$688_CMP $techmap\UI_inst.LCD.$procmux$632_CMP $techmap\UI_inst.LCD.$procmux$626_CMP $techmap\UI_inst.LCD.$procmux$620_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2652: { $techmap\UI_inst.LCD.$procmux$738_CMP $techmap\UI_inst.LCD.$procmux$717_CMP $techmap\UI_inst.LCD.$procmux$639_CMP }
  Optimizing cells in module \filterdemo.
Performed a total of 33 changes.

18.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~636 debug messages>
Removed a total of 212 cells.

18.10.6. Executing OPT_RMDFF pass (remove dff with constant values).
Promoting init spec \loadlookup = 1'0 to constant driver in module filterdemo.
Promoted 1 init specs to constant drivers.

18.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 841 unused wires.
<suppressed ~1 debug messages>

18.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.10.9. Rerunning OPT passes. (Maybe there is more to do..)

18.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

18.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2186: { $techmap\UI_inst.$eq$../UI/UI.v:120$94_Y $auto$opt_reduce.cc:132:opt_mux$2659 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2208: { $techmap\UI_inst.$eq$../UI/UI.v:120$94_Y $auto$opt_reduce.cc:132:opt_mux$2661 }
    New ctrl vector for $pmux cell $techmap\UI_inst.$procmux$2230: $auto$opt_reduce.cc:132:opt_mux$2663
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$525: { $auto$opt_reduce.cc:132:opt_mux$2665 $techmap\UI_inst.LCD.$procmux$527_CMP $techmap\UI_inst.LCD.$procmux$526_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$545: { $techmap\UI_inst.LCD.$procmux$539_CMP $techmap\UI_inst.LCD.$procmux$536_CMP $auto$opt_reduce.cc:132:opt_mux$2667 $techmap\UI_inst.LCD.$procmux$530_CMP $techmap\UI_inst.LCD.$procmux$526_CMP }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$613: { $techmap\UI_inst.LCD.$procmux$639_CMP $auto$opt_reduce.cc:132:opt_mux$2669 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$368_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.LCD.$procmux$649: { $techmap\UI_inst.LCD.$procmux$639_CMP $techmap\UI_inst.LCD.$procmux$635_CMP $techmap\UI_inst.LCD.$procmux$629_CMP $auto$opt_reduce.cc:132:opt_mux$2673 $auto$opt_reduce.cc:132:opt_mux$2671 $techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:189$368_Y }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1245: { $techmap\UI_inst.diplay_number.$procmux$1279_CMP $techmap\UI_inst.diplay_number.$procmux$1261_CMP $auto$opt_reduce.cc:132:opt_mux$2675 $auto$opt_reduce.cc:132:opt_mux$2617 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1291: { $auto$opt_reduce.cc:132:opt_mux$2623 $auto$opt_reduce.cc:132:opt_mux$2677 $auto$opt_reduce.cc:132:opt_mux$2621 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1379: { $auto$opt_reduce.cc:132:opt_mux$2625 $auto$opt_reduce.cc:132:opt_mux$2679 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1565: { $auto$opt_reduce.cc:132:opt_mux$2623 $auto$opt_reduce.cc:132:opt_mux$2681 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1688: { $auto$opt_reduce.cc:132:opt_mux$2623 $auto$opt_reduce.cc:132:opt_mux$2699 $auto$opt_reduce.cc:132:opt_mux$2697 $auto$opt_reduce.cc:132:opt_mux$2695 $auto$opt_reduce.cc:132:opt_mux$2693 $auto$opt_reduce.cc:132:opt_mux$2691 $auto$opt_reduce.cc:132:opt_mux$2689 $auto$opt_reduce.cc:132:opt_mux$2687 $auto$opt_reduce.cc:132:opt_mux$2685 $auto$opt_reduce.cc:132:opt_mux$2683 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1768: $auto$opt_reduce.cc:132:opt_mux$2701
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1840: { $auto$opt_reduce.cc:132:opt_mux$2623 $auto$opt_reduce.cc:132:opt_mux$2719 $auto$opt_reduce.cc:132:opt_mux$2717 $auto$opt_reduce.cc:132:opt_mux$2715 $auto$opt_reduce.cc:132:opt_mux$2713 $auto$opt_reduce.cc:132:opt_mux$2711 $auto$opt_reduce.cc:132:opt_mux$2709 $auto$opt_reduce.cc:132:opt_mux$2707 $auto$opt_reduce.cc:132:opt_mux$2705 $auto$opt_reduce.cc:132:opt_mux$2703 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$1915: { $techmap\UI_inst.diplay_number.$procmux$1281_CMP $techmap\UI_inst.diplay_number.$procmux$1263_CMP $auto$opt_reduce.cc:132:opt_mux$2643 $auto$opt_reduce.cc:132:opt_mux$2723 $auto$opt_reduce.cc:132:opt_mux$2721 $auto$opt_reduce.cc:132:opt_mux$2641 }
    New ctrl vector for $pmux cell $techmap\UI_inst.diplay_number.$procmux$2049: { $auto$opt_reduce.cc:132:opt_mux$2725 $auto$opt_reduce.cc:132:opt_mux$2645 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2674: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2676: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2678: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1267_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1249_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2680: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2684: { $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2686: { $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2688: { $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2690: { $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2692: { $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2694: { $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2696: { $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2698: { $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2700: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1267_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1249_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2704: { $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2706: { $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2708: { $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2710: { $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2712: { $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2714: { $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2716: { $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2718: { $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2722: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$2724: { $techmap\UI_inst.diplay_number.$procmux$1268_CMP $techmap\UI_inst.diplay_number.$procmux$1267_CMP $techmap\UI_inst.diplay_number.$procmux$1258_CMP $techmap\UI_inst.diplay_number.$procmux$1257_CMP $techmap\UI_inst.diplay_number.$procmux$1256_CMP $techmap\UI_inst.diplay_number.$procmux$1255_CMP $techmap\UI_inst.diplay_number.$procmux$1254_CMP $techmap\UI_inst.diplay_number.$procmux$1253_CMP $techmap\UI_inst.diplay_number.$procmux$1252_CMP $techmap\UI_inst.diplay_number.$procmux$1251_CMP $techmap\UI_inst.diplay_number.$procmux$1250_CMP $techmap\UI_inst.diplay_number.$procmux$1249_CMP $techmap\UI_inst.diplay_number.$procmux$1241_CMP $techmap\UI_inst.diplay_number.$procmux$1205_CMP $techmap\UI_inst.diplay_number.$procmux$1170_CMP $techmap\UI_inst.diplay_number.$procmux$1136_CMP $techmap\UI_inst.diplay_number.$procmux$1103_CMP $techmap\UI_inst.diplay_number.$procmux$1071_CMP $techmap\UI_inst.diplay_number.$procmux$1040_CMP $techmap\UI_inst.diplay_number.$procmux$1010_CMP }
  Optimizing cells in module \filterdemo.
Performed a total of 39 changes.

18.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

18.10.13. Executing OPT_RMDFF pass (remove dff with constant values).

18.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 16 unused wires.
<suppressed ~1 debug messages>

18.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.10.16. Rerunning OPT passes. (Maybe there is more to do..)

18.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

18.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
Performed a total of 0 changes.

18.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

18.10.20. Executing OPT_RMDFF pass (remove dff with constant values).

18.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

18.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.10.23. Rerunning OPT passes. (Maybe there is more to do..)

18.10.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

18.10.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
Performed a total of 0 changes.

18.10.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.10.27. Executing OPT_RMDFF pass (remove dff with constant values).

18.10.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.10.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.10.30. Finished OPT passes. (There is nothing left to do.)

18.11. Executing WREDUCE pass (reducing word size of cells).
Removed top 31 bits (of 32) from port B of cell filterdemo.$add$filterdemo.v:113$5 ($add).
Removed top 2 bits (of 8) from port B of cell filterdemo.$techmap\adc_host_hi.$eq$../adc_host.v:35$22 ($eq).
Removed top 3 bits (of 8) from port B of cell filterdemo.$techmap\adc_host_hi.$eq$../adc_host.v:34$21 ($eq).
Removed top 4 bits (of 8) from port B of cell filterdemo.$techmap\adc_host_hi.$eq$../adc_host.v:33$20 ($eq).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\adc_host_hi.$add$../adc_host.v:31$19 ($add).
Removed top 24 bits (of 32) from port Y of cell filterdemo.$techmap\adc_host_hi.$add$../adc_host.v:31$19 ($add).
Removed top 31 bits (of 32) from mux cell filterdemo.$techmap\adc_host_hi.$ternary$../adc_host.v:25$17 ($mux).
Removed top 29 bits (of 32) from port B of cell filterdemo.$techmap\Filter.$add$../filter/CIC.v:47$42 ($add).
Removed top 27 bits (of 32) from port Y of cell filterdemo.$techmap\Filter.$add$../filter/CIC.v:47$42 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\Filter.$add$../filter/CIC.v:44$39 ($add).
Removed top 24 bits (of 32) from port Y of cell filterdemo.$techmap\Filter.$add$../filter/CIC.v:44$39 ($add).
Removed top 28 bits (of 32) from port B of cell filterdemo.$techmap\Filter.$ge$../filter/CIC.v:42$38 ($ge).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\Filter.$add$../filter/CIC.v:41$37 ($add).
Removed top 21 bits (of 32) from port Y of cell filterdemo.$techmap\Filter.$add$../filter/CIC.v:41$37 ($add).
Removed top 7 bits (of 8) from port A of cell filterdemo.$techmap\Filter.$shl$../filter/CIC.v:37$32 ($shl).
Removed top 1 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2406_CMP0 ($eq).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2376 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2371 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2366 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2347 ($mux).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2336_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2331_CMP0 ($eq).
Removed top 4 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2328 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2325 ($mux).
Removed top 1 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2318 ($pmux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2300 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2291 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2282 ($mux).
Removed top 5 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2279 ($mux).
Removed top 4 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2270_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2269_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2268_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2267_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2266_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2265_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2264_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2263_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2262_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2261_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2260_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2259_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2258_CMP0 ($eq).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2255 ($mux).
Removed top 4 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2252 ($mux).
Removed top 6 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.$procmux$2247 ($mux).
Removed top 3 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2168_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2162_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2156_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2150_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2144_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2142_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.$procmux$2141_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:406$141 ($sub).
Removed top 30 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:406$141 ($sub).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:405$140 ($add).
Removed top 30 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:405$140 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:353$134 ($sub).
Removed top 29 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:353$134 ($sub).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:352$133 ($add).
Removed top 29 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:352$133 ($add).
Removed top 1 bits (of 3) from port B of cell filterdemo.$techmap\UI_inst.$eq$../UI/UI.v:333$131 ($eq).
Removed top 1 bits (of 3) from port B of cell filterdemo.$techmap\UI_inst.$eq$../UI/UI.v:332$130 ($eq).
Removed top 2 bits (of 3) from port B of cell filterdemo.$techmap\UI_inst.$eq$../UI/UI.v:331$129 ($eq).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:241$118 ($sub).
Removed top 30 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:241$118 ($sub).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:240$117 ($add).
Removed top 30 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:240$117 ($add).
Removed top 1 bits (of 2) from port B of cell filterdemo.$techmap\UI_inst.$eq$../UI/UI.v:227$115 ($eq).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:201$111 ($sub).
Removed top 28 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:201$111 ($sub).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:200$110 ($add).
Removed top 28 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:200$110 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:134$103 ($add).
Removed top 27 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:134$103 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:127$97 ($add).
Removed top 8 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:127$97 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:119$93 ($sub).
Removed top 27 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$sub$../UI/UI.v:119$93 ($sub).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:108$89 ($add).
Removed top 9 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:108$89 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:98$85 ($add).
Removed top 9 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:98$85 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:88$81 ($add).
Removed top 9 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:88$81 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:78$77 ($add).
Removed top 9 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.$add$../UI/UI.v:78$77 ($add).
Removed top 1 bits (of 5) from mux cell filterdemo.$techmap\UI_inst.LCD.$procmux$714 ($mux).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$688_CMP0 ($eq).
Removed top 2 bits (of 20) from mux cell filterdemo.$techmap\UI_inst.LCD.$procmux$669 ($mux).
Removed top 7 bits (of 20) from mux cell filterdemo.$techmap\UI_inst.LCD.$procmux$663 ($mux).
Removed top 16 bits (of 20) from mux cell filterdemo.$techmap\UI_inst.LCD.$procmux$654 ($mux).
Removed top 9 bits (of 20) from mux cell filterdemo.$techmap\UI_inst.LCD.$procmux$651 ($mux).
Removed top 3 bits (of 20) from mux cell filterdemo.$techmap\UI_inst.LCD.$procmux$647 ($mux).
Removed top 4 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$638_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$635_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$632_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$629_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$626_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$623_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$620_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$617_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$539_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$536_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell filterdemo.$techmap\UI_inst.LCD.$procmux$533_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$383 ($add).
Removed top 3 bits (of 7) from port B of cell filterdemo.$techmap\UI_inst.LCD.$eq$../UI/lcd_display.v:396$382 ($eq).
Removed top 1 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$356 ($mux).
Removed top 4 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$2043 ($mux).
Removed top 3 bits (of 8) from mux cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1923 ($mux).
Removed top 4 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1280_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1279_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1268_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1267_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1266_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1265_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1264_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1241_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1205_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1170_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1136_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1103_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1071_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1040_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$procmux$1010_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$eq$../UI/BinToLCD.v:110$195 ($eq).
Removed top 3 bits (of 4) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$ne$../UI/BinToLCD.v:109$194 ($ne).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$190 ($add).
Removed top 28 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$190 ($add).
Removed top 31 bits (of 32) from port B of cell filterdemo.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$166 ($sub).
Removed top 27 bits (of 32) from port Y of cell filterdemo.$techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$166 ($sub).
Removed top 21 bits (of 32) from wire filterdemo.$techmap\Filter.$add$../filter/CIC.v:41$37_Y.
Removed top 24 bits (of 32) from wire filterdemo.$techmap\Filter.$add$../filter/CIC.v:44$39_Y.
Removed top 27 bits (of 32) from wire filterdemo.$techmap\Filter.$add$../filter/CIC.v:47$42_Y.
Removed top 9 bits (of 32) from wire filterdemo.$techmap\UI_inst.$add$../UI/UI.v:108$89_Y.
Removed top 21 bits (of 32) from wire filterdemo.$techmap\UI_inst.$add$../UI/UI.v:127$97_Y.
Removed top 27 bits (of 32) from wire filterdemo.$techmap\UI_inst.$add$../UI/UI.v:134$103_Y.
Removed top 28 bits (of 32) from wire filterdemo.$techmap\UI_inst.$add$../UI/UI.v:200$110_Y.
Removed top 30 bits (of 32) from wire filterdemo.$techmap\UI_inst.$add$../UI/UI.v:240$117_Y.
Removed top 9 bits (of 32) from wire filterdemo.$techmap\UI_inst.$add$../UI/UI.v:78$77_Y.
Removed top 6 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2247_Y.
Removed top 4 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2252_Y.
Removed top 3 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2255_Y.
Removed top 5 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2279_Y.
Removed top 3 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2282_Y.
Removed top 3 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2291_Y.
Removed top 3 bits (of 8) from wire filterdemo.$techmap\UI_inst.$procmux$2300_Y.
Removed top 3 bits (of 20) from wire filterdemo.$techmap\UI_inst.LCD.$procmux$647_Y.
Removed top 10 bits (of 20) from wire filterdemo.$techmap\UI_inst.LCD.$procmux$651_Y.
Removed top 17 bits (of 20) from wire filterdemo.$techmap\UI_inst.LCD.$procmux$654_Y.
Removed top 7 bits (of 20) from wire filterdemo.$techmap\UI_inst.LCD.$procmux$663_Y.
Removed top 2 bits (of 20) from wire filterdemo.$techmap\UI_inst.LCD.$procmux$669_Y.
Removed top 1 bits (of 5) from wire filterdemo.$techmap\UI_inst.LCD.$procmux$714_Y.
Removed top 28 bits (of 32) from wire filterdemo.$techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$190_Y.
Removed top 26 bits (of 32) from wire filterdemo.$techmap\UI_inst.diplay_number.$procmux$1259_Y.
Removed top 3 bits (of 8) from wire filterdemo.$techmap\UI_inst.diplay_number.$procmux$1923_Y.
Removed top 4 bits (of 8) from wire filterdemo.$techmap\UI_inst.diplay_number.$procmux$2043_Y.
Removed top 24 bits (of 32) from wire filterdemo.$techmap\adc_host_hi.$add$../adc_host.v:31$19_Y.
Removed top 1 bits (of 8) from wire filterdemo.UI_inst.LCD.ramaddr.

18.12. Executing PEEPOPT pass (run peephole optimizers).

18.13. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 32 unused wires.
<suppressed ~1 debug messages>

18.14. Executing SHARE pass (SAT-based resource sharing).

18.15. Executing TECHMAP pass (map to technology primitives).

18.15.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

18.15.2. Continuing TECHMAP pass.
Using template $paramod$b2c078492117e804fad9a0ec69f4ef95c8e4fc36\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$df71d3c5c306636e78c1ede81ccfd95a4d222f85\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$947b4e84b41c8268c0b3f732cf601a46e109cf2f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d0a69964f9ce54b3124cbdb498a7c3bb278370d8\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$71de91d27376199a7ef88a0ac0b14252f100e8e2\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$8c0aa91d4db8741c9947d7a0de6c875d8dfddc39\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$0760830c1e6c196382cd2cb153e9fff2d84c061d\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$99e5b0ecd4c7f9fb6cd3a733593eba894c42613f\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$169bae89c32dcc6f3626d16cf9f47ceb469145db\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$4cde4291caf5aa85a196975f3624151774a86d78\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d87a48a4cd82717ae6bd57e6fe5ce90d87c44016\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5b7c8f37cb386acdf3ce7e528c09e6d15eb51b72\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$5652dda64580ddd7861fd245e644fd33eae2e158\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$d31416a5863a8a220e16d7940a75ab70541ab32a\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$3fbee094385d1f2712c8f0e44e105767be1dc65d\_90_lut_cmp_ for cells of type $lt.
Using template $paramod$77ad031fce233083715243f95e3cd2547d931e42\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$6816abac91a51b405c3de5bceb2855c03dd44485\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$157b513ca31cf76e38adcf07acb1841cad2cb8bf\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$7fa1695920e37af8dff2ad262bb1ebd99c04ea28\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$428611b5d438e29cebfd18261be0c8e5ae5db6e9\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$437c08cacabb8f43c90c7e15a4cb7435c71945c9\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$968c93632f950ce0f306709fa121c1e7a868940c\_90_lut_cmp_ for cells of type $eq.
Using template $paramod$b052c427b9400c9842289fe5ffb1277ba3e47bb8\_90_lut_cmp_ for cells of type $ne.
No more expansions possible.
<suppressed ~1072 debug messages>

18.16. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 105 unused wires.
<suppressed ~1 debug messages>

18.18. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module filterdemo:
  creating $macc model for $add$filterdemo.v:113$5 ($add).
  creating $macc model for $techmap\DAC1.$add$../sigma_delta.v:18$480 ($add).
  creating $macc model for $techmap\DAC2.$add$../sigma_delta.v:18$480 ($add).
  creating $macc model for $techmap\Filter.$add$../filter/CIC.v:41$37 ($add).
  creating $macc model for $techmap\Filter.$add$../filter/CIC.v:44$39 ($add).
  creating $macc model for $techmap\Filter.$add$../filter/CIC.v:47$42 ($add).
  creating $macc model for $techmap\Filter.$add$../filter/CIC.v:48$44 ($add).
  creating $macc model for $techmap\Filter.$sub$../filter/CIC.v:37$33 ($sub).
  creating $macc model for $techmap\Filter.$sub$../filter/CIC.v:38$34 ($sub).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:108$89 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:127$97 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:134$103 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:200$110 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:240$117 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:352$133 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:405$140 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:78$77 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:88$81 ($add).
  creating $macc model for $techmap\UI_inst.$add$../UI/UI.v:98$85 ($add).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:119$93 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:201$111 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:241$118 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:353$134 ($sub).
  creating $macc model for $techmap\UI_inst.$sub$../UI/UI.v:406$141 ($sub).
  creating $macc model for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$383 ($add).
  creating $macc model for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$516 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$190 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$171 ($add).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:108$193 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:113$198 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$166 ($sub).
  creating $macc model for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$170 ($sub).
  creating $macc model for $techmap\adc_host_hi.$add$../adc_host.v:31$19 ($add).
  creating $alu model for $macc $techmap\adc_host_hi.$add$../adc_host.v:31$19.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$170.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$166.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:113$198.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:108$193.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$171.
  creating $alu model for $macc $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$190.
  creating $alu model for $macc $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$516.
  creating $alu model for $macc $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$383.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:406$141.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:353$134.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:241$118.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:201$111.
  creating $alu model for $macc $techmap\UI_inst.$sub$../UI/UI.v:119$93.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:98$85.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:88$81.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:78$77.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:405$140.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:352$133.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:240$117.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:200$110.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:134$103.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:127$97.
  creating $alu model for $macc $techmap\UI_inst.$add$../UI/UI.v:108$89.
  creating $alu model for $macc $techmap\Filter.$sub$../filter/CIC.v:38$34.
  creating $alu model for $macc $techmap\Filter.$sub$../filter/CIC.v:37$33.
  creating $alu model for $macc $techmap\Filter.$add$../filter/CIC.v:48$44.
  creating $alu model for $macc $techmap\Filter.$add$../filter/CIC.v:47$42.
  creating $alu model for $macc $techmap\Filter.$add$../filter/CIC.v:44$39.
  creating $alu model for $macc $techmap\Filter.$add$../filter/CIC.v:41$37.
  creating $alu model for $macc $techmap\DAC2.$add$../sigma_delta.v:18$480.
  creating $alu model for $macc $techmap\DAC1.$add$../sigma_delta.v:18$480.
  creating $alu model for $macc $add$filterdemo.v:113$5.
  creating $alu model for $techmap\Filter.$ge$../filter/CIC.v:42$38 ($ge): new $alu
  creating $alu cell for $techmap\Filter.$ge$../filter/CIC.v:42$38: $auto$alumacc.cc:474:replace_alu$2813
  creating $alu cell for $add$filterdemo.v:113$5: $auto$alumacc.cc:474:replace_alu$2822
  creating $alu cell for $techmap\DAC1.$add$../sigma_delta.v:18$480: $auto$alumacc.cc:474:replace_alu$2825
  creating $alu cell for $techmap\DAC2.$add$../sigma_delta.v:18$480: $auto$alumacc.cc:474:replace_alu$2828
  creating $alu cell for $techmap\Filter.$add$../filter/CIC.v:41$37: $auto$alumacc.cc:474:replace_alu$2831
  creating $alu cell for $techmap\Filter.$add$../filter/CIC.v:44$39: $auto$alumacc.cc:474:replace_alu$2834
  creating $alu cell for $techmap\Filter.$add$../filter/CIC.v:47$42: $auto$alumacc.cc:474:replace_alu$2837
  creating $alu cell for $techmap\Filter.$add$../filter/CIC.v:48$44: $auto$alumacc.cc:474:replace_alu$2840
  creating $alu cell for $techmap\Filter.$sub$../filter/CIC.v:37$33: $auto$alumacc.cc:474:replace_alu$2843
  creating $alu cell for $techmap\Filter.$sub$../filter/CIC.v:38$34: $auto$alumacc.cc:474:replace_alu$2846
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:108$89: $auto$alumacc.cc:474:replace_alu$2849
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:127$97: $auto$alumacc.cc:474:replace_alu$2852
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:134$103: $auto$alumacc.cc:474:replace_alu$2855
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:200$110: $auto$alumacc.cc:474:replace_alu$2858
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:240$117: $auto$alumacc.cc:474:replace_alu$2861
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:352$133: $auto$alumacc.cc:474:replace_alu$2864
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:405$140: $auto$alumacc.cc:474:replace_alu$2867
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:78$77: $auto$alumacc.cc:474:replace_alu$2870
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:88$81: $auto$alumacc.cc:474:replace_alu$2873
  creating $alu cell for $techmap\UI_inst.$add$../UI/UI.v:98$85: $auto$alumacc.cc:474:replace_alu$2876
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:119$93: $auto$alumacc.cc:474:replace_alu$2879
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:201$111: $auto$alumacc.cc:474:replace_alu$2882
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:241$118: $auto$alumacc.cc:474:replace_alu$2885
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:353$134: $auto$alumacc.cc:474:replace_alu$2888
  creating $alu cell for $techmap\UI_inst.$sub$../UI/UI.v:406$141: $auto$alumacc.cc:474:replace_alu$2891
  creating $alu cell for $techmap\UI_inst.LCD.$add$../UI/lcd_display.v:399$383: $auto$alumacc.cc:474:replace_alu$2894
  creating $alu cell for $techmap\UI_inst.LCD.delay_counter.$sub$../UI/delay_counter.v:66$516: $auto$alumacc.cc:474:replace_alu$2897
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:106$190: $auto$alumacc.cc:474:replace_alu$2900
  creating $alu cell for $techmap\UI_inst.diplay_number.$add$../UI/BinToLCD.v:43$171: $auto$alumacc.cc:474:replace_alu$2903
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:108$193: $auto$alumacc.cc:474:replace_alu$2906
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:113$198: $auto$alumacc.cc:474:replace_alu$2909
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:34$166: $auto$alumacc.cc:474:replace_alu$2912
  creating $alu cell for $techmap\UI_inst.diplay_number.$sub$../UI/BinToLCD.v:42$170: $auto$alumacc.cc:474:replace_alu$2915
  creating $alu cell for $techmap\adc_host_hi.$add$../adc_host.v:31$19: $auto$alumacc.cc:474:replace_alu$2918
  created 34 $alu and 0 $macc cells.

18.19. Executing OPT pass (performing simple optimizations).

18.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

18.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

18.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$2820: { $auto$rtlil.cc:1832:Not$2817 $auto$rtlil.cc:1835:ReduceAnd$2819 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$2818: { $auto$alumacc.cc:490:replace_alu$2814 [0] $auto$alumacc.cc:490:replace_alu$2814 [1] $auto$alumacc.cc:490:replace_alu$2814 [2] $auto$alumacc.cc:490:replace_alu$2814 [3] $auto$alumacc.cc:490:replace_alu$2814 [4] $auto$alumacc.cc:490:replace_alu$2814 [5] $auto$alumacc.cc:490:replace_alu$2814 [6] $auto$alumacc.cc:490:replace_alu$2814 [7] $auto$alumacc.cc:490:replace_alu$2814 [8] $auto$alumacc.cc:490:replace_alu$2814 [9] $auto$alumacc.cc:490:replace_alu$2814 [10] }
  Optimizing cells in module \filterdemo.
Performed a total of 2 changes.

18.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.19.6. Executing OPT_RMDFF pass (remove dff with constant values).

18.19.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

18.19.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.19.9. Rerunning OPT passes. (Maybe there is more to do..)

18.19.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~74 debug messages>

18.19.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
Performed a total of 0 changes.

18.19.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.19.13. Executing OPT_RMDFF pass (remove dff with constant values).

18.19.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.19.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.19.16. Finished OPT passes. (There is nothing left to do.)

18.20. Executing FSM pass (extract and optimize FSM).

18.20.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking filterdemo.UI_inst.BP as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.LCD.SF_D1 as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.LCD.display_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.LCD.main_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.LCD.tx_delay_value as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.LCD.tx_state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.datS as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.diplay_number.pos as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.diplay_number.summand as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.
Not marking filterdemo.UI_inst.state as FSM state register:
    Users of register don't seem to benefit from recoding.
    Register has an initialization value.

18.20.2. Executing FSM_EXTRACT pass (extracting FSM from design).

18.20.3. Executing FSM_OPT pass (simple optimizations of FSMs).

18.20.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.20.5. Executing FSM_OPT pass (simple optimizations of FSMs).

18.20.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

18.20.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

18.20.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

18.21. Executing OPT pass (performing simple optimizations).

18.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.21.3. Executing OPT_RMDFF pass (remove dff with constant values).

18.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.21.5. Finished fast OPT passes.

18.22. Executing MEMORY pass.

18.22.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

18.22.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.22.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

18.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.22.5. Executing MEMORY_COLLECT pass (generating $mem cells).

18.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

18.25. Executing TECHMAP pass (map to technology primitives).

18.25.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

18.25.2. Continuing TECHMAP pass.
No more expansions possible.

18.26. Executing ICE40_BRAMINIT pass.

18.27. Executing OPT pass (performing simple optimizations).

18.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~28 debug messages>

18.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.27.3. Executing OPT_RMDFF pass (remove dff with constant values).

18.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

18.27.5. Finished fast OPT passes.

18.28. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

18.29. Executing OPT pass (performing simple optimizations).

18.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~66 debug messages>

18.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2247:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:455:run$2735 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2735 [0]
      New connections: $auto$wreduce.cc:455:run$2735 [1] = $auto$wreduce.cc:455:run$2735 [0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2249:
      Old ports: A={ 6'001100 $auto$wreduce.cc:455:run$2735 [1:0] }, B=8'00110101, Y=$techmap\UI_inst.$procmux$2249_Y
      New ports: A={ 1'0 $auto$wreduce.cc:455:run$2735 [1:0] }, B=3'101, Y=$techmap\UI_inst.$procmux$2249_Y [2:0]
      New connections: $techmap\UI_inst.$procmux$2249_Y [7:3] = 5'00110
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2252:
      Old ports: A=4'0000, B=4'1110, Y=$auto$wreduce.cc:455:run$2736 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2736 [1]
      New connections: { $auto$wreduce.cc:455:run$2736 [3:2] $auto$wreduce.cc:455:run$2736 [0] } = { $auto$wreduce.cc:455:run$2736 [1] $auto$wreduce.cc:455:run$2736 [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2255:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:455:run$2737 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2737 [0]
      New connections: $auto$wreduce.cc:455:run$2737 [4:1] = { $auto$wreduce.cc:455:run$2737 [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2279:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:455:run$2738 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2738 [0]
      New connections: $auto$wreduce.cc:455:run$2738 [2:1] = { $auto$wreduce.cc:455:run$2738 [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2282:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:455:run$2739 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$2739 [4]
      New connections: $auto$wreduce.cc:455:run$2739 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2284:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$2739 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2284_Y
      New ports: A=$auto$wreduce.cc:455:run$2739 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2284_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2284_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2291:
      Old ports: A=5'10000, B=5'00000, Y=$auto$wreduce.cc:455:run$2740 [4:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$2740 [4]
      New connections: $auto$wreduce.cc:455:run$2740 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2293:
      Old ports: A={ 3'001 $auto$wreduce.cc:455:run$2740 [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2293_Y
      New ports: A=$auto$wreduce.cc:455:run$2740 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2293_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2293_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2300:
      Old ports: A=5'00000, B=5'10001, Y=$auto$wreduce.cc:455:run$2741 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2741 [0]
      New connections: $auto$wreduce.cc:455:run$2741 [4:1] = { $auto$wreduce.cc:455:run$2741 [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2325:
      Old ports: A=5'01110, B=5'11000, Y=$techmap\UI_inst.$procmux$2325_Y [4:0]
      New ports: A=2'01, B=2'10, Y={ $techmap\UI_inst.$procmux$2325_Y [4] $techmap\UI_inst.$procmux$2325_Y [1] }
      New connections: { $techmap\UI_inst.$procmux$2325_Y [3:2] $techmap\UI_inst.$procmux$2325_Y [0] } = { 1'1 $techmap\UI_inst.$procmux$2325_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2328:
      Old ports: A=4'1001, B=4'0101, Y=$techmap\UI_inst.$procmux$2328_Y [3:0]
      New ports: A=2'10, B=2'01, Y=$techmap\UI_inst.$procmux$2328_Y [3:2]
      New connections: $techmap\UI_inst.$procmux$2328_Y [1:0] = 2'01
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2347:
      Old ports: A=5'00000, B=5'10110, Y=$techmap\UI_inst.$procmux$2347_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2347_Y [1]
      New connections: { $techmap\UI_inst.$procmux$2347_Y [4:2] $techmap\UI_inst.$procmux$2347_Y [0] } = { $techmap\UI_inst.$procmux$2347_Y [1] 1'0 $techmap\UI_inst.$procmux$2347_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2349:
      Old ports: A={ 3'001 $techmap\UI_inst.$procmux$2347_Y [4:0] }, B=8'00110100, Y=$techmap\UI_inst.$procmux$2349_Y
      New ports: A=$techmap\UI_inst.$procmux$2347_Y [4:0], B=5'10100, Y=$techmap\UI_inst.$procmux$2349_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2349_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2366:
      Old ports: A=5'00000, B=5'10000, Y=$techmap\UI_inst.$procmux$2366_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2366_Y [4]
      New connections: $techmap\UI_inst.$procmux$2366_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2368:
      Old ports: A={ 3'001 $techmap\UI_inst.$procmux$2366_Y [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2368_Y
      New ports: A=$techmap\UI_inst.$procmux$2366_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2368_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2368_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2371:
      Old ports: A=5'00000, B=5'10000, Y=$techmap\UI_inst.$procmux$2371_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2371_Y [4]
      New connections: $techmap\UI_inst.$procmux$2371_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2373:
      Old ports: A={ 3'001 $techmap\UI_inst.$procmux$2371_Y [4:0] }, B=8'00110001, Y=$techmap\UI_inst.$procmux$2373_Y
      New ports: A=$techmap\UI_inst.$procmux$2371_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2373_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2373_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2376:
      Old ports: A=5'00000, B=5'10001, Y=$techmap\UI_inst.$procmux$2376_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$techmap\UI_inst.$procmux$2376_Y [0]
      New connections: $techmap\UI_inst.$procmux$2376_Y [4:1] = { $techmap\UI_inst.$procmux$2376_Y [0] 3'000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$647:
      Old ports: A=17'00000000000000000, B=17'10100000001010000, Y=$auto$wreduce.cc:455:run$2742 [16:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2742 [4]
      New connections: { $auto$wreduce.cc:455:run$2742 [16:5] $auto$wreduce.cc:455:run$2742 [3:0] } = { $auto$wreduce.cc:455:run$2742 [4] 1'0 $auto$wreduce.cc:455:run$2742 [4] 7'0000000 $auto$wreduce.cc:455:run$2742 [4] 5'00000 }
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$649:
      Old ports: A=20'00000000000000000000, B={ 22'1011011100011011000000 $auto$wreduce.cc:455:run$2746 [17:0] 7'0000000 $auto$wreduce.cc:455:run$2745 [12:0] 16'0000000000000000 $auto$wreduce.cc:455:run$2744 [3:0] 9'000000000 $auto$wreduce.cc:455:run$2743 [10:0] 3'000 $auto$wreduce.cc:455:run$2742 [16:0] }, Y=$techmap\UI_inst.LCD.$0\main_delay_value[19:0]
      New ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$2746 [17:0] 6'000000 $auto$wreduce.cc:455:run$2745 [12:0] 15'000000000000000 $auto$wreduce.cc:455:run$2744 [3:0] 8'00000000 $auto$wreduce.cc:455:run$2743 [10:0] 2'00 $auto$wreduce.cc:455:run$2742 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New connections: $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [18] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$651:
      Old ports: A=11'00000000000, B=11'11111010000, Y=$auto$wreduce.cc:455:run$2743 [10:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2743 [4]
      New connections: { $auto$wreduce.cc:455:run$2743 [10:5] $auto$wreduce.cc:455:run$2743 [3:0] } = { $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$654:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:455:run$2744 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2744 [0]
      New connections: $auto$wreduce.cc:455:run$2744 [3:1] = { $auto$wreduce.cc:455:run$2744 [0] 1'0 $auto$wreduce.cc:455:run$2744 [0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$663:
      Old ports: A=13'0000000000000, B=13'1001110001000, Y=$auto$wreduce.cc:455:run$2745 [12:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2745 [3]
      New connections: { $auto$wreduce.cc:455:run$2745 [12:4] $auto$wreduce.cc:455:run$2745 [2:0] } = { $auto$wreduce.cc:455:run$2745 [3] 2'00 $auto$wreduce.cc:455:run$2745 [3] $auto$wreduce.cc:455:run$2745 [3] $auto$wreduce.cc:455:run$2745 [3] 6'000000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$669:
      Old ports: A=18'000000000000000000, B=18'110010000011001000, Y=$auto$wreduce.cc:455:run$2746 [17:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:455:run$2746 [3]
      New connections: { $auto$wreduce.cc:455:run$2746 [17:4] $auto$wreduce.cc:455:run$2746 [2:0] } = { $auto$wreduce.cc:455:run$2746 [3] $auto$wreduce.cc:455:run$2746 [3] 2'00 $auto$wreduce.cc:455:run$2746 [3] 5'00000 $auto$wreduce.cc:455:run$2746 [3] $auto$wreduce.cc:455:run$2746 [3] 5'00000 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$procmux$714:
      Old ports: A=4'0010, B=4'1000, Y=$auto$wreduce.cc:455:run$2747 [3:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:455:run$2747 [3] $auto$wreduce.cc:455:run$2747 [1] }
      New connections: { $auto$wreduce.cc:455:run$2747 [2] $auto$wreduce.cc:455:run$2747 [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.LCD.$ternary$../UI/lcd_display.v:121$356:
      Old ports: A={ 3'000 \UI_inst.LCD.addr [3:0] }, B={ 3'100 \UI_inst.LCD.addr [3:0] }, Y=\UI_inst.LCD.ramaddr
      New ports: A=1'0, B=1'1, Y=\UI_inst.LCD.ramaddr [6]
      New connections: \UI_inst.LCD.ramaddr [5:0] = { 2'00 \UI_inst.LCD.addr [3:0] }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$1259:
      Old ports: A=\cnt, B={ 15'000000000000000 \cnt [16:0] }, Y=$auto$wreduce.cc:455:run$2749
      New ports: A=\cnt [31:17], B=15'000000000000000, Y=$auto$wreduce.cc:455:run$2749 [31:17]
      New connections: $auto$wreduce.cc:455:run$2749 [16:0] = \cnt [16:0]
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$1978:
      Old ports: A=8'01011001, B=8'11110010, Y=$techmap\UI_inst.diplay_number.$procmux$1978_Y
      New ports: A=2'01, B=2'10, Y=$techmap\UI_inst.diplay_number.$procmux$1978_Y [1:0]
      New connections: $techmap\UI_inst.diplay_number.$procmux$1978_Y [7:2] = { $techmap\UI_inst.diplay_number.$procmux$1978_Y [1] 1'1 $techmap\UI_inst.diplay_number.$procmux$1978_Y [1] 1'1 $techmap\UI_inst.diplay_number.$procmux$1978_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.diplay_number.$procmux$2043:
      Old ports: A=4'1000, B=4'0010, Y=$auto$wreduce.cc:455:run$2751 [3:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:455:run$2751 [3] $auto$wreduce.cc:455:run$2751 [1] }
      New connections: { $auto$wreduce.cc:455:run$2751 [2] $auto$wreduce.cc:455:run$2751 [0] } = 2'00
  Optimizing cells in module \filterdemo.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2245:
      Old ports: A=8'00100000, B={ 99'011010010110111001110100010100100110010101100110001011100100000101101101011100000110110000111010001 $auto$wreduce.cc:455:run$2737 [4:0] 4'0010 $auto$wreduce.cc:455:run$2736 [3:0] $techmap\UI_inst.$procmux$2249_Y 8'01010110 }, Y=$techmap\UI_inst.$procmux$2245_Y
      New ports: A=7'0100000, B={ 86'11010011101110111010010100101100101110011001011101000001110110111100001101100011101001 $auto$wreduce.cc:455:run$2737 [0] 3'000 $auto$wreduce.cc:455:run$2737 [0] 3'010 $auto$wreduce.cc:455:run$2736 [1] $auto$wreduce.cc:455:run$2736 [1] $auto$wreduce.cc:455:run$2736 [1] 5'00110 $techmap\UI_inst.$procmux$2249_Y [2:0] 7'1010110 }, Y=$techmap\UI_inst.$procmux$2245_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2245_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2284:
      Old ports: A=$auto$wreduce.cc:455:run$2739 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2284_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$2739 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2284_Y [4] $techmap\UI_inst.$procmux$2284_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2284_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2286:
      Old ports: A=$techmap\UI_inst.$procmux$2284_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2286_Y
      New ports: A=$techmap\UI_inst.$procmux$2284_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2286_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2286_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2293:
      Old ports: A=$auto$wreduce.cc:455:run$2740 [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2293_Y [4:0]
      New ports: A={ $auto$wreduce.cc:455:run$2740 [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2293_Y [4] $techmap\UI_inst.$procmux$2293_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2293_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2295:
      Old ports: A=$techmap\UI_inst.$procmux$2293_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2295_Y
      New ports: A=$techmap\UI_inst.$procmux$2293_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2295_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2295_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2349:
      Old ports: A=$techmap\UI_inst.$procmux$2347_Y [4:0], B=5'10100, Y=$techmap\UI_inst.$procmux$2349_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2347_Y [1] $techmap\UI_inst.$procmux$2347_Y [1] }, B=2'10, Y=$techmap\UI_inst.$procmux$2349_Y [2:1]
      New connections: { $techmap\UI_inst.$procmux$2349_Y [4:3] $techmap\UI_inst.$procmux$2349_Y [0] } = { $techmap\UI_inst.$procmux$2349_Y [2] 2'00 }
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2351:
      Old ports: A=$techmap\UI_inst.$procmux$2349_Y, B=8'00110010, Y=$techmap\UI_inst.$procmux$2351_Y
      New ports: A=$techmap\UI_inst.$procmux$2349_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2351_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2351_Y [7:5] = 3'001
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2363:
      Old ports: A=8'00100000, B={ 75'010101000110100101100101010000110110111101100001011011100111010000111010001 $techmap\UI_inst.$procmux$2376_Y [4:0] $techmap\UI_inst.$procmux$2373_Y $techmap\UI_inst.$procmux$2368_Y 16'0110110101110011 }, Y=$techmap\UI_inst.$procmux$2363_Y
      New ports: A=7'0100000, B={ 65'10101001101001110010110000111101111110000111011101110100011101001 $techmap\UI_inst.$procmux$2376_Y [0] 3'000 $techmap\UI_inst.$procmux$2376_Y [0] 2'01 $techmap\UI_inst.$procmux$2373_Y [4:0] 2'01 $techmap\UI_inst.$procmux$2368_Y [4:0] 14'11011011110011 }, Y=$techmap\UI_inst.$procmux$2363_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2363_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2368:
      Old ports: A=$techmap\UI_inst.$procmux$2366_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2368_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2366_Y [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2368_Y [4] $techmap\UI_inst.$procmux$2368_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2368_Y [3:1] = 3'000
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2373:
      Old ports: A=$techmap\UI_inst.$procmux$2371_Y [4:0], B=5'10001, Y=$techmap\UI_inst.$procmux$2373_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2371_Y [4] 1'0 }, B=2'11, Y={ $techmap\UI_inst.$procmux$2373_Y [4] $techmap\UI_inst.$procmux$2373_Y [0] }
      New connections: $techmap\UI_inst.$procmux$2373_Y [3:1] = 3'000
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.LCD.$procmux$649:
      Old ports: A=19'0000000000000000000, B={ 20'11101110001101100000 $auto$wreduce.cc:455:run$2746 [17:0] 6'000000 $auto$wreduce.cc:455:run$2745 [12:0] 15'000000000000000 $auto$wreduce.cc:455:run$2744 [3:0] 8'00000000 $auto$wreduce.cc:455:run$2743 [10:0] 2'00 $auto$wreduce.cc:455:run$2742 [16:0] }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17:0] }
      New ports: A=13'0000000000000, B={ 13'1111001101100 $auto$wreduce.cc:455:run$2746 [3] 1'0 $auto$wreduce.cc:455:run$2746 [3] 4'0000 $auto$wreduce.cc:455:run$2746 [3] $auto$wreduce.cc:455:run$2746 [3] 2'00 $auto$wreduce.cc:455:run$2746 [3] 4'0000 $auto$wreduce.cc:455:run$2745 [3] 1'0 $auto$wreduce.cc:455:run$2745 [3] $auto$wreduce.cc:455:run$2745 [3] $auto$wreduce.cc:455:run$2745 [3] 3'000 $auto$wreduce.cc:455:run$2745 [3] 12'000000000000 $auto$wreduce.cc:455:run$2744 [0] $auto$wreduce.cc:455:run$2744 [0] 4'0000 $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] $auto$wreduce.cc:455:run$2743 [4] 1'0 $auto$wreduce.cc:455:run$2743 [4] 2'00 $auto$wreduce.cc:455:run$2742 [4] $auto$wreduce.cc:455:run$2742 [4] 6'000000 $auto$wreduce.cc:455:run$2742 [4] 1'0 $auto$wreduce.cc:455:run$2742 [4] 2'00 }, Y={ $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [16] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [14:12] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [10:3] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
      New connections: { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [19] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [17] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [15] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [11] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [2:1] } = { $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [5] $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [13] 3'000 $techmap\UI_inst.LCD.$0\main_delay_value[19:0] [0] }
  Optimizing cells in module \filterdemo.
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2286:
      Old ports: A=$techmap\UI_inst.$procmux$2284_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2286_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2284_Y [4] 1'0 $techmap\UI_inst.$procmux$2284_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2286_Y [4] $techmap\UI_inst.$procmux$2286_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2286_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2288:
      Old ports: A=$techmap\UI_inst.$procmux$2286_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2288_Y
      New ports: A=$techmap\UI_inst.$procmux$2286_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2288_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2288_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2295:
      Old ports: A=$techmap\UI_inst.$procmux$2293_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2295_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2293_Y [4] 1'0 $techmap\UI_inst.$procmux$2293_Y [0] }, B=3'110, Y={ $techmap\UI_inst.$procmux$2295_Y [4] $techmap\UI_inst.$procmux$2295_Y [1:0] }
      New connections: $techmap\UI_inst.$procmux$2295_Y [3:2] = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2297:
      Old ports: A=$techmap\UI_inst.$procmux$2295_Y, B=8'00110101, Y=$techmap\UI_inst.$procmux$2297_Y
      New ports: A=$techmap\UI_inst.$procmux$2295_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2297_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2297_Y [7:5] = 3'001
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2351:
      Old ports: A=$techmap\UI_inst.$procmux$2349_Y [4:0], B=5'10010, Y=$techmap\UI_inst.$procmux$2351_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2349_Y [2] $techmap\UI_inst.$procmux$2349_Y [2:1] }, B=3'101, Y={ $techmap\UI_inst.$procmux$2351_Y [4] $techmap\UI_inst.$procmux$2351_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2351_Y [3] $techmap\UI_inst.$procmux$2351_Y [0] } = 2'00
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2353:
      Old ports: A=$techmap\UI_inst.$procmux$2351_Y, B=8'00100000, Y=$techmap\UI_inst.$procmux$2353_Y
      New ports: A=$techmap\UI_inst.$procmux$2351_Y [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2353_Y [4:0]
      New connections: $techmap\UI_inst.$procmux$2353_Y [7:5] = 3'001
  Optimizing cells in module \filterdemo.
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2274:
      Old ports: A=8'00100000, B={ 91'0110100101101110011101000101001001100110001011100100011001110010011001010111000100111010001 $auto$wreduce.cc:455:run$2741 [0] 3'000 $auto$wreduce.cc:455:run$2741 [0] $techmap\UI_inst.$procmux$2297_Y $techmap\UI_inst.$procmux$2288_Y 5'00110 $auto$wreduce.cc:455:run$2738 [0] 1'0 $auto$wreduce.cc:455:run$2738 [0] 24'001100000100100001111010 }, Y=$techmap\UI_inst.$procmux$2274_Y
      New ports: A=7'0100000, B={ 79'1101001110111011101001010010110011001011101000110111001011001011110001011101001 $auto$wreduce.cc:455:run$2741 [0] 3'000 $auto$wreduce.cc:455:run$2741 [0] 2'01 $techmap\UI_inst.$procmux$2297_Y [4:0] 2'01 $techmap\UI_inst.$procmux$2288_Y [4:0] 4'0110 $auto$wreduce.cc:455:run$2738 [0] 1'0 $auto$wreduce.cc:455:run$2738 [0] 21'011000010010001111010 }, Y=$techmap\UI_inst.$procmux$2274_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2274_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2288:
      Old ports: A=$techmap\UI_inst.$procmux$2286_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2288_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2286_Y [4] 1'0 $techmap\UI_inst.$procmux$2286_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2288_Y [4] $techmap\UI_inst.$procmux$2288_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2288_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2297:
      Old ports: A=$techmap\UI_inst.$procmux$2295_Y [4:0], B=5'10101, Y=$techmap\UI_inst.$procmux$2297_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2295_Y [4] 1'0 $techmap\UI_inst.$procmux$2295_Y [1:0] }, B=4'1101, Y={ $techmap\UI_inst.$procmux$2297_Y [4] $techmap\UI_inst.$procmux$2297_Y [2:0] }
      New connections: $techmap\UI_inst.$procmux$2297_Y [3] = 1'0
    Consolidated identical input bits for $pmux cell $techmap\UI_inst.$procmux$2343:
      Old ports: A=8'00100000, B={ 40'0100011101100001011010010110111000111010 $techmap\UI_inst.$procmux$2353_Y 24'001100000110010001000010 }, Y=$techmap\UI_inst.$procmux$2343_Y
      New ports: A=7'0100000, B={ 37'1000111110000111010011101110011101001 $techmap\UI_inst.$procmux$2353_Y [4:0] 21'011000011001001000010 }, Y=$techmap\UI_inst.$procmux$2343_Y [6:0]
      New connections: $techmap\UI_inst.$procmux$2343_Y [7] = 1'0
    Consolidated identical input bits for $mux cell $techmap\UI_inst.$procmux$2353:
      Old ports: A=$techmap\UI_inst.$procmux$2351_Y [4:0], B=5'00000, Y=$techmap\UI_inst.$procmux$2353_Y [4:0]
      New ports: A={ $techmap\UI_inst.$procmux$2351_Y [4] $techmap\UI_inst.$procmux$2351_Y [2:1] }, B=3'000, Y={ $techmap\UI_inst.$procmux$2353_Y [4] $techmap\UI_inst.$procmux$2353_Y [2:1] }
      New connections: { $techmap\UI_inst.$procmux$2353_Y [3] $techmap\UI_inst.$procmux$2353_Y [0] } = 2'00
  Optimizing cells in module \filterdemo.
Performed a total of 52 changes.

18.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

18.29.6. Executing OPT_RMDFF pass (remove dff with constant values).

18.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

18.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.29.9. Rerunning OPT passes. (Maybe there is more to do..)

18.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \filterdemo..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~67 debug messages>

18.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \filterdemo.
Performed a total of 0 changes.

18.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.29.13. Executing OPT_RMDFF pass (remove dff with constant values).

18.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.29.16. Finished OPT passes. (There is nothing left to do.)

18.30. Executing TECHMAP pass (map to technology primitives).

18.30.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

18.30.2. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

18.30.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=4\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:d0521459f0fb86cc32cc9b1590b67862dc67dbbd$paramod$93c08705e9f7437b3330e07efac558fa4bdbfcf5\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shr.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$a68bb28b088c405e0a0932831a6b331eb440b1a1\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=23\Y_WIDTH=23 for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=1\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=2\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=4\Y_WIDTH=4 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=20\B_WIDTH=1\Y_WIDTH=20 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=18 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=16 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=6 for cells of type $pmux.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=1\B_SIGNED=1\A_WIDTH=32\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=8\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=49\B_WIDTH=49\Y_WIDTH=49 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=8 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=21 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=13\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=20\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_80_ice40_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=11\Y_WIDTH=11 for cells of type $alu.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=33\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=32 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~3212 debug messages>

18.31. Executing ICE40_OPT pass (performing simple optimizations).

18.31.1. Running ICE40 specific optimizations.

18.31.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~2911 debug messages>

18.31.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~4299 debug messages>
Removed a total of 1433 cells.

18.31.4. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:496:simplemap_adff$6833 ($_DFF_PP0_) from module filterdemo.
Replaced 1 DFF cells.

18.31.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 711 unused cells and 2232 unused wires.
<suppressed ~712 debug messages>

18.31.6. Rerunning OPT passes. (Removed registers in this run.)

18.31.7. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2813.slice[0].carry: CO=1'1
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2822.slice[0].carry: CO=\cnt [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2831.slice[0].carry: CO=\Filter.tickcount [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2834.slice[0].carry: CO=\Filter.inaddr [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2837.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[0].carry: CO=1'0
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2849.slice[0].carry: CO=\UI_inst.cnt3 [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2852.slice[0].carry: CO=\UI_inst.count [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2855.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2858.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2864.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2870.slice[0].carry: CO=\UI_inst.cnt0 [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2873.slice[0].carry: CO=\UI_inst.cnt1 [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2876.slice[0].carry: CO=\UI_inst.cnt2 [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2879.slice[0].carry: CO=\UI_inst.disppos [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2882.slice[0].carry: CO=\UI_inst.TC [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2888.slice[0].carry: CO=\UI_inst.reffreq [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2894.slice[0].carry: CO=\UI_inst.LCD.pos [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2897.slice[0].carry: CO=\UI_inst.LCD.delay_counter.counter [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2900.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2906.slice[0].carry: CO=\UI_inst.diplay_number.dec [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2912.slice[0].carry: CO=\UI_inst.diplay_number.pos [0]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2918.slice[0].carry: CO=\adc_host_hi.count [0]
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2822.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2831.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2834.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2837.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2849.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2852.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2855.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2858.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2864.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2870.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2873.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2876.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2879.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2882.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2888.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2894.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2897.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2900.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2906.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2912.slice[1].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2918.slice[1].adder back to logic.

18.31.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~316 debug messages>

18.31.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

18.31.10. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3287 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 56 unused wires.
<suppressed ~2 debug messages>

18.31.12. Rerunning OPT passes. (Removed registers in this run.)

18.31.13. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2813.slice[1].carry: CO=1'1
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2837.slice[1].carry: CO=1'0
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[1].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2837.slice[2].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[2].adder back to logic.

18.31.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~78 debug messages>

18.31.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.16. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3288 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 2 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

18.31.18. Rerunning OPT passes. (Removed registers in this run.)

18.31.19. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2813.slice[2].carry: CO=1'1
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2837.slice[2].carry: CO=\UI_inst.TC [2]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[2].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2837.slice[3].adder back to logic.
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[3].adder back to logic.

18.31.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~28 debug messages>

18.31.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.22. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3289 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 6 unused wires.
<suppressed ~2 debug messages>

18.31.24. Rerunning OPT passes. (Removed registers in this run.)

18.31.25. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2813.slice[3].carry: CO=1'1
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[3].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[4].adder back to logic.

18.31.26. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.27. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.28. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3290 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.29. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.30. Rerunning OPT passes. (Removed registers in this run.)

18.31.31. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2813.slice[4].carry: CO=$auto$alumacc.cc:474:replace_alu$2813.BB [4]
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[4].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[5].adder back to logic.

18.31.32. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.34. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3291 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.36. Rerunning OPT passes. (Removed registers in this run.)

18.31.37. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[5].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[6].adder back to logic.

18.31.38. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.39. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.40. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3292 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.41. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.42. Rerunning OPT passes. (Removed registers in this run.)

18.31.43. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[6].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[7].adder back to logic.

18.31.44. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.45. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.46. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3293 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.47. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.48. Rerunning OPT passes. (Removed registers in this run.)

18.31.49. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[7].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[8].adder back to logic.

18.31.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.51. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.52. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3294 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.53. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.54. Rerunning OPT passes. (Removed registers in this run.)

18.31.55. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[8].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[9].adder back to logic.

18.31.56. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.57. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.58. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3295 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.59. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.60. Rerunning OPT passes. (Removed registers in this run.)

18.31.61. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[9].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[10].adder back to logic.

18.31.62. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.63. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.64. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3296 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.66. Rerunning OPT passes. (Removed registers in this run.)

18.31.67. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[10].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[11].adder back to logic.

18.31.68. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.69. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.70. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3297 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.71. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.72. Rerunning OPT passes. (Removed registers in this run.)

18.31.73. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[11].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[12].adder back to logic.

18.31.74. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.75. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.76. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3298 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.77. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.78. Rerunning OPT passes. (Removed registers in this run.)

18.31.79. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[12].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[13].adder back to logic.

18.31.80. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.81. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.82. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3299 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.83. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.84. Rerunning OPT passes. (Removed registers in this run.)

18.31.85. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[13].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[14].adder back to logic.

18.31.86. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.87. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.88. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3300 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.89. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.90. Rerunning OPT passes. (Removed registers in this run.)

18.31.91. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[14].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[15].adder back to logic.

18.31.92. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~15 debug messages>

18.31.93. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.94. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:420:simplemap_dff$3301 ($_DFF_P_) from module filterdemo.
Replaced 1 DFF cells.

18.31.95. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

18.31.96. Rerunning OPT passes. (Removed registers in this run.)

18.31.97. Running ICE40 specific optimizations.
Optimized away SB_CARRY cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[15].carry: CO=1'0
Mapping SB_LUT4 cell filterdemo.$auto$alumacc.cc:474:replace_alu$2840.slice[16].adder back to logic.

18.31.98. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~11 debug messages>

18.31.99. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

18.31.100. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.101. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

18.31.102. Rerunning OPT passes. (Removed registers in this run.)

18.31.103. Running ICE40 specific optimizations.

18.31.104. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.31.105. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.31.106. Executing OPT_RMDFF pass (remove dff with constant values).

18.31.107. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.31.108. Finished OPT passes. (There is nothing left to do.)

18.32. Executing DFFSR2DFF pass (mapping DFFSR cells to simpler FFs).

18.33. Executing DFF2DFFE pass (transform $dff to $dffe where applicable).
Selected cell types for direct conversion:
  $_DFF_PP1_ -> $__DFFE_PP1
  $_DFF_PP0_ -> $__DFFE_PP0
  $_DFF_PN1_ -> $__DFFE_PN1
  $_DFF_PN0_ -> $__DFFE_PN0
  $_DFF_NP1_ -> $__DFFE_NP1
  $_DFF_NP0_ -> $__DFFE_NP0
  $_DFF_NN1_ -> $__DFFE_NN1
  $_DFF_NN0_ -> $__DFFE_NN0
  $_DFF_N_ -> $_DFFE_NP_
  $_DFF_P_ -> $_DFFE_PP_
Transforming FF to FF+Enable cells in module filterdemo:
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$10202 to $_DFFE_PP_ for $techmap\UI_inst.LCD.delay_counter.$0\counter[19:0] [1] -> \UI_inst.LCD.delay_counter.counter [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3000 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\acq[0:0] -> \adc_host_hi.acq.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3001 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [0] -> \adc_host_hi.data [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3002 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [1] -> \adc_host_hi.data [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3003 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [2] -> \adc_host_hi.data [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3004 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [3] -> \adc_host_hi.data [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3005 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [4] -> \adc_host_hi.data [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3006 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [5] -> \adc_host_hi.data [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3007 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [6] -> \adc_host_hi.data [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3008 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [7] -> \adc_host_hi.data [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3009 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [8] -> \adc_host_hi.data [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3010 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [9] -> \adc_host_hi.data [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3011 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [10] -> \adc_host_hi.data [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3012 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [11] -> \adc_host_hi.data [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3013 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [12] -> \adc_host_hi.data [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3014 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [13] -> \adc_host_hi.data [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3015 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [14] -> \adc_host_hi.data [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3016 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\data[15:0] [15] -> \adc_host_hi.data [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3018 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\CONVST[0:0] -> \adc_host_hi.CONVST.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3037 to $_DFFE_PP_ for $techmap\adc_host_hi.$0\count[7:0] [1] -> \adc_host_hi.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3161 to $_DFFE_PP_ for $0\rst[0:0] -> \rst.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3163 to $_DFFE_PP_ for $0\cnt[31:0] [1] -> \cnt [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3197 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [0] -> \Filter.inaddr [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3198 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [1] -> \Filter.inaddr [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3199 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [2] -> \Filter.inaddr [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3200 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [3] -> \Filter.inaddr [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3201 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [4] -> \Filter.inaddr [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3202 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [5] -> \Filter.inaddr [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3203 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [6] -> \Filter.inaddr [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3204 to $_DFFE_PP_ for $techmap\Filter.$0\inaddr[7:0] [7] -> \Filter.inaddr [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3205 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [0] -> \UI_inst.cnt3 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3206 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [1] -> \UI_inst.cnt3 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3207 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [2] -> \UI_inst.cnt3 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3208 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [3] -> \UI_inst.cnt3 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3209 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [4] -> \UI_inst.cnt3 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3210 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [5] -> \UI_inst.cnt3 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3211 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [6] -> \UI_inst.cnt3 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3212 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [7] -> \UI_inst.cnt3 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3213 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [8] -> \UI_inst.cnt3 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3214 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [9] -> \UI_inst.cnt3 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3215 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [10] -> \UI_inst.cnt3 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3216 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [11] -> \UI_inst.cnt3 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3217 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [12] -> \UI_inst.cnt3 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3218 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [13] -> \UI_inst.cnt3 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3219 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [14] -> \UI_inst.cnt3 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3220 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [15] -> \UI_inst.cnt3 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3221 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [16] -> \UI_inst.cnt3 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3222 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [17] -> \UI_inst.cnt3 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3223 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [18] -> \UI_inst.cnt3 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3224 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [19] -> \UI_inst.cnt3 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3225 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [20] -> \UI_inst.cnt3 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3226 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [21] -> \UI_inst.cnt3 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3227 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt3[22:0] [22] -> \UI_inst.cnt3 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3286 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [0] -> \Filter.I0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3302 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [16] -> \Filter.I0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3303 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [17] -> \Filter.I0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3304 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [18] -> \Filter.I0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3305 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [19] -> \Filter.I0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3306 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [20] -> \Filter.I0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3307 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [21] -> \Filter.I0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3308 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [22] -> \Filter.I0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3309 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [23] -> \Filter.I0 [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3310 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [24] -> \Filter.I0 [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3311 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [25] -> \Filter.I0 [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3312 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [26] -> \Filter.I0 [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3313 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [27] -> \Filter.I0 [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3314 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [28] -> \Filter.I0 [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3315 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [29] -> \Filter.I0 [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3316 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [30] -> \Filter.I0 [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3317 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [31] -> \Filter.I0 [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3318 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [32] -> \Filter.I0 [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3319 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [33] -> \Filter.I0 [33].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3320 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [34] -> \Filter.I0 [34].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3321 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [35] -> \Filter.I0 [35].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3322 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [36] -> \Filter.I0 [36].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3323 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [37] -> \Filter.I0 [37].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3324 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [38] -> \Filter.I0 [38].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3325 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [39] -> \Filter.I0 [39].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3326 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [40] -> \Filter.I0 [40].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3327 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [41] -> \Filter.I0 [41].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3328 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [42] -> \Filter.I0 [42].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3329 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [43] -> \Filter.I0 [43].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3330 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [44] -> \Filter.I0 [44].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3331 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [45] -> \Filter.I0 [45].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3332 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [46] -> \Filter.I0 [46].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3333 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [47] -> \Filter.I0 [47].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3334 to $_DFFE_PP_ for $techmap\Filter.$0\I0[48:0] [48] -> \Filter.I0 [48].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3335 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [0] -> \Filter.tickcount [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3336 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [1] -> \Filter.tickcount [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3337 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [2] -> \Filter.tickcount [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3338 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [3] -> \Filter.tickcount [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3339 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [4] -> \Filter.tickcount [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3340 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [5] -> \Filter.tickcount [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3341 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [6] -> \Filter.tickcount [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3342 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [7] -> \Filter.tickcount [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3343 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [8] -> \Filter.tickcount [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3344 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [9] -> \Filter.tickcount [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3345 to $_DFFE_PP_ for $techmap\Filter.$0\tickcount[10:0] [10] -> \Filter.tickcount [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3347 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [0] -> \Filter.OUT [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3348 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [1] -> \Filter.OUT [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3349 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [2] -> \Filter.OUT [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3350 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [3] -> \Filter.OUT [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3351 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [4] -> \Filter.OUT [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3352 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [5] -> \Filter.OUT [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3353 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [6] -> \Filter.OUT [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3354 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [7] -> \Filter.OUT [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3355 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [8] -> \Filter.OUT [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3356 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [9] -> \Filter.OUT [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3357 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [10] -> \Filter.OUT [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3358 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [11] -> \Filter.OUT [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3359 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [12] -> \Filter.OUT [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3360 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [13] -> \Filter.OUT [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3361 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [14] -> \Filter.OUT [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3362 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [15] -> \Filter.OUT [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3363 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [16] -> \Filter.OUT [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3364 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [17] -> \Filter.OUT [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3365 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [18] -> \Filter.OUT [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3366 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [19] -> \Filter.OUT [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3367 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [20] -> \Filter.OUT [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3368 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [21] -> \Filter.OUT [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3369 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [22] -> \Filter.OUT [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3370 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [23] -> \Filter.OUT [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3371 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [24] -> \Filter.OUT [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3372 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [25] -> \Filter.OUT [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3373 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [26] -> \Filter.OUT [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3374 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [27] -> \Filter.OUT [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3375 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [28] -> \Filter.OUT [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3376 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [29] -> \Filter.OUT [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3377 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [30] -> \Filter.OUT [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$3378 to $_DFFE_PP_ for $techmap\Filter.$0\OUT[31:0] [31] -> \Filter.OUT [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5189 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [0] -> \UI_inst.cnt2 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5190 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [1] -> \UI_inst.cnt2 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5191 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [2] -> \UI_inst.cnt2 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5192 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [3] -> \UI_inst.cnt2 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5193 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [4] -> \UI_inst.cnt2 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5194 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [5] -> \UI_inst.cnt2 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5195 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [6] -> \UI_inst.cnt2 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5196 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [7] -> \UI_inst.cnt2 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5197 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [8] -> \UI_inst.cnt2 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5198 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [9] -> \UI_inst.cnt2 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5199 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [10] -> \UI_inst.cnt2 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5200 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [11] -> \UI_inst.cnt2 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5201 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [12] -> \UI_inst.cnt2 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5202 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [13] -> \UI_inst.cnt2 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5203 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [14] -> \UI_inst.cnt2 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5204 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [15] -> \UI_inst.cnt2 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5205 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [16] -> \UI_inst.cnt2 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5206 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [17] -> \UI_inst.cnt2 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5207 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [18] -> \UI_inst.cnt2 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5208 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [19] -> \UI_inst.cnt2 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5209 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [20] -> \UI_inst.cnt2 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5210 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [21] -> \UI_inst.cnt2 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5211 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt2[22:0] [22] -> \UI_inst.cnt2 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5212 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [0] -> \UI_inst.cnt1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5213 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [1] -> \UI_inst.cnt1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5214 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [2] -> \UI_inst.cnt1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5215 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [3] -> \UI_inst.cnt1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5216 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [4] -> \UI_inst.cnt1 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5217 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [5] -> \UI_inst.cnt1 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5218 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [6] -> \UI_inst.cnt1 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5219 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [7] -> \UI_inst.cnt1 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5220 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [8] -> \UI_inst.cnt1 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5221 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [9] -> \UI_inst.cnt1 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5222 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [10] -> \UI_inst.cnt1 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5223 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [11] -> \UI_inst.cnt1 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5224 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [12] -> \UI_inst.cnt1 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5225 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [13] -> \UI_inst.cnt1 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5226 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [14] -> \UI_inst.cnt1 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5227 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [15] -> \UI_inst.cnt1 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5228 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [16] -> \UI_inst.cnt1 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5229 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [17] -> \UI_inst.cnt1 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5230 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [18] -> \UI_inst.cnt1 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5231 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [19] -> \UI_inst.cnt1 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5232 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [20] -> \UI_inst.cnt1 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5233 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [21] -> \UI_inst.cnt1 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5234 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt1[22:0] [22] -> \UI_inst.cnt1 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5235 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [0] -> \UI_inst.cnt0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5236 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [1] -> \UI_inst.cnt0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5237 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [2] -> \UI_inst.cnt0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5238 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [3] -> \UI_inst.cnt0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5239 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [4] -> \UI_inst.cnt0 [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5240 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [5] -> \UI_inst.cnt0 [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5241 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [6] -> \UI_inst.cnt0 [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5242 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [7] -> \UI_inst.cnt0 [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5243 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [8] -> \UI_inst.cnt0 [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5244 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [9] -> \UI_inst.cnt0 [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5245 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [10] -> \UI_inst.cnt0 [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5246 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [11] -> \UI_inst.cnt0 [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5247 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [12] -> \UI_inst.cnt0 [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5248 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [13] -> \UI_inst.cnt0 [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5249 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [14] -> \UI_inst.cnt0 [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5250 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [15] -> \UI_inst.cnt0 [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5251 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [16] -> \UI_inst.cnt0 [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5252 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [17] -> \UI_inst.cnt0 [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5253 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [18] -> \UI_inst.cnt0 [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5254 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [19] -> \UI_inst.cnt0 [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5255 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [20] -> \UI_inst.cnt0 [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5256 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [21] -> \UI_inst.cnt0 [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5257 to $_DFFE_PP_ for $techmap\UI_inst.$0\cnt0[22:0] [22] -> \UI_inst.cnt0 [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5270 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [0] -> \UI_inst.datS [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5271 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [1] -> \UI_inst.datS [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5272 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [2] -> \UI_inst.datS [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5273 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [3] -> \UI_inst.datS [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5274 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [4] -> \UI_inst.datS [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5275 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [5] -> \UI_inst.datS [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5276 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [6] -> \UI_inst.datS [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5277 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2271.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5917_Y [7] -> \UI_inst.datS [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5278 to $_DFFE_PP_ for $techmap\UI_inst.$0\ismagphase[0:0] -> \UI_inst.ismagphase.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5279 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2143.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6272_Y [0] -> \UI_inst.state [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5280 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2143.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6272_Y [1] -> \UI_inst.state [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5281 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2143.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6272_Y [2] -> \UI_inst.state [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5282 to $_DFFE_PP_ for $techmap$techmap\UI_inst.$procmux$2143.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6272_Y [3] -> \UI_inst.state [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5285 to $_DFFE_PP_ for $auto$simplemap.cc:309:simplemap_lut$17328 -> \UI_inst.count [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5308 to $_DFFE_PP_ for $techmap\UI_inst.$0\refIO[0:0] -> \UI_inst.refIO.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5309 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [0] -> \UI_inst.refampl [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5310 to $_DFFE_PP_ for $techmap\UI_inst.$0\refampl[1:0] [1] -> \UI_inst.refampl [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5311 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [0] -> \UI_inst.reffreq [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5312 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [1] -> \UI_inst.reffreq [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5313 to $_DFFE_PP_ for $techmap\UI_inst.$0\reffreq[2:0] [2] -> \UI_inst.reffreq [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5314 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [0] -> \UI_inst.TC [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5315 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [1] -> \UI_inst.TC [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5316 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [2] -> \UI_inst.TC [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5317 to $_DFFE_PP_ for $techmap\UI_inst.$0\TC[3:0] [3] -> \UI_inst.TC [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5318 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [0] -> \UI_inst.gain [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$5319 to $_DFFE_PP_ for $techmap\UI_inst.$0\gain[1:0] [1] -> \UI_inst.gain [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6782 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [0] -> \UI_inst.LCD.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6783 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [1] -> \UI_inst.LCD.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6784 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [2] -> \UI_inst.LCD.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6785 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [3] -> \UI_inst.LCD.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6786 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [4] -> \UI_inst.LCD.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6787 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [5] -> \UI_inst.LCD.pos [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6788 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [6] -> \UI_inst.LCD.pos [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6789 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [7] -> \UI_inst.LCD.pos [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6790 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [8] -> \UI_inst.LCD.pos [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6791 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [9] -> \UI_inst.LCD.pos [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6792 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [10] -> \UI_inst.LCD.pos [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6793 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [11] -> \UI_inst.LCD.pos [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6794 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [12] -> \UI_inst.LCD.pos [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6795 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [13] -> \UI_inst.LCD.pos [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6796 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [14] -> \UI_inst.LCD.pos [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6797 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [15] -> \UI_inst.LCD.pos [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6798 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [16] -> \UI_inst.LCD.pos [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6799 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [17] -> \UI_inst.LCD.pos [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6800 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [18] -> \UI_inst.LCD.pos [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6801 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [19] -> \UI_inst.LCD.pos [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6802 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [20] -> \UI_inst.LCD.pos [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6803 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [21] -> \UI_inst.LCD.pos [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6804 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [22] -> \UI_inst.LCD.pos [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6805 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [23] -> \UI_inst.LCD.pos [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6806 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [24] -> \UI_inst.LCD.pos [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6807 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [25] -> \UI_inst.LCD.pos [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6808 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [26] -> \UI_inst.LCD.pos [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6809 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [27] -> \UI_inst.LCD.pos [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6810 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [28] -> \UI_inst.LCD.pos [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6811 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [29] -> \UI_inst.LCD.pos [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6812 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [30] -> \UI_inst.LCD.pos [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6813 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$798.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7012_Y [31] -> \UI_inst.LCD.pos [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6835 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$687.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6259_Y -> \UI_inst.LCD.LCD_E1.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6836 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$708.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [0] -> \UI_inst.LCD.SF_D1 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6837 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$708.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [1] -> \UI_inst.LCD.SF_D1 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6838 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$708.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [2] -> \UI_inst.LCD.SF_D1 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6839 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$708.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [3] -> \UI_inst.LCD.SF_D1 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6845 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [0] -> \UI_inst.LCD.tx_byte [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6846 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [1] -> \UI_inst.LCD.tx_byte [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6847 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [2] -> \UI_inst.LCD.tx_byte [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6848 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [3] -> \UI_inst.LCD.tx_byte [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6849 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [4] -> \UI_inst.LCD.tx_byte [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6850 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [5] -> \UI_inst.LCD.tx_byte [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6851 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [6] -> \UI_inst.LCD.tx_byte [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6852 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$780.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7114_Y [7] -> \UI_inst.LCD.tx_byte [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6853 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$525.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7545_Y -> \UI_inst.LCD.tx_delay_load.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6854 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [0] -> \UI_inst.LCD.tx_delay_value [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6855 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [1] -> \UI_inst.LCD.tx_delay_value [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6856 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [2] -> \UI_inst.LCD.tx_delay_value [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6857 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [3] -> \UI_inst.LCD.tx_delay_value [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6858 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [4] -> \UI_inst.LCD.tx_delay_value [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6859 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [5] -> \UI_inst.LCD.tx_delay_value [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6860 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [6] -> \UI_inst.LCD.tx_delay_value [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6861 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [7] -> \UI_inst.LCD.tx_delay_value [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6862 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [8] -> \UI_inst.LCD.tx_delay_value [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6863 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [9] -> \UI_inst.LCD.tx_delay_value [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6864 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [10] -> \UI_inst.LCD.tx_delay_value [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6865 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [11] -> \UI_inst.LCD.tx_delay_value [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6866 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [12] -> \UI_inst.LCD.tx_delay_value [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6867 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [13] -> \UI_inst.LCD.tx_delay_value [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6868 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [14] -> \UI_inst.LCD.tx_delay_value [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6869 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [15] -> \UI_inst.LCD.tx_delay_value [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6870 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [16] -> \UI_inst.LCD.tx_delay_value [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6871 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [17] -> \UI_inst.LCD.tx_delay_value [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6872 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [18] -> \UI_inst.LCD.tx_delay_value [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6873 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$545.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7665_Y [19] -> \UI_inst.LCD.tx_delay_value [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6874 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$562.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6259_Y -> \UI_inst.LCD.LCD_E0.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6875 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$572.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [0] -> \UI_inst.LCD.SF_D0 [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6876 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$572.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [1] -> \UI_inst.LCD.SF_D0 [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6877 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$572.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [2] -> \UI_inst.LCD.SF_D0 [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6878 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$572.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$5537_Y [3] -> \UI_inst.LCD.SF_D0 [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$6879 to $_DFFE_PP_ for $techmap$techmap\UI_inst.LCD.$procmux$577.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$6259_Y -> \UI_inst.LCD.tx_done.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8049 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\leadz[0:0] -> \UI_inst.diplay_number.leadz.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8050 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\holdoff[0:0] -> \UI_inst.diplay_number.holdoff.
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8083 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\difference[32:0] [32] -> \UI_inst.diplay_number.difference [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8084 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [0] -> \UI_inst.diplay_number.dec [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8085 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [1] -> \UI_inst.diplay_number.dec [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8086 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [2] -> \UI_inst.diplay_number.dec [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8087 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dec[3:0] [3] -> \UI_inst.diplay_number.dec [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8088 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [0] -> \UI_inst.diplay_number.pos [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8089 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [1] -> \UI_inst.diplay_number.pos [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8090 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [2] -> \UI_inst.diplay_number.pos [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8091 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [3] -> \UI_inst.diplay_number.pos [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8092 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\pos[4:0] [4] -> \UI_inst.diplay_number.pos [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8095 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [0] -> \UI_inst.diplay_number.summand [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8096 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [1] -> \UI_inst.diplay_number.summand [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8097 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [2] -> \UI_inst.diplay_number.summand [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8098 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [3] -> \UI_inst.diplay_number.summand [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8099 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [4] -> \UI_inst.diplay_number.summand [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8100 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [5] -> \UI_inst.diplay_number.summand [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8101 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [6] -> \UI_inst.diplay_number.summand [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8102 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [7] -> \UI_inst.diplay_number.summand [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8103 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [8] -> \UI_inst.diplay_number.summand [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8104 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [9] -> \UI_inst.diplay_number.summand [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8105 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [10] -> \UI_inst.diplay_number.summand [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8106 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [11] -> \UI_inst.diplay_number.summand [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8107 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [12] -> \UI_inst.diplay_number.summand [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8108 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [13] -> \UI_inst.diplay_number.summand [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8109 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [14] -> \UI_inst.diplay_number.summand [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8110 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [15] -> \UI_inst.diplay_number.summand [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8111 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [16] -> \UI_inst.diplay_number.summand [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8112 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [17] -> \UI_inst.diplay_number.summand [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8113 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [18] -> \UI_inst.diplay_number.summand [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8114 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [19] -> \UI_inst.diplay_number.summand [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8115 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [20] -> \UI_inst.diplay_number.summand [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8116 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [21] -> \UI_inst.diplay_number.summand [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8117 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [22] -> \UI_inst.diplay_number.summand [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8118 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [23] -> \UI_inst.diplay_number.summand [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8119 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [24] -> \UI_inst.diplay_number.summand [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8120 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [25] -> \UI_inst.diplay_number.summand [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8121 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [26] -> \UI_inst.diplay_number.summand [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8122 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [27] -> \UI_inst.diplay_number.summand [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8123 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [28] -> \UI_inst.diplay_number.summand [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8124 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [29] -> \UI_inst.diplay_number.summand [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8125 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [30] -> \UI_inst.diplay_number.summand [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8126 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\summand[31:0] [31] -> \UI_inst.diplay_number.summand [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8127 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [0] -> \UI_inst.diplay_number.secondlastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8128 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [1] -> \UI_inst.diplay_number.secondlastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8129 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [2] -> \UI_inst.diplay_number.secondlastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8130 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [3] -> \UI_inst.diplay_number.secondlastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8131 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [4] -> \UI_inst.diplay_number.secondlastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8132 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [5] -> \UI_inst.diplay_number.secondlastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8133 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [6] -> \UI_inst.diplay_number.secondlastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8134 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [7] -> \UI_inst.diplay_number.secondlastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8135 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [8] -> \UI_inst.diplay_number.secondlastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8136 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [9] -> \UI_inst.diplay_number.secondlastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8137 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [10] -> \UI_inst.diplay_number.secondlastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8138 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [11] -> \UI_inst.diplay_number.secondlastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8139 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [12] -> \UI_inst.diplay_number.secondlastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8140 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [13] -> \UI_inst.diplay_number.secondlastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8141 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [14] -> \UI_inst.diplay_number.secondlastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8142 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [15] -> \UI_inst.diplay_number.secondlastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8143 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [16] -> \UI_inst.diplay_number.secondlastacc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8144 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [17] -> \UI_inst.diplay_number.secondlastacc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8145 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [18] -> \UI_inst.diplay_number.secondlastacc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8146 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [19] -> \UI_inst.diplay_number.secondlastacc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8147 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [20] -> \UI_inst.diplay_number.secondlastacc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8148 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [21] -> \UI_inst.diplay_number.secondlastacc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8149 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [22] -> \UI_inst.diplay_number.secondlastacc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8150 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [23] -> \UI_inst.diplay_number.secondlastacc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8151 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [24] -> \UI_inst.diplay_number.secondlastacc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8152 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [25] -> \UI_inst.diplay_number.secondlastacc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8153 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [26] -> \UI_inst.diplay_number.secondlastacc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8154 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [27] -> \UI_inst.diplay_number.secondlastacc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8155 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [28] -> \UI_inst.diplay_number.secondlastacc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8156 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [29] -> \UI_inst.diplay_number.secondlastacc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8157 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [30] -> \UI_inst.diplay_number.secondlastacc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8158 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\secondlastacc[31:0] [31] -> \UI_inst.diplay_number.secondlastacc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8159 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [0] -> \UI_inst.diplay_number.lastacc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8160 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [1] -> \UI_inst.diplay_number.lastacc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8161 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [2] -> \UI_inst.diplay_number.lastacc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8162 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [3] -> \UI_inst.diplay_number.lastacc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8163 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [4] -> \UI_inst.diplay_number.lastacc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8164 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [5] -> \UI_inst.diplay_number.lastacc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8165 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [6] -> \UI_inst.diplay_number.lastacc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8166 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [7] -> \UI_inst.diplay_number.lastacc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8167 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [8] -> \UI_inst.diplay_number.lastacc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8168 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [9] -> \UI_inst.diplay_number.lastacc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8169 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [10] -> \UI_inst.diplay_number.lastacc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8170 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [11] -> \UI_inst.diplay_number.lastacc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8171 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [12] -> \UI_inst.diplay_number.lastacc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8172 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [13] -> \UI_inst.diplay_number.lastacc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8173 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [14] -> \UI_inst.diplay_number.lastacc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8174 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [15] -> \UI_inst.diplay_number.lastacc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8175 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [16] -> \UI_inst.diplay_number.lastacc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8176 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [17] -> \UI_inst.diplay_number.lastacc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8177 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [18] -> \UI_inst.diplay_number.lastacc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8178 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [19] -> \UI_inst.diplay_number.lastacc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8179 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [20] -> \UI_inst.diplay_number.lastacc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8180 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [21] -> \UI_inst.diplay_number.lastacc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8181 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [22] -> \UI_inst.diplay_number.lastacc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8182 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [23] -> \UI_inst.diplay_number.lastacc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8183 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [24] -> \UI_inst.diplay_number.lastacc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8184 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [25] -> \UI_inst.diplay_number.lastacc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8185 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [26] -> \UI_inst.diplay_number.lastacc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8186 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [27] -> \UI_inst.diplay_number.lastacc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8187 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [28] -> \UI_inst.diplay_number.lastacc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8188 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [29] -> \UI_inst.diplay_number.lastacc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8189 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [30] -> \UI_inst.diplay_number.lastacc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8190 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\lastacc[31:0] [31] -> \UI_inst.diplay_number.lastacc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8191 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [0] -> \UI_inst.diplay_number.acc [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8192 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [1] -> \UI_inst.diplay_number.acc [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8193 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [2] -> \UI_inst.diplay_number.acc [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8194 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [3] -> \UI_inst.diplay_number.acc [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8195 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [4] -> \UI_inst.diplay_number.acc [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8196 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [5] -> \UI_inst.diplay_number.acc [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8197 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [6] -> \UI_inst.diplay_number.acc [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8198 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [7] -> \UI_inst.diplay_number.acc [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8199 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [8] -> \UI_inst.diplay_number.acc [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8200 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [9] -> \UI_inst.diplay_number.acc [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8201 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [10] -> \UI_inst.diplay_number.acc [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8202 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [11] -> \UI_inst.diplay_number.acc [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8203 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [12] -> \UI_inst.diplay_number.acc [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8204 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [13] -> \UI_inst.diplay_number.acc [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8205 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [14] -> \UI_inst.diplay_number.acc [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8206 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [15] -> \UI_inst.diplay_number.acc [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8207 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [16] -> \UI_inst.diplay_number.acc [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8208 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [17] -> \UI_inst.diplay_number.acc [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8209 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [18] -> \UI_inst.diplay_number.acc [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8210 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [19] -> \UI_inst.diplay_number.acc [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8211 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [20] -> \UI_inst.diplay_number.acc [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8212 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [21] -> \UI_inst.diplay_number.acc [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8213 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [22] -> \UI_inst.diplay_number.acc [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8214 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [23] -> \UI_inst.diplay_number.acc [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8215 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [24] -> \UI_inst.diplay_number.acc [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8216 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [25] -> \UI_inst.diplay_number.acc [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8217 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [26] -> \UI_inst.diplay_number.acc [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8218 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [27] -> \UI_inst.diplay_number.acc [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8219 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [28] -> \UI_inst.diplay_number.acc [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8220 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [29] -> \UI_inst.diplay_number.acc [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8221 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [30] -> \UI_inst.diplay_number.acc [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8222 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [31] -> \UI_inst.diplay_number.acc [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8223 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\acc[32:0] [32] -> \UI_inst.diplay_number.acc [32].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8224 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [0] -> \UI_inst.diplay_number.rest [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8225 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [1] -> \UI_inst.diplay_number.rest [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8226 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [2] -> \UI_inst.diplay_number.rest [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8227 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [3] -> \UI_inst.diplay_number.rest [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8228 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [4] -> \UI_inst.diplay_number.rest [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8229 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [5] -> \UI_inst.diplay_number.rest [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8230 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [6] -> \UI_inst.diplay_number.rest [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8231 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [7] -> \UI_inst.diplay_number.rest [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8232 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [8] -> \UI_inst.diplay_number.rest [8].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8233 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [9] -> \UI_inst.diplay_number.rest [9].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8234 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [10] -> \UI_inst.diplay_number.rest [10].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8235 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [11] -> \UI_inst.diplay_number.rest [11].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8236 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [12] -> \UI_inst.diplay_number.rest [12].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8237 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [13] -> \UI_inst.diplay_number.rest [13].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8238 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [14] -> \UI_inst.diplay_number.rest [14].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8239 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [15] -> \UI_inst.diplay_number.rest [15].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8240 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [16] -> \UI_inst.diplay_number.rest [16].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8241 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [17] -> \UI_inst.diplay_number.rest [17].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8242 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [18] -> \UI_inst.diplay_number.rest [18].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8243 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [19] -> \UI_inst.diplay_number.rest [19].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8244 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [20] -> \UI_inst.diplay_number.rest [20].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8245 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [21] -> \UI_inst.diplay_number.rest [21].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8246 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [22] -> \UI_inst.diplay_number.rest [22].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8247 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [23] -> \UI_inst.diplay_number.rest [23].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8248 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [24] -> \UI_inst.diplay_number.rest [24].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8249 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [25] -> \UI_inst.diplay_number.rest [25].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8250 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [26] -> \UI_inst.diplay_number.rest [26].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8251 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [27] -> \UI_inst.diplay_number.rest [27].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8252 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [28] -> \UI_inst.diplay_number.rest [28].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8253 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [29] -> \UI_inst.diplay_number.rest [29].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8254 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [30] -> \UI_inst.diplay_number.rest [30].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8255 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\rest[31:0] [31] -> \UI_inst.diplay_number.rest [31].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8256 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [0] -> \UI_inst.diplay_number.dat [0].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8257 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [1] -> \UI_inst.diplay_number.dat [1].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8258 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [2] -> \UI_inst.diplay_number.dat [2].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8259 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [3] -> \UI_inst.diplay_number.dat [3].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8260 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [4] -> \UI_inst.diplay_number.dat [4].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8261 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [5] -> \UI_inst.diplay_number.dat [5].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8262 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [6] -> \UI_inst.diplay_number.dat [6].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8263 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\dat[7:0] [7] -> \UI_inst.diplay_number.dat [7].
  converting $_DFF_P_ cell $auto$simplemap.cc:420:simplemap_dff$8264 to $_DFFE_PP_ for $techmap\UI_inst.diplay_number.$0\we[0:0] -> \UI_inst.diplay_number.we.
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6840 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$716.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7304_Y [0] -> \UI_inst.LCD.display_state [0].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6841 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$716.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7304_Y [1] -> \UI_inst.LCD.display_state [1].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6842 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$716.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7304_Y [2] -> \UI_inst.LCD.display_state [2].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6843 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$716.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7304_Y [3] -> \UI_inst.LCD.display_state [3].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6844 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$716.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7304_Y [4] -> \UI_inst.LCD.display_state [4].
  converting $_DFF_PP0_ cell $auto$simplemap.cc:496:simplemap_adff$6880 to $__DFFE_PP0 for $techmap$techmap\UI_inst.LCD.$procmux$584.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7569_Y [0] -> \UI_inst.LCD.tx_state [0].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$6881 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$584.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7569_Y [1] -> \UI_inst.LCD.tx_state [1].
  converting $_DFF_PP1_ cell $auto$simplemap.cc:496:simplemap_adff$6882 to $__DFFE_PP1 for $techmap$techmap\UI_inst.LCD.$procmux$584.$ternary$/usr/local/bin/../share/yosys/techmap.v:445$7569_Y [2] -> \UI_inst.LCD.tx_state [2].

18.34. Executing TECHMAP pass (map to technology primitives).

18.34.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Successfully finished Verilog frontend.

18.34.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$__DFFE_PP0 for cells of type $__DFFE_PP0.
Using template \$__DFFE_PP1 for cells of type $__DFFE_PP1.
No more expansions possible.
<suppressed ~726 debug messages>

18.35. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~1244 debug messages>

18.36. Executing SIMPLEMAP pass (map simple cells to gate primitives).

18.37. Executing ICE40_FFINIT pass (implement FF init values).
Handling FF init values in filterdemo.
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8263 (SB_DFFE): \UI_inst.diplay_number.dat [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8264 (SB_DFFE): \UI_inst.diplay_number.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3006 (SB_DFFE): \adc_host_hi.data [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3000 (SB_DFFE): \adc_host_hi.acq = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3003 (SB_DFFE): \adc_host_hi.data [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3004 (SB_DFFE): \adc_host_hi.data [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3005 (SB_DFFE): \adc_host_hi.data [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3034 (SB_DFFN): \adc_host_hi.shiftdata [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3008 (SB_DFFE): \adc_host_hi.data [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3037 (SB_DFFE): \adc_host_hi.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3038 (SB_DFF): \adc_host_hi.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3040 (SB_DFF): \adc_host_hi.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3042 (SB_DFF): \adc_host_hi.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3013 (SB_DFFE): \adc_host_hi.data [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3014 (SB_DFFE): \adc_host_hi.data [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3015 (SB_DFFE): \adc_host_hi.data [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3016 (SB_DFFE): \adc_host_hi.data [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3146 (SB_DFF): \outstuff [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3025 (SB_DFFN): \adc_host_hi.shiftdata [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3001 (SB_DFFE): \adc_host_hi.data [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3019 (SB_DFFN): \adc_host_hi.shiftdata [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3020 (SB_DFFN): \adc_host_hi.shiftdata [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3021 (SB_DFFN): \adc_host_hi.shiftdata [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3022 (SB_DFFN): \adc_host_hi.shiftdata [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3023 (SB_DFFN): \adc_host_hi.shiftdata [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3024 (SB_DFFN): \adc_host_hi.shiftdata [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3007 (SB_DFFE): \adc_host_hi.data [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3026 (SB_DFFN): \adc_host_hi.shiftdata [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3027 (SB_DFFN): \adc_host_hi.shiftdata [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3028 (SB_DFFN): \adc_host_hi.shiftdata [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3029 (SB_DFFN): \adc_host_hi.shiftdata [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3030 (SB_DFFN): \adc_host_hi.shiftdata [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3031 (SB_DFFN): \adc_host_hi.shiftdata [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3032 (SB_DFFN): \adc_host_hi.shiftdata [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3033 (SB_DFFN): \adc_host_hi.shiftdata [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3043 (SB_DFF): \adc_host_hi.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3009 (SB_DFFE): \adc_host_hi.data [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3039 (SB_DFF): \adc_host_hi.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3010 (SB_DFFE): \adc_host_hi.data [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3041 (SB_DFF): \adc_host_hi.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3011 (SB_DFFE): \adc_host_hi.data [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3012 (SB_DFFE): \adc_host_hi.data [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3018 (SB_DFFE): \adc_host_hi.CONVST = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3150 (SB_DFF): \outstuff [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3148 (SB_DFF): \outstuff [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3149 (SB_DFF): \outstuff [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3002 (SB_DFFE): \adc_host_hi.data [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3152 (SB_DFF): \outstuff [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3153 (SB_DFF): \outstuff [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3154 (SB_DFF): \outstuff [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3155 (SB_DFF): \outstuff [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3156 (SB_DFF): \outstuff [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3157 (SB_DFF): \outstuff [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3158 (SB_DFF): \outstuff [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3159 (SB_DFF): \outstuff [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3160 (SB_DFF): \outstuff [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3163 (SB_DFFE): \cnt [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6790 (SB_DFFE): \UI_inst.LCD.pos [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3169 (SB_DFF): \cnt [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3164 (SB_DFF): \cnt [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3165 (SB_DFF): \cnt [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3166 (SB_DFF): \cnt [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3167 (SB_DFF): \cnt [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3168 (SB_DFF): \cnt [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3170 (SB_DFF): \cnt [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3145 (SB_DFF): \outstuff [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3171 (SB_DFF): \cnt [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3172 (SB_DFF): \cnt [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3173 (SB_DFF): \cnt [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3174 (SB_DFF): \cnt [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3175 (SB_DFF): \cnt [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3176 (SB_DFF): \cnt [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3177 (SB_DFF): \cnt [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3178 (SB_DFF): \cnt [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3179 (SB_DFF): \cnt [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3180 (SB_DFF): \cnt [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3181 (SB_DFF): \cnt [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3182 (SB_DFF): \cnt [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3183 (SB_DFF): \cnt [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3184 (SB_DFF): \cnt [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3185 (SB_DFF): \cnt [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3186 (SB_DFF): \cnt [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3187 (SB_DFF): \cnt [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3188 (SB_DFF): \cnt [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3189 (SB_DFF): \cnt [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3190 (SB_DFF): \cnt [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3191 (SB_DFF): \cnt [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3192 (SB_DFF): \cnt [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3193 (SB_DFF): \cnt [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3202 (SB_DFFE): \Filter.inaddr [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE): \UI_inst.cnt3 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3197 (SB_DFFE): \Filter.inaddr [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3198 (SB_DFFE): \Filter.inaddr [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3199 (SB_DFFE): \Filter.inaddr [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3200 (SB_DFFE): \Filter.inaddr [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3201 (SB_DFFE): \Filter.inaddr [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3162 (SB_DFF): \cnt [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFFE): \UI_inst.cnt3 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3204 (SB_DFFE): \Filter.inaddr [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFFE): \UI_inst.cnt3 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFFE): \UI_inst.cnt3 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFFE): \UI_inst.cnt3 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFFE): \UI_inst.cnt3 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFFE): \UI_inst.cnt3 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFFE): \UI_inst.cnt3 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFFE): \UI_inst.cnt3 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3203 (SB_DFFE): \Filter.inaddr [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFFE): \UI_inst.cnt3 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFFE): \UI_inst.cnt3 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFFE): \UI_inst.cnt3 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFFE): \UI_inst.cnt3 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFFE): \UI_inst.cnt3 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFFE): \UI_inst.cnt3 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFFE): \UI_inst.cnt3 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFFE): \UI_inst.cnt3 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFFE): \UI_inst.cnt3 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFFE): \UI_inst.cnt3 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFFE): \UI_inst.cnt3 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFFE): \UI_inst.cnt3 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFFE): \UI_inst.cnt3 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3238 (SB_DFF): \Filter.OUTpipe [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFFE): \UI_inst.cnt3 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3244 (SB_DFF): \Filter.OUTpipe [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3239 (SB_DFF): \Filter.OUTpipe [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3240 (SB_DFF): \Filter.OUTpipe [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3241 (SB_DFF): \Filter.OUTpipe [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3242 (SB_DFF): \Filter.OUTpipe [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3243 (SB_DFF): \Filter.OUTpipe [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3245 (SB_DFF): \Filter.OUTpipe [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3236 (SB_DFF): \Filter.we = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3246 (SB_DFF): \Filter.OUTpipe [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3247 (SB_DFF): \Filter.OUTpipe [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3248 (SB_DFF): \Filter.OUTpipe [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3249 (SB_DFF): \Filter.OUTpipe [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3250 (SB_DFF): \Filter.OUTpipe [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3251 (SB_DFF): \Filter.OUTpipe [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3252 (SB_DFF): \Filter.OUTpipe [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3253 (SB_DFF): \Filter.OUTpipe [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3254 (SB_DFF): \Filter.OUTpipe [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3255 (SB_DFF): \Filter.OUTpipe [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3256 (SB_DFF): \Filter.OUTpipe [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3257 (SB_DFF): \Filter.OUTpipe [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3258 (SB_DFF): \Filter.OUTpipe [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3259 (SB_DFF): \Filter.OUTpipe [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3260 (SB_DFF): \Filter.OUTpipe [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3261 (SB_DFF): \Filter.OUTpipe [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3262 (SB_DFF): \Filter.OUTpipe [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3263 (SB_DFF): \Filter.OUTpipe [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3264 (SB_DFF): \Filter.OUTpipe [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3265 (SB_DFF): \Filter.OUTpipe [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3266 (SB_DFF): \Filter.OUTpipe [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3267 (SB_DFF): \Filter.OUTpipe [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3268 (SB_DFF): \Filter.OUTpipe [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3269 (SB_DFF): \Filter.OUTpipe [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3270 (SB_DFF): \Filter.OUTpipe [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3271 (SB_DFF): \Filter.OUTpipe [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3272 (SB_DFF): \Filter.OUTpipe [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3273 (SB_DFF): \Filter.OUTpipe [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3274 (SB_DFF): \Filter.OUTpipe [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3275 (SB_DFF): \Filter.OUTpipe [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3276 (SB_DFF): \Filter.OUTpipe [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3277 (SB_DFF): \Filter.OUTpipe [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3278 (SB_DFF): \Filter.OUTpipe [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3279 (SB_DFF): \Filter.OUTpipe [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3280 (SB_DFF): \Filter.OUTpipe [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3281 (SB_DFF): \Filter.OUTpipe [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3282 (SB_DFF): \Filter.OUTpipe [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3283 (SB_DFF): \Filter.OUTpipe [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3284 (SB_DFF): \Filter.OUTpipe [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3285 (SB_DFF): \Filter.OUTpipe [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3286 (SB_DFFE): \Filter.I0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3302 (SB_DFFE): \Filter.I0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3303 (SB_DFFE): \Filter.I0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3304 (SB_DFFE): \Filter.I0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3305 (SB_DFFE): \Filter.I0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3306 (SB_DFFE): \Filter.I0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3307 (SB_DFFE): \Filter.I0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3308 (SB_DFFE): \Filter.I0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3309 (SB_DFFE): \Filter.I0 [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3310 (SB_DFFE): \Filter.I0 [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3311 (SB_DFFE): \Filter.I0 [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3312 (SB_DFFE): \Filter.I0 [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3313 (SB_DFFE): \Filter.I0 [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3314 (SB_DFFE): \Filter.I0 [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3315 (SB_DFFE): \Filter.I0 [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3316 (SB_DFFE): \Filter.I0 [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3317 (SB_DFFE): \Filter.I0 [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3318 (SB_DFFE): \Filter.I0 [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3319 (SB_DFFE): \Filter.I0 [33] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3320 (SB_DFFE): \Filter.I0 [34] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3321 (SB_DFFE): \Filter.I0 [35] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3322 (SB_DFFE): \Filter.I0 [36] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3323 (SB_DFFE): \Filter.I0 [37] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3324 (SB_DFFE): \Filter.I0 [38] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3325 (SB_DFFE): \Filter.I0 [39] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3326 (SB_DFFE): \Filter.I0 [40] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3327 (SB_DFFE): \Filter.I0 [41] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3328 (SB_DFFE): \Filter.I0 [42] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3329 (SB_DFFE): \Filter.I0 [43] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3330 (SB_DFFE): \Filter.I0 [44] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3331 (SB_DFFE): \Filter.I0 [45] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3332 (SB_DFFE): \Filter.I0 [46] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3333 (SB_DFFE): \Filter.I0 [47] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3334 (SB_DFFE): \Filter.I0 [48] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3335 (SB_DFFE): \Filter.tickcount [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3336 (SB_DFFE): \Filter.tickcount [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3337 (SB_DFFE): \Filter.tickcount [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3338 (SB_DFFE): \Filter.tickcount [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3339 (SB_DFFE): \Filter.tickcount [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3340 (SB_DFFE): \Filter.tickcount [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3341 (SB_DFFE): \Filter.tickcount [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3342 (SB_DFFE): \Filter.tickcount [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3344 (SB_DFFE): \Filter.tickcount [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3237 (SB_DFF): \Filter.OUTpipe [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3345 (SB_DFFE): \Filter.tickcount [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3346 (SB_DFF): \Filter.lasttick = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3017 (SB_DFF): \adc_host_hi.newdata = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3343 (SB_DFFE): \Filter.tickcount [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5173 (SB_DFF): \DAC1.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3036 (SB_DFF): \adc_host_hi.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8049 (SB_DFFE): \UI_inst.diplay_number.leadz = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5176 (SB_DFF): \DAC1.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5168 (SB_DFF): \DAC1.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5169 (SB_DFF): \DAC1.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5170 (SB_DFF): \DAC1.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5171 (SB_DFF): \DAC1.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5172 (SB_DFF): \DAC1.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5177 (SB_DFF): \DAC1.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5175 (SB_DFF): \DAC1.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5179 (SB_DFF): \DAC1.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5185 (SB_DFF): \UI_inst.btnt3 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5180 (SB_DFF): \DAC1.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5181 (SB_DFF): \DAC1.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5182 (SB_DFF): \DAC1.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5183 (SB_DFF): \DAC1.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5178 (SB_DFF): \DAC1.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5195 (SB_DFFE): \UI_inst.cnt2 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5190 (SB_DFFE): \UI_inst.cnt2 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5193 (SB_DFFE): \UI_inst.cnt2 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5186 (SB_DFF): \UI_inst.btnt2 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5187 (SB_DFF): \UI_inst.btnt1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5188 (SB_DFF): \UI_inst.btnt0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5191 (SB_DFFE): \UI_inst.cnt2 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5192 (SB_DFFE): \UI_inst.cnt2 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5194 (SB_DFFE): \UI_inst.cnt2 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5174 (SB_DFF): \DAC1.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5184 (SB_DFF): \DAC1.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5196 (SB_DFFE): \UI_inst.cnt2 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5198 (SB_DFFE): \UI_inst.cnt2 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5204 (SB_DFFE): \UI_inst.cnt2 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5199 (SB_DFFE): \UI_inst.cnt2 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5200 (SB_DFFE): \UI_inst.cnt2 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5201 (SB_DFFE): \UI_inst.cnt2 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5202 (SB_DFFE): \UI_inst.cnt2 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5197 (SB_DFFE): \UI_inst.cnt2 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5210 (SB_DFFE): \UI_inst.cnt2 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5205 (SB_DFFE): \UI_inst.cnt2 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5206 (SB_DFFE): \UI_inst.cnt2 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5207 (SB_DFFE): \UI_inst.cnt2 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5208 (SB_DFFE): \UI_inst.cnt2 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5203 (SB_DFFE): \UI_inst.cnt2 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5216 (SB_DFFE): \UI_inst.cnt1 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5211 (SB_DFFE): \UI_inst.cnt2 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5212 (SB_DFFE): \UI_inst.cnt1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5213 (SB_DFFE): \UI_inst.cnt1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5214 (SB_DFFE): \UI_inst.cnt1 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5209 (SB_DFFE): \UI_inst.cnt2 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5223 (SB_DFFE): \UI_inst.cnt1 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5217 (SB_DFFE): \UI_inst.cnt1 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5218 (SB_DFFE): \UI_inst.cnt1 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5219 (SB_DFFE): \UI_inst.cnt1 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5221 (SB_DFFE): \UI_inst.cnt1 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5189 (SB_DFFE): \UI_inst.cnt2 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5215 (SB_DFFE): \UI_inst.cnt1 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5229 (SB_DFFE): \UI_inst.cnt1 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5224 (SB_DFFE): \UI_inst.cnt1 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5225 (SB_DFFE): \UI_inst.cnt1 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5226 (SB_DFFE): \UI_inst.cnt1 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5227 (SB_DFFE): \UI_inst.cnt1 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5222 (SB_DFFE): \UI_inst.cnt1 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5235 (SB_DFFE): \UI_inst.cnt0 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5230 (SB_DFFE): \UI_inst.cnt1 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5231 (SB_DFFE): \UI_inst.cnt1 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5232 (SB_DFFE): \UI_inst.cnt1 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5233 (SB_DFFE): \UI_inst.cnt1 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5228 (SB_DFFE): \UI_inst.cnt1 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5241 (SB_DFFE): \UI_inst.cnt0 [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5236 (SB_DFFE): \UI_inst.cnt0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5237 (SB_DFFE): \UI_inst.cnt0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5238 (SB_DFFE): \UI_inst.cnt0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5239 (SB_DFFE): \UI_inst.cnt0 [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5234 (SB_DFFE): \UI_inst.cnt1 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5248 (SB_DFFE): \UI_inst.cnt0 [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5242 (SB_DFFE): \UI_inst.cnt0 [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5244 (SB_DFFE): \UI_inst.cnt0 [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5220 (SB_DFFE): \UI_inst.cnt1 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5245 (SB_DFFE): \UI_inst.cnt0 [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5246 (SB_DFFE): \UI_inst.cnt0 [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5240 (SB_DFFE): \UI_inst.cnt0 [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5253 (SB_DFFE): \UI_inst.cnt0 [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5249 (SB_DFFE): \UI_inst.cnt0 [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5250 (SB_DFFE): \UI_inst.cnt0 [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5251 (SB_DFFE): \UI_inst.cnt0 [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5252 (SB_DFFE): \UI_inst.cnt0 [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5247 (SB_DFFE): \UI_inst.cnt0 [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5255 (SB_DFFE): \UI_inst.cnt0 [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5260 (SB_DFF): \UI_inst.BP [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5256 (SB_DFFE): \UI_inst.cnt0 [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5257 (SB_DFFE): \UI_inst.cnt0 [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5258 (SB_DFF): \UI_inst.BP [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5259 (SB_DFF): \UI_inst.BP [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5254 (SB_DFFE): \UI_inst.cnt0 [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5261 (SB_DFF): \UI_inst.BP [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5264 (SB_DFF): \UI_inst.disppos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5266 (SB_DFF): \UI_inst.disppos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5262 (SB_DFF): \UI_inst.dispdone = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5267 (SB_DFF): \UI_inst.disppos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5275 (SB_DFFE): \UI_inst.datS [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5243 (SB_DFFE): \UI_inst.cnt0 [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5268 (SB_DFF): \UI_inst.repaintS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5271 (SB_DFFE): \UI_inst.datS [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5276 (SB_DFFE): \UI_inst.datS [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5269 (SB_DFF): \UI_inst.weS = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5272 (SB_DFFE): \UI_inst.datS [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5273 (SB_DFFE): \UI_inst.datS [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5265 (SB_DFF): \UI_inst.disppos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5285 (SB_DFFE): \UI_inst.count [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5277 (SB_DFFE): \UI_inst.datS [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5263 (SB_DFF): \UI_inst.disppos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5278 (SB_DFFE): \UI_inst.ismagphase = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5280 (SB_DFFE): \UI_inst.state [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5286 (SB_DFF): \UI_inst.count [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5281 (SB_DFFE): \UI_inst.state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5274 (SB_DFFE): \UI_inst.datS [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5292 (SB_DFF): \UI_inst.count [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5279 (SB_DFFE): \UI_inst.state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5283 (SB_DFF): \UI_inst.update = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5287 (SB_DFF): \UI_inst.count [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5270 (SB_DFFE): \UI_inst.datS [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5288 (SB_DFF): \UI_inst.count [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5289 (SB_DFF): \UI_inst.count [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5290 (SB_DFF): \UI_inst.count [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5282 (SB_DFFE): \UI_inst.state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5297 (SB_DFF): \UI_inst.count [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5293 (SB_DFF): \UI_inst.count [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5294 (SB_DFF): \UI_inst.count [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5295 (SB_DFF): \UI_inst.count [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5296 (SB_DFF): \UI_inst.count [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5291 (SB_DFF): \UI_inst.count [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5299 (SB_DFF): \UI_inst.count [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5305 (SB_DFF): \UI_inst.count [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5300 (SB_DFF): \UI_inst.count [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5301 (SB_DFF): \UI_inst.count [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5302 (SB_DFF): \UI_inst.count [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5303 (SB_DFF): \UI_inst.count [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5298 (SB_DFF): \UI_inst.count [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5313 (SB_DFFE): \UI_inst.reffreq [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5306 (SB_DFF): \UI_inst.count [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5307 (SB_DFF): \UI_inst.count [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5308 (SB_DFFE): \UI_inst.refIO = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5310 (SB_DFFE): \UI_inst.refampl [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5316 (SB_DFFE): \UI_inst.TC [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5304 (SB_DFF): \UI_inst.count [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5309 (SB_DFFE): \UI_inst.refampl [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6518 (SB_DFF): \DAC2.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5315 (SB_DFFE): \UI_inst.TC [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5311 (SB_DFFE): \UI_inst.reffreq [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5317 (SB_DFFE): \UI_inst.TC [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5284 (SB_DFF): \UI_inst.count [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5318 (SB_DFFE): \UI_inst.gain [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5319 (SB_DFFE): \UI_inst.gain [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5312 (SB_DFFE): \UI_inst.reffreq [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6513 (SB_DFF): \DAC2.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6514 (SB_DFF): \DAC2.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6515 (SB_DFF): \DAC2.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6516 (SB_DFF): \DAC2.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6505 (SB_DFF): \DAC2.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6517 (SB_DFF): \DAC2.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3151 (SB_DFF): \outstuff [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6511 (SB_DFF): \DAC2.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$5314 (SB_DFFE): \UI_inst.TC [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6508 (SB_DFF): \DAC2.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6509 (SB_DFF): \DAC2.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6512 (SB_DFF): \DAC2.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6502 (SB_DFF): \DAC2.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6503 (SB_DFF): \DAC2.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6504 (SB_DFF): \DAC2.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6506 (SB_DFF): \DAC2.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6507 (SB_DFF): \DAC2.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6782 (SB_DFFE): \UI_inst.LCD.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6783 (SB_DFFE): \UI_inst.LCD.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6784 (SB_DFFE): \UI_inst.LCD.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6785 (SB_DFFE): \UI_inst.LCD.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6786 (SB_DFFE): \UI_inst.LCD.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6787 (SB_DFFE): \UI_inst.LCD.pos [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6788 (SB_DFFE): \UI_inst.LCD.pos [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6510 (SB_DFF): \DAC2.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6789 (SB_DFFE): \UI_inst.LCD.pos [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6791 (SB_DFFE): \UI_inst.LCD.pos [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6792 (SB_DFFE): \UI_inst.LCD.pos [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6793 (SB_DFFE): \UI_inst.LCD.pos [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6794 (SB_DFFE): \UI_inst.LCD.pos [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6795 (SB_DFFE): \UI_inst.LCD.pos [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6796 (SB_DFFE): \UI_inst.LCD.pos [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6797 (SB_DFFE): \UI_inst.LCD.pos [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6798 (SB_DFFE): \UI_inst.LCD.pos [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6799 (SB_DFFE): \UI_inst.LCD.pos [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6800 (SB_DFFE): \UI_inst.LCD.pos [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6801 (SB_DFFE): \UI_inst.LCD.pos [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6802 (SB_DFFE): \UI_inst.LCD.pos [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6803 (SB_DFFE): \UI_inst.LCD.pos [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6804 (SB_DFFE): \UI_inst.LCD.pos [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6805 (SB_DFFE): \UI_inst.LCD.pos [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6806 (SB_DFFE): \UI_inst.LCD.pos [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6807 (SB_DFFE): \UI_inst.LCD.pos [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6808 (SB_DFFE): \UI_inst.LCD.pos [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6809 (SB_DFFE): \UI_inst.LCD.pos [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6810 (SB_DFFE): \UI_inst.LCD.pos [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6811 (SB_DFFE): \UI_inst.LCD.pos [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6812 (SB_DFFE): \UI_inst.LCD.pos [30] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6832 (SB_DFFR): \UI_inst.LCD.main_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6843 (SB_DFFER): \UI_inst.LCD.display_state [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6835 (SB_DFFE): \UI_inst.LCD.LCD_E1 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6837 (SB_DFFE): \UI_inst.LCD.SF_D1 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6838 (SB_DFFE): \UI_inst.LCD.SF_D1 [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6844 (SB_DFFER): \UI_inst.LCD.display_state [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6840 (SB_DFFER): \UI_inst.LCD.display_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6861 (SB_DFFE): \UI_inst.LCD.tx_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6855 (SB_DFFE): \UI_inst.LCD.tx_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6856 (SB_DFFE): \UI_inst.LCD.tx_delay_value [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6857 (SB_DFFE): \UI_inst.LCD.tx_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6858 (SB_DFFE): \UI_inst.LCD.tx_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6859 (SB_DFFE): \UI_inst.LCD.tx_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6853 (SB_DFFE): \UI_inst.LCD.tx_delay_load = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6860 (SB_DFFE): \UI_inst.LCD.tx_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6862 (SB_DFFE): \UI_inst.LCD.tx_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6863 (SB_DFFE): \UI_inst.LCD.tx_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6864 (SB_DFFE): \UI_inst.LCD.tx_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6865 (SB_DFFE): \UI_inst.LCD.tx_delay_value [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6866 (SB_DFFE): \UI_inst.LCD.tx_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6867 (SB_DFFE): \UI_inst.LCD.tx_delay_value [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6868 (SB_DFFE): \UI_inst.LCD.tx_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6869 (SB_DFFE): \UI_inst.LCD.tx_delay_value [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6870 (SB_DFFE): \UI_inst.LCD.tx_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6871 (SB_DFFE): \UI_inst.LCD.tx_delay_value [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6872 (SB_DFFE): \UI_inst.LCD.tx_delay_value [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6873 (SB_DFFE): \UI_inst.LCD.tx_delay_value [19] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6882 (SB_DFFES): \UI_inst.LCD.tx_state [2] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6874 (SB_DFFE): \UI_inst.LCD.LCD_E0 = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6876 (SB_DFFE): \UI_inst.LCD.SF_D0 [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6877 (SB_DFFE): \UI_inst.LCD.SF_D0 [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6875 (SB_DFFE): \UI_inst.LCD.SF_D0 [0] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6880 (SB_DFFER): \UI_inst.LCD.tx_state [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3147 (SB_DFF): \outstuff [2] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6881 (SB_DFFES): \UI_inst.LCD.tx_state [1] = 1
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8083 (SB_DFFE): \UI_inst.diplay_number.difference [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8084 (SB_DFFE): \UI_inst.diplay_number.dec [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8085 (SB_DFFE): \UI_inst.diplay_number.dec [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8086 (SB_DFFE): \UI_inst.diplay_number.dec [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8092 (SB_DFFE): \UI_inst.diplay_number.pos [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8087 (SB_DFFE): \UI_inst.diplay_number.dec [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8089 (SB_DFFE): \UI_inst.diplay_number.pos [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8090 (SB_DFFE): \UI_inst.diplay_number.pos [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8050 (SB_DFFE): \UI_inst.diplay_number.holdoff = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8091 (SB_DFFE): \UI_inst.diplay_number.pos [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8101 (SB_DFFE): \UI_inst.diplay_number.summand [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8094 (SB_DFF): \UI_inst.diplay_number.lastupdate = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8093 (SB_DFF): \UI_inst.diplay_number.updating = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8096 (SB_DFFE): \UI_inst.diplay_number.summand [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8097 (SB_DFFE): \UI_inst.diplay_number.summand [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8098 (SB_DFFE): \UI_inst.diplay_number.summand [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8099 (SB_DFFE): \UI_inst.diplay_number.summand [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8088 (SB_DFFE): \UI_inst.diplay_number.pos [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8100 (SB_DFFE): \UI_inst.diplay_number.summand [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8102 (SB_DFFE): \UI_inst.diplay_number.summand [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8103 (SB_DFFE): \UI_inst.diplay_number.summand [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8104 (SB_DFFE): \UI_inst.diplay_number.summand [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8105 (SB_DFFE): \UI_inst.diplay_number.summand [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8106 (SB_DFFE): \UI_inst.diplay_number.summand [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8107 (SB_DFFE): \UI_inst.diplay_number.summand [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8108 (SB_DFFE): \UI_inst.diplay_number.summand [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8109 (SB_DFFE): \UI_inst.diplay_number.summand [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8110 (SB_DFFE): \UI_inst.diplay_number.summand [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8111 (SB_DFFE): \UI_inst.diplay_number.summand [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8112 (SB_DFFE): \UI_inst.diplay_number.summand [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8113 (SB_DFFE): \UI_inst.diplay_number.summand [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8114 (SB_DFFE): \UI_inst.diplay_number.summand [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8115 (SB_DFFE): \UI_inst.diplay_number.summand [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8116 (SB_DFFE): \UI_inst.diplay_number.summand [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8117 (SB_DFFE): \UI_inst.diplay_number.summand [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8118 (SB_DFFE): \UI_inst.diplay_number.summand [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8119 (SB_DFFE): \UI_inst.diplay_number.summand [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8120 (SB_DFFE): \UI_inst.diplay_number.summand [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8121 (SB_DFFE): \UI_inst.diplay_number.summand [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8122 (SB_DFFE): \UI_inst.diplay_number.summand [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8123 (SB_DFFE): \UI_inst.diplay_number.summand [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8124 (SB_DFFE): \UI_inst.diplay_number.summand [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8125 (SB_DFFE): \UI_inst.diplay_number.summand [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8126 (SB_DFFE): \UI_inst.diplay_number.summand [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8127 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8128 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8129 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8130 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8131 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8132 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8133 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8095 (SB_DFFE): \UI_inst.diplay_number.summand [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8134 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8136 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8137 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8138 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8139 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8140 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8141 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8142 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8143 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8144 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8145 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8146 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8147 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8148 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8149 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8150 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8151 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8152 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8153 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8154 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8155 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8156 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8157 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8158 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8159 (SB_DFFE): \UI_inst.diplay_number.lastacc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8160 (SB_DFFE): \UI_inst.diplay_number.lastacc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8161 (SB_DFFE): \UI_inst.diplay_number.lastacc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8162 (SB_DFFE): \UI_inst.diplay_number.lastacc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8163 (SB_DFFE): \UI_inst.diplay_number.lastacc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8164 (SB_DFFE): \UI_inst.diplay_number.lastacc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8165 (SB_DFFE): \UI_inst.diplay_number.lastacc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8135 (SB_DFFE): \UI_inst.diplay_number.secondlastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8166 (SB_DFFE): \UI_inst.diplay_number.lastacc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8168 (SB_DFFE): \UI_inst.diplay_number.lastacc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8169 (SB_DFFE): \UI_inst.diplay_number.lastacc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8170 (SB_DFFE): \UI_inst.diplay_number.lastacc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8171 (SB_DFFE): \UI_inst.diplay_number.lastacc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8172 (SB_DFFE): \UI_inst.diplay_number.lastacc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8173 (SB_DFFE): \UI_inst.diplay_number.lastacc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8174 (SB_DFFE): \UI_inst.diplay_number.lastacc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8175 (SB_DFFE): \UI_inst.diplay_number.lastacc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8176 (SB_DFFE): \UI_inst.diplay_number.lastacc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8177 (SB_DFFE): \UI_inst.diplay_number.lastacc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8178 (SB_DFFE): \UI_inst.diplay_number.lastacc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8179 (SB_DFFE): \UI_inst.diplay_number.lastacc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8180 (SB_DFFE): \UI_inst.diplay_number.lastacc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8181 (SB_DFFE): \UI_inst.diplay_number.lastacc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8182 (SB_DFFE): \UI_inst.diplay_number.lastacc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8183 (SB_DFFE): \UI_inst.diplay_number.lastacc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8184 (SB_DFFE): \UI_inst.diplay_number.lastacc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8185 (SB_DFFE): \UI_inst.diplay_number.lastacc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8186 (SB_DFFE): \UI_inst.diplay_number.lastacc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8187 (SB_DFFE): \UI_inst.diplay_number.lastacc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8188 (SB_DFFE): \UI_inst.diplay_number.lastacc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8189 (SB_DFFE): \UI_inst.diplay_number.lastacc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8190 (SB_DFFE): \UI_inst.diplay_number.lastacc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8191 (SB_DFFE): \UI_inst.diplay_number.acc [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8192 (SB_DFFE): \UI_inst.diplay_number.acc [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8193 (SB_DFFE): \UI_inst.diplay_number.acc [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8194 (SB_DFFE): \UI_inst.diplay_number.acc [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8195 (SB_DFFE): \UI_inst.diplay_number.acc [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8196 (SB_DFFE): \UI_inst.diplay_number.acc [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8197 (SB_DFFE): \UI_inst.diplay_number.acc [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8167 (SB_DFFE): \UI_inst.diplay_number.lastacc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8198 (SB_DFFE): \UI_inst.diplay_number.acc [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8200 (SB_DFFE): \UI_inst.diplay_number.acc [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8201 (SB_DFFE): \UI_inst.diplay_number.acc [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8202 (SB_DFFE): \UI_inst.diplay_number.acc [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8203 (SB_DFFE): \UI_inst.diplay_number.acc [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8204 (SB_DFFE): \UI_inst.diplay_number.acc [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8205 (SB_DFFE): \UI_inst.diplay_number.acc [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8206 (SB_DFFE): \UI_inst.diplay_number.acc [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8207 (SB_DFFE): \UI_inst.diplay_number.acc [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8208 (SB_DFFE): \UI_inst.diplay_number.acc [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8209 (SB_DFFE): \UI_inst.diplay_number.acc [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8210 (SB_DFFE): \UI_inst.diplay_number.acc [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8211 (SB_DFFE): \UI_inst.diplay_number.acc [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8212 (SB_DFFE): \UI_inst.diplay_number.acc [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8213 (SB_DFFE): \UI_inst.diplay_number.acc [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8214 (SB_DFFE): \UI_inst.diplay_number.acc [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8215 (SB_DFFE): \UI_inst.diplay_number.acc [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8216 (SB_DFFE): \UI_inst.diplay_number.acc [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8217 (SB_DFFE): \UI_inst.diplay_number.acc [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8218 (SB_DFFE): \UI_inst.diplay_number.acc [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8219 (SB_DFFE): \UI_inst.diplay_number.acc [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8220 (SB_DFFE): \UI_inst.diplay_number.acc [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8221 (SB_DFFE): \UI_inst.diplay_number.acc [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8222 (SB_DFFE): \UI_inst.diplay_number.acc [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8223 (SB_DFFE): \UI_inst.diplay_number.acc [32] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8224 (SB_DFFE): \UI_inst.diplay_number.rest [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8225 (SB_DFFE): \UI_inst.diplay_number.rest [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8226 (SB_DFFE): \UI_inst.diplay_number.rest [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8227 (SB_DFFE): \UI_inst.diplay_number.rest [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8228 (SB_DFFE): \UI_inst.diplay_number.rest [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8229 (SB_DFFE): \UI_inst.diplay_number.rest [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8230 (SB_DFFE): \UI_inst.diplay_number.rest [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8199 (SB_DFFE): \UI_inst.diplay_number.acc [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8231 (SB_DFFE): \UI_inst.diplay_number.rest [7] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8233 (SB_DFFE): \UI_inst.diplay_number.rest [9] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8234 (SB_DFFE): \UI_inst.diplay_number.rest [10] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8235 (SB_DFFE): \UI_inst.diplay_number.rest [11] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8236 (SB_DFFE): \UI_inst.diplay_number.rest [12] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8237 (SB_DFFE): \UI_inst.diplay_number.rest [13] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8238 (SB_DFFE): \UI_inst.diplay_number.rest [14] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8239 (SB_DFFE): \UI_inst.diplay_number.rest [15] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8240 (SB_DFFE): \UI_inst.diplay_number.rest [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8241 (SB_DFFE): \UI_inst.diplay_number.rest [17] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8242 (SB_DFFE): \UI_inst.diplay_number.rest [18] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8243 (SB_DFFE): \UI_inst.diplay_number.rest [19] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8244 (SB_DFFE): \UI_inst.diplay_number.rest [20] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8245 (SB_DFFE): \UI_inst.diplay_number.rest [21] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8246 (SB_DFFE): \UI_inst.diplay_number.rest [22] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8247 (SB_DFFE): \UI_inst.diplay_number.rest [23] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8248 (SB_DFFE): \UI_inst.diplay_number.rest [24] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8249 (SB_DFFE): \UI_inst.diplay_number.rest [25] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8250 (SB_DFFE): \UI_inst.diplay_number.rest [26] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8251 (SB_DFFE): \UI_inst.diplay_number.rest [27] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8252 (SB_DFFE): \UI_inst.diplay_number.rest [28] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8253 (SB_DFFE): \UI_inst.diplay_number.rest [29] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8254 (SB_DFFE): \UI_inst.diplay_number.rest [30] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8255 (SB_DFFE): \UI_inst.diplay_number.rest [31] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8256 (SB_DFFE): \UI_inst.diplay_number.dat [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8257 (SB_DFFE): \UI_inst.diplay_number.dat [1] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8258 (SB_DFFE): \UI_inst.diplay_number.dat [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8259 (SB_DFFE): \UI_inst.diplay_number.dat [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8260 (SB_DFFE): \UI_inst.diplay_number.dat [4] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8261 (SB_DFFE): \UI_inst.diplay_number.dat [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8262 (SB_DFFE): \UI_inst.diplay_number.dat [6] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$8232 (SB_DFFE): \UI_inst.diplay_number.rest [8] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6813 (SB_DFFE): \UI_inst.LCD.pos [31] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6814 (SB_DFFR): \UI_inst.LCD.main_delay_load = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6816 (SB_DFFR): \UI_inst.LCD.main_delay_value [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6818 (SB_DFFR): \UI_inst.LCD.main_delay_value [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6819 (SB_DFFR): \UI_inst.LCD.main_delay_value [4] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6820 (SB_DFFR): \UI_inst.LCD.main_delay_value [5] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$3161 (SB_DFFE): \rst = 1
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6821 (SB_DFFR): \UI_inst.LCD.main_delay_value [6] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6823 (SB_DFFR): \UI_inst.LCD.main_delay_value [8] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6824 (SB_DFFR): \UI_inst.LCD.main_delay_value [9] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6825 (SB_DFFR): \UI_inst.LCD.main_delay_value [10] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6827 (SB_DFFR): \UI_inst.LCD.main_delay_value [12] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6829 (SB_DFFR): \UI_inst.LCD.main_delay_value [14] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6831 (SB_DFFR): \UI_inst.LCD.main_delay_value [16] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6836 (SB_DFFE): \UI_inst.LCD.SF_D1 [0] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6839 (SB_DFFE): \UI_inst.LCD.SF_D1 [3] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6841 (SB_DFFER): \UI_inst.LCD.display_state [1] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6822 (SB_DFFR): \UI_inst.LCD.main_delay_value [7] = 0
FF init value for cell $auto$simplemap.cc:496:simplemap_adff$6842 (SB_DFFER): \UI_inst.LCD.display_state [2] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6879 (SB_DFFE): \UI_inst.LCD.tx_done = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6878 (SB_DFFE): \UI_inst.LCD.SF_D0 [3] = 0
FF init value for cell $auto$simplemap.cc:420:simplemap_dff$6854 (SB_DFFE): \UI_inst.LCD.tx_delay_value [0] = 0

18.38. Executing ICE40_FFSSR pass (merge synchronous set/reset into FF cells).
Merging set/reset $_MUX_ cells into SB_FFs in filterdemo.
  Merging $auto$simplemap.cc:277:simplemap_mux$3046 (A=1'0, B=$auto$simplemap.cc:309:simplemap_lut$17610 [1], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3037 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3047 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [2], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3038 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3049 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [4], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3040 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3051 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [6], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3042 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3052 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [7], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3043 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3048 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [3], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3039 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3050 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [5], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3041 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5458 (A=$auto$wreduce.cc:455:run$2729 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5459 (A=$auto$simplemap.cc:309:simplemap_lut$17306 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5460 (A=$auto$wreduce.cc:455:run$2729 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5461 (A=$auto$wreduce.cc:455:run$2729 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5462 (A=$auto$wreduce.cc:455:run$2729 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5463 (A=$auto$wreduce.cc:455:run$2729 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5464 (A=$auto$wreduce.cc:455:run$2729 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5465 (A=$auto$wreduce.cc:455:run$2729 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5467 (A=$auto$wreduce.cc:455:run$2729 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5468 (A=$auto$wreduce.cc:455:run$2729 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5469 (A=$auto$wreduce.cc:455:run$2729 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5470 (A=$auto$wreduce.cc:455:run$2729 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3217 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5471 (A=$auto$wreduce.cc:455:run$2729 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3218 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5472 (A=$auto$wreduce.cc:455:run$2729 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3219 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5473 (A=$auto$wreduce.cc:455:run$2729 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5474 (A=$auto$wreduce.cc:455:run$2729 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5475 (A=$auto$wreduce.cc:455:run$2729 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5476 (A=$auto$wreduce.cc:455:run$2729 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5477 (A=$auto$wreduce.cc:455:run$2729 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5478 (A=$auto$wreduce.cc:455:run$2729 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5479 (A=$auto$wreduce.cc:455:run$2729 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5480 (A=$auto$wreduce.cc:455:run$2729 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5466 (A=$auto$wreduce.cc:455:run$2729 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$3213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3530 (A=1'0, B=$auto$rtlil.cc:1836:ReduceOr$2821, S=$techmap\Filter.$logic_and$../filter/CIC.v:39$36_Y) into $auto$simplemap.cc:420:simplemap_dff$3236 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$3454 (A=$auto$wreduce.cc:455:run$2726 [0], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3335 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3455 (A=$auto$alumacc.cc:474:replace_alu$2813.BB [1], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3336 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3456 (A=$auto$wreduce.cc:455:run$2726 [2], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3337 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3457 (A=$auto$wreduce.cc:455:run$2726 [3], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3338 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3458 (A=$auto$wreduce.cc:455:run$2726 [4], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3339 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3459 (A=$auto$wreduce.cc:455:run$2726 [5], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3340 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3460 (A=$auto$wreduce.cc:455:run$2726 [6], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3341 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3461 (A=$auto$wreduce.cc:455:run$2726 [7], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3342 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3463 (A=$auto$wreduce.cc:455:run$2726 [9], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3344 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3464 (A=$auto$wreduce.cc:455:run$2726 [10], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3345 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3462 (A=$auto$wreduce.cc:455:run$2726 [8], B=1'0, S=$auto$rtlil.cc:1836:ReduceOr$2821) into $auto$simplemap.cc:420:simplemap_dff$3343 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$3045 (A=1'0, B=$auto$wreduce.cc:455:run$2752 [0], S=$auto$simplemap.cc:256:simplemap_eqne$3081) into $auto$simplemap.cc:420:simplemap_dff$3036 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5513 (A=$techmap\UI_inst.$procmux$2447_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [3]) into $auto$simplemap.cc:420:simplemap_dff$5185 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5418 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5195 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5413 (A=$auto$simplemap.cc:309:simplemap_lut$17439 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5190 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5416 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5193 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5510 (A=$techmap\UI_inst.$procmux$2453_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5186 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5507 (A=$techmap\UI_inst.$procmux$2459_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5187 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5504 (A=$techmap\UI_inst.$procmux$2465_Y, B=1'1, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5188 (SB_DFF).
  Merging $auto$simplemap.cc:277:simplemap_mux$5414 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5191 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5415 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5192 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5417 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5194 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5419 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5196 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5421 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5198 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5427 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5204 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5422 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5199 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5423 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5200 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5424 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5201 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5425 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5202 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5420 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5197 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5433 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5210 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5428 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5205 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5429 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5206 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5430 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5207 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5431 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5208 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5426 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5203 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5370 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5216 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5434 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5211 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5366 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5212 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5367 (A=$auto$simplemap.cc:309:simplemap_lut$17420 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5213 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5368 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5214 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5432 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5209 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5377 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5223 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5371 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5217 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5372 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5218 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5373 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5219 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5375 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5221 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5412 (A=$techmap\UI_inst.$add$../UI/UI.v:98$85_Y [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [2]) into $auto$simplemap.cc:420:simplemap_dff$5189 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5369 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5215 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5383 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5229 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5378 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5224 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5379 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5225 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5380 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5226 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5381 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5227 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5376 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5222 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5320 (A=$auto$wreduce.cc:455:run$2734 [0], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5235 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5384 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5230 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5385 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5231 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5386 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5232 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5387 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5233 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5382 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5228 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5326 (A=$auto$wreduce.cc:455:run$2734 [6], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5241 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5321 (A=$auto$simplemap.cc:309:simplemap_lut$17401 [1], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5236 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5322 (A=$auto$wreduce.cc:455:run$2734 [2], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5237 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5323 (A=$auto$wreduce.cc:455:run$2734 [3], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5238 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5324 (A=$auto$wreduce.cc:455:run$2734 [4], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5239 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5388 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5234 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5333 (A=$auto$wreduce.cc:455:run$2734 [13], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5248 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5327 (A=$auto$wreduce.cc:455:run$2734 [7], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5242 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5329 (A=$auto$wreduce.cc:455:run$2734 [9], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5244 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5374 (A=$techmap\UI_inst.$add$../UI/UI.v:88$81_Y [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [1]) into $auto$simplemap.cc:420:simplemap_dff$5220 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5330 (A=$auto$wreduce.cc:455:run$2734 [10], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5245 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5331 (A=$auto$wreduce.cc:455:run$2734 [11], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5246 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5325 (A=$auto$wreduce.cc:455:run$2734 [5], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5240 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5338 (A=$auto$wreduce.cc:455:run$2734 [18], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5253 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5334 (A=$auto$wreduce.cc:455:run$2734 [14], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5249 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5335 (A=$auto$wreduce.cc:455:run$2734 [15], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5250 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5336 (A=$auto$wreduce.cc:455:run$2734 [16], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5251 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5337 (A=$auto$wreduce.cc:455:run$2734 [17], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5252 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5332 (A=$auto$wreduce.cc:455:run$2734 [12], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5247 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5340 (A=$auto$wreduce.cc:455:run$2734 [20], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5255 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5341 (A=$auto$wreduce.cc:455:run$2734 [21], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5256 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5342 (A=$auto$wreduce.cc:455:run$2734 [22], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5257 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5339 (A=$auto$wreduce.cc:455:run$2734 [19], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5254 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$5328 (A=$auto$wreduce.cc:455:run$2734 [8], B=1'0, S=$techmap\UI_inst.$0\BP[3:0] [0]) into $auto$simplemap.cc:420:simplemap_dff$5243 (SB_DFFE).
  Merging $auto$simplemap.cc:277:simplemap_mux$10959 (A=1'0, B=$techmap$techmap\UI_inst.$procmux$2186.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:441$6262_Y, S=$techmap$techmap\UI_inst.$procmux$2186.$reduce_or$/usr/local/bin/../share/yosys/techmap.v:445$6258_Y) into $auto$simplemap.cc:420:simplemap_dff$5268 (SB_DFF).

18.39. Executing ICE40_OPT pass (performing simple optimizations).

18.39.1. Running ICE40 specific optimizations.

18.39.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.
<suppressed ~246 debug messages>

18.39.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
<suppressed ~1272 debug messages>
Removed a total of 424 cells.

18.39.4. Executing OPT_RMDFF pass (remove dff with constant values).

18.39.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..
Removed 117 unused cells and 4330 unused wires.
<suppressed ~118 debug messages>

18.39.6. Rerunning OPT passes. (Removed registers in this run.)

18.39.7. Running ICE40 specific optimizations.

18.39.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module filterdemo.

18.39.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\filterdemo'.
Removed a total of 0 cells.

18.39.10. Executing OPT_RMDFF pass (remove dff with constant values).

18.39.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \filterdemo..

18.39.12. Finished OPT passes. (There is nothing left to do.)

18.40. Executing TECHMAP pass (map to technology primitives).

18.40.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

18.40.2. Continuing TECHMAP pass.
No more expansions possible.

18.41. Executing ABC pass (technology mapping using ABC).

18.41.1. Extracting gate netlist of module `\filterdemo' to `<abc-temp-dir>/input.blif'..
Extracted 4710 gates and 5532 wires to a netlist network with 820 inputs and 548 outputs.

18.41.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =     867.
ABC: Participating nodes from both networks       =    1965.
ABC: Participating nodes from the first network   =     874. (  68.50 % of nodes)
ABC: Participating nodes from the second network  =    1091. (  85.50 % of nodes)
ABC: Node pairs (any polarity)                    =     874. (  68.50 % of names can be moved)
ABC: Node pairs (same polarity)                   =     653. (  51.18 % of names can be moved)
ABC: Total runtime =     0.18 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

18.41.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2548
ABC RESULTS:        internal signals:     4164
ABC RESULTS:           input signals:      820
ABC RESULTS:          output signals:      548
Removing temp directory.
Removed 0 unused cells and 2361 unused wires.

18.42. Executing TECHMAP pass (map to technology primitives).

18.42.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$__DFFE_NN0'.
Generating RTLIL representation for module `\$__DFFE_NN1'.
Generating RTLIL representation for module `\$__DFFE_PN0'.
Generating RTLIL representation for module `\$__DFFE_PN1'.
Generating RTLIL representation for module `\$__DFFE_NP0'.
Generating RTLIL representation for module `\$__DFFE_NP1'.
Generating RTLIL representation for module `\$__DFFE_PP0'.
Generating RTLIL representation for module `\$__DFFE_PP1'.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

18.42.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010111110011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110011001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111110001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1001111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100001110101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110011000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011010101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010101110101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001010101011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010111100000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101111000111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001001100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101110011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111001011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110000011101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000110000001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011010111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1010110000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010100111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100011110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000010001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1101000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000001111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=2\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111110001000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111101000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101111110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000010111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000100000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100010000001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=1\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011101000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000100010001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100010001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111000001110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111011100001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111110111011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000000001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111100000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1011000000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111110110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111010001000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111100000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0100111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111011100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'01101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'10111101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111100010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0010001100001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100110111000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101111100001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111110000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1110001111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000101000001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101110111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0001000011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0111111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111111101110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=3\LUT=8'11111110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111101011000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011111100000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111000011101010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111100011111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000011100001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000111101000100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000001100001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1111111111110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011101000000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1000111111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100000011111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'1100010111111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0011000000000101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0101000000000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000010100110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=4\LUT=16'0000000011111110 for cells of type $lut.
No more expansions possible.
<suppressed ~3169 debug messages>
Removed 0 unused cells and 2532 unused wires.

18.43. Executing HIERARCHY pass (managing design hierarchy).

18.43.1. Analyzing design hierarchy..
Top module:  \filterdemo

18.43.2. Analyzing design hierarchy..
Top module:  \filterdemo
Removed 0 unused modules.

18.44. Printing statistics.

=== filterdemo ===

   Number of wires:               1598
   Number of wire bits:           3844
   Number of public wires:         171
   Number of public wire bits:    1476
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2878
     SB_CARRY                      445
     SB_DFF                        196
     SB_DFFE                       375
     SB_DFFER                        8
     SB_DFFESR                     104
     SB_DFFN                        16
     SB_DFFR                        14
     SB_DFFSR                        9
     SB_DFFSS                        4
     SB_LUT4                      1702
     SB_RAM40_4K                     5

18.45. Executing CHECK pass (checking for obvious problems).
checking module filterdemo..
found and reported 0 problems.

18.46. Executing JSON backend.

Warnings: 31 unique messages, 31 total
End of script. Logfile hash: 7d332dcf78
CPU: user 20.52s system 0.12s, MEM: 89.64 MB total, 57.04 MB resident
Yosys 0.9 (git sha1 4c89a4e6, clang 6.0.0-1ubuntu2 -fPIC -Os)
Time spent: 28% 38x opt_clean (5 sec), 26% 39x opt_expr (5 sec), ...
